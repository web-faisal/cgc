/*FB_PKG_DELIM*/

__d(
  "InstantGamesFeedTypedLogger",
  ["Banzai", "GeneratedLoggerUtils", "nullthrows"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a() {
        this.$1 = {};
      }
      var c = a.prototype;
      c.log = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:InstantGamesFeedLoggerConfig",
          this.$1,
          b("Banzai").BASIC,
          a
        );
      };
      c.logVital = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:InstantGamesFeedLoggerConfig",
          this.$1,
          b("Banzai").VITAL,
          a
        );
      };
      c.logImmediately = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:InstantGamesFeedLoggerConfig",
          this.$1,
          { signal: !0 },
          a
        );
      };
      c.clear = function () {
        this.$1 = {};
        return this;
      };
      c.getData = function () {
        return babelHelpers["extends"]({}, this.$1);
      };
      c.updateData = function (a) {
        this.$1 = babelHelpers["extends"]({}, this.$1, a);
        return this;
      };
      c.setAppID = function (a) {
        this.$1.appid = a;
        return this;
      };
      c.setAppversion = function (a) {
        this.$1.appversion = a;
        return this;
      };
      c.setClientUserID = function (a) {
        this.$1.client_userid = a;
        return this;
      };
      c.setClienttime = function (a) {
        this.$1.clienttime = a;
        return this;
      };
      c.setContentID = function (a) {
        this.$1.content_id = a;
        return this;
      };
      c.setCountry = function (a) {
        this.$1.country = a;
        return this;
      };
      c.setDeviceid = function (a) {
        this.$1.deviceid = a;
        return this;
      };
      c.setEvent = function (a) {
        this.$1.event = a;
        return this;
      };
      c.setGameID = function (a) {
        this.$1.game_id = a;
        return this;
      };
      c.setGameSessionID = function (a) {
        this.$1.game_session_id = a;
        return this;
      };
      c.setGroupID = function (a) {
        this.$1.group_id = a;
        return this;
      };
      c.setGroupSize = function (a) {
        this.$1.group_size = a;
        return this;
      };
      c.setIsemployee = function (a) {
        this.$1.isemployee = a;
        return this;
      };
      c.setName = function (a) {
        this.$1.name = a;
        return this;
      };
      c.setPostID = function (a) {
        this.$1.post_id = a;
        return this;
      };
      c.setPostPrivacyID = function (a) {
        this.$1.post_privacy_id = a;
        return this;
      };
      c.setPosterID = function (a) {
        this.$1.poster_id = a;
        return this;
      };
      c.setRenderFailureReason = function (a) {
        this.$1.render_failure_reason = a;
        return this;
      };
      c.setSessionid = function (a) {
        this.$1.sessionid = a;
        return this;
      };
      c.setShareSurface = function (a) {
        this.$1.share_surface = a;
        return this;
      };
      c.setStoryInvalidationReason = function (a) {
        this.$1.story_invalidation_reason = a;
        return this;
      };
      c.setStoryTokenString = function (a) {
        this.$1.story_token_string = a;
        return this;
      };
      c.setTournamentID = function (a) {
        this.$1.tournament_id = a;
        return this;
      };
      c.setUISurface = function (a) {
        this.$1.ui_surface = a;
        return this;
      };
      c.setUpdateID = function (a) {
        this.$1.update_id = a;
        return this;
      };
      c.updateExtraData = function (a) {
        a = b("nullthrows")(b("GeneratedLoggerUtils").serializeMap(a));
        b("GeneratedLoggerUtils").checkExtraDataFieldNames(a, g);
        this.$1 = babelHelpers["extends"]({}, this.$1, a);
        return this;
      };
      c.addToExtraData = function (a, b) {
        var c = {};
        c[a] = b;
        return this.updateExtraData(c);
      };
      return a;
    })();
    var g = {
      appid: !0,
      appversion: !0,
      client_userid: !0,
      clienttime: !0,
      content_id: !0,
      country: !0,
      deviceid: !0,
      event: !0,
      game_id: !0,
      game_session_id: !0,
      group_id: !0,
      group_size: !0,
      isemployee: !0,
      name: !0,
      post_id: !0,
      post_privacy_id: !0,
      poster_id: !0,
      render_failure_reason: !0,
      sessionid: !0,
      share_surface: !0,
      story_invalidation_reason: !0,
      story_token_string: !0,
      tournament_id: !0,
      ui_surface: !0,
      update_id: !0,
    };
    f["default"] = a;
  },
  66
);
__d(
  "PagesNuxFrameworkTypedLogger",
  ["Banzai", "GeneratedLoggerUtils"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a() {
        this.$1 = {};
      }
      var c = a.prototype;
      c.log = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:PagesNuxFrameworkLoggerConfig",
          this.$1,
          b("Banzai").BASIC,
          a
        );
      };
      c.logVital = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:PagesNuxFrameworkLoggerConfig",
          this.$1,
          b("Banzai").VITAL,
          a
        );
      };
      c.logImmediately = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:PagesNuxFrameworkLoggerConfig",
          this.$1,
          { signal: !0 },
          a
        );
      };
      c.clear = function () {
        this.$1 = {};
        return this;
      };
      c.getData = function () {
        return babelHelpers["extends"]({}, this.$1);
      };
      c.updateData = function (a) {
        this.$1 = babelHelpers["extends"]({}, this.$1, a);
        return this;
      };
      c.setEvent = function (a) {
        this.$1.event = a;
        return this;
      };
      c.setNuxID = function (a) {
        this.$1.nux_id = a;
        return this;
      };
      c.setNuxSurface = function (a) {
        this.$1.nux_surface = a;
        return this;
      };
      c.setPageID = function (a) {
        this.$1.page_id = a;
        return this;
      };
      return a;
    })();
    c = { event: !0, nux_id: !0, nux_surface: !0, page_id: !0 };
    f["default"] = a;
  },
  66
);
__d(
  "PhotoUploadFacerecWaterfallTypedLogger",
  ["Banzai", "GeneratedLoggerUtils"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a() {
        this.$1 = {};
      }
      var c = a.prototype;
      c.log = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:PhotoUploadFacerecWaterfallLoggerConfig",
          this.$1,
          b("Banzai").BASIC,
          a
        );
      };
      c.logVital = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:PhotoUploadFacerecWaterfallLoggerConfig",
          this.$1,
          b("Banzai").VITAL,
          a
        );
      };
      c.logImmediately = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:PhotoUploadFacerecWaterfallLoggerConfig",
          this.$1,
          { signal: !0 },
          a
        );
      };
      c.clear = function () {
        this.$1 = {};
        return this;
      };
      c.getData = function () {
        return babelHelpers["extends"]({}, this.$1);
      };
      c.updateData = function (a) {
        this.$1 = babelHelpers["extends"]({}, this.$1, a);
        return this;
      };
      c.setEvent = function (a) {
        this.$1.event = a;
        return this;
      };
      c.setFaceBoxID = function (a) {
        this.$1.face_box_id = a;
        return this;
      };
      c.setPhotoFbid = function (a) {
        this.$1.photo_fbid = a;
        return this;
      };
      c.setRecognizedUser = function (a) {
        this.$1.recognized_user = a;
        return this;
      };
      c.setTaggedUser = function (a) {
        this.$1.tagged_user = a;
        return this;
      };
      return a;
    })();
    c = {
      event: !0,
      face_box_id: !0,
      photo_fbid: !0,
      recognized_user: !0,
      tagged_user: !0,
    };
    f["default"] = a;
  },
  66
);
__d(
  "DigitalContentWalletTypedLogger",
  ["Banzai", "GeneratedLoggerUtils", "nullthrows"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a() {
        this.$1 = {};
      }
      var c = a.prototype;
      c.log = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:DigitalContentWalletLoggerConfig",
          this.$1,
          b("Banzai").BASIC,
          a
        );
      };
      c.logVital = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:DigitalContentWalletLoggerConfig",
          this.$1,
          b("Banzai").VITAL,
          a
        );
      };
      c.logImmediately = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:DigitalContentWalletLoggerConfig",
          this.$1,
          { signal: !0 },
          a
        );
      };
      c.clear = function () {
        this.$1 = {};
        return this;
      };
      c.getData = function () {
        return babelHelpers["extends"]({}, this.$1);
      };
      c.updateData = function (a) {
        this.$1 = babelHelpers["extends"]({}, this.$1, a);
        return this;
      };
      c.setAgeBucket = function (a) {
        this.$1.age_bucket = a;
        return this;
      };
      c.setCity = function (a) {
        this.$1.city = a;
        return this;
      };
      c.setClientMutationID = function (a) {
        this.$1.client_mutation_id = a;
        return this;
      };
      c.setContentID = function (a) {
        this.$1.content_id = a;
        return this;
      };
      c.setCountry = function (a) {
        this.$1.country = a;
        return this;
      };
      c.setErrorCategory = function (a) {
        this.$1.error_category = a;
        return this;
      };
      c.setErrorCode = function (a) {
        this.$1.error_code = a;
        return this;
      };
      c.setErrorMsg = function (a) {
        this.$1.error_msg = a;
        return this;
      };
      c.setEvent = function (a) {
        this.$1.event = a;
        return this;
      };
      c.setFbFundedWalletAvailableUnits = function (a) {
        this.$1.fb_funded_wallet_available_units = a;
        return this;
      };
      c.setFbFundedWalletTotalUnits = function (a) {
        this.$1.fb_funded_wallet_total_units = a;
        return this;
      };
      c.setFundID = function (a) {
        this.$1.fund_id = a;
        return this;
      };
      c.setFundMatchUnits = function (a) {
        this.$1.fund_match_units = a;
        return this;
      };
      c.setFundSubtype = function (a) {
        this.$1.fund_subtype = a;
        return this;
      };
      c.setFundType = function (a) {
        this.$1.fund_type = a;
        return this;
      };
      c.setGender = function (a) {
        this.$1.gender = a;
        return this;
      };
      c.setOwnerID = function (a) {
        this.$1.owner_id = a;
        return this;
      };
      c.setPayeeID = function (a) {
        this.$1.payee_id = a;
        return this;
      };
      c.setPayeeRid = function (a) {
        this.$1.payee_rid = a;
        return this;
      };
      c.setPaymentAccountID = function (a) {
        this.$1.payment_account_id = a;
        return this;
      };
      c.setPlatform = function (a) {
        this.$1.platform = a;
        return this;
      };
      c.setProductOrderID = function (a) {
        this.$1.product_order_id = a;
        return this;
      };
      c.setPromotionID = function (a) {
        this.$1.promotion_id = a;
        return this;
      };
      c.setPromotionType = function (a) {
        this.$1.promotion_type = a;
        return this;
      };
      c.setRefundUnits = function (a) {
        this.$1.refund_units = a;
        return this;
      };
      c.setSenderID = function (a) {
        this.$1.sender_id = a;
        return this;
      };
      c.setSenderRid = function (a) {
        this.$1.sender_rid = a;
        return this;
      };
      c.setSpendID = function (a) {
        this.$1.spend_id = a;
        return this;
      };
      c.setSpendMatchUnits = function (a) {
        this.$1.spend_match_units = a;
        return this;
      };
      c.setSpendingSubtype = function (a) {
        this.$1.spending_subtype = a;
        return this;
      };
      c.setStackTrace = function (a) {
        this.$1.stack_trace = b("GeneratedLoggerUtils").serializeVector(a);
        return this;
      };
      c.setStatus = function (a) {
        this.$1.status = a;
        return this;
      };
      c.setUnits = function (a) {
        this.$1.units = a;
        return this;
      };
      c.setWalletID = function (a) {
        this.$1.wallet_id = a;
        return this;
      };
      c.setWalletType = function (a) {
        this.$1.wallet_type = a;
        return this;
      };
      c.updateExtraData = function (a) {
        a = b("nullthrows")(b("GeneratedLoggerUtils").serializeMap(a));
        b("GeneratedLoggerUtils").checkExtraDataFieldNames(a, g);
        this.$1 = babelHelpers["extends"]({}, this.$1, a);
        return this;
      };
      c.addToExtraData = function (a, b) {
        var c = {};
        c[a] = b;
        return this.updateExtraData(c);
      };
      return a;
    })();
    var g = {
      age_bucket: !0,
      city: !0,
      client_mutation_id: !0,
      content_id: !0,
      country: !0,
      error_category: !0,
      error_code: !0,
      error_msg: !0,
      event: !0,
      fb_funded_wallet_available_units: !0,
      fb_funded_wallet_total_units: !0,
      fund_id: !0,
      fund_match_units: !0,
      fund_subtype: !0,
      fund_type: !0,
      gender: !0,
      owner_id: !0,
      payee_id: !0,
      payee_rid: !0,
      payment_account_id: !0,
      platform: !0,
      product_order_id: !0,
      promotion_id: !0,
      promotion_type: !0,
      refund_units: !0,
      sender_id: !0,
      sender_rid: !0,
      spend_id: !0,
      spend_match_units: !0,
      spending_subtype: !0,
      stack_trace: !0,
      status: !0,
      units: !0,
      wallet_id: !0,
      wallet_type: !0,
    };
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerNestedActionDispatchTypedLogger",
  ["Banzai", "GeneratedLoggerUtils"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a() {
        this.$1 = {};
      }
      var c = a.prototype;
      c.log = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:ReactComposerNestedActionDispatchLoggerConfig",
          this.$1,
          b("Banzai").BASIC,
          a
        );
      };
      c.logVital = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:ReactComposerNestedActionDispatchLoggerConfig",
          this.$1,
          b("Banzai").VITAL,
          a
        );
      };
      c.logImmediately = function (a) {
        b("GeneratedLoggerUtils").log(
          "logger:ReactComposerNestedActionDispatchLoggerConfig",
          this.$1,
          { signal: !0 },
          a
        );
      };
      c.clear = function () {
        this.$1 = {};
        return this;
      };
      c.getData = function () {
        return babelHelpers["extends"]({}, this.$1);
      };
      c.updateData = function (a) {
        this.$1 = babelHelpers["extends"]({}, this.$1, a);
        return this;
      };
      c.setInnerActionType = function (a) {
        this.$1.inner_action_type = a;
        return this;
      };
      c.setOuterActionType = function (a) {
        this.$1.outer_action_type = a;
        return this;
      };
      c.setStack = function (a) {
        this.$1.stack = a;
        return this;
      };
      return a;
    })();
    c = { inner_action_type: !0, outer_action_type: !0, stack: !0 };
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadFBDefaultServerConfigurationRetrieverQuery_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "6325794097543029";
  },
  null
);
__d(
  "MediaUploadFBDefaultServerConfigurationRetrieverQuery.graphql",
  [
    "MediaUploadFBDefaultServerConfigurationRetrieverQuery_facebookRelayOperation",
  ],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = [
          { defaultValue: null, kind: "LocalArgument", name: "source_type" },
        ],
        c = [
          {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "uri",
            storageKey: null,
          },
        ],
        d = [
          {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "service_name",
            storageKey: null,
          },
          {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "service_domain",
            storageKey: null,
          },
        ];
      c = [
        {
          alias: null,
          args: null,
          concreteType: "MediaUploadConfiguration",
          kind: "LinkedField",
          name: "media_upload_config",
          plural: !1,
          selections: [
            {
              alias: null,
              args: [
                {
                  kind: "Variable",
                  name: "source_type",
                  variableName: "source_type",
                },
              ],
              concreteType: "MediaUploadVideoMetadataValidation",
              kind: "LinkedField",
              name: "video_metadata_validation",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "min_size_kb",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "max_size_kb",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "min_duration_secs",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "max_duration_secs",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "min_width",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "min_height",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "min_aspect_ration",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "max_aspect_ration",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "allowed_extensions",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "accept_dimensions_from_player",
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              concreteType: "MediaUploadNetworkStart",
              kind: "LinkedField",
              name: "network_start",
              plural: !1,
              selections: c,
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              concreteType: "MediaUploadNetworkReceive",
              kind: "LinkedField",
              name: "network_receive",
              plural: !1,
              selections: c,
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              concreteType: "MediaUploadNetworkUploadService",
              kind: "LinkedField",
              name: "network_upload_service",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  concreteType: "MediaUploadNetworkUploadServiceTarget",
                  kind: "LinkedField",
                  name: "default",
                  plural: !1,
                  selections: d,
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: "MediaUploadNetworkUploadServiceTarget",
                  kind: "LinkedField",
                  name: "targeted",
                  plural: !1,
                  selections: d,
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: "MediaUploadNetworkUploadServiceTracing",
                  kind: "LinkedField",
                  name: "tracing",
                  plural: !1,
                  selections: [
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "enabled",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "min_file_size_kb",
                      storageKey: null,
                    },
                  ],
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              concreteType: "MediaUploadNetworkMonitor",
              kind: "LinkedField",
              name: "network_monitor",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "network_probe_enabled",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "internet_probe_enabled",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "internet_probe_timeout_ms",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: "MediaUploadBackoffPolicy",
                  kind: "LinkedField",
                  name: "internet_probe_backoff",
                  plural: !1,
                  selections: [
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "backoff_initial_ms",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "backoff_jitter_ms",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "backoff_exp_base_ms",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "backoff_exp_multiplier",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "backoff_max_ms",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "limits_total_retry_count",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "limits_total_time_ms",
                      storageKey: null,
                    },
                  ],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "stall_detection_enabled",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "stall_detection_timeout_ms",
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
          ],
          storageKey: null,
        },
      ];
      return {
        fragment: {
          argumentDefinitions: a,
          kind: "Fragment",
          metadata: null,
          name: "MediaUploadFBDefaultServerConfigurationRetrieverQuery",
          selections: c,
          type: "Query",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: a,
          kind: "Operation",
          name: "MediaUploadFBDefaultServerConfigurationRetrieverQuery",
          selections: c,
        },
        params: {
          id: b(
            "MediaUploadFBDefaultServerConfigurationRetrieverQuery_facebookRelayOperation"
          ),
          metadata: {},
          name: "MediaUploadFBDefaultServerConfigurationRetrieverQuery",
          operationKind: "query",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "GroupsPollDeleteOptionMutation_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "5090590387670626";
  },
  null
);
__d(
  "GroupsPollDeleteOptionMutation.graphql",
  ["GroupsPollDeleteOptionMutation_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = [{ defaultValue: null, kind: "LocalArgument", name: "input" }],
        c = [
          {
            alias: null,
            args: [{ kind: "Variable", name: "data", variableName: "input" }],
            concreteType: "GroupsQuestionOptionDeleteResponsePayload",
            kind: "LinkedField",
            name: "groups_question_option_delete",
            plural: !1,
            selections: [
              {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "deleted_option_id",
                storageKey: null,
              },
            ],
            storageKey: null,
          },
        ];
      return {
        fragment: {
          argumentDefinitions: a,
          kind: "Fragment",
          metadata: null,
          name: "GroupsPollDeleteOptionMutation",
          selections: c,
          type: "Mutation",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: a,
          kind: "Operation",
          name: "GroupsPollDeleteOptionMutation",
          selections: c,
        },
        params: {
          id: b("GroupsPollDeleteOptionMutation_facebookRelayOperation"),
          metadata: {},
          name: "GroupsPollDeleteOptionMutation",
          operationKind: "mutation",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "PollAddOptionMutation_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "4558235517609452";
  },
  null
);
__d(
  "PollAddOptionMutation.graphql",
  ["PollAddOptionMutation_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = { defaultValue: null, kind: "LocalArgument", name: "first" },
        c = { defaultValue: null, kind: "LocalArgument", name: "input" },
        d = [{ kind: "Variable", name: "data", variableName: "input" }],
        e = { kind: "Variable", name: "first", variableName: "first" },
        f = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "cursor",
          storageKey: null,
        },
        g = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "id",
          storageKey: null,
        },
        h = [g],
        i = {
          alias: null,
          args: null,
          concreteType: "QuestionOption",
          kind: "LinkedField",
          name: "node",
          plural: !1,
          selections: h,
          storageKey: null,
        },
        j = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "__typename",
          storageKey: null,
        },
        k = [j, g],
        l = [
          e,
          {
            kind: "Literal",
            name: "orderby",
            value: ["vote_count", "creation_time"],
          },
        ],
        m = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "count",
          storageKey: null,
        },
        n = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "text",
          storageKey: null,
        },
        o = [{ kind: "Literal", name: "first", value: 10 }],
        p = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "url",
          storageKey: null,
        },
        q = [p],
        r = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "uri",
          storageKey: null,
        },
        s = {
          alias: null,
          args: null,
          concreteType: "PageInfo",
          kind: "LinkedField",
          name: "page_info",
          plural: !1,
          selections: [
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "end_cursor",
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "has_next_page",
              storageKey: null,
            },
          ],
          storageKey: null,
        };
      return {
        fragment: {
          argumentDefinitions: [a, c],
          kind: "Fragment",
          metadata: null,
          name: "PollAddOptionMutation",
          selections: [
            {
              alias: null,
              args: d,
              concreteType: "QuestionAddOptionResponsePayload",
              kind: "LinkedField",
              name: "question_add_option",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  concreteType: "Question",
                  kind: "LinkedField",
                  name: "question",
                  plural: !1,
                  selections: [
                    {
                      args: [e],
                      kind: "FragmentSpread",
                      name: "PollAttachmentComponent_question",
                    },
                  ],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: "QuestionOptionsEdge",
                  kind: "LinkedField",
                  name: "question_options_edge",
                  plural: !1,
                  selections: [
                    f,
                    i,
                    {
                      alias: null,
                      args: null,
                      concreteType: null,
                      kind: "LinkedField",
                      name: "source",
                      plural: !1,
                      selections: h,
                      storageKey: null,
                    },
                  ],
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
          ],
          type: "Mutation",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: [c, a],
          kind: "Operation",
          name: "PollAddOptionMutation",
          selections: [
            {
              alias: null,
              args: d,
              concreteType: "QuestionAddOptionResponsePayload",
              kind: "LinkedField",
              name: "question_add_option",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  concreteType: "Question",
                  kind: "LinkedField",
                  name: "question",
                  plural: !1,
                  selections: [
                    g,
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "response_method",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "can_viewer_post",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "can_viewer_add_poll_options",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "can_viewer_vote",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "fb_only_randomize_options",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "fb_only_vote_counts_hidden",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      concreteType: null,
                      kind: "LinkedField",
                      name: "author",
                      plural: !1,
                      selections: k,
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: l,
                      concreteType: "QuestionOptionsConnection",
                      kind: "LinkedField",
                      name: "options",
                      plural: !1,
                      selections: [
                        m,
                        {
                          alias: null,
                          args: null,
                          concreteType: "QuestionOptionsEdge",
                          kind: "LinkedField",
                          name: "edges",
                          plural: !0,
                          selections: [
                            {
                              alias: null,
                              args: null,
                              concreteType: "QuestionOption",
                              kind: "LinkedField",
                              name: "node",
                              plural: !1,
                              selections: [
                                g,
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "TextWithEntities",
                                  kind: "LinkedField",
                                  name: "text_with_entities",
                                  plural: !1,
                                  selections: [n],
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  kind: "ScalarField",
                                  name: "viewer_has_voted",
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: o,
                                  concreteType:
                                    "QuestionOptionProfileVotersConnection",
                                  kind: "LinkedField",
                                  name: "profile_voters",
                                  plural: !1,
                                  selections: [
                                    m,
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType:
                                        "QuestionOptionProfileVotersEdge",
                                      kind: "LinkedField",
                                      name: "edges",
                                      plural: !0,
                                      selections: [
                                        {
                                          alias: null,
                                          args: null,
                                          concreteType: null,
                                          kind: "LinkedField",
                                          name: "node",
                                          plural: !1,
                                          selections: [
                                            j,
                                            g,
                                            {
                                              alias: null,
                                              args: null,
                                              kind: "ScalarField",
                                              name: "name",
                                              storageKey: null,
                                            },
                                            {
                                              kind: "InlineFragment",
                                              selections: q,
                                              type: "User",
                                              abstractKey: null,
                                            },
                                            {
                                              kind: "InlineFragment",
                                              selections: q,
                                              type: "Page",
                                              abstractKey: null,
                                            },
                                            {
                                              alias: null,
                                              args: [
                                                {
                                                  kind: "Literal",
                                                  name: "size__width",
                                                  value: 32,
                                                },
                                              ],
                                              concreteType: "Image",
                                              kind: "LinkedField",
                                              name: "profile_picture",
                                              plural: !1,
                                              selections: [r],
                                              storageKey:
                                                "profile_picture(size__width:32)",
                                            },
                                          ],
                                          storageKey: null,
                                        },
                                        f,
                                      ],
                                      storageKey: null,
                                    },
                                    s,
                                  ],
                                  storageKey: "profile_voters(first:10)",
                                },
                                {
                                  alias: null,
                                  args: o,
                                  filters: null,
                                  handle: "connection",
                                  key: "PollAttachmentComponent_options_profile_voters",
                                  kind: "LinkedHandle",
                                  name: "profile_voters",
                                },
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "Photo",
                                  kind: "LinkedField",
                                  name: "associated_image",
                                  plural: !1,
                                  selections: [
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType: "Image",
                                      kind: "LinkedField",
                                      name: "image",
                                      plural: !1,
                                      selections: [
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "height",
                                          storageKey: null,
                                        },
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "width",
                                          storageKey: null,
                                        },
                                        r,
                                      ],
                                      storageKey: null,
                                    },
                                    g,
                                  ],
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  kind: "ScalarField",
                                  name: "can_viewer_delete_groups_poll_option",
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "TextWithEntities",
                                  kind: "LinkedField",
                                  name: "groups_poll_option_author_description",
                                  plural: !1,
                                  selections: [
                                    n,
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType: "EntityAtRange",
                                      kind: "LinkedField",
                                      name: "ranges",
                                      plural: !0,
                                      selections: [
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "offset",
                                          storageKey: null,
                                        },
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "length",
                                          storageKey: null,
                                        },
                                        {
                                          alias: null,
                                          args: null,
                                          concreteType: null,
                                          kind: "LinkedField",
                                          name: "entity",
                                          plural: !1,
                                          selections: [
                                            j,
                                            p,
                                            {
                                              kind: "InlineFragment",
                                              selections: h,
                                              type: "Node",
                                              abstractKey: "__isNode",
                                            },
                                          ],
                                          storageKey: null,
                                        },
                                      ],
                                      storageKey: null,
                                    },
                                  ],
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  kind: "ScalarField",
                                  name: "can_viewer_report",
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  kind: "ScalarField",
                                  name: "can_viewer_report_to_group_admin",
                                  storageKey: null,
                                },
                                j,
                              ],
                              storageKey: null,
                            },
                            f,
                          ],
                          storageKey: null,
                        },
                        s,
                      ],
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: l,
                      filters: [],
                      handle: "connection",
                      key: "PollAttachmentComponent_options",
                      kind: "LinkedHandle",
                      name: "options",
                    },
                  ],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: "QuestionOptionsEdge",
                  kind: "LinkedField",
                  name: "question_options_edge",
                  plural: !1,
                  selections: [
                    f,
                    i,
                    {
                      alias: null,
                      args: null,
                      concreteType: null,
                      kind: "LinkedField",
                      name: "source",
                      plural: !1,
                      selections: k,
                      storageKey: null,
                    },
                  ],
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
          ],
        },
        params: {
          id: b("PollAddOptionMutation_facebookRelayOperation"),
          metadata: {},
          name: "PollAddOptionMutation",
          operationKind: "mutation",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "PollAddVoteMutation_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "3454283224695771";
  },
  null
);
__d(
  "PollAddVoteMutation.graphql",
  ["PollAddVoteMutation_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = { defaultValue: null, kind: "LocalArgument", name: "first" },
        c = { defaultValue: null, kind: "LocalArgument", name: "input" },
        d = [{ kind: "Variable", name: "data", variableName: "input" }],
        e = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "viewer_has_voted",
          storageKey: null,
        },
        f = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "count",
          storageKey: null,
        },
        g = {
          alias: null,
          args: null,
          concreteType: "QuestionOptionProfileVotersConnection",
          kind: "LinkedField",
          name: "profile_voters",
          plural: !1,
          selections: [f],
          storageKey: null,
        },
        h = { kind: "Variable", name: "first", variableName: "first" },
        i = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "id",
          storageKey: null,
        },
        j = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "__typename",
          storageKey: null,
        },
        k = [
          h,
          {
            kind: "Literal",
            name: "orderby",
            value: ["vote_count", "creation_time"],
          },
        ],
        l = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "text",
          storageKey: null,
        },
        m = [{ kind: "Literal", name: "first", value: 10 }],
        n = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "url",
          storageKey: null,
        },
        o = [n],
        p = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "uri",
          storageKey: null,
        },
        q = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "cursor",
          storageKey: null,
        },
        r = {
          alias: null,
          args: null,
          concreteType: "PageInfo",
          kind: "LinkedField",
          name: "page_info",
          plural: !1,
          selections: [
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "end_cursor",
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "has_next_page",
              storageKey: null,
            },
          ],
          storageKey: null,
        };
      return {
        fragment: {
          argumentDefinitions: [a, c],
          kind: "Fragment",
          metadata: null,
          name: "PollAddVoteMutation",
          selections: [
            {
              alias: null,
              args: d,
              concreteType: "QuestionAddVoteResponsePayload",
              kind: "LinkedField",
              name: "question_add_vote",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  concreteType: "QuestionOption",
                  kind: "LinkedField",
                  name: "option",
                  plural: !1,
                  selections: [e, g],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: "Question",
                  kind: "LinkedField",
                  name: "question",
                  plural: !1,
                  selections: [
                    {
                      args: [h],
                      kind: "FragmentSpread",
                      name: "PollAttachmentComponent_question",
                    },
                  ],
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
          ],
          type: "Mutation",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: [c, a],
          kind: "Operation",
          name: "PollAddVoteMutation",
          selections: [
            {
              alias: null,
              args: d,
              concreteType: "QuestionAddVoteResponsePayload",
              kind: "LinkedField",
              name: "question_add_vote",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  concreteType: "QuestionOption",
                  kind: "LinkedField",
                  name: "option",
                  plural: !1,
                  selections: [e, g, i],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: "Question",
                  kind: "LinkedField",
                  name: "question",
                  plural: !1,
                  selections: [
                    i,
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "response_method",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "can_viewer_post",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "can_viewer_add_poll_options",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "can_viewer_vote",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "fb_only_randomize_options",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "fb_only_vote_counts_hidden",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      concreteType: null,
                      kind: "LinkedField",
                      name: "author",
                      plural: !1,
                      selections: [j, i],
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: k,
                      concreteType: "QuestionOptionsConnection",
                      kind: "LinkedField",
                      name: "options",
                      plural: !1,
                      selections: [
                        f,
                        {
                          alias: null,
                          args: null,
                          concreteType: "QuestionOptionsEdge",
                          kind: "LinkedField",
                          name: "edges",
                          plural: !0,
                          selections: [
                            {
                              alias: null,
                              args: null,
                              concreteType: "QuestionOption",
                              kind: "LinkedField",
                              name: "node",
                              plural: !1,
                              selections: [
                                i,
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "TextWithEntities",
                                  kind: "LinkedField",
                                  name: "text_with_entities",
                                  plural: !1,
                                  selections: [l],
                                  storageKey: null,
                                },
                                e,
                                {
                                  alias: null,
                                  args: m,
                                  concreteType:
                                    "QuestionOptionProfileVotersConnection",
                                  kind: "LinkedField",
                                  name: "profile_voters",
                                  plural: !1,
                                  selections: [
                                    f,
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType:
                                        "QuestionOptionProfileVotersEdge",
                                      kind: "LinkedField",
                                      name: "edges",
                                      plural: !0,
                                      selections: [
                                        {
                                          alias: null,
                                          args: null,
                                          concreteType: null,
                                          kind: "LinkedField",
                                          name: "node",
                                          plural: !1,
                                          selections: [
                                            j,
                                            i,
                                            {
                                              alias: null,
                                              args: null,
                                              kind: "ScalarField",
                                              name: "name",
                                              storageKey: null,
                                            },
                                            {
                                              kind: "InlineFragment",
                                              selections: o,
                                              type: "User",
                                              abstractKey: null,
                                            },
                                            {
                                              kind: "InlineFragment",
                                              selections: o,
                                              type: "Page",
                                              abstractKey: null,
                                            },
                                            {
                                              alias: null,
                                              args: [
                                                {
                                                  kind: "Literal",
                                                  name: "size__width",
                                                  value: 32,
                                                },
                                              ],
                                              concreteType: "Image",
                                              kind: "LinkedField",
                                              name: "profile_picture",
                                              plural: !1,
                                              selections: [p],
                                              storageKey:
                                                "profile_picture(size__width:32)",
                                            },
                                          ],
                                          storageKey: null,
                                        },
                                        q,
                                      ],
                                      storageKey: null,
                                    },
                                    r,
                                  ],
                                  storageKey: "profile_voters(first:10)",
                                },
                                {
                                  alias: null,
                                  args: m,
                                  filters: null,
                                  handle: "connection",
                                  key: "PollAttachmentComponent_options_profile_voters",
                                  kind: "LinkedHandle",
                                  name: "profile_voters",
                                },
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "Photo",
                                  kind: "LinkedField",
                                  name: "associated_image",
                                  plural: !1,
                                  selections: [
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType: "Image",
                                      kind: "LinkedField",
                                      name: "image",
                                      plural: !1,
                                      selections: [
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "height",
                                          storageKey: null,
                                        },
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "width",
                                          storageKey: null,
                                        },
                                        p,
                                      ],
                                      storageKey: null,
                                    },
                                    i,
                                  ],
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  kind: "ScalarField",
                                  name: "can_viewer_delete_groups_poll_option",
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "TextWithEntities",
                                  kind: "LinkedField",
                                  name: "groups_poll_option_author_description",
                                  plural: !1,
                                  selections: [
                                    l,
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType: "EntityAtRange",
                                      kind: "LinkedField",
                                      name: "ranges",
                                      plural: !0,
                                      selections: [
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "offset",
                                          storageKey: null,
                                        },
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "length",
                                          storageKey: null,
                                        },
                                        {
                                          alias: null,
                                          args: null,
                                          concreteType: null,
                                          kind: "LinkedField",
                                          name: "entity",
                                          plural: !1,
                                          selections: [
                                            j,
                                            n,
                                            {
                                              kind: "InlineFragment",
                                              selections: [i],
                                              type: "Node",
                                              abstractKey: "__isNode",
                                            },
                                          ],
                                          storageKey: null,
                                        },
                                      ],
                                      storageKey: null,
                                    },
                                  ],
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  kind: "ScalarField",
                                  name: "can_viewer_report",
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  kind: "ScalarField",
                                  name: "can_viewer_report_to_group_admin",
                                  storageKey: null,
                                },
                                j,
                              ],
                              storageKey: null,
                            },
                            q,
                          ],
                          storageKey: null,
                        },
                        r,
                      ],
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: k,
                      filters: [],
                      handle: "connection",
                      key: "PollAttachmentComponent_options",
                      kind: "LinkedHandle",
                      name: "options",
                    },
                  ],
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
          ],
        },
        params: {
          id: b("PollAddVoteMutation_facebookRelayOperation"),
          metadata: {},
          name: "PollAddVoteMutation",
          operationKind: "mutation",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "PollRemoveVoteMutation_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "7237506632957712";
  },
  null
);
__d(
  "PollRemoveVoteMutation.graphql",
  ["PollRemoveVoteMutation_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = { defaultValue: null, kind: "LocalArgument", name: "first" },
        c = { defaultValue: null, kind: "LocalArgument", name: "input" },
        d = [{ kind: "Variable", name: "data", variableName: "input" }],
        e = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "viewer_has_voted",
          storageKey: null,
        },
        f = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "count",
          storageKey: null,
        },
        g = {
          alias: null,
          args: null,
          concreteType: "QuestionOptionProfileVotersConnection",
          kind: "LinkedField",
          name: "profile_voters",
          plural: !1,
          selections: [f],
          storageKey: null,
        },
        h = { kind: "Variable", name: "first", variableName: "first" },
        i = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "id",
          storageKey: null,
        },
        j = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "__typename",
          storageKey: null,
        },
        k = [
          h,
          {
            kind: "Literal",
            name: "orderby",
            value: ["vote_count", "creation_time"],
          },
        ],
        l = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "text",
          storageKey: null,
        },
        m = [{ kind: "Literal", name: "first", value: 10 }],
        n = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "url",
          storageKey: null,
        },
        o = [n],
        p = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "uri",
          storageKey: null,
        },
        q = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "cursor",
          storageKey: null,
        },
        r = {
          alias: null,
          args: null,
          concreteType: "PageInfo",
          kind: "LinkedField",
          name: "page_info",
          plural: !1,
          selections: [
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "end_cursor",
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "has_next_page",
              storageKey: null,
            },
          ],
          storageKey: null,
        };
      return {
        fragment: {
          argumentDefinitions: [a, c],
          kind: "Fragment",
          metadata: null,
          name: "PollRemoveVoteMutation",
          selections: [
            {
              alias: null,
              args: d,
              concreteType: "QuestionRemoveVoteResponsePayload",
              kind: "LinkedField",
              name: "question_remove_vote",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  concreteType: "QuestionOption",
                  kind: "LinkedField",
                  name: "option",
                  plural: !1,
                  selections: [e, g],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: "Question",
                  kind: "LinkedField",
                  name: "question",
                  plural: !1,
                  selections: [
                    {
                      args: [h],
                      kind: "FragmentSpread",
                      name: "PollAttachmentComponent_question",
                    },
                  ],
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
          ],
          type: "Mutation",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: [c, a],
          kind: "Operation",
          name: "PollRemoveVoteMutation",
          selections: [
            {
              alias: null,
              args: d,
              concreteType: "QuestionRemoveVoteResponsePayload",
              kind: "LinkedField",
              name: "question_remove_vote",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  concreteType: "QuestionOption",
                  kind: "LinkedField",
                  name: "option",
                  plural: !1,
                  selections: [e, g, i],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: "Question",
                  kind: "LinkedField",
                  name: "question",
                  plural: !1,
                  selections: [
                    i,
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "response_method",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "can_viewer_post",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "can_viewer_add_poll_options",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "can_viewer_vote",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "fb_only_randomize_options",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      kind: "ScalarField",
                      name: "fb_only_vote_counts_hidden",
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: null,
                      concreteType: null,
                      kind: "LinkedField",
                      name: "author",
                      plural: !1,
                      selections: [j, i],
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: k,
                      concreteType: "QuestionOptionsConnection",
                      kind: "LinkedField",
                      name: "options",
                      plural: !1,
                      selections: [
                        f,
                        {
                          alias: null,
                          args: null,
                          concreteType: "QuestionOptionsEdge",
                          kind: "LinkedField",
                          name: "edges",
                          plural: !0,
                          selections: [
                            {
                              alias: null,
                              args: null,
                              concreteType: "QuestionOption",
                              kind: "LinkedField",
                              name: "node",
                              plural: !1,
                              selections: [
                                i,
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "TextWithEntities",
                                  kind: "LinkedField",
                                  name: "text_with_entities",
                                  plural: !1,
                                  selections: [l],
                                  storageKey: null,
                                },
                                e,
                                {
                                  alias: null,
                                  args: m,
                                  concreteType:
                                    "QuestionOptionProfileVotersConnection",
                                  kind: "LinkedField",
                                  name: "profile_voters",
                                  plural: !1,
                                  selections: [
                                    f,
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType:
                                        "QuestionOptionProfileVotersEdge",
                                      kind: "LinkedField",
                                      name: "edges",
                                      plural: !0,
                                      selections: [
                                        {
                                          alias: null,
                                          args: null,
                                          concreteType: null,
                                          kind: "LinkedField",
                                          name: "node",
                                          plural: !1,
                                          selections: [
                                            j,
                                            i,
                                            {
                                              alias: null,
                                              args: null,
                                              kind: "ScalarField",
                                              name: "name",
                                              storageKey: null,
                                            },
                                            {
                                              kind: "InlineFragment",
                                              selections: o,
                                              type: "User",
                                              abstractKey: null,
                                            },
                                            {
                                              kind: "InlineFragment",
                                              selections: o,
                                              type: "Page",
                                              abstractKey: null,
                                            },
                                            {
                                              alias: null,
                                              args: [
                                                {
                                                  kind: "Literal",
                                                  name: "size__width",
                                                  value: 32,
                                                },
                                              ],
                                              concreteType: "Image",
                                              kind: "LinkedField",
                                              name: "profile_picture",
                                              plural: !1,
                                              selections: [p],
                                              storageKey:
                                                "profile_picture(size__width:32)",
                                            },
                                          ],
                                          storageKey: null,
                                        },
                                        q,
                                      ],
                                      storageKey: null,
                                    },
                                    r,
                                  ],
                                  storageKey: "profile_voters(first:10)",
                                },
                                {
                                  alias: null,
                                  args: m,
                                  filters: null,
                                  handle: "connection",
                                  key: "PollAttachmentComponent_options_profile_voters",
                                  kind: "LinkedHandle",
                                  name: "profile_voters",
                                },
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "Photo",
                                  kind: "LinkedField",
                                  name: "associated_image",
                                  plural: !1,
                                  selections: [
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType: "Image",
                                      kind: "LinkedField",
                                      name: "image",
                                      plural: !1,
                                      selections: [
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "height",
                                          storageKey: null,
                                        },
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "width",
                                          storageKey: null,
                                        },
                                        p,
                                      ],
                                      storageKey: null,
                                    },
                                    i,
                                  ],
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  kind: "ScalarField",
                                  name: "can_viewer_delete_groups_poll_option",
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "TextWithEntities",
                                  kind: "LinkedField",
                                  name: "groups_poll_option_author_description",
                                  plural: !1,
                                  selections: [
                                    l,
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType: "EntityAtRange",
                                      kind: "LinkedField",
                                      name: "ranges",
                                      plural: !0,
                                      selections: [
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "offset",
                                          storageKey: null,
                                        },
                                        {
                                          alias: null,
                                          args: null,
                                          kind: "ScalarField",
                                          name: "length",
                                          storageKey: null,
                                        },
                                        {
                                          alias: null,
                                          args: null,
                                          concreteType: null,
                                          kind: "LinkedField",
                                          name: "entity",
                                          plural: !1,
                                          selections: [
                                            j,
                                            n,
                                            {
                                              kind: "InlineFragment",
                                              selections: [i],
                                              type: "Node",
                                              abstractKey: "__isNode",
                                            },
                                          ],
                                          storageKey: null,
                                        },
                                      ],
                                      storageKey: null,
                                    },
                                  ],
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  kind: "ScalarField",
                                  name: "can_viewer_report",
                                  storageKey: null,
                                },
                                {
                                  alias: null,
                                  args: null,
                                  kind: "ScalarField",
                                  name: "can_viewer_report_to_group_admin",
                                  storageKey: null,
                                },
                                j,
                              ],
                              storageKey: null,
                            },
                            q,
                          ],
                          storageKey: null,
                        },
                        r,
                      ],
                      storageKey: null,
                    },
                    {
                      alias: null,
                      args: k,
                      filters: [],
                      handle: "connection",
                      key: "PollAttachmentComponent_options",
                      kind: "LinkedHandle",
                      name: "options",
                    },
                  ],
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
          ],
        },
        params: {
          id: b("PollRemoveVoteMutation_facebookRelayOperation"),
          metadata: {},
          name: "PollRemoveVoteMutation",
          operationKind: "mutation",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "ReportGroupsPollOptionMutation_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "5147960011891951";
  },
  null
);
__d(
  "ReportGroupsPollOptionMutation.graphql",
  ["ReportGroupsPollOptionMutation_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = [{ defaultValue: null, kind: "LocalArgument", name: "input" }],
        c = [
          {
            alias: null,
            args: [{ kind: "Variable", name: "data", variableName: "input" }],
            concreteType: "ReportGroupsPollOptionResponsePayload",
            kind: "LinkedField",
            name: "report_groups_poll_option",
            plural: !1,
            selections: [
              {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "reported_option_id",
                storageKey: null,
              },
            ],
            storageKey: null,
          },
        ];
      return {
        fragment: {
          argumentDefinitions: a,
          kind: "Fragment",
          metadata: null,
          name: "ReportGroupsPollOptionMutation",
          selections: c,
          type: "Mutation",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: a,
          kind: "Operation",
          name: "ReportGroupsPollOptionMutation",
          selections: c,
        },
        params: {
          id: b("ReportGroupsPollOptionMutation_facebookRelayOperation"),
          metadata: {},
          name: "ReportGroupsPollOptionMutation",
          operationKind: "mutation",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "PollAttachmentComponentRefetchQuery_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "6348814435202543";
  },
  null
);
__d(
  "PollAttachmentComponentRefetchQuery.graphql",
  ["PollAttachmentComponentRefetchQuery_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = [
          { defaultValue: null, kind: "LocalArgument", name: "actorID" },
          { defaultValue: null, kind: "LocalArgument", name: "first" },
          { defaultValue: null, kind: "LocalArgument", name: "questionID" },
        ],
        c = [{ kind: "Variable", name: "id", variableName: "actorID" }],
        d = [
          { kind: "Variable", name: "actor_id", variableName: "actorID" },
          { kind: "Variable", name: "id", variableName: "questionID" },
        ],
        e = { kind: "Variable", name: "first", variableName: "first" },
        f = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "id",
          storageKey: null,
        },
        g = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "name",
          storageKey: null,
        },
        h = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "uri",
          storageKey: null,
        },
        i = {
          alias: null,
          args: [{ kind: "Literal", name: "size__width", value: 32 }],
          concreteType: "Image",
          kind: "LinkedField",
          name: "profile_picture",
          plural: !1,
          selections: [h],
          storageKey: "profile_picture(size__width:32)",
        },
        j = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "__typename",
          storageKey: null,
        },
        k = [
          e,
          {
            kind: "Literal",
            name: "orderby",
            value: ["vote_count", "creation_time"],
          },
        ],
        l = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "count",
          storageKey: null,
        },
        m = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "text",
          storageKey: null,
        },
        n = [{ kind: "Literal", name: "first", value: 10 }],
        o = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "url",
          storageKey: null,
        },
        p = [o],
        q = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "cursor",
          storageKey: null,
        },
        r = {
          alias: null,
          args: null,
          concreteType: "PageInfo",
          kind: "LinkedField",
          name: "page_info",
          plural: !1,
          selections: [
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "end_cursor",
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "has_next_page",
              storageKey: null,
            },
          ],
          storageKey: null,
        };
      return {
        fragment: {
          argumentDefinitions: a,
          kind: "Fragment",
          metadata: null,
          name: "PollAttachmentComponentRefetchQuery",
          selections: [
            {
              alias: "viewer",
              args: c,
              concreteType: "Viewer",
              kind: "LinkedField",
              name: "actor",
              plural: !1,
              selections: [
                {
                  args: null,
                  kind: "FragmentSpread",
                  name: "PollAttachmentComponent_viewer",
                },
              ],
              storageKey: null,
            },
            {
              alias: null,
              args: d,
              concreteType: "Question",
              kind: "LinkedField",
              name: "question",
              plural: !1,
              selections: [
                {
                  args: [e],
                  kind: "FragmentSpread",
                  name: "PollAttachmentComponent_question",
                },
              ],
              storageKey: null,
            },
          ],
          type: "Query",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: a,
          kind: "Operation",
          name: "PollAttachmentComponentRefetchQuery",
          selections: [
            {
              alias: "viewer",
              args: c,
              concreteType: "Viewer",
              kind: "LinkedField",
              name: "actor",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  concreteType: null,
                  kind: "LinkedField",
                  name: "actor",
                  plural: !1,
                  selections: [
                    f,
                    g,
                    {
                      kind: "InlineFragment",
                      selections: [
                        {
                          alias: null,
                          args: [
                            { kind: "Literal", name: "site", value: "www" },
                          ],
                          kind: "ScalarField",
                          name: "url",
                          storageKey: 'url(site:"www")',
                        },
                      ],
                      type: "User",
                      abstractKey: null,
                    },
                    i,
                    j,
                  ],
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
            {
              alias: null,
              args: d,
              concreteType: "Question",
              kind: "LinkedField",
              name: "question",
              plural: !1,
              selections: [
                f,
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "response_method",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "can_viewer_post",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "can_viewer_add_poll_options",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "can_viewer_vote",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "fb_only_randomize_options",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "fb_only_vote_counts_hidden",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: null,
                  kind: "LinkedField",
                  name: "author",
                  plural: !1,
                  selections: [j, f],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: k,
                  concreteType: "QuestionOptionsConnection",
                  kind: "LinkedField",
                  name: "options",
                  plural: !1,
                  selections: [
                    l,
                    {
                      alias: null,
                      args: null,
                      concreteType: "QuestionOptionsEdge",
                      kind: "LinkedField",
                      name: "edges",
                      plural: !0,
                      selections: [
                        {
                          alias: null,
                          args: null,
                          concreteType: "QuestionOption",
                          kind: "LinkedField",
                          name: "node",
                          plural: !1,
                          selections: [
                            f,
                            {
                              alias: null,
                              args: null,
                              concreteType: "TextWithEntities",
                              kind: "LinkedField",
                              name: "text_with_entities",
                              plural: !1,
                              selections: [m],
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: null,
                              kind: "ScalarField",
                              name: "viewer_has_voted",
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: n,
                              concreteType:
                                "QuestionOptionProfileVotersConnection",
                              kind: "LinkedField",
                              name: "profile_voters",
                              plural: !1,
                              selections: [
                                l,
                                {
                                  alias: null,
                                  args: null,
                                  concreteType:
                                    "QuestionOptionProfileVotersEdge",
                                  kind: "LinkedField",
                                  name: "edges",
                                  plural: !0,
                                  selections: [
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType: null,
                                      kind: "LinkedField",
                                      name: "node",
                                      plural: !1,
                                      selections: [
                                        j,
                                        f,
                                        g,
                                        {
                                          kind: "InlineFragment",
                                          selections: p,
                                          type: "User",
                                          abstractKey: null,
                                        },
                                        {
                                          kind: "InlineFragment",
                                          selections: p,
                                          type: "Page",
                                          abstractKey: null,
                                        },
                                        i,
                                      ],
                                      storageKey: null,
                                    },
                                    q,
                                  ],
                                  storageKey: null,
                                },
                                r,
                              ],
                              storageKey: "profile_voters(first:10)",
                            },
                            {
                              alias: null,
                              args: n,
                              filters: null,
                              handle: "connection",
                              key: "PollAttachmentComponent_options_profile_voters",
                              kind: "LinkedHandle",
                              name: "profile_voters",
                            },
                            {
                              alias: null,
                              args: null,
                              concreteType: "Photo",
                              kind: "LinkedField",
                              name: "associated_image",
                              plural: !1,
                              selections: [
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "Image",
                                  kind: "LinkedField",
                                  name: "image",
                                  plural: !1,
                                  selections: [
                                    {
                                      alias: null,
                                      args: null,
                                      kind: "ScalarField",
                                      name: "height",
                                      storageKey: null,
                                    },
                                    {
                                      alias: null,
                                      args: null,
                                      kind: "ScalarField",
                                      name: "width",
                                      storageKey: null,
                                    },
                                    h,
                                  ],
                                  storageKey: null,
                                },
                                f,
                              ],
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: null,
                              kind: "ScalarField",
                              name: "can_viewer_delete_groups_poll_option",
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: null,
                              concreteType: "TextWithEntities",
                              kind: "LinkedField",
                              name: "groups_poll_option_author_description",
                              plural: !1,
                              selections: [
                                m,
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "EntityAtRange",
                                  kind: "LinkedField",
                                  name: "ranges",
                                  plural: !0,
                                  selections: [
                                    {
                                      alias: null,
                                      args: null,
                                      kind: "ScalarField",
                                      name: "offset",
                                      storageKey: null,
                                    },
                                    {
                                      alias: null,
                                      args: null,
                                      kind: "ScalarField",
                                      name: "length",
                                      storageKey: null,
                                    },
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType: null,
                                      kind: "LinkedField",
                                      name: "entity",
                                      plural: !1,
                                      selections: [
                                        j,
                                        o,
                                        {
                                          kind: "InlineFragment",
                                          selections: [f],
                                          type: "Node",
                                          abstractKey: "__isNode",
                                        },
                                      ],
                                      storageKey: null,
                                    },
                                  ],
                                  storageKey: null,
                                },
                              ],
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: null,
                              kind: "ScalarField",
                              name: "can_viewer_report",
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: null,
                              kind: "ScalarField",
                              name: "can_viewer_report_to_group_admin",
                              storageKey: null,
                            },
                            j,
                          ],
                          storageKey: null,
                        },
                        q,
                      ],
                      storageKey: null,
                    },
                    r,
                  ],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: k,
                  filters: [],
                  handle: "connection",
                  key: "PollAttachmentComponent_options",
                  kind: "LinkedHandle",
                  name: "options",
                },
              ],
              storageKey: null,
            },
          ],
        },
        params: {
          id: b("PollAttachmentComponentRefetchQuery_facebookRelayOperation"),
          metadata: {},
          name: "PollAttachmentComponentRefetchQuery",
          operationKind: "query",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "PollAttachmentComponent_question.graphql",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "id",
          storageKey: null,
        },
        b = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "count",
          storageKey: null,
        },
        c = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "text",
          storageKey: null,
        },
        d = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "url",
          storageKey: null,
        },
        e = [d],
        f = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "uri",
          storageKey: null,
        },
        g = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "__typename",
          storageKey: null,
        },
        h = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "cursor",
          storageKey: null,
        },
        i = {
          alias: null,
          args: null,
          concreteType: "PageInfo",
          kind: "LinkedField",
          name: "page_info",
          plural: !1,
          selections: [
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "end_cursor",
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "has_next_page",
              storageKey: null,
            },
          ],
          storageKey: null,
        };
      return {
        argumentDefinitions: [
          { defaultValue: 5, kind: "LocalArgument", name: "first" },
          {
            defaultValue: ["vote_count", "creation_time"],
            kind: "LocalArgument",
            name: "ordering",
          },
        ],
        kind: "Fragment",
        metadata: {
          connection: [
            { count: null, cursor: null, direction: "forward", path: null },
            {
              count: "first",
              cursor: null,
              direction: "forward",
              path: ["options"],
            },
          ],
        },
        name: "PollAttachmentComponent_question",
        selections: [
          a,
          {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "response_method",
            storageKey: null,
          },
          {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "can_viewer_post",
            storageKey: null,
          },
          {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "can_viewer_add_poll_options",
            storageKey: null,
          },
          {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "can_viewer_vote",
            storageKey: null,
          },
          {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "fb_only_randomize_options",
            storageKey: null,
          },
          {
            alias: null,
            args: null,
            kind: "ScalarField",
            name: "fb_only_vote_counts_hidden",
            storageKey: null,
          },
          {
            alias: null,
            args: null,
            concreteType: null,
            kind: "LinkedField",
            name: "author",
            plural: !1,
            selections: [a],
            storageKey: null,
          },
          {
            alias: "options",
            args: null,
            concreteType: "QuestionOptionsConnection",
            kind: "LinkedField",
            name: "__PollAttachmentComponent_options_connection",
            plural: !1,
            selections: [
              b,
              {
                alias: null,
                args: null,
                concreteType: "QuestionOptionsEdge",
                kind: "LinkedField",
                name: "edges",
                plural: !0,
                selections: [
                  {
                    alias: null,
                    args: null,
                    concreteType: "QuestionOption",
                    kind: "LinkedField",
                    name: "node",
                    plural: !1,
                    selections: [
                      a,
                      {
                        alias: null,
                        args: null,
                        concreteType: "TextWithEntities",
                        kind: "LinkedField",
                        name: "text_with_entities",
                        plural: !1,
                        selections: [c],
                        storageKey: null,
                      },
                      {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "viewer_has_voted",
                        storageKey: null,
                      },
                      {
                        alias: "profile_voters",
                        args: null,
                        concreteType: "QuestionOptionProfileVotersConnection",
                        kind: "LinkedField",
                        name: "__PollAttachmentComponent_options_profile_voters_connection",
                        plural: !1,
                        selections: [
                          b,
                          {
                            alias: null,
                            args: null,
                            concreteType: "QuestionOptionProfileVotersEdge",
                            kind: "LinkedField",
                            name: "edges",
                            plural: !0,
                            selections: [
                              {
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "node",
                                plural: !1,
                                selections: [
                                  a,
                                  {
                                    alias: null,
                                    args: null,
                                    kind: "ScalarField",
                                    name: "name",
                                    storageKey: null,
                                  },
                                  {
                                    kind: "InlineFragment",
                                    selections: e,
                                    type: "User",
                                    abstractKey: null,
                                  },
                                  {
                                    kind: "InlineFragment",
                                    selections: e,
                                    type: "Page",
                                    abstractKey: null,
                                  },
                                  {
                                    alias: null,
                                    args: [
                                      {
                                        kind: "Literal",
                                        name: "size__width",
                                        value: 32,
                                      },
                                    ],
                                    concreteType: "Image",
                                    kind: "LinkedField",
                                    name: "profile_picture",
                                    plural: !1,
                                    selections: [f],
                                    storageKey:
                                      "profile_picture(size__width:32)",
                                  },
                                  g,
                                ],
                                storageKey: null,
                              },
                              h,
                            ],
                            storageKey: null,
                          },
                          i,
                        ],
                        storageKey: null,
                      },
                      {
                        alias: null,
                        args: null,
                        concreteType: "Photo",
                        kind: "LinkedField",
                        name: "associated_image",
                        plural: !1,
                        selections: [
                          {
                            alias: null,
                            args: null,
                            concreteType: "Image",
                            kind: "LinkedField",
                            name: "image",
                            plural: !1,
                            selections: [
                              {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "height",
                                storageKey: null,
                              },
                              {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "width",
                                storageKey: null,
                              },
                              f,
                            ],
                            storageKey: null,
                          },
                        ],
                        storageKey: null,
                      },
                      {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "can_viewer_delete_groups_poll_option",
                        storageKey: null,
                      },
                      {
                        alias: null,
                        args: null,
                        concreteType: "TextWithEntities",
                        kind: "LinkedField",
                        name: "groups_poll_option_author_description",
                        plural: !1,
                        selections: [
                          c,
                          {
                            alias: null,
                            args: null,
                            concreteType: "EntityAtRange",
                            kind: "LinkedField",
                            name: "ranges",
                            plural: !0,
                            selections: [
                              {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "offset",
                                storageKey: null,
                              },
                              {
                                alias: null,
                                args: null,
                                kind: "ScalarField",
                                name: "length",
                                storageKey: null,
                              },
                              {
                                alias: null,
                                args: null,
                                concreteType: null,
                                kind: "LinkedField",
                                name: "entity",
                                plural: !1,
                                selections: [g, d],
                                storageKey: null,
                              },
                            ],
                            storageKey: null,
                          },
                        ],
                        storageKey: null,
                      },
                      {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "can_viewer_report",
                        storageKey: null,
                      },
                      {
                        alias: null,
                        args: null,
                        kind: "ScalarField",
                        name: "can_viewer_report_to_group_admin",
                        storageKey: null,
                      },
                      g,
                    ],
                    storageKey: null,
                  },
                  h,
                ],
                storageKey: null,
              },
              i,
            ],
            storageKey: null,
          },
        ],
        type: "Question",
        abstractKey: null,
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "PollAttachmentComponent_viewer.graphql",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = {
      argumentDefinitions: [],
      kind: "Fragment",
      metadata: null,
      name: "PollAttachmentComponent_viewer",
      selections: [
        {
          alias: null,
          args: null,
          concreteType: null,
          kind: "LinkedField",
          name: "actor",
          plural: !1,
          selections: [
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "id",
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "name",
              storageKey: null,
            },
            {
              kind: "InlineFragment",
              selections: [
                {
                  alias: null,
                  args: [{ kind: "Literal", name: "site", value: "www" }],
                  kind: "ScalarField",
                  name: "url",
                  storageKey: 'url(site:"www")',
                },
              ],
              type: "User",
              abstractKey: null,
            },
            {
              alias: null,
              args: [{ kind: "Literal", name: "size__width", value: 32 }],
              concreteType: "Image",
              kind: "LinkedField",
              name: "profile_picture",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "uri",
                  storageKey: null,
                },
              ],
              storageKey: "profile_picture(size__width:32)",
            },
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "__typename",
              storageKey: null,
            },
          ],
          storageKey: null,
        },
      ],
      type: "Viewer",
      abstractKey: null,
    };
    e.exports = a;
  },
  null
);
__d(
  "PollAttachmentQuery_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "6548299811893624";
  },
  null
);
__d(
  "PollAttachmentQuery.graphql",
  ["PollAttachmentQuery_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = [
          { defaultValue: null, kind: "LocalArgument", name: "actorID" },
          { defaultValue: null, kind: "LocalArgument", name: "first" },
          { defaultValue: null, kind: "LocalArgument", name: "questionID" },
        ],
        c = [{ kind: "Variable", name: "id", variableName: "actorID" }],
        d = [
          { kind: "Variable", name: "actor_id", variableName: "actorID" },
          { kind: "Variable", name: "id", variableName: "questionID" },
        ],
        e = { kind: "Variable", name: "first", variableName: "first" },
        f = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "id",
          storageKey: null,
        },
        g = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "name",
          storageKey: null,
        },
        h = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "uri",
          storageKey: null,
        },
        i = {
          alias: null,
          args: [{ kind: "Literal", name: "size__width", value: 32 }],
          concreteType: "Image",
          kind: "LinkedField",
          name: "profile_picture",
          plural: !1,
          selections: [h],
          storageKey: "profile_picture(size__width:32)",
        },
        j = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "__typename",
          storageKey: null,
        },
        k = [
          e,
          {
            kind: "Literal",
            name: "orderby",
            value: ["vote_count", "creation_time"],
          },
        ],
        l = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "count",
          storageKey: null,
        },
        m = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "text",
          storageKey: null,
        },
        n = [{ kind: "Literal", name: "first", value: 10 }],
        o = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "url",
          storageKey: null,
        },
        p = [o],
        q = {
          alias: null,
          args: null,
          kind: "ScalarField",
          name: "cursor",
          storageKey: null,
        },
        r = {
          alias: null,
          args: null,
          concreteType: "PageInfo",
          kind: "LinkedField",
          name: "page_info",
          plural: !1,
          selections: [
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "end_cursor",
              storageKey: null,
            },
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "has_next_page",
              storageKey: null,
            },
          ],
          storageKey: null,
        };
      return {
        fragment: {
          argumentDefinitions: a,
          kind: "Fragment",
          metadata: null,
          name: "PollAttachmentQuery",
          selections: [
            {
              alias: "viewer",
              args: c,
              concreteType: "Viewer",
              kind: "LinkedField",
              name: "actor",
              plural: !1,
              selections: [
                {
                  args: null,
                  kind: "FragmentSpread",
                  name: "PollAttachmentComponent_viewer",
                },
              ],
              storageKey: null,
            },
            {
              alias: null,
              args: d,
              concreteType: "Question",
              kind: "LinkedField",
              name: "question",
              plural: !1,
              selections: [
                {
                  args: [e],
                  kind: "FragmentSpread",
                  name: "PollAttachmentComponent_question",
                },
              ],
              storageKey: null,
            },
          ],
          type: "Query",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: a,
          kind: "Operation",
          name: "PollAttachmentQuery",
          selections: [
            {
              alias: "viewer",
              args: c,
              concreteType: "Viewer",
              kind: "LinkedField",
              name: "actor",
              plural: !1,
              selections: [
                {
                  alias: null,
                  args: null,
                  concreteType: null,
                  kind: "LinkedField",
                  name: "actor",
                  plural: !1,
                  selections: [
                    f,
                    g,
                    {
                      kind: "InlineFragment",
                      selections: [
                        {
                          alias: null,
                          args: [
                            { kind: "Literal", name: "site", value: "www" },
                          ],
                          kind: "ScalarField",
                          name: "url",
                          storageKey: 'url(site:"www")',
                        },
                      ],
                      type: "User",
                      abstractKey: null,
                    },
                    i,
                    j,
                  ],
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
            {
              alias: null,
              args: d,
              concreteType: "Question",
              kind: "LinkedField",
              name: "question",
              plural: !1,
              selections: [
                f,
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "response_method",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "can_viewer_post",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "can_viewer_add_poll_options",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "can_viewer_vote",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "fb_only_randomize_options",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "fb_only_vote_counts_hidden",
                  storageKey: null,
                },
                {
                  alias: null,
                  args: null,
                  concreteType: null,
                  kind: "LinkedField",
                  name: "author",
                  plural: !1,
                  selections: [j, f],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: k,
                  concreteType: "QuestionOptionsConnection",
                  kind: "LinkedField",
                  name: "options",
                  plural: !1,
                  selections: [
                    l,
                    {
                      alias: null,
                      args: null,
                      concreteType: "QuestionOptionsEdge",
                      kind: "LinkedField",
                      name: "edges",
                      plural: !0,
                      selections: [
                        {
                          alias: null,
                          args: null,
                          concreteType: "QuestionOption",
                          kind: "LinkedField",
                          name: "node",
                          plural: !1,
                          selections: [
                            f,
                            {
                              alias: null,
                              args: null,
                              concreteType: "TextWithEntities",
                              kind: "LinkedField",
                              name: "text_with_entities",
                              plural: !1,
                              selections: [m],
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: null,
                              kind: "ScalarField",
                              name: "viewer_has_voted",
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: n,
                              concreteType:
                                "QuestionOptionProfileVotersConnection",
                              kind: "LinkedField",
                              name: "profile_voters",
                              plural: !1,
                              selections: [
                                l,
                                {
                                  alias: null,
                                  args: null,
                                  concreteType:
                                    "QuestionOptionProfileVotersEdge",
                                  kind: "LinkedField",
                                  name: "edges",
                                  plural: !0,
                                  selections: [
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType: null,
                                      kind: "LinkedField",
                                      name: "node",
                                      plural: !1,
                                      selections: [
                                        j,
                                        f,
                                        g,
                                        {
                                          kind: "InlineFragment",
                                          selections: p,
                                          type: "User",
                                          abstractKey: null,
                                        },
                                        {
                                          kind: "InlineFragment",
                                          selections: p,
                                          type: "Page",
                                          abstractKey: null,
                                        },
                                        i,
                                      ],
                                      storageKey: null,
                                    },
                                    q,
                                  ],
                                  storageKey: null,
                                },
                                r,
                              ],
                              storageKey: "profile_voters(first:10)",
                            },
                            {
                              alias: null,
                              args: n,
                              filters: null,
                              handle: "connection",
                              key: "PollAttachmentComponent_options_profile_voters",
                              kind: "LinkedHandle",
                              name: "profile_voters",
                            },
                            {
                              alias: null,
                              args: null,
                              concreteType: "Photo",
                              kind: "LinkedField",
                              name: "associated_image",
                              plural: !1,
                              selections: [
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "Image",
                                  kind: "LinkedField",
                                  name: "image",
                                  plural: !1,
                                  selections: [
                                    {
                                      alias: null,
                                      args: null,
                                      kind: "ScalarField",
                                      name: "height",
                                      storageKey: null,
                                    },
                                    {
                                      alias: null,
                                      args: null,
                                      kind: "ScalarField",
                                      name: "width",
                                      storageKey: null,
                                    },
                                    h,
                                  ],
                                  storageKey: null,
                                },
                                f,
                              ],
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: null,
                              kind: "ScalarField",
                              name: "can_viewer_delete_groups_poll_option",
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: null,
                              concreteType: "TextWithEntities",
                              kind: "LinkedField",
                              name: "groups_poll_option_author_description",
                              plural: !1,
                              selections: [
                                m,
                                {
                                  alias: null,
                                  args: null,
                                  concreteType: "EntityAtRange",
                                  kind: "LinkedField",
                                  name: "ranges",
                                  plural: !0,
                                  selections: [
                                    {
                                      alias: null,
                                      args: null,
                                      kind: "ScalarField",
                                      name: "offset",
                                      storageKey: null,
                                    },
                                    {
                                      alias: null,
                                      args: null,
                                      kind: "ScalarField",
                                      name: "length",
                                      storageKey: null,
                                    },
                                    {
                                      alias: null,
                                      args: null,
                                      concreteType: null,
                                      kind: "LinkedField",
                                      name: "entity",
                                      plural: !1,
                                      selections: [
                                        j,
                                        o,
                                        {
                                          kind: "InlineFragment",
                                          selections: [f],
                                          type: "Node",
                                          abstractKey: "__isNode",
                                        },
                                      ],
                                      storageKey: null,
                                    },
                                  ],
                                  storageKey: null,
                                },
                              ],
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: null,
                              kind: "ScalarField",
                              name: "can_viewer_report",
                              storageKey: null,
                            },
                            {
                              alias: null,
                              args: null,
                              kind: "ScalarField",
                              name: "can_viewer_report_to_group_admin",
                              storageKey: null,
                            },
                            j,
                          ],
                          storageKey: null,
                        },
                        q,
                      ],
                      storageKey: null,
                    },
                    r,
                  ],
                  storageKey: null,
                },
                {
                  alias: null,
                  args: k,
                  filters: [],
                  handle: "connection",
                  key: "PollAttachmentComponent_options",
                  kind: "LinkedHandle",
                  name: "options",
                },
              ],
              storageKey: null,
            },
          ],
        },
        params: {
          id: b("PollAttachmentQuery_facebookRelayOperation"),
          metadata: {},
          name: "PollAttachmentQuery",
          operationKind: "query",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "VideoComposerVideoPublishingMutation_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "6526070934125781";
  },
  null
);
__d(
  "VideoComposerVideoPublishingMutation.graphql",
  ["VideoComposerVideoPublishingMutation_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = [{ defaultValue: null, kind: "LocalArgument", name: "input" }],
        c = [
          {
            alias: null,
            args: [{ kind: "Variable", name: "data", variableName: "input" }],
            concreteType: "VideoPublishResponsePayload",
            kind: "LinkedField",
            name: "video_publish",
            plural: !1,
            selections: [
              {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "video_asset_id",
                storageKey: null,
              },
            ],
            storageKey: null,
          },
        ];
      return {
        fragment: {
          argumentDefinitions: a,
          kind: "Fragment",
          metadata: null,
          name: "VideoComposerVideoPublishingMutation",
          selections: c,
          type: "Mutation",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: a,
          kind: "Operation",
          name: "VideoComposerVideoPublishingMutation",
          selections: c,
        },
        params: {
          id: b("VideoComposerVideoPublishingMutation_facebookRelayOperation"),
          metadata: {},
          name: "VideoComposerVideoPublishingMutation",
          operationKind: "mutation",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "ReelComposerReelPublishMutation_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "5807526529347282";
  },
  null
);
__d(
  "ReelComposerReelPublishMutation.graphql",
  ["ReelComposerReelPublishMutation_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = [{ defaultValue: null, kind: "LocalArgument", name: "input" }],
        c = [
          {
            alias: null,
            args: [{ kind: "Variable", name: "input", variableName: "input" }],
            concreteType: "CpxReelPublishResponsePayload",
            kind: "LinkedField",
            name: "cpx_reel_publish",
            plural: !1,
            selections: [
              {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "success",
                storageKey: null,
              },
              {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "published_video_id",
                storageKey: null,
              },
            ],
            storageKey: null,
          },
        ];
      return {
        fragment: {
          argumentDefinitions: a,
          kind: "Fragment",
          metadata: null,
          name: "ReelComposerReelPublishMutation",
          selections: c,
          type: "Mutation",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: a,
          kind: "Operation",
          name: "ReelComposerReelPublishMutation",
          selections: c,
        },
        params: {
          id: b("ReelComposerReelPublishMutation_facebookRelayOperation"),
          metadata: {},
          name: "ReelComposerReelPublishMutation",
          operationKind: "mutation",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "WorkUserNameQuery_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "7077336315670878";
  },
  null
);
__d(
  "WorkUserNameQuery.graphql",
  ["WorkUserNameQuery_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = [{ defaultValue: null, kind: "LocalArgument", name: "userID" }],
        c = [{ kind: "Variable", name: "id", variableName: "userID" }],
        d = {
          alias: null,
          args: null,
          concreteType: "WorkUserInfo",
          kind: "LinkedField",
          name: "work_info",
          plural: !1,
          selections: [
            {
              alias: null,
              args: null,
              kind: "ScalarField",
              name: "name",
              storageKey: null,
            },
          ],
          storageKey: null,
        };
      return {
        fragment: {
          argumentDefinitions: a,
          kind: "Fragment",
          metadata: null,
          name: "WorkUserNameQuery",
          selections: [
            {
              alias: null,
              args: c,
              concreteType: "User",
              kind: "LinkedField",
              name: "user",
              plural: !1,
              selections: [d],
              storageKey: null,
            },
          ],
          type: "Query",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: a,
          kind: "Operation",
          name: "WorkUserNameQuery",
          selections: [
            {
              alias: null,
              args: c,
              concreteType: "User",
              kind: "LinkedField",
              name: "user",
              plural: !1,
              selections: [
                d,
                {
                  alias: null,
                  args: null,
                  kind: "ScalarField",
                  name: "id",
                  storageKey: null,
                },
              ],
              storageKey: null,
            },
          ],
        },
        params: {
          id: b("WorkUserNameQuery_facebookRelayOperation"),
          metadata: {},
          name: "WorkUserNameQuery",
          operationKind: "query",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "ComposerStoryEditWebMutation_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "5310420198969733";
  },
  null
);
__d(
  "ComposerStoryEditWebMutation.graphql",
  ["ComposerStoryEditWebMutation_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = [{ defaultValue: null, kind: "LocalArgument", name: "input" }],
        c = [
          {
            alias: null,
            args: [{ kind: "Variable", name: "data", variableName: "input" }],
            concreteType: "StoryEditResponsePayload",
            kind: "LinkedField",
            name: "story_edit",
            plural: !1,
            selections: [
              {
                alias: null,
                args: null,
                concreteType: "Story",
                kind: "LinkedField",
                name: "story",
                plural: !1,
                selections: [
                  {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "id",
                    storageKey: null,
                  },
                ],
                storageKey: null,
              },
            ],
            storageKey: null,
          },
        ];
      return {
        fragment: {
          argumentDefinitions: a,
          kind: "Fragment",
          metadata: null,
          name: "ComposerStoryEditWebMutation",
          selections: c,
          type: "Mutation",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: a,
          kind: "Operation",
          name: "ComposerStoryEditWebMutation",
          selections: c,
        },
        params: {
          id: b("ComposerStoryEditWebMutation_facebookRelayOperation"),
          metadata: {},
          name: "ComposerStoryEditWebMutation",
          operationKind: "mutation",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "ComposerStoryCreateWebMutation_facebookRelayOperation",
  [],
  function (a, b, c, d, e, f) {
    e.exports = "7068852136522717";
  },
  null
);
__d(
  "ComposerStoryCreateWebMutation.graphql",
  ["ComposerStoryCreateWebMutation_facebookRelayOperation"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      var a = [{ defaultValue: null, kind: "LocalArgument", name: "input" }],
        c = [
          {
            alias: null,
            args: [{ kind: "Variable", name: "data", variableName: "input" }],
            concreteType: "StoryCreateResponsePayload",
            kind: "LinkedField",
            name: "story_create",
            plural: !1,
            selections: [
              {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "story_id",
                storageKey: null,
              },
              {
                alias: null,
                args: null,
                concreteType: "Story",
                kind: "LinkedField",
                name: "story",
                plural: !1,
                selections: [
                  {
                    alias: null,
                    args: null,
                    kind: "ScalarField",
                    name: "id",
                    storageKey: null,
                  },
                ],
                storageKey: null,
              },
              {
                alias: null,
                args: null,
                kind: "ScalarField",
                name: "logging_token",
                storageKey: null,
              },
            ],
            storageKey: null,
          },
        ];
      return {
        fragment: {
          argumentDefinitions: a,
          kind: "Fragment",
          metadata: null,
          name: "ComposerStoryCreateWebMutation",
          selections: c,
          type: "Mutation",
          abstractKey: null,
        },
        kind: "Request",
        operation: {
          argumentDefinitions: a,
          kind: "Operation",
          name: "ComposerStoryCreateWebMutation",
          selections: c,
        },
        params: {
          id: b("ComposerStoryCreateWebMutation_facebookRelayOperation"),
          metadata: {},
          name: "ComposerStoryCreateWebMutation",
          operationKind: "mutation",
          text: null,
        },
      };
    })();
    e.exports = a;
  },
  null
);
__d(
  "BandicootSession",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    var g = Object.freeze({
        ACTIVE: "ACTIVE",
        INACTIVE: "INACTIVE",
        CLOSED: "CLOSED",
      }),
      h = 10 * 60 * 1e3,
      i = 14 * 24 * 60 * 60 * 1e3;
    function j(a) {
      return Date.now() - a.lastUpdated;
    }
    function a(a) {
      return !!(typeof a === "object" && a && a.lastUpdated && a.status);
    }
    function b(a) {
      if (a.status === g.CLOSED) return !1;
      else if (a.status === g.INACTIVE && j(a) > h) return !1;
      return !0;
    }
    function c(a) {
      return a.status === g.ACTIVE && j(a) > h;
    }
    function d(a) {
      return j(a) > i;
    }
    f.Status = g;
    f.isValidSession = a;
    f.isTrackedSession = b;
    f.isCrashedSession = c;
    f.isOrphanSession = d;
  },
  66
);
__d(
  "Bandicoot",
  ["invariant", "BandicootSession", "FBLogger"],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    var i = 5 * 1e3,
      j = i * 2,
      k = "Bandicoot:";
    function a() {
      try {
        var a = window.localStorage;
        if (a) {
          var b = "__test" + Date.now();
          a.setItem(b, "");
          a.removeItem(b);
        }
        return a;
      } catch (a) {
        c("FBLogger")("bandicoot").warn("Local storage is full");
        return null;
      }
    }
    var l = a();
    b = (function () {
      function a(a) {
        (this.$5 = k + a),
          (this.$4 = {}),
          (this.$1 = this.$7.bind(this)),
          (this.sessionID = null),
          (this.sessionStartTime = null),
          (this.storage = l);
      }
      var b = a.prototype;
      b.getCrashTimeData = function () {
        var a = (window.performance && window.performance.memory) || {},
          b = this.sessionStartTime;
        return {
          duration: b ? Date.now() - b : 0,
          tabs: Object.keys(this.$8()).length,
          jsHeapSizeLimit: a.jsHeapSizeLimit,
          totalJSHeapSize: a.totalJSHeapSize,
          usedJSHeapSize: a.usedJSHeapSize,
          elementsInDOM: document.getElementsByTagName("*").length,
          uri: window.location.href,
        };
      };
      b.getLogTimeData = function () {
        return { userAgent: window.navigator.userAgent };
      };
      b.logCrash = function (a, b, d) {
        c("FBLogger")("bandicoot").warn("Session %s crashed at %s", a, d);
      };
      b.logBrowserUnsupported = function () {
        c("FBLogger")("bandicoot").warn("Browser not supported");
      };
      b.logTrackingError = function () {
        c("FBLogger")("bandicoot").warn(
          "Failed to record data for current session"
        );
      };
      b.startSession = function () {
        var a = this;
        if (!this.storage) {
          this.logBrowserUnsupported();
          return;
        }
        if (this.$2) return;
        this.sessionID ||
          (this.sessionID = Math.random().toString(36).slice(2, 9));
        this.sessionStartTime || (this.sessionStartTime = Date.now());
        this.$2 = setInterval(function () {
          a.$9();
        }, i);
        this.$9();
        document.addEventListener &&
          document.addEventListener("visibilitychange", this.$1);
        this.$10();
      };
      b.endSession = function () {
        if (!this.storage) return;
        if (!this.$2) return;
        clearInterval(this.$2);
        this.$2 = null;
        this.$3 || this.$11({ status: d("BandicootSession").Status.CLOSED });
        this.sessionID = null;
        this.sessionStartTime = null;
        document.removeEventListener &&
          document.removeEventListener("visibilitychange", this.$1);
      };
      b.logKnownCrashes = function () {
        var a = this;
        if (!this.storage) return;
        if (!this.$2) {
          var b = this.$8();
          b = this.$12(b, function (b, c) {
            if (d("BandicootSession").isCrashedSession(b)) {
              a.logCrash(c, b, a.getLogTimeData());
              return null;
            } else return b;
          });
          this.$13(b);
        }
      };
      b.$14 = function () {
        var a = this.sessionID;
        a || h(0, 663);
        return a;
      };
      b.$9 = function () {
        var a = this.$8();
        this.$15(a);
        a = this.$16(a);
        this.$13(a);
      };
      b.$15 = function (a) {
        var b = this.$14(),
          c = a[b] ? a[b] : {};
        a[b] = babelHelpers["extends"]({}, c, this.getCrashTimeData(), {
          lastUpdated: Date.now(),
          status: this.$17(),
        });
      };
      b.$12 = function (a, b) {
        var c = {};
        Object.keys(a).forEach(function (e) {
          var f = a[e];
          if (
            d("BandicootSession").isValidSession(f) &&
            d("BandicootSession").isTrackedSession(f) &&
            !d("BandicootSession").isOrphanSession(f)
          ) {
            f = b(f, e);
            f && (c[e] = f);
          }
        });
        return c;
      };
      b.$16 = function (a) {
        var b = this;
        return this.$12(a, function (a, c) {
          if (d("BandicootSession").isCrashedSession(a)) {
            var e = a.loggerReportTime || 0;
            if (Date.now() - e > j)
              (a.loggerReportTime = Date.now()),
                (a.loggerReportSession = b.$14());
            else if (a.loggerReportSession == b.$14()) {
              b.logCrash(c, a, b.getLogTimeData());
              b.$4[c] = !0;
              return null;
            }
          }
          return a;
        });
      };
      b.$8 = function (a) {
        a = a || this.$5;
        var b = this.storage.getItem(a) || "{}";
        try {
          b = JSON.parse(b);
        } catch (d) {
          (b = {}),
            this.storage.removeItem(a),
            c("FBLogger")("bandicoot").catching(d).warn("Invalid JSON data");
        }
        return b;
      };
      b.$11 = function (a) {
        a.lastUpdated = Date.now();
        var b = this.$8(),
          c = this.sessionID;
        c && b[c] && (Object.assign(b[c], a), this.$13(b));
      };
      b.$13 = function (a) {
        a = JSON.stringify(a);
        try {
          this.storage.setItem(this.$5, a);
        } catch (d) {
          a = this.$6;
          var b = Date.now();
          (!a || b > a + i) && (this.logTrackingError(), (this.$6 = b));
          try {
            this.storage.removeItem(this.$5);
          } catch (a) {
            (this.$3 = !0),
              this.endSession(),
              c("FBLogger")("bandicoot")
                .catching(a)
                .warn("Removing from storage failed");
          }
        }
      };
      b.$10 = function () {
        for (var a = 0; a < this.storage.length; ++a) {
          var b = this.storage.key(a);
          if (b.indexOf(k) === 0 && b !== this.$5) {
            var c = this.$8(b),
              e = Object.keys(c).every(function (a) {
                a = c[a];
                return (
                  !d("BandicootSession").isValidSession(a) ||
                  d("BandicootSession").isOrphanSession(a)
                );
              });
            e && this.storage.removeItem(b);
          }
        }
      };
      b.$7 = function () {
        this.$11({ status: this.$17() });
      };
      b.$17 = function () {
        return document.hidden
          ? d("BandicootSession").Status.INACTIVE
          : d("BandicootSession").Status.ACTIVE;
      };
      return a;
    })();
    g["default"] = b;
  },
  98
);
__d(
  "randomShuffleSeeded",
  ["Alea"],
  function (a, b, c, d, e, f, g) {
    function a(a) {
      for (
        var b = arguments.length, d = new Array(b > 1 ? b - 1 : 0), e = 1;
        e < b;
        e++
      )
        d[e - 1] = arguments[e];
      var f = c("Alea").apply(void 0, d);
      function g(a) {
        return Math.floor(f() * a);
      }
      for (var h = a.length - 1; h > 0; h--) {
        var i = g(h + 1);
        if (i != h) {
          var j = a[i];
          a[i] = a[h];
          a[h] = j;
        }
      }
      return a;
    }
    g["default"] = a;
  },
  98
);
__d(
  "useSortCometPollOptions",
  [
    "$InternalEnum",
    "CometServerRandomSeed",
    "randomShuffleSeeded",
    "react",
    "sortBy",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    e = d("react");
    var h = e.useCallback,
      i = e.useRef,
      j = b("$InternalEnum").Mirrored(["Random", "None"]);
    function a() {
      var a = i([]);
      return h(function (b, e, f) {
        var g = b;
        if (f === j.Random) {
          var h = new Map();
          b.forEach(function (a) {
            h.set(e(a), a);
          });
          var i = [];
          a.current.forEach(function (a) {
            var b = h.get(a);
            b != null && (i.push(b), h["delete"](a));
          });
          f = Array.from(h.values());
          g = [].concat(
            i,
            c("randomShuffleSeeded")(
              c("sortBy")(f, function (a) {
                return e(a);
              }),
              d("CometServerRandomSeed").random_seed
            )
          );
          a.current = g.map(function (a) {
            return e(a);
          });
        }
        return g;
      }, []);
    }
    g.SortType = j;
    g.useSortCometPollOptions = a;
  },
  98
);
__d(
  "StoriesConstants",
  ["StoriesGating"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = { DEFAULT_SUSPENSE_CARD_INDEX: -1 };
    b = 9 / 16;
    c = { BANNER_HEIGHT: 42, BOTTOM_MARGIN: 25, COUNT_PER_PAGINATION_FETCH: 9 };
    e = 9;
    f = 2;
    var h = {
        MAX_RATING: 5,
        PADDING_SPACE_PORTION: 0.04,
        STAR_ICON_SIZE: 32,
        STAR_INLINE_PORTION: 0.55,
      },
      i = {
        NETWORK_ONLY: "network-only",
        STORE_OR_NETWORK: "store-or-network",
      };
    d = d("StoriesGating").getTileGridRowLength();
    d = { INITIAL_ROW_COUNT: 3, ITEMS_PER_ROW: d };
    var j = 3e3,
      k = 300,
      l = { COUNT_PER_PAGINATION_FETCH: 10, MAX_REACTIONS_PER_VIEWER: 5 },
      m = 6,
      n = 5,
      o = 8 / 19,
      p = {
        CREATION_END_CARD: "creation_end_card",
        EMPTY_BUCKET_ERROR: "empty_bucket_error",
        FRIENDS_STORY_OVERLAY: "friends_story_overlay",
      },
      q = 200,
      r = 250,
      s = "fb_stories",
      t = 6;
    g.CARD = a;
    g.DEFAULT_ASPECT_RATIO = b;
    g.NavList = c;
    g.NAV_PANE_TOTAL_COUNT = e;
    g.NUMBER_OF_BUCKETS_TO_PREFETCH = f;
    g.RATING_STICKER = h;
    g.RELAY_FETCH_POLICY = i;
    g.TILE_GRID = d;
    g.TIMEOUT_FOR_SERVER_TO_FINISH_WORK = j;
    g.TRANSITION_DURATION_MS = k;
    g.ViewerSheetViewerList = l;
    g.MAX_TILES_TO_SHOW = m;
    g.MAX_TILES_TO_SHOW_BIG = n;
    g.SKINNY_TILE_ASPECT_RATIO = o;
    g.VIEWER_V3_NULL_STATE = p;
    g.TOFU_TILE_HEIGHT = q;
    g.STORIES_TRAY_TILE_HEIGHT = r;
    g.STORIES_RENDER_LOCATION = s;
    g.DEFAULT_STORY_PLAY_DURATION = t;
  },
  98
);
__d(
  "HovercardLink",
  ["URI"],
  function (a, b, c, d, e, f, g) {
    function h() {
      return new (c("URI"))("/ajax/hovercard/hovercard.php");
    }
    function a(a, b) {
      return i(a, b, null);
    }
    function b(a, b) {
      return i(a, null, b);
    }
    function i(a, b, c, d) {
      return j(a, b, c, d);
    }
    function j(a, b, d, e, f) {
      f === void 0 && (f = null);
      var g = new (c("URI"))(h()).setQueryData({ id: a.id }),
        i = {};
      if (f !== null) for (var j in f) i[j] = f[j];
      (a.weakreference || e) && b && (i.group_id = b);
      d && (i.hc_location = d);
      b && (i.directed_target_id = b);
      g.addQueryData({ extragetparams: JSON.stringify(i) });
      return g;
    }
    g.getBaseURI = h;
    g.constructEndpoint = a;
    g.constructEndpointWithLocation = b;
    g.constructEndpointWithGroupAndLocation = i;
    g.constructEndpointWithGroupLocationAndExtraParams = j;
  },
  98
);
__d(
  "Facepile.react",
  [
    "cx",
    "fbt",
    "ix",
    "HovercardLink",
    "Image.react",
    "Link.react",
    "List.react",
    "createReactClass_DEPRECATED",
    "intlSummarizeNumber",
    "joinClasses",
    "react",
  ],
  function (a, b, c, d, e, f, g, h, i, j) {
    var k = d("react"),
      l = { small: 24, medium: 32, large: 50 };
    a = c("createReactClass_DEPRECATED")({
      displayName: "Facepile",
      defaultProps: {
        moreColor: "blue",
        moreCount: 0,
        showHovercard: !1,
        tooltipPosition: "above",
        showToolTip: !0,
        spacing: "none",
      },
      _onFaceClick: function (a, b) {
        this.props.onFaceClick && this.props.onFaceClick(a, b);
      },
      componentDidMount: function () {
        this.props.onComponentDidMount && this.props.onComponentDidMount();
      },
      getPicSize: function () {
        return l[this.props.size] || this.props.size;
      },
      renderFace: function (a, b) {
        var e = this.getPicSize(),
          f = d("HovercardLink")
            .constructEndpoint({ id: a.uniqueID })
            .toString();
        return k.jsx(
          "li",
          {
            className: "_43q7",
            onClick: this._onFaceClick.bind(this, a, b),
            children: k.jsx(c("Link.react"), {
              "aria-label": a.name,
              className: "_2rt_ link",
              "data-hover": this.props.showHovercard ? null : "tooltip",
              "data-hovercard": this.props.showHovercard ? f : null,
              "data-ignoreclass": "_2rt_",
              "data-tooltip-alignh": "left",
              "data-tooltip-content": a.name,
              "data-tooltip-position": this.props.tooltipPosition,
              href: a.URL,
              children: k.jsx(c("Image.react"), {
                src: a.profilePicURI,
                width: e,
                height: e,
                className: "img",
              }),
            }),
          },
          a.uniqueID
        );
      },
      renderMore: function () {
        if (!this.props.moreCount) return null;
        var a =
            this.props.numFaces != null &&
            this.props.numFaces <= this.props.profiles.length
              ? this.props.moreCount + 1
              : this.props.moreCount,
          b = c("intlSummarizeNumber")(a, 0),
          d = b.length,
          e;
        a === 0 ||
        (this.props.size === "small" && d > 2) ||
        (this.props.size === 28 && d > 2) ||
        (this.props.size === "medium" && d > 3) ||
        (this.props.size === "large" && d > 6)
          ? (e = k.jsx(c("Image.react"), { src: j("97502") }))
          : (e = "+" + b);
        var f;
        (this.props.showToolTip === void 0 || this.props.showToolTip === !0) &&
          (a === 1
            ? (f = i._("1 other person"))
            : (f = i._("{num} other people", [i._param("num", a)])));
        b = c("joinClasses")(
          "_43q8 _43q7" +
            (d < 2 ? " _43qa" : "") +
            (d === 2 ? " _43qb" : "") +
            (d === 3 ? " _43qd" : "") +
            (d > 3 ? " _43qe" : "") +
            (this.props.moreColor === "blue" ? " _49c8" : "") +
            (this.props.moreColor === "gray" ? " _49cb" : "")
        );
        return k.jsx("li", {
          className: b,
          children: k.jsx("a", {
            "data-hover": f ? "tooltip" : null,
            "data-tooltip-position": f ? "right" : null,
            "data-tooltip-content": f,
            ajaxify: this.props.moreDialogLink || this.props.morePageLink,
            href: this.props.morePageLink,
            role: "button",
            rel: this.props.moreDialogLink ? "dialog" : null,
            children: e,
          }),
        });
      },
      render: function () {
        var a = this.props.spacing || this.defaultProps.spacing;
        a = c("joinClasses")(
          this.props.className,
          "_43qm" +
            (this.props.size == 28 ? " _3cxu" : "") +
            (this.props.size == "small" ? " _43q9" : "") +
            (this.props.size == "medium" ? " _43qc" : "") +
            (this.props.size == "large" ? " _43qf" : "") +
            (a != this.defaultProps.spacing ? " _4nab" : "")
        );
        var b =
          this.props.numFaces == null
            ? this.props.profiles
            : this.props.profiles.slice(
                0,
                this.props.moreCount
                  ? this.props.numFaces - 1
                  : this.props.numFaces
              );
        return k.jsx("div", {
          className: a,
          style: this.props.style,
          children: k.jsxs(c("List.react"), {
            className: "_4cg3",
            direction: "horizontal",
            spacing: this.props.spacing || "none",
            border: "none",
            children: [b.map(this.renderFace), this.renderMore()],
          }),
        });
      },
    });
    b = a;
    g["default"] = b;
  },
  98
);
__d(
  "FileInput",
  [
    "cx",
    "ArbiterMixin",
    "DOM",
    "DOMClone",
    "Event",
    "Focus",
    "Keys",
    "UserAgent_DEPRECATED",
    "mixin",
  ],
  function (a, b, c, d, e, f, g, h) {
    var i = d("UserAgent_DEPRECATED").ie();
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, d, e) {
        var f;
        f = a.call(this) || this;
        f.container = b;
        f.control = d;
        b = c("DOM").scry(f.container, "a")[0];
        b && b.removeAttribute("href");
        d = c("DOM").create("div", { className: "_3jk" }, e);
        c("DOM").appendContent(f.control, d);
        f._boundHandleChange = f._handleChange.bind(
          babelHelpers.assertThisInitialized(f)
        );
        i &&
          (f._boundHandleIEKeyDown = f._handleIEKeyDown.bind(
            babelHelpers.assertThisInitialized(f)
          ));
        f._setInputElement(e);
        return f;
      }
      var e = b.prototype;
      e.getValue = function () {
        return this.input.value;
      };
      e.getInput = function () {
        return this.input;
      };
      e.getContainer = function () {
        return this.container;
      };
      e.getControl = function () {
        return this.control;
      };
      e.clear = function () {
        this.input.value = "";
        if (this.input.value !== "") {
          var a = d("DOMClone").deepClone(this.input);
          c("DOM").replace(this.input, a);
          this._setInputElement(a);
        }
      };
      e.destroy = function () {
        this._focus.remove(),
          (this._focus = null),
          this._listener.remove(),
          (this._listener = null),
          i &&
            (this._IEKeyDownListener.remove(),
            (this._IEKeyDownListener = null)),
          (this.container = null),
          (this.control = null),
          (this.input = null);
      };
      e._setInputElement = function (a) {
        (this.input = a),
          this._focus && this._focus.remove(),
          (this._focus = d("Focus").relocate(a, this.control)),
          this._listener && this._listener.remove(),
          (this._listener = c("Event").listen(
            a,
            "change",
            this._boundHandleChange
          )),
          i &&
            (this._IEKeyDownListener && this._IEKeyDownListener.remove(),
            (this._IEKeyDownListener = c("Event").listen(
              a,
              "keydown",
              this._boundHandleIEKeyDown
            )));
      };
      e._handleChange = function (a) {
        this.inform("change", a);
        if (this.input) {
          var b = this.input.form;
          b && i < 9 && c("Event").fire(b, "change", a);
        }
      };
      e._handleIEKeyDown = function (a) {
        if (a.keyCode === c("Keys").RETURN) {
          a.preventDefault();
          a = document.createEvent("MouseEvents");
          a.initEvent("click", !0, !0);
          this.input.dispatchEvent(a);
        }
      };
      return b;
    })(c("mixin")(c("ArbiterMixin")));
    g["default"] = a;
  },
  98
);
__d(
  "FileInput.react",
  [
    "cx",
    "invariant",
    "FileInput",
    "InlineBlock.react",
    "ReactDOM",
    "joinClasses",
    "nullthrows",
    "react",
  ],
  function (a, b, c, d, e, f, g, h, i) {
    var j = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, e;
        for (var f = arguments.length, g = new Array(f), h = 0; h < f; h++)
          g[h] = arguments[h];
        return (
          ((b = e = a.call.apply(a, [this].concat(g)) || this),
          (e.containerRef = j.createRef()),
          (e.fileInputRef = j.createRef()),
          (e.getFileInput = function () {
            return c("nullthrows")(e.$1);
          }),
          (e.focus = function () {
            var a = d("ReactDOM").findDOMNode(e.fileInputRef.current);
            a instanceof HTMLInputElement && !a.disabled && a.focus();
          }),
          b) || babelHelpers.assertThisInitialized(e)
        );
      }
      var e = b.prototype;
      e.render = function () {
        var a = c("joinClasses")("_m", this.props.containerClassName),
          b = j.jsx(
            "input",
            babelHelpers["extends"]({}, this.props, {
              type: "file",
              className: c("joinClasses")(this.props.className, "_n"),
              ref: this.fileInputRef,
              children: void 0,
            })
          );
        if (this.props.display === "block")
          return j.jsxs("div", {
            className: a,
            ref: this.containerRef,
            children: [this.props.children, b],
          });
        else if (this.props.display === "inline-block")
          return j.jsxs(c("InlineBlock.react"), {
            className: a,
            ref: this.containerRef,
            children: [this.props.children, b],
          });
        else
          return j.jsxs("span", {
            className: a,
            ref: this.containerRef,
            children: [this.props.children, b],
          });
      };
      e.componentDidMount = function () {
        var a = d("ReactDOM").findDOMNode(this.fileInputRef.current),
          b = d("ReactDOM").findDOMNode(this.containerRef.current);
        if (!(a instanceof HTMLInputElement) || !(b instanceof HTMLElement))
          return;
        var e = b.firstChild;
        e instanceof HTMLAnchorElement && e.setAttribute("rel", "ignore");
        e instanceof HTMLElement || i(0, 21969);
        this.$1 = new (c("FileInput"))(b, e, a);
      };
      e.componentWillUnmount = function () {
        this.$1 && (this.$1.destroy(), (this.$1 = null));
      };
      return b;
    })(j.Component);
    a.defaultProps = { display: "inline-block" };
    g["default"] = a;
  },
  98
);
__d(
  "createPlainBlocksFromText",
  [
    "CharacterMetadata",
    "ContentBlock",
    "generateRandomKey",
    "immutable",
    "sanitizeDraftText",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      return a.map(function (a) {
        a = c("sanitizeDraftText")(a);
        var b = a.length;
        return new (c("ContentBlock"))({
          key: c("generateRandomKey")(),
          text: a,
          type: "unstyled",
          characterList: c("immutable").List(
            c("immutable").Repeat(c("CharacterMetadata").EMPTY, b)
          ),
        });
      });
    }
    g["default"] = a;
  },
  98
);
__d(
  "createEditorStateWithRanges",
  [
    "invariant",
    "ContentState",
    "DraftModifier",
    "EditorState",
    "SelectionState",
    "UnicodeUtils",
    "createPlainBlocksFromText",
  ],
  function (a, b, c, d, e, f, g, h) {
    function a(a) {
      var b = a.addEntityToContentStateFn,
        e = a.allowUndo,
        f = a.decorator,
        g = a.splitIntoBlocks,
        i = a.text;
      a = a.ranges;
      g === void 0 && (g = !0);
      i || (i = "");
      var j = [],
        k = [];
      g = g ? i.split(/(\r\n?|\n)/g) : [i];
      var l = 0;
      g.forEach(function (a, b) {
        b % 2 === 0 && (j.push(a), k.push(l)),
          (l += d("UnicodeUtils").strlen(a));
      });
      var m = c("createPlainBlocksFromText")(j);
      i = c("ContentState").createFromBlockArray(m);
      if (a && a.length && b) {
        var n = b;
        i = a.reduce(function (a, b, e) {
          e = n(b, a);
          a = e.getLastCreatedEntityKey();
          var f = b.offset;
          b = f + b.length;
          var g, i, j, l;
          for (var o = 0; o < k.length; o++) {
            var p = k[o],
              q = k[o + 1],
              r = q === void 0;
            (r || (f >= p && f < q)) && ((g = m[o]), (i = f - p));
            if (r || (b >= p && b < q)) {
              j = m[o];
              l = b - p;
              break;
            }
          }
          (g && j) || h(0, 1022);
          r = d("UnicodeUtils").substr(g.getText(), 0, i);
          q = r.length;
          p = d("UnicodeUtils").substr(j.getText(), 0, l);
          b = p.length;
          f = new (c("SelectionState"))({
            anchorKey: g.getKey(),
            anchorOffset: q,
            focusKey: j.getKey(),
            focusOffset: b,
            isBackward: !1,
            hasFocus: !1,
          });
          o = d("DraftModifier").applyEntity(e, f, a);
          return o;
        }, i);
      }
      g = c("EditorState").createWithContent(i, f);
      e === !1 && (g = c("EditorState").set(g, { allowUndo: !1 }));
      return g;
    }
    g["default"] = a;
  },
  98
);
__d(
  "EmoticonSpan.react",
  ["cx", "EmoticonsList", "FBEmojiResource", "react"],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react"),
      j = 16;
    function a(a) {
      var b = a.children,
        e = a.contentState,
        f = a.entityKey;
      a = (a = a.size) != null ? a : j;
      if (f == null) return null;
      e = e.getEntity(f).getData();
      f = d("EmoticonsList").emoji[e.type];
      e = new (c("FBEmojiResource"))(f);
      f = e.getImageURL(a);
      return f == null
        ? null
        : i.jsx("span", {
            className: "_3gl1 _5zz4",
            "data-testid": void 0,
            style: {
              backgroundImage: "url(" + f + ")",
              backgroundSize: a + "px " + a + "px",
              height: a + "px",
              width: a + "px",
            },
            children: i.jsx("span", { className: "_ncl", children: b }),
          });
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a;
  },
  98
);
__d(
  "ExclamationStarsConstants",
  ["fbt"],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    c = "Illegal input units";
    d = h._("Data transaction failed. Please refresh the Page to try again.");
    function a(a) {
      return h._("You must send at least {stars} stars.", [
        h._param("stars", a),
      ]);
    }
    function b(a) {
      return h._(
        "You need to purchase more Stars to send {selected_send_amount} Stars.",
        [h._param("selected_send_amount", a)]
      );
    }
    g.ILLEGAL_INPUT_EXCEPTION = c;
    g.TRANSACTION_ERROR_MESSAGE = d;
    g.getUnderMinimumErrorMessage = a;
    g.getOverBalanceErrorMessage = b;
  },
  98
);
__d(
  "ExclamationStarsDispatcher.react",
  ["ExplicitRegistrationReactDispatcher"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = new (c("ExplicitRegistrationReactDispatcher"))({ strict: !0 });
    b = a;
    g["default"] = b;
  },
  98
);
__d(
  "ExclamationStarsStore.react",
  [
    "invariant",
    "DigitalContentWalletTypedLogger",
    "ExclamationStarsConstants",
    "ExclamationStarsDispatcher.react",
    "FluxReduceStore",
    "immutable",
  ],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    var i = (function (b) {
      babelHelpers.inheritsLoose(a, b);
      function a() {
        return b.apply(this, arguments) || this;
      }
      return a;
    })(
      c("immutable").Record({
        balance: null,
        spendingUnits: 0,
        starsMetadata: null,
        minimumTip: 10,
        isMetadataLoading: !0,
        isBalanceLoading: !0,
        backgroundColor: null,
        errorMessage: null,
        isExclamationStarsEnabled: !1,
        isFlyoutStarsSelected: !1,
      })
    );
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, e;
        for (var f = arguments.length, g = new Array(f), h = 0; h < f; h++)
          g[h] = arguments[h];
        return (
          ((b = e = a.call.apply(a, [this].concat(g)) || this),
          (e.reduce = function (a, b) {
            switch (b.actionType) {
              case "EXCLAMATION_STARS_DETECTED":
                if (!a.isExclamationStarsEnabled) return a;
                var f = e.$ExclamationStarsStore1(a, b.spendingUnits),
                  g = e.$ExclamationStarsStore2(a, b.spendingUnits);
                new (c("DigitalContentWalletTypedLogger"))()
                  .setEvent("wallet_shortcut_spend_decorated")
                  .setUnits(b.spendingUnits)
                  .setErrorMsg(
                    g != null
                      ? d("ExclamationStarsConstants").ILLEGAL_INPUT_EXCEPTION
                      : null
                  )
                  .log();
                return a
                  .set("spendingUnits", b.spendingUnits)
                  .set("backgroundColor", f)
                  .set("errorMessage", g);
              case "EXCLAMATION_STARS_UNDETECTED":
                return a.spendingUnits > 0
                  ? a.set("spendingUnits", 0).set("errorMessage", null)
                  : a;
              case "COMPLETE_FETCH_EXCLAMATION_STARS_METADATA":
                f = a
                  .set("starsMetadata", b.starsMetadata)
                  .set("minimumTip", b.minimumTip)
                  .set("isMetadataLoading", !1);
                if (a.spendingUnits !== 0) {
                  g = e.$ExclamationStarsStore1(f, f.spendingUnits);
                  var h = e.$ExclamationStarsStore2(a, f.spendingUnits);
                  f = f.set("backgroundColor", g).set("errorMessage", h);
                }
                return f;
              case "START_FETCH_BALANCE":
                return a.set("isBalanceLoading", !0);
              case "COMPLETE_FETCH_BALANCE":
                return a.set("balance", b.balance).set("isBalanceLoading", !1);
              case "HANDLE_TRANSACTION_ERROR":
                new (c("DigitalContentWalletTypedLogger"))()
                  .setEvent("wallet_data_transaction_exception")
                  .setPayeeID(b.payeeId)
                  .log();
                return a.set(
                  "errorMessage",
                  d("ExclamationStarsConstants").TRANSACTION_ERROR_MESSAGE
                );
              case "ENABLE_EXCLAMATION_STARS":
                return a.set("isExclamationStarsEnabled", !0);
              case "FLYOUT_STARS_SELECTED":
                return a.set("isFlyoutStarsSelected", !0);
              case "FLYOUT_STARS_UNSELECTED":
                return a.set("isFlyoutStarsSelected", !1);
              default:
                return a;
            }
          }),
          b) || babelHelpers.assertThisInitialized(e)
        );
      }
      var e = b.prototype;
      e.getInitialState = function () {
        return new i();
      };
      e.getSpendingUnits = function () {
        return this.getState().get("spendingUnits");
      };
      e.isExclamationStarsDetected = function () {
        return this.getState().get("spendingUnits") > 0;
      };
      e.getBackgroundColor = function () {
        return this.getState().get("backgroundColor");
      };
      e.isLoading = function () {
        return (
          this.getState().get("isMetadataLoading") ||
          this.getState().get("isBalanceLoading")
        );
      };
      e.getErrorMessage = function () {
        return this.getState().get("errorMessage");
      };
      e.isExclamationStarsEnabled = function () {
        return this.getState().get("isExclamationStarsEnabled");
      };
      e.isFlyoutStarsSelected = function () {
        return this.getState().get("isFlyoutStarsSelected");
      };
      e.getBalance = function () {
        return this.getState().get("balance");
      };
      e.getMinimumTip = function () {
        return this.getState().get("minimumTip");
      };
      e.$ExclamationStarsStore1 = function (a, b) {
        a = a.starsMetadata;
        if (a != null) {
          if (b <= a[0].min) return a[0].color;
          for (var c = 0; c < a.length; c++)
            if (b <= a[c].max) return a[c].color;
        }
        return null;
      };
      e.$ExclamationStarsStore2 = function (a, b) {
        if (this.isLoading()) return null;
        a.balance != null || h(0, 15040);
        if (b < a.minimumTip)
          return d("ExclamationStarsConstants").getUnderMinimumErrorMessage(
            a.minimumTip
          );
        else if (b > a.balance)
          return d("ExclamationStarsConstants").getOverBalanceErrorMessage(b);
        return null;
      };
      return b;
    })(c("FluxReduceStore"));
    a.__moduleID = f.id;
    b = new a(c("ExclamationStarsDispatcher.react"));
    g["default"] = b;
  },
  98
);
__d(
  "ExclamationStarsSpan.react",
  [
    "cx",
    "BUISpinner_DEPRECATED.react",
    "ExclamationStarsStore.react",
    "FluxContainer",
    "XUIAmbientNUX.react",
    "react",
  ],
  function (a, b, c, d, e, f, g, h) {
    var i = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, c;
        for (var d = arguments.length, e = new Array(d), f = 0; f < d; f++)
          e[f] = arguments[f];
        return (
          ((b = c = a.call.apply(a, [this].concat(e)) || this),
          (c.state = {
            backgroundColor: null,
            isLoading: !0,
            errorMessage: null,
            isExclamationStarsEnabled: !1,
            isFlyoutStarsSelected: !1,
            tooltipShown: !0,
          }),
          (c.onTooltipCloseButtonClick = function () {
            c.setState({ tooltipShown: !1 });
          }),
          b) || babelHelpers.assertThisInitialized(c)
        );
      }
      b.getStores = function () {
        return [c("ExclamationStarsStore.react")];
      };
      b.calculateState = function (a) {
        a = c("ExclamationStarsStore.react").getState();
        var b = a.backgroundColor,
          d = a.errorMessage,
          e = a.isExclamationStarsEnabled;
        a = a.isFlyoutStarsSelected;
        var f = c("ExclamationStarsStore.react").isLoading();
        return {
          backgroundColor: b,
          isLoading: f,
          errorMessage: d,
          isExclamationStarsEnabled: e,
          isFlyoutStarsSelected: a,
          tooltipShown: !0,
        };
      };
      var d = b.prototype;
      d.render = function () {
        var a = this;
        return !this.state.isExclamationStarsEnabled ||
          this.state.isFlyoutStarsSelected ||
          this.state.backgroundColor == null
          ? this.props.children
          : i.jsxs("span", {
              children: [
                this.state.isLoading
                  ? i.jsx("span", {
                      children: i.jsx(c("BUISpinner_DEPRECATED.react"), {
                        center: !1,
                        size: "small",
                      }),
                    })
                  : i.jsx(
                      "span",
                      babelHelpers["extends"]({}, this.props, {
                        ref: "decorator",
                        "data-offset-key": this.props.offsetKey,
                        className: "_7v3u",
                        spellCheck: !1,
                        style: { backgroundColor: this.state.backgroundColor },
                        children: this.props.children,
                      })
                    ),
                i.jsx(c("XUIAmbientNUX.react"), {
                  contextRef: function () {
                    return a.refs.decorator;
                  },
                  position: "above",
                  alignment: "left",
                  onCloseButtonClick: this.onTooltipCloseButtonClick,
                  shown:
                    this.state.tooltipShown && this.state.errorMessage != null,
                  children: this.state.errorMessage,
                }),
              ],
            });
      };
      return b;
    })(i.Component);
    b = c("FluxContainer").create(a);
    g["default"] = b;
  },
  98
);
__d(
  "HashtagSpan.react",
  ["cx", "react"],
  function (a, b, c, d, e, f, g, h) {
    var i = d("react");
    function a(a) {
      return i.jsx("span", {
        "data-offset-key": a.offsetKey,
        dir: a.dir,
        className: "_5zk7",
        spellCheck: !1,
        children: a.children,
      });
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a;
  },
  98
);
__d(
  "MentionSpan.react",
  ["cx", "react"],
  function (a, b, c, d, e, f, g, h) {
    var i = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return a.apply(this, arguments) || this;
      }
      var c = b.prototype;
      c.render = function () {
        var a = this.props,
          b = a.children,
          c = a.offsetKey;
        a.blockKey;
        a.contentState;
        a.decoratedText;
        a.end;
        a.entityKey;
        a.start;
        a = babelHelpers.objectWithoutPropertiesLoose(a, [
          "children",
          "offsetKey",
          "blockKey",
          "contentState",
          "decoratedText",
          "end",
          "entityKey",
          "start",
        ]);
        return i.jsx(
          "span",
          babelHelpers["extends"]({}, a, {
            "data-offset-key": c,
            className: "_247o",
            spellCheck: !1,
            children: b,
          })
        );
      };
      return b;
    })(i.Component);
    g["default"] = a;
  },
  98
);
__d(
  "WeakMentionSpan.react",
  ["cx", "react"],
  function (a, b, c, d, e, f, g, h) {
    var i = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return a.apply(this, arguments) || this;
      }
      var c = b.prototype;
      c.render = function () {
        return i.jsx("span", {
          "data-offset-key": this.props.offsetKey,
          className: "_whq",
          spellCheck: !1,
          children: this.props.children,
        });
      };
      return b;
    })(i.Component);
    g["default"] = a;
  },
  98
);
__d(
  "ExclamationStarsActions.react",
  ["ExclamationStarsDispatcher.react"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      c("ExclamationStarsDispatcher.react").dispatch({
        actionType: "EXCLAMATION_STARS_DETECTED",
        spendingUnits: a,
      });
    }
    function b() {
      c("ExclamationStarsDispatcher.react").dispatch({
        actionType: "EXCLAMATION_STARS_UNDETECTED",
      });
    }
    function d(a, b) {
      c("ExclamationStarsDispatcher.react").dispatch({
        actionType: "COMPLETE_FETCH_EXCLAMATION_STARS_METADATA",
        starsMetadata: a,
        minimumTip: b,
      });
    }
    function e(a) {
      c("ExclamationStarsDispatcher.react").dispatch({
        actionType: "COMPLETE_FETCH_BALANCE",
        balance: a,
      });
    }
    function f() {
      c("ExclamationStarsDispatcher.react").dispatch({
        actionType: "START_FETCH_BALANCE",
      });
    }
    function h(a) {
      c("ExclamationStarsDispatcher.react").dispatch({
        actionType: "HANDLE_TRANSACTION_ERROR",
        payeeId: a,
      });
    }
    function i() {
      c("ExclamationStarsDispatcher.react").dispatch({
        actionType: "ENABLE_EXCLAMATION_STARS",
      });
    }
    function j() {
      c("ExclamationStarsDispatcher.react").dispatch({
        actionType: "FLYOUT_STARS_SELECTED",
      });
    }
    function k() {
      c("ExclamationStarsDispatcher.react").dispatch({
        actionType: "FLYOUT_STARS_UNSELECTED",
      });
    }
    g.exclamationStarsDetected = a;
    g.exclamationStarsUndetected = b;
    g.completeFetchExclamationStarsMetadata = d;
    g.completeFetchBalance = e;
    g.startFetchBalance = f;
    g.handleTransactionError = h;
    g.enableExclamationStars = i;
    g.flyoutStarsSelected = j;
    g.flyoutStarsUnselected = k;
  },
  98
);
__d(
  "getExclamationStarsRegex",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    function a() {
      var a = "\\s|^|$",
        b = "[!\\u0021]",
        c = "[1-9][0-9]{1,7}";
      a = "(" + a + ")(" + b + ")(" + c + ")";
      return new RegExp(a);
    }
    f["default"] = a;
  },
  66
);
__d(
  "getUFIExclamationStarsStrategy",
  ["ExclamationStarsActions.react", "getExclamationStarsRegex"],
  function (a, b, c, d, e, f, g) {
    var h = c("getExclamationStarsRegex")();
    function a(a, b) {
      a = a.getText();
      a = h.exec(a);
      var c, e;
      a != null
        ? ((c = a.index + a[1].length),
          (e = a[2]),
          (a = a[3]),
          d("ExclamationStarsActions.react").exclamationStarsDetected(
            parseInt(a, 10)
          ),
          b(c, c + e.length + a.length))
        : d("ExclamationStarsActions.react").exclamationStarsUndetected();
    }
    g["default"] = a;
  },
  98
);
__d(
  "getMentionsInputDecorator",
  [
    "CompositeDraftDecorator",
    "EmoticonSpan.react",
    "ExclamationStarsSpan.react",
    "HashtagSpan.react",
    "MentionSpan.react",
    "WeakMentionSpan.react",
    "getEntityMatcher",
    "getHashtagMatches",
    "getUFIExclamationStarsStrategy",
  ],
  function (a, b, c, d, e, f, g) {
    var h;
    function a() {
      if (!h) {
        var a = [
          {
            strategy: c("getEntityMatcher")(function (a) {
              var b = a.getData();
              return a.getType() === "MENTION" && b && b.isWeak;
            }),
            component: c("WeakMentionSpan.react"),
          },
          {
            strategy: c("getEntityMatcher")(function (a) {
              return a.getType() === "MENTION";
            }),
            component: c("MentionSpan.react"),
          },
          {
            strategy: c("getEntityMatcher")(function (a) {
              return a.getType() === "EMOTICON";
            }),
            component: c("EmoticonSpan.react"),
          },
          {
            strategy: c("getHashtagMatches"),
            component: c("HashtagSpan.react"),
          },
          {
            strategy: c("getUFIExclamationStarsStrategy"),
            component: c("ExclamationStarsSpan.react"),
          },
        ];
        h = new (c("CompositeDraftDecorator"))(a);
      }
      return h;
    }
    g["default"] = a;
  },
  98
);
__d(
  "MentionsUtils",
  ["createEditorStateWithRanges", "getMentionsInputDecorator"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = /@\[([0-9;]+):((?:[^\\\]]|\\.)*)\]/g;
    function i(a) {
      a = a;
      var b = Array.from(a),
        c = b
          .map(function (a) {
            return a.length > 1 ? "_" : a;
          })
          .join(""),
        d = [],
        e;
      while ((e = h.exec(c))) {
        var f = {
          uid: e[1],
          text: e[2],
          offset: e.index,
          length: e[2].length,
          weakreference: !1,
          entity: { uid: e[1], weakreference: !1 },
        };
        d.push(f);
        c = c.substr(0, f.offset) + f.text + c.substr(f.offset + e[0].length);
        a =
          b.slice(0, f.offset).join("") +
          f.text +
          b.slice(f.offset + e[0].length).join("");
        b = Array.from(a);
        h.lastIndex = f.offset + f.length;
      }
      return { ranges: d, text: a };
    }
    function a(a) {
      a = i(a);
      var b = a.ranges;
      a = a.text;
      return c("createEditorStateWithRanges")({
        text: a,
        ranges: b,
        decorator: c("getMentionsInputDecorator")(),
        addEntityToContentStateFn: function (a, b) {
          a = a.entity;
          return b.createEntity("MENTION", "IMMUTABLE", {
            id: a.uid,
            isWeak: a.weakreference,
          });
        },
      });
    }
    g.parseMessageMentions = i;
    g.createMessageEditorStateWithText = a;
  },
  98
);
__d(
  "ProfileBrowserLink",
  ["URI"],
  function (a, b, c, d, e, f, g) {
    var h = "/ajax/browser/dialog/",
      i = "/browse/",
      j = function (a, b, d) {
        return new (c("URI"))(a + b).setQueryData(d);
      };
    function a(a, b) {
      return j(i, a, b);
    }
    function b(a, b) {
      return j(h, a, b);
    }
    g.constructPageURI = a;
    g.constructDialogURI = b;
  },
  98
);
__d(
  "ProfileBrowserTypes",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      FRIEND_CHECKINS: "friendcheckins",
      FRIENDED_FANS_OF: "friended_fans_of",
      GROUP_FRIEND_MEMBERS: "group_friend_members",
      GROUP_JOIN_REQUESTERS_FRIENDS_IN_GROUP:
        "group_join_requesters_friends_in_group",
      GROUP_MEMBERS: "group_members",
      GROUP_MESSAGE_VIEWERS: "group_message_viewers",
      LIKES: "likes",
      LIVE_VIDEO_VIEWERS: "live_video_viewers",
      MUTUAL_FRIENDS: "mutual_friends",
      OPTION_VOTERS: "option_voters",
      PAGE_FEATURED_ADMINS: "featured_admins",
      WORK_ADMIN_GROUP_ADMINS: "work_admin_group_admins",
      WORK_ADMIN_GROUP_MEMBERS: "work_admin_group_members",
    });
    f["default"] = a;
  },
  66
);
__d(
  "XUIDotsButton.react",
  ["cx", "fbt", "XUIAbstractGlyphButton.react", "joinClasses", "react"],
  function (a, b, c, d, e, f, g, h, i) {
    var j = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return a.apply(this, arguments) || this;
      }
      var d = b.prototype;
      d.render = function () {
        var a = this.props,
          b = a.label,
          d = a.shade,
          e = a.size;
        a = a.tooltip;
        e =
          (e === "small" ? "_xw0" : "") +
          (e === "medium" ? " _xw1" : "") +
          (e === "large" ? " _6yh8" : "") +
          (d === "light" ? " _xw7" : "") +
          (d === "dark" ? " _xw9" : "");
        d = this.props.title;
        !this.props.title && !a && (d = b);
        return j.jsx(
          c("XUIAbstractGlyphButton.react"),
          babelHelpers["extends"]({}, this.props, {
            label: b,
            title: d,
            "data-hover": a && "tooltip",
            "data-tooltip-alignh": a && "center",
            "data-tooltip-content": a,
            className: c("joinClasses")(this.props.className, e),
          })
        );
      };
      return b;
    })(j.Component);
    a.defaultProps = { label: i._("Manage"), size: "small", shade: "dark" };
    g["default"] = a;
  },
  98
);
__d(
  "BrandedContentSharedToSponsorStatus",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({ NOT_SHARED: 0, ALL_SHARED: 1 });
    f["default"] = a;
  },
  66
);
__d(
  "BrandedContentSponsorRelationship",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      WITH: 0,
      PAID_RELATIONSHIP_WITH: 1,
      PRESENTED_BY: 2,
      SOCIAL_TAGGING: 3,
      SUPPORT: 4,
      BRAND_INLINE_AD_WITHOUT_CREATOR_PAGE: 5,
      CREATOR_INLINE_AD_WITHOUT_SPONSOR_PAGE: 6,
      SPONSORSHIP: 7,
    });
    f["default"] = a;
  },
  66
);
__d(
  "ComposerEditCallsite",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      FB_FEED: "fb_feed",
      TIMELINE: "timeline",
      DRAFTS_DASH: "drafts_dash",
      MARKETPLACE: "marketplace",
      PAGE_CONTENT_TAB: "page_content_tab",
      PERMALINK: "permalink",
      GROUP_MALL: "group_mall",
      PAGES: "pages",
      REP_TAGGING: "rep_tagging",
      CREATOR_STUDIO_CONTENT_LIBRARY: "creator_studio_content_library",
      CIVIC_CTA: "civic_cta",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ComposerPublishType",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      FEED_INSERT: 1,
      DIALOG: 2,
      REPLACE_COMPOSER: 3,
      INSERT_IN_DIALOG: 4,
      PAGE_CONTENT_TAB: 5,
    });
    f["default"] = a;
  },
  66
);
__d(
  "ComposerPublisherSupportedParameters",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      ACTION_TYPE_ID: "action_type_id",
      ANIMATED_IMAGE: "animated_image",
      ASKED_FUN_FACT_PROMPT_DATA: "asked_fun_fact_prompt_data",
      ATTACHMENT: "attachment",
      BACKDATED_DATE: "backdated_date",
      CHARITY_ID: "charity_id",
      COMPOSER_ATTACHMENT_SELL_AUDIENCE_TARGET_IDS:
        "composer_attachment_sell_audience_target_ids",
      COMPOSER_ATTACHMENT_SELL_CONDITION: "composer_attachment_sell_condition",
      COMPOSER_ATTACHMENT_SELL_CURRENCY: "composer_attachment_sell_currency",
      COMPOSER_ATTACHMENT_SELL_LOCATION_PAGE_ID:
        "composer_attachment_sell_location_page_id",
      COMPOSER_ATTACHMENT_SELL_PRICE: "composer_attachment_sell_price",
      COMPOSER_ATTACHMENT_SELL_PICKUP_NOTE:
        "composer_attachment_sell_pickup_note",
      COMPOSER_ATTACHMENT_SELL_TITLE: "composer_attachment_sell_title",
      COMPOSER_CUSTOM_ACCESSIBILITY_CAPTION:
        "composer_custom_accessibility_caption",
      COMPOSER_ENTRY_POINT: "composer_entry_point",
      COMPOSER_ENTRY_TIME: "composer_entry_time",
      COMPOSER_HAS_CROP: "composer_has_crop",
      COMPOSER_HAS_FILTER: "composer_has_filter",
      COMPOSER_SESSION_DURATION: "composer_session_duration",
      COMPOSER_SESSION_ID: "composer_session_id",
      COMPOSER_SOURCE_SURFACE: "composer_source_surface",
      COMPOSER_TEXT_BLOCK_DATA: "block_data",
      COMPOSER_TEXT_BLOCK_DEPTHS: "block_depths",
      COMPOSER_TEXT_BLOCK_TYPES: "block_types",
      COMPOSER_TEXT_BLOCKS: "blocks",
      COMPOSER_TEXT_ENTITIES: "entities",
      COMPOSER_TEXT_INLINE_STYLES: "inline_styles",
      COMPOSER_UNPUBLISHED_PHOTO: "composer_unpublished_photo",
      COMPOSER_STICKER: "composer_sticker",
      COMPOSER_TEXT_OVERLAY: "composer_text_overlay",
      COMPOSER_TYPE: "composer_type",
      COMPOSERTAGS_CITY: "composertags_city",
      COMPOSERTAGS_PLACE: "composertags_place",
      COMPOSERTAGS_PLACE_NAME: "composertags_place_name",
      COMPOSERTAGS_SPONSORS: "composertags_sponsors",
      COMPOSERTAGS_WITH: "composertags_with",
      DELIGHT_RANGES: "delight_ranges",
      DETECTION_ANALYTICS_DATA: "detection_analytics_data",
      DIRECT_SHARE_STATUS: "direct_share_status",
      DRAFT: "draft",
      EDIT_ACTION_TYPE_ID: "edit_action_type_id",
      EDIT_ALBUM_ID: "edit_album_id",
      EDIT_ATTACHMENT: "edit_attachment",
      EDIT_COMPOSER_SESSION_ID: "edit_composer_session_id",
      EDIT_COMPOSERTAGS_CITY: "edit_composertags_city",
      EDIT_COMPOSERTAGS_PLACE: "edit_composertags_place",
      EDIT_COMPOSERTAGS_PLACE_NAME: "edit_composertags_place_name",
      EDIT_COMPOSERTAGS_WITH: "edit_composertags_with",
      EDIT_DELIGHT_RANGES: "edit_delight_ranges",
      EDIT_MULTILINGUAL_SPECIFIED_LANG: "edit_multilingual_specified_lang",
      EDIT_MULTILINGUAL_STATUS_LANGS: "edit_multilingual_status_langs",
      EDIT_MULTILINGUAL_STATUSES: "edit_multilingual_statuses",
      EDIT_HIDE_OBJECT_ATTACHMENT: "edit_hide_object_attachment",
      EDIT_ICON_ID: "edit_icon_id",
      EDIT_IS_EXPLICIT_PLACE: "edit_is_explicit_place",
      EDIT_OBJECT_ID: "edit_object_id",
      EDIT_OBJECT_STR: "edit_object_str",
      EDIT_PRIVACYX: "edit_privacyx",
      EDIT_SAVE_ONLY: "edit_save_only",
      EDIT_STORY_TOKEN: "edit_story_token",
      EDIT_XC_EDIT_CALLSITE: "edit_xc_edit_callsite",
      EDIT_XC_ENTSTORY_CONTEXT: "edit_xc_entstory_context",
      EDIT_XC_LINK_URL: "edit_xc_link_url",
      EDIT_COMPOSER_UNPUBLISHED_PHOTO: "edit_composer_unpublished_photo",
      EDIT_XC_STICKER_ID: "edit_xc_sticker_id",
      EDIT_XC_STORY_DOM_ID: "edit_xc_story_dom_id",
      EDIT_XC_SHARE_IMAGES: "edit_xc_share_images",
      EDIT_XC_SHARE_PARAMS: "edit_xc_share_params",
      EDIT_XC_SHARE_SUMMARY: "edit_xc_share_summary",
      EDIT_XC_SHARE_TARGET_TYPE: "edit_xc_share_target_type",
      EDIT_XC_SHARE_TITLE: "edit_xc_share_title",
      EDIT_XHPC_COMPOSERID: "edit_xhpc_composerid",
      EDIT_XHPC_MESSAGE: "edit_xhpc_message",
      EDIT_XHPC_MESSAGE_TEXT: "edit_xhpc_message_text",
      EVENT_TAG: "event_tag",
      EXTENSIBLE_SPROUTS_RANKER_REQUEST: "extensible_sprouts_ranker_request",
      FUN_FACT_PROMPT_ID: "fun_fact_prompt_id",
      HIDE_OBJECT_ATTACHMENT: "hide_object_attachment",
      FEED_TARGETED_DATA: "feed_targeted_data",
      BOOSTED_POST_CONFIG: "boosted_post_config",
      HOLIDAY_CARD: "holiday_card",
      ICON_ID: "icon_id",
      IS_AD_POST: "is_ad_post",
      IS_DIALOG_COMPOSER: "is_dialog_composer",
      IS_FORCED_RESHARE_OF_POST: "is_forced_reshare_of_post",
      IS_MARKDOWN: "is_markdown",
      IS_PLACELIST_POST: "is_placelist_post",
      IS_REACT: "is_react",
      IS_WELCOME_TO_GROUP_POST: "is_welcome_to_group_post",
      LIFE_EVENT_DATA: "life_event_data",
      LOCAL_DEV_PLATFORM_APP_INSTANCE: "local_dev_platform_app_instance",
      MULTILINGUAL_SPECIFIED_LANG: "multilingual_specified_lang",
      MULTILINGUAL_STATUS_LANGS: "multilingual_status_langs",
      MULTILINGUAL_STATUSES: "multilingual_statuses",
      MULTILINGUAL_RICH_TEXT: "multilingual_rich_text",
      NUM_KEYSTROKES: "num_keystrokes",
      NUM_PASTES: "num_pastes",
      OBJECT_ID: "object_id",
      OBJECT_STR: "object_str",
      OG_SUGGESTION_MECHANISM: "og_suggestion_mechanism",
      PAGE_RECOMMENDATION_IDS: "page_recommendation_ids",
      PAGE_RECOMMENDATION: "page_recommendation",
      PLACE_ATTACHMENT_SETTING: "place_attachment_setting",
      PLACE_LIST_ENTRY_POINT: "place_list_entry_point",
      PLACELIST_WITHIN_PAGE: "placelist_within_page",
      PLAY_WITH_FRIENDS_GAME_ID: "play_with_friends_game_id",
      POLL_QUESTION_DATA: "poll_question_data",
      POST_TO_MARKETPLACE: "post_to_marketplace",
      PRIVACYX: "privacyx",
      QN: "qn",
      SPONSOR_RELATIONSHIP: "sponsor_relationship",
      SCHEDULED: "scheduled",
      SCHEDULED_PUBLISH_TIME: "scheduled_publish_time",
      SHARE_DIALOG_ACTORID: "share_dialog_actorId",
      SHARE_DIALOG_AUDIENCETYPE: "share_dialog_audienceType",
      SHARE_DIALOG_COMPOSERSESSIONID: "share_dialog_composerSessionID",
      SHARE_DIALOG_MESSAGE: "share_dialog_message",
      SHARE_DIALOG_POSTID: "share_dialog_postId",
      SHARE_DIALOG_PRIVACY: "share_dialog_privacy",
      SHARE_DIALOG_ISFORCEDRESHAREOFPOST: "share_dialog_isForcedReshareOfPost",
      STORY_LIST_ATTACHMENT_DATA: "story_list_attachment_data",
      TARGETED_PRIVACY_DATA: "targeted_privacy_data",
      TEXT_FORMAT_PRESET_ID: "text_format_preset_id",
      UNPUBLISHED_CONTENT_TYPE: "unpublished_content_type",
      XC_LINK_URL: "xc_link_url",
      XC_STICKER_ID: "xc_sticker_id",
      XC_SHARE_IMAGES: "xc_share_images",
      XC_SHARE_PARAMS: "xc_share_params",
      XC_SHARE_SUMMARY: "xc_share_summary",
      XC_SHARE_TARGET_TYPE: "xc_share_target_type",
      XC_SHARE_TITLE: "xc_share_title",
      XHPC_AGGREGATED_STORY_COMPOSER: "xhpc_aggregated_story_composer",
      XHPC_COMPOSERID: "xhpc_composerid",
      XHPC_CONTEXT: "xhpc_context",
      XHPC_FINCH: "xhpc_finch",
      XHPC_FUNDRAISER_PAGE: "xhpc_fundraiser_page",
      XHPC_MESSAGE: "xhpc_message",
      XHPC_MESSAGE_TEXT: "xhpc_message_text",
      XHPC_PUBLISH_TYPE: "xhpc_publish_type",
      XHPC_TARGETID: "xhpc_targetid",
      XHPC_TIMELINE: "xhpc_timeline",
      XY_TAGS: "xy_tags",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ComposerTargetType",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      SELF_USER: "feed",
      OTHER_USER: "wall",
      GROUP: "group",
      PAGE: "page",
      EVENT: "event",
      RECOMMENDATION: "recommendation",
      COMMUNITY_HELP_DRIVE: "community_help_drive",
      VOLUNTEERING_EVENT: "volunteering_event",
      CRISIS: "crisis",
      FUNDRAISER: "fundraiser",
      EXAMPLE: "example",
      MARKETPLACE: "marketplace",
      ALBUM: "album",
      OTHER: "other",
      MULTI_DIRECT: "multi_direct",
      LEARNING: "learning",
      LOCAL_COMMUNITY: "local_community",
      LOCAL_PLACE: "local_place",
      WORK_GROUP_LEARNING: "work_group_learning",
      SI_LEARNING_CLASS: "si_learning_class",
      GROUP_CHALLENGE: "group_challenge",
      GAME_HUB: "game_hub",
    });
    f["default"] = a;
  },
  66
);
__d(
  "OGComposerSuggestionMechanisms",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      MOVIE_THEATER_CHECKIN: "movie_theater_checkin",
      AIRPORT_CHECKIN: "airport_checkin",
      HOME_CHECKIN: "home_checkin",
      COOL_PLACE_CHECKIN: "cool_place_checkin",
      TRAIN_CHECKIN: "train_checkin",
      CURRENT_SONG: "current_song",
      RECENT_ACTION: "recent_action",
      AUDIO_FINGERPRINT: "audio_fingerprint",
      WHITELISTED_SUGGESTION: "whitelisted_suggestion",
      UNIT_TEST: "unit_test",
      FEED_SPECIFIC_SUGGESTION: "feed_specific_suggestion",
      DETECTED_FROM_TEXT_INPUT: "detected_from_text_input",
      EVENT_VENUE_CHECKIN: "event_venue_checkin",
      SUPPORTING_CLASSIFIER: "supportingclassifier",
      LISTENING_LINK_CLASSIFIER: "listeninglinkclassifier",
      LINK_TO_OG_CLASSIFIER: "link_to_og_classifier",
      GK_BASED_SUGGESTION_CLASSIFIER: "gk_based_suggestion_classifier",
      EVENT_TO_ATTEND: "event_to_attend",
      GK_BASED_PRODUCTION_PROMPT_CLASSIFIER:
        "gk_based_production_prompt_classifier",
      MOVIE_THEATER_CHECKIN_SUGGESTIFIER: "movie_theater_checkin_suggestifier",
      AIRPORT_CHECKIN_SUGGESTIFIER: "airport_checkin_suggestifier",
      COOL_PLACE_CHECKIN_SUGGESTIFIER: "cool_place_checkin_suggestifier",
      TRAIN_CHECKIN_SUGGESTIFIER: "train_checkin_suggestifier",
      EVENT_VENUE_CHECKIN_SUGGESTIFIER: "event_venue_checkin_suggestifier",
      EVENT_TO_ATTEND_SUGGESTIFIER: "event_to_attend_suggestifier",
      SPA_CHECKIN: "spa_checkin",
      SPA_CHECKIN_SUGGESTIFIER: "spa_checkin_suggestifier",
      MEDICAL_CHECKIN: "medical_checkin",
      MEDICAL_CHECKIN_SUGGESTIFIER: "medical_checkin_suggestifier",
      TRANSPORTATION_CHECKIN: "transportation_checkin",
      TRANSPORTATION_CHECKIN_SUGGESTIFIER:
        "transportation_checkin_suggestifier",
      SWEETS_SHOP_CHECKIN: "sweets_shop_checkin",
      SWEETS_SHOP_CHECKIN_SUGGESTIFIER: "sweets_shop_checkin_suggestifier",
      FAST_FOOD_CHECKIN: "fast_food_checkin",
      FAST_FOOD_CHECKIN_SUGGESTIFIER: "fast_food_checkin_suggestifier",
      SPECIFIC_CUISINE_CHECKIN: "specific_cuisine_checkin",
      SPECIFIC_CUISINE_SUGGESTIFIER: "specific_cuisine_checkin_suggestifier",
      TOPIC_BAR_CHECKIN: "topic_bar_checkin",
      TOPIC_BAR_CHECKIN_SUGGESTIFIER: "topic_bar_checkin_suggestifier",
      RESTAURANT_CHECKIN: "restaurant_checkin",
      RESTAURANT_CHECKIN_SUGGESTIFIER: "restaurant_checkin_suggestifier",
      COFFEE_SHOP_CHECKIN: "coffee_shop_checkin",
      COFFEE_SHOP_SUGGESTIFIER: "coffee_shop_checkin_suggestifier",
      MINUTIAE_TO_PLACE_MOVIE_THEATER_CHECKIN:
        "minutiae_to_place_movie_theater_checkin",
      MINUTIAE_TO_PLACE_TRAVELING_CHECKIN:
        "minutiae_to_place_traveling_checkin",
      MINUTIAE_TO_PLACE_EVENT_TO_ATTEND: "minutiae_to_place_event_to_attend",
      MINUTIAE_TO_PLACE_CELEBRATING: "minutiae_to_place_celebrating",
      MINUTIAE_TO_PLACE_FEELING_HUNGRY: "minutiae_to_place_feeling_hungry",
      MINUTIAE_TO_PLACE_GAME_STADIUM_CHECKIN:
        "minutiae_to_place_game_stadium_checkin",
      MINUTIAE_TO_PLACE_CONCERT_VENUE_CHECKIN:
        "minutiae_to_place_concert_venue_checkin",
      MINUTIAE_TO_PLACE_COOL_PLACE_CHECKIN:
        "minutiae_to_place_cool_place_checkin",
      MINUTIAE_TO_PLACE_FEELING_RELAXED: "minutiae_to_place_feeling_relaxed",
      MINUTIAE_TO_PLACE_CELEBRATING_HOLIDAY:
        "minutiae_to_place_celebrating_holiday",
      MINUTIAE_TO_PLACE_FEELING: "minutiae_to_place_feeling",
      MINUTIAE_TO_PLACE_FEELING_TO_HOTEL_CHECKIN:
        "minutiae_to_place_feeling_hotel_checking",
      MINUTIAE_TO_PLACE_CELEBRATING_EXPERIMENT:
        "minutiae_to_place_celebrating_experiment",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerActionTypes",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        COMPOSER_ENTRY: null,
        COMPOSER_CANCEL: null,
        COMPOSER_NAVIGATE_AWAY_ATTEMPT: null,
        COMPOSER_SHARESHEET_POST_CLICKED: null,
        INIT_CONFIG: null,
        PAGES_IG_PHOTO_UPLOAD_STARTED: null,
        PAGES_JOB_AUTOCONVERT_STARTED: null,
        PAGES_OFFER_AUTOCONVERT_STARTED: null,
        POST_ERROR: null,
        POST_STARTED_LOGGING_ONLY_DO_NOT_USE: null,
        POST_STARTED: null,
        POST_INTENDED: null,
        POST_SUCCEEDED: null,
        POST_FINALLY: null,
        POST_PREPROCESSING: null,
        PUBLISH_STARTED: null,
        PUBLISH_SUCCEEDED: null,
        COMPOSER_RESET: null,
        EXPAND_SPROUTS: null,
        COLLAPSE_SPROUTS: null,
        FEATURE_INTENT: null,
        FEATURE_DONE: null,
        FEATURE_CANCEL: null,
        FOLDER_DROPPED: null,
        SCHEDULE: null,
        DRAFT: null,
        SAVE_STARTED: null,
        SET_LOGGED_SPROUT_PROMOTION_VIEW: null,
        SET_FINISHED_SPROUT_PROMOTION: null,
        SET_QUEUE_FINISHED_SPROUT_PROMOTION: null,
        SPROUT_VIEW_UPDATE: null,
        SET_IS_RUNNING_INTERCEPTION: null,
      },
      "ReactComposerActionTypes"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerEvents",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      CHANGE: "change",
      INSTANCE_MOUNTED: "composer/instanceMounted/",
      ACTIVATE_ATTACHMENT: "composer/activateAttachment/",
      MENTION_INPUT_FOCUS: "composer/mentionInputFocused/",
      TEXT_PREFILL_BEFORE_BOOTLOAD: "composer/textPrefillBeforeBootload/",
      RERENDER_MENTION_INPUT: "reactComposer/rerenderMentionInput/",
      OPTIMISTIC_POSTING_STARTED: "composer/optimisticPostingStarted/",
      POST_FINALLY: "composer/postFinally/",
      POST_FAILED: "composer/postFailed/",
      POST_STARTED: "composer/postStarted/",
      OPTIMISTIC_POST_STARTED: "composer/optimisticPostStarted/",
      POST_SUCCEEDED: "composer/postSucceeded/",
      COMPOSER_RESET: "composer/reset/",
      COMPOSER_UNMOUNT: "composer/unmount/",
      SET_PREFILL_DATA: "reactComposer/setPrefillData/",
      RICH_TEXT_EDITOR_MOUNTED: "reactComposer/richTextEditorMounted/",
      SAVE_STARTED: "composer/saveStarted/",
      HIGHLIGHT_TOP_COMPOSER: "reactComposer/highlightTopComposer",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerOptimisticPostingActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        START_OPTIMISTICALLY_POSTING: null,
        FINISH_OPTIMISTICALLY_POSTING: null,
      },
      "ReactComposerOptimisticPostingActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerLoggingQueue",
  ["invariant", "Bootloader", "killswitch", "requireWeak"],
  function (a, b, c, d, e, f, g, h) {
    var i = null;
    c("requireWeak")("ReactComposerLoggingStore", function (a) {
      i = a;
    });
    var j = [];
    function a(a) {
      if (a && a.suppressWaterfallLogging) return;
      (a && a.composerID) || h(0, 1573);
      if (i && i.isActivated(a.composerID)) return;
      j.push(a);
    }
    function b(a, b, d, e) {
      c("Bootloader").loadModules(
        [
          "ComposerXSessionIDs",
          "ComposerXMarauderLogger",
          "ReactComposerPerfLogger",
          "ReactComposerLoggingStore",
        ],
        function (g, h, j, f) {
          c("killswitch")("COMPOSER_LAZY_INITIALIZE_SESSION_ID") &&
            g.resetSessionID(a),
            h.registerComposer(b, d, e),
            j.registerComposer(b, e.targetType, e.ref, d),
            f.activate(a);
        },
        "ReactComposerLoggingQueue"
      );
    }
    function d() {
      return j.shift();
    }
    function e() {
      return j.length;
    }
    g.add = a;
    g.initBootload = b;
    g.pop = d;
    g.getLength = e;
  },
  98
);
__d(
  "ReactComposerDispatcher",
  [
    "Dispatcher_DEPRECATED",
    "ReactComposerLoggingQueue",
    "ReactComposerNestedActionDispatchTypedLogger",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b;
        b = a.call(this) || this;
        b.$ReactComposerDispatcher1 = [];
        return b;
      }
      var e = b.prototype;
      e.dispatch = function (b) {
        if (this.isDispatching())
          new (c("ReactComposerNestedActionDispatchTypedLogger"))()
            .setOuterActionType(this.$ReactComposerDispatcher2.type)
            .setInnerActionType(b.type)
            .setStack(new Error().stack)
            .log(),
            this.$ReactComposerDispatcher1.push(b);
        else {
          this.$ReactComposerDispatcher2 = b;
          a.prototype.dispatch.call(this, b);
          delete this.$ReactComposerDispatcher2;
          if (this.$ReactComposerDispatcher1.length > 0) {
            var e = this.$ReactComposerDispatcher1.shift();
            this.dispatch(e);
          }
        }
        d("ReactComposerLoggingQueue").add(b);
      };
      return b;
    })(c("Dispatcher_DEPRECATED"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerStoreBase",
  [
    "EventEmitter",
    "ReactComposerActionTypes",
    "ReactComposerDispatcher",
    "ReactComposerEvents",
  ],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(c, a);
      function c(c, d) {
        var e;
        e = a.call(this) || this;
        e.$ReactComposerStoreBase1 = c;
        e.$ReactComposerStoreBase2 = new Map();
        e.$ReactComposerStoreBase3 = b("ReactComposerDispatcher");
        e.$ReactComposerStoreBase4 = e.$ReactComposerStoreBase3.register(
          function (a) {
            switch (a.type) {
              case b("ReactComposerActionTypes").COMPOSER_RESET:
                e.__cleanup(a);
                break;
            }
            d(a);
          }
        );
        return e;
      }
      var d = c.prototype;
      d.getComposerData = function (a) {
        var b = this.$ReactComposerStoreBase2.get(a);
        b ||
          ((b = this.$ReactComposerStoreBase1()),
          this.$ReactComposerStoreBase2.set(a, b));
        return b;
      };
      d.clearComposerData = function (a) {
        this.$ReactComposerStoreBase2.set(a, this.$ReactComposerStoreBase1());
      };
      d.addChangeListener = function (c) {
        return a.prototype.addListener.call(
          this,
          b("ReactComposerEvents").CHANGE,
          c
        );
      };
      d.addListener = function (b, c, d) {
        if (arguments.length === 1 && typeof b === "function")
          return this.addChangeListener(b);
        else return a.prototype.addListener.apply(this, arguments);
      };
      d.emitChange = function (a) {
        this.emit(b("ReactComposerEvents").CHANGE, { composerID: a });
      };
      d.getDispatchToken = function () {
        return this.$ReactComposerStoreBase4;
      };
      d.getDispatcher = function () {
        return this.$ReactComposerStoreBase3;
      };
      d.validateAction = function (a, b) {
        b = [].concat(b);
        var c = b.map(function (b) {
          if (a[b] === void 0) throw new Error("Action missing field: " + b);
          return a[b];
        });
        return b.length === 1 ? c[0] : c;
      };
      d.__cleanup = function (a) {
        this.clearComposerData(a.composerID), this.emitChange(a.composerID);
      };
      return c;
    })(b("EventEmitter"));
    e.exports = a;
  },
  null
);
__d(
  "ReactComposerActionStore",
  [
    "Arbiter",
    "AsyncResponse",
    "ReactComposerActionTypes",
    "ReactComposerEvents",
    "ReactComposerOptimisticPostingActionType",
    "ReactComposerStoreBase",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, d) {
        b = b
          ? b
          : function () {
              return null;
            };
        var e;
        b =
          a.call(this, b, function (a) {
            if (!(e && e.__shouldIgnoreAction(a)))
              switch (a.type) {
                case c("ReactComposerActionTypes").POST_STARTED:
                  e && e.$ReactComposerActionStore2(a);
                  break;
                case c("ReactComposerActionTypes").POST_INTENDED:
                  e && e.$ReactComposerActionStore3(a);
                  break;
                case c("ReactComposerOptimisticPostingActionType")
                  .START_OPTIMISTICALLY_POSTING:
                  e && e.$ReactComposerActionStore4(a);
                  break;
                case c("ReactComposerActionTypes").POST_SUCCEEDED:
                  e && e.$ReactComposerActionStore5(a);
                  break;
                case c("ReactComposerActionTypes").POST_ERROR:
                  e && e.$ReactComposerActionStore6(a);
                  break;
                case c("ReactComposerActionTypes").POST_FINALLY:
                  e && e.$ReactComposerActionStore7(a);
                  break;
                case c("ReactComposerActionTypes").POST_PREPROCESSING:
                  e && e.$ReactComposerActionStore8(a);
                  break;
                case c("ReactComposerActionTypes").SAVE_STARTED:
                  e && e.$ReactComposerActionStore9(a);
                  break;
                default:
              }
            d && d(a);
          }) || this;
        e = babelHelpers.assertThisInitialized(b);
        b.$ReactComposerActionStore1 = new Set();
        return b;
      }
      var d = b.prototype;
      d.registerComposerID = function (a) {
        this.$ReactComposerActionStore1.add(a);
      };
      d.$ReactComposerActionStore2 = function (a) {
        var b = this.validateAction(a, "composerID");
        this.__onPostStarted && this.__onPostStarted(a);
        c("Arbiter").inform(c("ReactComposerEvents").POST_STARTED + b);
      };
      d.$ReactComposerActionStore4 = function (a) {
        a = this.validateAction(a, "composerID");
        c("Arbiter").inform(
          c("ReactComposerEvents").OPTIMISTIC_POST_STARTED + a
        );
      };
      d.$ReactComposerActionStore3 = function (a) {
        this.validateAction(a, ["composerID", "actorID", "config", "targetID"]),
          (!this.__canPost || this.__canPost(a)) &&
            this.$ReactComposerActionStore2(a);
      };
      d.$ReactComposerActionStore5 = function (a) {
        var b = this.validateAction(a, "composerID");
        this.__onPostSucceeded && this.__onPostSucceeded(a);
        c("Arbiter").inform(c("ReactComposerEvents").POST_SUCCEEDED + b);
      };
      d.$ReactComposerActionStore6 = function (a) {
        var b = this.validateAction(a, "composerID");
        c("Arbiter").inform(c("ReactComposerEvents").POST_FAILED + b);
        if (this.__onPostError) return this.__onPostError(a);
        a.response && c("AsyncResponse").defaultErrorHandler(a.response);
      };
      d.$ReactComposerActionStore7 = function (a) {
        this.__onPostFinally && this.__onPostFinally(a),
          c("Arbiter").inform(c("ReactComposerEvents").POST_FINALLY);
      };
      d.$ReactComposerActionStore8 = function (a) {
        this.__onPostPreprocessing && this.__onPostPreprocessing(a);
      };
      d.$ReactComposerActionStore9 = function (a) {
        var b = this.validateAction(a, "composerID");
        this.__onSaveStarted && this.__onSaveStarted(a);
        c("Arbiter").inform(c("ReactComposerEvents").POST_STARTED + b);
      };
      d.__shouldIgnoreAction = function (a) {
        a = this.validateAction(a, "composerID");
        return !this.$ReactComposerActionStore1.has(a);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerAttachmentActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        REGISTER_ATTACHMENT: null,
        INITIALIZE_ATTACHMENT: null,
        SELECT_ATTACHMENT_LOGGING_ONLY_DO_NOT_USE: null,
        SELECT_ATTACHMENT: null,
        SET_ATTACHMENT_MARKUP: null,
        SET_INITIALIZED: null,
        SET_BOOTLOADED: null,
        SET_BOOTSTRAPPED: null,
        SET_CONTENT_MULTI_SHARE: null,
        UPLOAD_ATTACHMENT: null,
      },
      "ReactComposerAttachmentActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerScrapedAttachmentActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        ATTACHMENT_SCRAPE_ENABLED: null,
        ATTACHMENT_PERMISSIVE_MATCH_SETTED: null,
        ATTACHMENT_SCRAPE_INTENDED: null,
        ATTACHMENT_SCRAPED: null,
        ATTACHMENT_SCRAPE_CLEARED: null,
        ATTACHMENT_CAROUSEL_UPLOAD: null,
        ATTACHMENT_SELECT_COLLECTION: null,
        ATTACHMENT_SHARE_SELECTED: null,
        ATTACHMENT_TITLE_EDITED: null,
        ATTACHMENT_DESCRIPTION_EDITED: null,
        ATTACHMENT_IMAGE_DESELECTED: null,
        ATTACHMENT_BREAKING_CONFIG_SET: null,
        ATTACHMENT_CLEAR_SPINNER: null,
      },
      "ReactComposerScrapedAttachmentActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerSproutsDisplayState",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      { INLINE: null, EXPANDED: null },
      "ReactComposerSproutsDisplayState"
    );
    g["default"] = a;
  },
  98
);
__d(
  "SproutConfigConstants",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = 3;
    f.MAX_INLINE_SPROUTS_COUNT = a;
  },
  66
);
__d(
  "ReactComposerStore",
  [
    "Bootloader",
    "ReactComposerActionStore",
    "ReactComposerActionTypes",
    "ReactComposerAttachmentActionType",
    "ReactComposerInit",
    "ReactComposerScrapedAttachmentActionType",
    "ReactComposerSproutsDisplayState",
    "SproutConfigConstants",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                isActive: !1,
                orderedSprouts: [],
                orderedInlineSprouts: [],
                serverErrorResponse: null,
                posting: !1,
                postSucceeded: !1,
                publishing: !1,
                rankerRequestID: null,
                sproutSurface: null,
                ref: null,
                targetType: null,
                sproutsDisplayState: c("ReactComposerSproutsDisplayState")
                  .INLINE,
                scheduledPublishTime: null,
                hasLoggedSproutPromotionView: !1,
                hasFinishedSproutPromotion: !1,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerActionTypes").INIT_CONFIG:
                  d && d.$ReactComposerStore1(a);
                  break;
                case c("ReactComposerActionTypes").DRAFT:
                  d && d.$ReactComposerStore2(a);
                  break;
                case c("ReactComposerActionTypes").PUBLISH_STARTED:
                  d && d.$ReactComposerStore3(a);
                  break;
                case c("ReactComposerAttachmentActionType")
                  .SELECT_ATTACHMENT_LOGGING_ONLY_DO_NOT_USE:
                  d && d.$ReactComposerStore4(a);
                  break;
                case c("ReactComposerAttachmentActionType").SELECT_ATTACHMENT:
                  d && d.$ReactComposerStore4(a);
                  break;
                case c("ReactComposerActionTypes").EXPAND_SPROUTS:
                  d && d.$ReactComposerStore5(a);
                  break;
                case c("ReactComposerActionTypes").COLLAPSE_SPROUTS:
                  d && d.$ReactComposerStore6(a);
                  break;
                case c("ReactComposerAttachmentActionType").UPLOAD_ATTACHMENT:
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_SCRAPED:
                  d && d.$ReactComposerStore7(a);
                  break;
                case c("ReactComposerActionTypes").SCHEDULE:
                  d && d.$ReactComposerStore8(a);
                  break;
                case c("ReactComposerActionTypes")
                  .SET_LOGGED_SPROUT_PROMOTION_VIEW:
                  d && d.$ReactComposerStore9(a);
                  break;
                case c("ReactComposerActionTypes")
                  .SET_FINISHED_SPROUT_PROMOTION:
                  d && d.$ReactComposerStore10(a);
                  break;
                case c("ReactComposerActionTypes")
                  .SET_QUEUE_FINISHED_SPROUT_PROMOTION:
                  d && d.$ReactComposerStore11(a);
                  break;
                case c("ReactComposerActionTypes")
                  .PAGES_IG_PHOTO_UPLOAD_STARTED:
                  d && d.handleIgPhotoUploadStarted(a);
                  break;
                case c("ReactComposerActionTypes")
                  .PAGES_JOB_AUTOCONVERT_STARTED:
                  d && d.$ReactComposerStore12(a);
                  break;
                case c("ReactComposerActionTypes")
                  .PAGES_OFFER_AUTOCONVERT_STARTED:
                  d && d.$ReactComposerStore13(a);
                  break;
                case c("ReactComposerAttachmentActionType").SET_BOOTLOADED:
                  d && d.$ReactComposerStore14(a);
                  break;
                case c("ReactComposerActionTypes").SET_IS_RUNNING_INTERCEPTION:
                  d && d.$ReactComposerStore15(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.$ReactComposerStore8 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.unpublishedContentType = "SCHEDULED";
        b.scheduledPublishTime = a.scheduleDate;
      };
      e.$ReactComposerStore2 = function (a) {
        a = this.getComposerData(a.composerID);
        a.unpublishedContentType = "DRAFT";
        a.scheduledPublishTime = null;
      };
      e.getScheduledPublishTime = function (a) {
        return this.getComposerData(a).scheduledPublishTime;
      };
      e.getServerErrorResponse = function (a) {
        return this.getComposerData(a).serverErrorResponse;
      };
      e.getRef = function (a) {
        return this.getComposerData(a).ref;
      };
      e.getTargetType = function (a) {
        return this.getComposerData(a).targetType;
      };
      e.getOrderedSprouts = function (a) {
        return this.getComposerData(a).orderedSprouts;
      };
      e.getDisplayedSprouts = function (a) {
        a = this.getComposerData(a);
        return a.sproutsDisplayState ==
          c("ReactComposerSproutsDisplayState").EXPANDED
          ? a.orderedSprouts
          : a.orderedInlineSprouts;
      };
      e.getRankerRequestID = function (a) {
        return this.getComposerData(a).rankerRequestID;
      };
      e.isSaving = function (a) {
        return Boolean(this.getComposerData(a).saving);
      };
      e.isPosting = function (a) {
        return this.getComposerData(a).posting;
      };
      e.hasPostSucceeded = function (a) {
        return this.getComposerData(a).postSucceeded;
      };
      e.isActive = function (a) {
        return this.getComposerData(a).isActive;
      };
      e.isPublishing = function (a) {
        return this.getComposerData(a).publishing;
      };
      e.getSproutsDisplayState = function (a) {
        return this.getComposerData(a).sproutsDisplayState;
      };
      e.getSproutSurface = function (a) {
        a = this.getComposerData(a);
        return a.sproutsDisplayState ===
          c("ReactComposerSproutsDisplayState").INLINE
          ? a.inlineSproutSurface
          : a.sproutSurface;
      };
      e.hasLoggedSproutPromotionView = function (a) {
        return this.getComposerData(a).hasLoggedSproutPromotionView;
      };
      e.hasFinishedSproutPromotion = function (a) {
        return this.getComposerData(a).hasFinishedSproutPromotion;
      };
      e.getClearSproutPromotionOnNewComposer = function (a) {
        return this.getComposerData(a).clearSproutPromotionOnNewComposer;
      };
      e.isUploading = function (a) {
        return this.getComposerData(a).uploading;
      };
      e.shouldShowVoiceSwitcherNux = function (a) {
        return this.getComposerData(a).shouldShowVoiceSwitcherNux;
      };
      e.handleIgPhotoUploadStarted = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.posting = !0;
        this.emitChange(b);
      };
      e.__shouldIgnoreAction = function (a) {
        return !1;
      };
      e.__onPostStarted = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.posting = !0;
        this.emitChange(b);
      };
      e.__onPostPreprocessing = function (a) {
        this.__onPostStarted(a);
      };
      e.__onPostSucceeded = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.serverErrorResponse = null;
        a.posting = !1;
        a.postSucceeded = !0;
        a.publishing = !1;
        this.emitChange(b);
      };
      e.__onPostError = function (a) {
        var b = this.validateAction(a, "composerID"),
          c = this.getComposerData(a.composerID);
        c.serverErrorResponse = a.response;
        c.posting = !1;
        c.postSucceeded = !1;
        c.publishing = !1;
        this.emitChange(b);
      };
      e.__onPostFinally = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.posting = !1;
        a.publishing = !1;
        a.saving = !1;
        this.emitChange(b);
      };
      e.__onSaveStarted = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.saving = !0;
        this.emitChange(b);
      };
      e.$ReactComposerStore1 = function (a) {
        var b = this.validateAction(a, [
            "composerID",
            "loggingConfig",
            "activateOnInit",
          ]),
          c = b[0],
          e = b[1];
        b = b[2];
        var f = this.getComposerData(c);
        f.ref = e.ref;
        f.composerVersion = e.composerVersion;
        f.targetType = e.targetType;
        f.rankerRequestID = e.rankerRequestID || null;
        f.sproutSurface = e.sproutSurface || null;
        f.inlineSproutSurface = e.inlineSproutSurface || null;
        f.lazySproutsExpand = a.lazySproutsExpand || !1;
        f.actorType = e.actorType || "other";
        f.composerFlow = e.composerFlow || "unknown";
        f.composerLayout = e.composerLayout || "unknown";
        f.entryPoint = e.entryPoint || "unknown";
        f.composerLocation = e.composerLocation || "unknown";
        var g = e.actorID,
          h = e.isActorAPage;
        f.actorID = g ? g : null;
        f.isActorAPage = h ? h : !1;
        h = (g = e.destinationsConfig) == null ? void 0 : g.destinations;
        if (h) {
          e = !1;
          g = !1;
          var i = !1,
            j = !1;
          h.map(function (a) {
            switch (a.type) {
              case "story":
                e = !0;
                break;
              case "groups":
                i = !0;
                break;
              case "instagram":
                g = !0;
                j = a.extra_config.instagram.isEnabled == !0;
                break;
              default:
                break;
            }
          });
          f.pageComposerDestinationsConfig = {
            isSharesheetEnabled: !0,
            showStorySection: e,
            showInstagramSection: g,
            showGroupSection: i,
            isInstagramAuthenticated: j,
          };
        }
        f.orderedSprouts = [];
        f.orderedInlineSprouts = [];
        h = a.sproutsConfig;
        a = a.promotedSprout;
        if (h) {
          a && (f.orderedSprouts.push(a), f.orderedInlineSprouts.push(a));
          for (var k in h)
            h[k].enabled &&
              k !== a &&
              (f.orderedSprouts.push(k),
              f.orderedInlineSprouts.length <
                d("SproutConfigConstants").MAX_INLINE_SPROUTS_COUNT &&
                h[k].inline &&
                f.orderedInlineSprouts.push(k));
        }
        b && this.$ReactComposerStore16(c);
        this.emitChange(c);
      };
      e.$ReactComposerStore9 = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.hasLoggedSproutPromotionView = !0;
        this.emitChange(b);
      };
      e.$ReactComposerStore10 = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.hasFinishedSproutPromotion = !0;
        a.clearSproutPromotionOnNewComposer = !0;
        this.emitChange(b);
      };
      e.$ReactComposerStore11 = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.clearSproutPromotionOnNewComposer = !0;
        this.emitChange(b);
      };
      e.$ReactComposerStore3 = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.publishing = !0;
        this.emitChange(b);
      };
      e.$ReactComposerStore12 = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.posting = !0;
        this.emitChange(b);
      };
      e.$ReactComposerStore13 = function (a) {
        var b = this.validateAction(a, "composerID");
        a = this.getComposerData(a.composerID);
        a.posting = !0;
        this.emitChange(b);
      };
      e.$ReactComposerStore7 = function (a) {
        var b = this.validateAction(a, "composerID"),
          c = this.getComposerData(a.composerID);
        c.uploading = a.uploading;
        this.emitChange(b);
      };
      e.$ReactComposerStore4 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = this.getComposerData(a);
        b.lazySproutsExpand ||
          (b.sproutsDisplayState = c(
            "ReactComposerSproutsDisplayState"
          ).EXPANDED);
        this.$ReactComposerStore16(a);
        this.emitChange(a);
      };
      e.$ReactComposerStore5 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = this.getComposerData(a);
        b.sproutsDisplayState = c("ReactComposerSproutsDisplayState").EXPANDED;
        this.emitChange(a);
      };
      e.$ReactComposerStore6 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = this.getComposerData(a);
        b.sproutsDisplayState = c("ReactComposerSproutsDisplayState").INLINE;
        this.emitChange(a);
      };
      e.$ReactComposerStore14 = function (a) {
        var b = this.validateAction(a, "composerID"),
          d = this.getComposerData(b);
        a.id === "LIVING_ROOM" &&
          d.sproutsDisplayState ===
            c("ReactComposerSproutsDisplayState").INLINE &&
          ((d.sproutsDisplayState = c(
            "ReactComposerSproutsDisplayState"
          ).EXPANDED),
          this.emitChange(b));
      };
      e.$ReactComposerStore15 = function (a) {
        a = this.validateAction(a, ["composerID", "isRunningInterception"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.isRunningInterception = a;
        this.emitChange(b);
      };
      e.isRunningInterception = function (a) {
        return !!this.getComposerData(a).isRunningInterception;
      };
      e.$ReactComposerStore16 = function (a) {
        var b = this.getComposerData(a);
        b.isActive ||
          ((b.isActive = !0),
          c("Bootloader").loadModules(
            ["curry", "Run", "ReactComposerHandleUnsavedChanges", "URI"],
            function (b, c, d, e) {
              c.onBeforeUnload(b(d.handler, a, e.getNextURI())),
                c.onUnload(b(d.possiblyLogComposerCancelEvent, a)),
                c.onLeave(b(d.possiblyLogComposerCancelEvent, a));
            },
            "ReactComposerStore"
          ));
      };
      e.__cleanup = function (a) {
        window.setTimeout(
          d("ReactComposerInit").resetComposer.bind(null, a.composerID),
          0
        );
      };
      return b;
    })(c("ReactComposerActionStore"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerConstants",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      ID_PREFIX: "rc.",
      GK_VIDEO_COPYRIGHT: "video_copyright_confirmation_dialog",
      GK_MULTILINGUAL_COMPOSER: "multilingual_composer_www",
      GK_PAGE_BREAKING_COMPOSER: "breaking_news_page",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerIDGenerator",
  ["ReactComposerConstants", "uniqueID"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a() {
      return c("ReactComposerConstants").ID_PREFIX + c("uniqueID")();
    }
    function b(a) {
      return !!a && a.startsWith(c("ReactComposerConstants").ID_PREFIX);
    }
    g.getID = a;
    g.isComposerID = b;
  },
  98
);
__d(
  "ReactComposerInit",
  [
    "invariant",
    "Arbiter",
    "ReactComposerEvents",
    "ReactComposerIDGenerator",
    "ReactComposerStore",
    "ReactDOM",
    "ge",
    "ifRequired",
    "react",
  ],
  function (a, b, c, d, e, f, g) {
    var h,
      i = h || b("react"),
      j = {
        _isUnmounting: !1,
        instances: new Map(),
        changeProps: function (a, b, c) {
          c === void 0 && (c = !1),
            j.changePropsWithoutReset(a, b),
            j.resetComposer(a, c);
        },
        changePropsWithoutReset: function (a, b) {
          a = j._getCurrentInstance(a);
          a.props = b;
        },
        normalizeComposerID: function (a) {
          a.contextConfig.composerID ||
            (a.contextConfig.composerID = b(
              "ReactComposerIDGenerator"
            ).getID());
          return a.contextConfig.composerID;
        },
        init: function (a, c, d) {
          var e = j.normalizeComposerID(c);
          a = { ComposerModule: a, props: c, container: d, hidden: !1 };
          j._render(a);
          j.instances.set(e, a);
          b("Arbiter").inform(b("ReactComposerEvents").INSTANCE_MOUNTED + e);
        },
        initWithoutRendering: function (a, c, d) {
          var e = j.normalizeComposerID(c);
          a = { ComposerModule: a, props: c, container: d, hidden: !1 };
          j.instances.set(e, a);
          b("Arbiter").inform(b("ReactComposerEvents").INSTANCE_MOUNTED + e);
        },
        _render: function (a) {
          var c = a.ComposerModule,
            d = a.props;
          a = a.container;
          b("ReactDOM").render(
            i.jsx(c, babelHelpers["extends"]({}, d)),
            a,
            "ReactComposerInit.js"
          );
        },
        _createNewComposer: function (a, c, d) {
          d === void 0 && (d = !0),
            a.props.config !== void 0 &&
              a.props.config.sproutsPromotionConfig &&
              a.props.config.sproutsPromotionConfig.promotionID &&
              b("ReactComposerStore").getClearSproutPromotionOnNewComposer(
                a.props.contextConfig.composerID
              ) &&
              (a.props.config.sproutsPromotionConfig = {}),
            a.props.config !== void 0 &&
              a.props.config.pagesComposerNuxConfig &&
              b("ifRequired")("PagesComposerNuxUtils", function (b) {
                a.props.config.pagesComposerNuxConfig =
                  b.updatePagesComposerNuxConfig(
                    a.props.contextConfig.composerID
                  );
              }),
            (a.props.contextConfig.composerID = b(
              "ReactComposerIDGenerator"
            ).getID()),
            d && (a.props.prefillConfig = {}),
            j.init(a.ComposerModule, a.props, c);
        },
        resetComposer: function (a, c) {
          c === void 0 && (c = !0);
          var d = j._getCurrentInstance(a);
          j.unmountInstance(a);
          d.hidden
            ? d.container.parentNode &&
              d.container.parentNode.removeChild(d.container)
            : j._createNewComposer(d, d.container, c);
          c = d.props.contextConfig.composerID;
          b("Arbiter").inform(b("ReactComposerEvents").COMPOSER_RESET + a, {
            newComposerID: c,
          });
          return c;
        },
        hideComposer: function (a) {
          a = j._getCurrentInstance(a);
          a.container.style.display = "none";
          a.hidden = !0;
        },
        showComposer: function (a) {
          a = j._getCurrentInstance(a);
          a.container.style.display = "block";
          a.hidden = !1;
        },
        hideAndReplaceComposer: function (a) {
          var c = j._getCurrentInstance(a),
            d = c.container.cloneNode(!1);
          c.container.removeAttribute("id");
          c.container.parentNode &&
            c.container.parentNode.insertBefore(d, c.container);
          j.hideComposer(a);
          j._createNewComposer(c, d);
          b("Arbiter").inform(b("ReactComposerEvents").COMPOSER_RESET + a, {
            newComposerID: c.props.contextConfig.composerID,
          });
        },
        isInstanceMounted: function (a) {
          return !!j.instances.get(a);
        },
        unmountInstance: function (a) {
          if (j.isInstanceMounted(a) && !j._isUnmounting) {
            var c = j._getCurrentInstance(a);
            c = c.props;
            if (
              c.config !== void 0 &&
              c.config.dialogComposer &&
              c.config.dialogElementID != null
            ) {
              c = b("ge")(c.config.dialogElementID);
              c != null && c.remove();
            }
            j._isUnmounting = !0;
            j._unmountReact(a);
            j._isUnmounting = !1;
            j.instances["delete"](a);
          }
        },
        _unmountReact: function (a) {
          var c = j._getCurrentInstance(a);
          b("ReactDOM").unmountComponentAtNode(c.container, e.id);
          b("Arbiter").inform(b("ReactComposerEvents").COMPOSER_UNMOUNT + a);
          return c;
        },
        _getCurrentInstance: function (a) {
          var b = j.instances.get(a);
          b || g(0, 2272, a);
          return b;
        },
      };
    e.exports = j;
  },
  null
);
__d(
  "PagesComposerContextUtils",
  ["ReactComposerStore"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      return (
        a === "page_content_tab_published_posts" ||
        a === "page_content_tab_published_posts_opted_out" ||
        a === "page_content_tab_scheduled_posts" ||
        a === "page_content_tab_scheduled_posts_opted_out" ||
        a === "page_content_tab_drafts" ||
        a === "pages_shop_tab" ||
        h(a) ||
        a === "page_content_tab_ads_posts" ||
        a === "page_content_tab_ads_posts_deprecation" ||
        a === "page_content_tab_video_library" ||
        a === "page_content_tab_video_library_living_room_cta" ||
        a === "page_content_tab_living_room_megaphone" ||
        a === "page_content_tab_video_library_premiere" ||
        a === "page_content_ads_asset_video_library" ||
        a === "page_content_tab_canvas" ||
        a === "page_content_tab_reference_library" ||
        a === "page_content_tab_season_details" ||
        a === "page_content_tab_playlist_details" ||
        a === "page_left_nav_create_post_button" ||
        a === "page_publishing_tool_vck" ||
        a === "page_tips" ||
        a === "page_admin_journey" ||
        a === "endorsement_module" ||
        a === "pages_promotions_hub_coupon_tab" ||
        a === "ads_create" ||
        a === "ads_power_editor" ||
        a === "pages_profile_pic_add_story" ||
        a === "pages_archived_story_card_viewer" ||
        a === "PAGES_INSIGHT_TAB_STORIES" ||
        a === "pages_insight_tab_published_posts"
      );
    }
    function b(a) {
      return (
        a === "page_left_nav_create_post_button" ||
        a === "page_tips" ||
        a === "pages_shop_tab" ||
        a === "page_admin_journey" ||
        a === "endorsement_module" ||
        a === "pages_profile_pic_add_story"
      );
    }
    function d(a) {
      return (
        a === "pages_profile_pic_add_story" ||
        a === "pages_archived_story_card_viewer" ||
        a === "PAGES_INSIGHT_TAB_STORIES"
      );
    }
    function e(a, b) {
      return (a === "pages_feed" || a === "pages_posts") && b;
    }
    function f(a, b, d) {
      b = c("ReactComposerStore").getComposerData(b);
      b = b.targetType;
      return b === "page" && !!d && a === d;
    }
    function h(a) {
      return (
        a === "page_content_tab_draft_edit" ||
        a === "pages_draft_post_reminders"
      );
    }
    function i(a) {
      return a === "pages_feed" || a === "pages_posts";
    }
    function j(a) {
      return (
        a === "page_content_tab_published_posts" ||
        a === "page_content_tab_published_posts_opted_out" ||
        a === "page_content_tab_scheduled_posts" ||
        a === "page_content_tab_scheduled_posts_opted_out"
      );
    }
    g.getIsDialogComposer = a;
    g.getIsPageTabDialogComposer = b;
    g.getIsStoryComposer = d;
    g.getIsInlineDialogComposer = e;
    g.isPageAdminPostingInPage = f;
    g.getIsDraftComposer = h;
    g.getIsPageComposer = i;
    g.getIsValidForBizComposerToggle = j;
  },
  98
);
__d(
  "PagesComposerGraphMLGate",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    var g = {};
    function a(a, b) {
      g[a] = b;
    }
    function h(a) {
      return !a ? null : g[a];
    }
    function b(a) {
      a = h(a);
      return a ? a.useMLForVisitorStatusCreation : !1;
    }
    function c(a) {
      a = h(a);
      return a ? a.useMLForFeedTargetingFeature : !1;
    }
    function d(a) {
      a = h(a);
      return a ? a.useMLForMediaPostCreation : !1;
    }
    function e(a) {
      a = h(a);
      return a ? a.useMLForPageCTAPostCreation : !1;
    }
    function i(a) {
      a = h(a);
      return a ? a.useMLForBoostedPostConfig : !1;
    }
    f.register = a;
    f.getInstance = h;
    f.shouldUseGraphMLForVisitorStatus = b;
    f.shouldUseGraphMLForFeedTargetingFeature = c;
    f.shouldUseGraphMLForMediaPostCreation = d;
    f.shouldUseGraphMLForPageCTAPostCreation = e;
    f.shouldUseGraphMLForBoostedPostFeature = i;
  },
  66
);
__d(
  "PageContentTabConstants",
  ["PageContentTabConfig", "PageContentTabTabs", "keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("keyMirrorRecursive")({
      ACTIVATE: "",
      ALLOW_CROSSPOSTING_OF_THIS_VIDEO: "",
      APPLY_BLOCK_LIST: "",
      AUDIENCE_ALERT: {
        BEGIN: "",
        CLOSE: "",
        CREATE: "",
        CREATION_FAILED: "",
        CREATION_SUCCESS: "",
        TURN_OFF: "",
        TURN_ON: "",
        TURNING_OFF_FAILED: "",
        TURNING_OFF_SUCCESS: "",
        VIEW: "",
      },
      BACKDATE: "",
      CANCEL: "",
      CANCEL_ORDER: "",
      CANCEL_OR_DELETE: "",
      CONTACT_BUYER: "",
      CONVERT_LEGACY_VIDEO_TO_L3_VIDEO: "",
      CREATE_EXPERIMENT: "",
      CROSSPOSTING_WITHIN_BUSINESS: "",
      DEACTIVATE: "",
      DELETE_FUNDRAISER: "",
      DELETE: "",
      MARK_AS_EPISODE: "",
      MARK_AS_NON_EPISODE: "",
      MARK_OUT_OF_STOCK: "",
      MARK_IN_STOCK: "",
      DELETE_SEASON: "",
      DELETE_PLAYLIST: "",
      DOWNLOAD_VIDEO_SD: "",
      DOWNLOAD_VIDEO_HD: "",
      DUPLICATE: "",
      EDIT_COPYRIGHT: "",
      EDIT_EXPIRATION: "",
      EDIT: "",
      EMBEDDABLE: "",
      MONETIZE: "",
      UNMONETIZE: "",
      EXPIRE_NOW: "",
      FEED_TYPE: "",
      FRAMES: { ACTIVATE: "", DEACTIVATE: "", DELETE: "" },
      HIDE: "",
      HIGHLIGHT_IN_VIDEO_FEED: "",
      INSIGHTS: "",
      INSTANT_ARTICLE_CTA: { ACTIVATE: "", DEACTIVATE: "", EDIT: "" },
      LEAD_ADS_FORMS: {
        ACTIVATE: "",
        ARCHIVE: "",
        DELETE: "",
        MANAGE: "",
        PREVIEW: "",
        DOWNLOAD_LEADS: "",
      },
      MAKE_FEATURED: "",
      MAKE_PAGE_TRAILER: "",
      NEW_POST_FROM_VIDEO_ASSET: "",
      PAGE_ELIGIBILITY_GROUPS: { LOADED: "" },
      POSTS_CONFIG: {
        URL_INPUT_CHANGED: "",
        VALIDATE_URL_BEGIN: "",
        VALIDATE_URL_LOADED: "",
        VALIDATE_URL_ERROR: "",
      },
      PRINT_INVOICE: "",
      PUBLISH_FUNDRAISER: "",
      PUBLISH_TO_NEWS_FEED: "",
      PUBLISH_TO_VIDEOS_TAB: "",
      PUBLISH: "",
      REFUND_ORDER: "",
      REJECT: "",
      REMOVE_FROM_PLAYLIST: "",
      REMOVE_FROM_SEASON: "",
      REPUBLISH: "",
      RESCHEDULE: "",
      SCHEDULE: "",
      SHIP_ORDER: "",
      SOCIAL_ACTIONS: "",
      UNHIGHLIGHT_IN_VIDEO_FEED: "",
      UNPUBLISH_FUNDRAISER: "",
      UNSCHEDULE: "",
      VIEW_POST: "",
      VIDEO_LIBRARY_TOUR_STARTED: "",
      VIDEO_LIBRARY_TOUR_COMPLETED: "",
      VIDEO_LIBRARY_TOUR_RESUMED: "",
      SHARE: "",
      PROMOTE: "",
      BOOST: "",
      REMOVE_FROM_TOUR: "",
      ADD_TO_TOUR: "",
    });
    b = c("keyMirrorRecursive")({
      POST: "",
      MANUAL_REVIEW_ACTION: "",
      BOOST_POST: "",
      BRANDED_CONTENT_BRAND: "",
      BRANDED_CONTENT_CREATOR: "",
      DATE_CREATED: "",
      DATE_LAST_MODIFIED: "",
      DELIVERED: "",
      MARKUP_EDITOR: "",
      PROMOTION_STATUS: "",
      SCHEDULED_PUBLISH_TIME: "",
      PRODUCT: "",
      VISIBILITY: "",
      INVENTORY: "",
      IMPRESSIONS: "",
      INSIGHTS: "",
      MESSAGES: "",
      MESSAGE_SENDS: "",
      MESSAGE_SENT_DATE: "",
      ORDER_DATE: "",
      ORDER_ITEMS: "",
      ORDER_BUYER: "",
      ORDER_PRICE: "",
      ORDER_REFUND: "",
      ORDER_STATUS: "",
      PLAYLIST: "",
      PLAYLIST_NUM_VIDEOS: "",
      PLAYLIST_LAST_UPDATED: "",
      COLLECTION: "",
      EXPIRATION_INFO: "",
      PUBLISH_STATUS: "",
      ERRORS: "",
      WARNINGS: "",
      ID: "",
      REACH: "",
      ENGAGEMENT: "",
      RESULTS: "",
      PPTP: "",
      VIDEO: "",
      VIDEOS: "",
      VIDEO_ICONS: "",
      VIDEO_VIEWS: "",
      VIDEO_DATE_CREATED: "",
      VIDEO_EMBEDDABLE: "",
      VIDEO_SOCIAL_ACTIONS: "",
      LIVE_VIEWS: "",
      LIKE_COUNT: "",
      COMMENT_COUNT: "",
      TOTAL_VIEWS: "",
      JOB_POSTS: "",
      EPISODES: "",
      EPISODE_VIEWS: "",
      EPISODE_STATUS: "",
      FORM_DATE_CREATED: "",
      FORM_DOWNLOAD_CSV_URL: "",
      FORM_EDIT_BUTTON: "",
      FORM_NAME: "",
      FORM_LEADS_COUNT: "",
      FORM_EXPIRED_LEADS_COUNT: "",
      FORM_LOCALE: "",
      FORM_STATUS: "",
      FORM_PROMOTION_UPSELL: "",
      FORM_BLOCK_SHARING: "",
      MATCHING_VIDEO: "",
      MATCHING_PUBLISHER: "",
      REFERENCE_CONFLICTS: "",
      REFERENCE_CONFLICTS_DEADLINE: "",
      REFERENCE_MATCH_STATE: "",
      PUBLISHED_DATE: "",
      DATE_FOUND: "",
      OVERLAP: "",
      EXPIRES_DAYS: "",
      DISPUTE_EXPIRES_DAYS: "",
      REPORTED_VIDEO: "",
      LAST_MODIFIED_BY: "",
      FUNDRAISER: "",
      FUNDRAISER_STATUS: "",
      FUNDRAISER_DONORS: "",
      FUNDRAISER_LIKES: "",
      LOCATION_LANGUAGE: "",
      REORDERING: "",
      REFERENCE_VIDEO: "",
      ADS_CANVAS_NAME: "",
      ADS_CANVAS_UPDATE_TIME: "",
      ADS_CANVAS_IS_PUBLISHED: "",
      ADS_CANVAS_EDITOR: "",
      VIDEO_AUDIO: "",
      NEW_MATCHES: "",
      AUDIENCE_ALERTS: "",
      START_DATE: "",
      EXPIRATION_DATE: "",
      FRAME_PREVIEW: "",
      FRAME_STATUS: "",
      FRAME_CATEGORY: "",
      FRAME_APPROVAL: "",
      FRAME_ACTIVATES: "",
      RULE: "",
      FILES: "",
      MATCHES: "",
      PROMOTE: "",
      DATE_STARTED: "",
      STATUS: "",
      ICONS: "",
      VIEW: "",
      STATUS_TOGGLE: "",
      TITLE: "",
      LAST_EDITED: "",
      EDIT: "",
      PREVIEW: "",
      PROMOTION: "",
      LEADS: "",
      TYPE: "",
      SEASON: "",
      SEASON_NUM_EPISODES: "",
      SEASON_POSTED_UPLOADED: "",
      SEASON_SCHEDULING: "",
      SEASON_DETAILS: "",
      SEASON_LAST_UPDATED: "",
      IS_EPISODE: "",
      EVENT_INFO: "",
      NAME: "",
      LOCATION: "",
      POSITION: "",
      RECEIVED: "",
      SOUND_RECORDING: "",
      ATTRIBUTION_TITLE: "",
      ATTRIBUTION_STATUS: "",
      ATTRIBUTION_REF_FILE_COUNT: "",
      ATTRIBUTION_DATE_CREATED: "",
      ATTRIBUTION_RUN_COUNT: "",
      EXPERIMENT_PUBLISH_TIME: "",
      EXPERIMENT_NAME: "",
      EXPERIMENT_DESCRIPTION: "",
      EXPERIMENT_DURATION: "",
      EXPERIMENT_AUTHOR: "",
      ISRC: "",
      MONETIZATION_STATUS: "",
      AD_AFFINITY: "",
      EARNINGS: "",
      AUDIO_RELEASE_ALBUM_NAME: "",
      AUDIO_RELEASE_ARTIST_NAME: "",
      AUDIO_RELEASE_DATE_CREATED: "",
      AUDIO_RELEASE_LABEL_NAME: "",
      AUDIO_RELEASE_ICPN: "",
      AUDIO_RELEASE_STATUS: "",
      AUDIO_ASSET_TRACK_NUMBER: "",
      AUDIO_ASSET_TRACK_NAME: "",
      AUDIO_ASSET_ARTIST_NAME: "",
      AUDIO_ASSET_START_DATE: "",
      AUDIO_ASSET_ISRC: "",
      AUDIO_ASSET_AVAILABILITY_STATUS: "",
      AUDIO_LIBRARY_POLICY_TERRITORY: "",
      AUDIO_LIBRARY_POLICY_START_DATE: "",
      AUDIO_LIBRARY_POLICY_END_DATE: "",
      AUDIO_ASSET_GEO_AVAILABILITY_STATUS: "",
    });
    d = c("keyMirrorRecursive")({ BUTTONS: "", DATES: "" });
    e = c("keyMirrorRecursive")({
      POSTS: "",
      VIDEOS: "",
      EVENTS: "",
      MESSAGES: "",
      LEAD_ADS_FORMS: "",
      VIDEOS_COPYRIGHT: "",
      SHOP: "",
      FUNDRAISERS: "",
      INSTANT_ARTICLES: "",
      CROSSPOSTED_VIDEOS: "",
      PROFILE_PICTURE_FRAMES: "",
      CURATED_COLLECTION: "",
      POLLS: "",
      JOBS: "",
      QR_CODE: "",
      BRANDED_CONTENT: "",
      GAMESHOW: "",
      MONETIZED_VIDEOS: "",
      REGISTRATIONS: "",
      POLITICAL_CONTENT: "",
      TOOLS: "",
      REWARDS: "",
      STORIES: "",
    });
    f = c("keyMirrorRecursive")({
      ADD_POSTS: "",
      CREATE_POST: "",
      CREATE_POSTS: "",
      EDIT_POSTS: "",
      INIT_PAGE: "",
      REMOVE_POST: "",
      REMOVE_POSTS: "",
      FILTER: "",
      ERROR: "",
      PAGING_CHANGED: "",
      UPDATE_FILTER_STATUS: "",
      UPDATE_STALE_CONTENT_NOTICE: "",
      QUERY_KEY_CHANGED: "",
      QUERY_CHANGED: "",
      FILTER_CHANGED: "",
      SORT_CHANGED: "",
      SET_CUSTOM_TAB_STATE: "",
      BRING_POST_TO_TOP: "",
      SET_VIDEO_LIST_ID: "",
      SET_VIDEO_LIST_HEADER_INFO: "",
      REQUEST_VIDEO_LIST_HEADER_INFO: "",
      DYNAMIC_TAB_ADDED: "",
    });
    var h = c("keyMirrorRecursive")({ SERVER: "", VIEW_ACTION: "" }),
      i = c("keyMirrorRecursive")({
        DESKTOP: "",
        MOBILE: "",
        INSTAGRAM: "",
        STORIES: "",
      }),
      j = "ASC",
      k = "DESC",
      l = "/ajax/edits/browser/post/";
    g.ACTIONS = a;
    g.COLUMNS = b;
    g.COLUMN_GROUPS = d;
    g.TABS = c("PageContentTabTabs");
    g.LEFT_NAV_GROUPS = e;
    g.ACTION_TYPES = f;
    g.PAYLOAD_SOURCES = h;
    g.PREVIEW_TABS = i;
    g.SORT_ORDER_ASC = j;
    g.SORT_ORDER_DESC = k;
    g.EDIT_HISTORY_ASYN_DIALOG = l;
    g.LIMIT = c("PageContentTabConfig").posts_per_page;
  },
  98
);
__d(
  "PagesComposerActionsTypes",
  ["keyMirror"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("keyMirror")({
      ABANDON_OFFER_UPSELL: null,
      BACKDATE: null,
      CLEAR_COMPOSER_DATA: null,
      DID_SHOW_POST_CONFIRMATION: null,
      INSTAGRAM_CROSS_POSTING: null,
      PUBLISH_NOW: null,
      SCHEDULE: null,
      SET_ADS_POST: null,
      SET_BOOSTED_POST: null,
      SET_COMPOSER_TYPE: null,
      SET_CURRENT_LOCALE: null,
      SET_DRAFT: null,
      SET_INTERCEPTION_CONFIG: null,
      SET_IS_DIALOG_COMPOSER: null,
      SET_IS_REVIEWABLE_BRANDED_CONTENT: null,
      SET_IS_RUNNING_INTERCEPTION: null,
      SET_PAGES_COMPOSER_CONFIG: null,
      SET_PAGES_COMPOSER_CONTEXT_CONFIG: null,
      SET_PREVIEW: null,
      SHOW_OFFER_UPSELL: null,
      UPDATE_PREVIEW_CONFIG: null,
    });
    g["default"] = a;
  },
  98
);
__d(
  "PagesComposerUnpublishedPostsStore",
  [
    "ClientIDs",
    "PageContentTabConstants",
    "PagesComposerActionsTypes",
    "ReactComposerStoreBase",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = {
      backdateConfig: null,
      didShowPostConfirmation: !1,
      isAdsPost: !1,
      isDraft: !1,
      isOfferUpsellAbandoned: !1,
      isOfferUpsellShown: !1,
      isPreview: !1,
      isReviewableBrandedContent: !1,
      offerConfig: null,
      previewConfig: null,
      scheduledPublishTime: null,
      stopFeedDistributionDate: null,
    };
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b;
        return (b =
          a.call(
            this,
            function () {
              return babelHelpers["extends"]({}, h);
            },
            function (a) {
              var d = babelHelpers.assertThisInitialized(b);
              switch (a.type) {
                case c("PagesComposerActionsTypes").BACKDATE:
                  a;
                  d.$PagesComposerUnpublishedPostsStore1(a);
                  break;
                case c("PagesComposerActionsTypes").SET_DRAFT:
                  d.$PagesComposerUnpublishedPostsStore2(a);
                  break;
                case c("PagesComposerActionsTypes").SCHEDULE:
                  d.$PagesComposerUnpublishedPostsStore3(a);
                  break;
                case c("PagesComposerActionsTypes").SET_ADS_POST:
                  d.$PagesComposerUnpublishedPostsStore4(a);
                  break;
                case c("PagesComposerActionsTypes").SHOW_OFFER_UPSELL:
                  d.$PagesComposerUnpublishedPostsStore5(a);
                  break;
                case c("PagesComposerActionsTypes").ABANDON_OFFER_UPSELL:
                  d.$PagesComposerUnpublishedPostsStore6(a);
                  break;
                case c("PagesComposerActionsTypes")
                  .SET_IS_REVIEWABLE_BRANDED_CONTENT:
                  d.$PagesComposerUnpublishedPostsStore7(a);
                  break;
                case c("PagesComposerActionsTypes").CLEAR_COMPOSER_DATA:
                  d.$PagesComposerUnpublishedPostsStore8(a);
                  break;
                case c("PagesComposerActionsTypes").PUBLISH_NOW:
                  d.$PagesComposerUnpublishedPostsStore9(a);
                  break;
                case c("PagesComposerActionsTypes").DID_SHOW_POST_CONFIRMATION:
                  d.$PagesComposerUnpublishedPostsStore10(a);
                  break;
                case c("PagesComposerActionsTypes").SET_PREVIEW:
                  d.$PagesComposerUnpublishedPostsStore11(a);
                  break;
                case c("PagesComposerActionsTypes").UPDATE_PREVIEW_CONFIG:
                  d.$PagesComposerUnpublishedPostsStore12(a);
                  break;
                default:
              }
            }
          ) || this);
      }
      var e = b.prototype;
      e.getPostActionType = function (a) {
        if (this.getIsPreview(a)) return "PREVIEW";
        else if (this.getIsDraft(a)) return "SAVE_DRAFT";
        else if (this.getBackdateConfig(a) != null) return "BACKDATE";
        else if (
          this.getScheduledPublishTime(a) != null ||
          this.getStopFeedDistributionTime(a) != null
        )
          return "SCHEDULE";
        else return "PUBLISH";
      };
      e.getDidShowPostConfirmation = function (a) {
        return this.getComposerData(a).didShowPostConfirmation;
      };
      e.getBackdateConfig = function (a) {
        return this.getComposerData(a).backdateConfig;
      };
      e.getIsDraft = function (a) {
        return this.getComposerData(a).isDraft;
      };
      e.getIsReviewableBrandedContent = function (a) {
        return this.getComposerData(a).isReviewableBrandedContent;
      };
      e.getScheduledPublishTime = function (a) {
        return this.getComposerData(a).scheduledPublishTime;
      };
      e.getStopFeedDistributionTime = function (a) {
        return this.getComposerData(a).stopFeedDistributionDate;
      };
      e.getIsAdsPost = function (a) {
        return this.getComposerData(a).isAdsPost;
      };
      e.getIsOfferUpsellShown = function (a) {
        return this.getComposerData(a).isOfferUpsellShown;
      };
      e.getIsOfferUpsellAbandoned = function (a) {
        return this.getComposerData(a).isOfferUpsellAbandoned;
      };
      e.getOfferConfig = function (a) {
        return this.getComposerData(a).offerConfig;
      };
      e.getIsPreview = function (a) {
        return this.getComposerData(a).isPreview;
      };
      e.getPreviewConfig = function (a) {
        return this.getComposerData(a).previewConfig;
      };
      e.$PagesComposerUnpublishedPostsStore10 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.didShowPostConfirmation = !0;
        this.emitChange(a.composerID);
      };
      e.$PagesComposerUnpublishedPostsStore1 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.backdateConfig = {
          year: a.year,
          month: a.month,
          day: a.day,
          hideFromNewsFeed: a.hideFromNewsFeed,
        };
        b.scheduledPublishTime = null;
        b.stopFeedDistributionDate = null;
        b.isDraft = !1;
        this.emitChange(a.composerID);
      };
      e.$PagesComposerUnpublishedPostsStore3 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.scheduledPublishTime = a.scheduleDate;
        b.stopFeedDistributionDate = a.stopFeedDistributionDate;
        b.backdateConfig = null;
        b.isDraft = !1;
        this.emitChange(a.composerID);
      };
      e.$PagesComposerUnpublishedPostsStore2 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.isDraft = !0;
        b.scheduledPublishTime = null;
        b.stopFeedDistributionDate = null;
        b.backdateConfig = null;
        this.emitChange(a.composerID);
      };
      e.$PagesComposerUnpublishedPostsStore4 = function (a) {
        a = this.getComposerData(a.composerID);
        a.isAdsPost = !0;
      };
      e.$PagesComposerUnpublishedPostsStore5 = function (a) {
        a = this.validateAction(a, ["composerID", "config"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.offerConfig = a;
        c.isOfferUpsellShown = !0;
        this.emitChange(b);
      };
      e.$PagesComposerUnpublishedPostsStore6 = function (a) {
        a = this.getComposerData(a.composerID);
        a.isOfferUpsellAbandoned = !0;
      };
      e.$PagesComposerUnpublishedPostsStore7 = function (a) {
        a = this.getComposerData(a.composerID);
        a.isReviewableBrandedContent = !0;
      };
      e.$PagesComposerUnpublishedPostsStore8 = function (a) {
        this.clearComposerData(a.composerID);
      };
      e.$PagesComposerUnpublishedPostsStore9 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.isDraft = !1;
        b.scheduledPublishTime = null;
        b.stopFeedDistributionDate = null;
        b.backdateConfig = null;
        this.emitChange(a.composerID);
      };
      e.$PagesComposerUnpublishedPostsStore11 = function (a) {
        var b = a.shouldReset,
          c = a.composerID;
        c = this.getComposerData(c);
        b === !0
          ? ((c.isPreview = !1), (c.previewConfig = null))
          : ((c.isPreview = !0),
            (c.previewConfig = {
              isLoadingPreview: !0,
              previewPostID: null,
              renderID: d("ClientIDs").getNewClientID(),
              selectedPreviewTab: d("PageContentTabConstants").PREVIEW_TABS
                .DESKTOP,
              showPreviewDialog: !0,
            }));
        this.emitChange(a.composerID);
      };
      e.$PagesComposerUnpublishedPostsStore12 = function (a) {
        var b,
          c,
          d,
          e,
          f = this.getComposerData(a.composerID);
        b =
          a.previewConfig.isLoadingPreview != null
            ? a.previewConfig.isLoadingPreview
            : (b = f.previewConfig) == null
            ? void 0
            : b.isLoadingPreview;
        c =
          a.previewConfig.previewPostID != null
            ? a.previewConfig.previewPostID
            : (c = f.previewConfig) == null
            ? void 0
            : c.previewPostID;
        d =
          a.previewConfig.selectedPreviewTab != null
            ? a.previewConfig.selectedPreviewTab
            : (d = f.previewConfig) == null
            ? void 0
            : d.selectedPreviewTab;
        e =
          a.previewConfig.showPreviewDialog != null
            ? a.previewConfig.showPreviewDialog
            : (e = f.previewConfig) == null
            ? void 0
            : e.showPreviewDialog;
        f.previewConfig = {
          isLoadingPreview: b,
          previewPostID: c,
          renderID:
            (c = (b = f.previewConfig) == null ? void 0 : b.renderID) != null
              ? c
              : "",
          selectedPreviewTab: d,
          showPreviewDialog: e,
        };
        this.emitChange(a.composerID);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "PlaceRecommendationEntrypoint",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      CHEVRON: "chevron",
      COMMENT: "comment",
      COMPARISON_CARD: "comparison_card",
      INTERACTIVE_STORY_CARD: "interactive_story_card",
      BOOKMARK: "bookmark",
      GROUP_COMPOSER: "group_composer",
      GROUP_TAB_COMPOSER: "group_tab_composer",
      SPROUT: "sprout",
      POST_UPSELL: "post_upsell",
      LEARN: "learn",
      PAST_REX: "past_rex",
      PLACE_PICKER: "place_picker",
      REX_BUTTON: "rex_button",
      UPSELL_CTA: "upsell_CTA",
      CITY_GUIDES: "city_guides",
      GROUP_COMPOSER_ACTION_BUTTON: "group_composer_action_button",
      FOLLOW_UP_UNIT_SHARE_NOW: "follow_up_unit_share_now",
      FOLLOW_UP_UNIT_EDIT_POST: "follow_up_unit_edit_post",
      FEED_UPSELL: "feed_upsell",
      FEED_IMPLICIT_UPSELL: "feed_implicit_upsell",
      FULL_MAP: "full_map",
      FULL_MAP_FEED_ATTACHMENT: "full_map_feed_attachment",
      FULL_MAP_PERMALINK: "full_map_permalink",
      FULL_MAP_ANNOTATION: "full_map_annotation",
      FULL_MAP_HSCROLL: "full_map_hscroll",
      FULL_MAP_MAPVIEW: "full_map_mapview",
      FULL_MAP_LISTVIEW: "full_map_listview",
      IMPLICIT_MAP: "implicit_map",
      LOOKING_FOR_MINUTIAE: "looking_for_minutiae",
      NEIGHBORHOOD_HELP: "neighborhood_help",
      NOTIFICATION: "notification",
      NUX: "nux",
      PLACE_SEARCH: "place_search",
      REJECT: "reject",
      SLOT: "slot",
      STORY: "story",
      UNSOLICITED: "unsolicited",
      XOUT: "xout",
      SERVICES_SOCIAL_REX_CROSSPOST: "services_social_rex_crosspost",
    });
    f["default"] = a;
  },
  66
);
__d(
  "PrivacyBaseState",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      EVERYONE: "everyone",
      FRIENDS: "friends",
      FRIENDS_OF_FRIENDS: "friends_of_friends",
      SELF: "self",
    });
    f["default"] = a;
  },
  66
);
__d(
  "QuestionPollTypeJSEnum",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      NON_POLL: 0,
      CHOOSE_ONE: 1,
      CHOOSE_MULTIPLE: 2,
      RANKED: 3,
      GIF_CHOOSE_ONE: 4,
      IMAGE_CHOOSE_ONE: 5,
      VISUAL_TEXT_CHOOSE_ONE: 6,
      IMAGE_CHOOSE_MULTIPLE: 7,
      PAGE_CHOOSE_MULTIPLE: 8,
      MOST_LIKELY_TO: 9,
      MEDIA_CHOOSE_ONE: 10,
    });
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerActions",
  ["ReactComposerActionTypes", "ReactComposerDispatcher", "ReactComposerStore"],
  function (a, b, c, d, e, f, g) {
    b("ReactComposerStore");
    var h;
    function a(a, b, d, e, f, g, h) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").INIT_CONFIG,
        loggingConfig: b,
        lazySproutsExpand: d,
        activateOnInit: e === !0,
        sproutsConfig: f,
        promotedSprout: g,
        triggeredFrom: h,
      });
    }
    function d(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").SCHEDULE,
        scheduleDate: b,
      });
    }
    function e(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").POST_ERROR,
        response: b,
      });
    }
    function f(a, b) {
      window.setTimeout(function () {
        (!h || h(a, b.actorID, b.config, b.targetID)) &&
          c("ReactComposerDispatcher").dispatch({
            composerID: a,
            type: c("ReactComposerActionTypes").POST_INTENDED,
            actorID: b.actorID,
            config: b.config,
            targetID: b.targetID,
          });
      }, 0);
    }
    function i(a) {
      h = a;
    }
    function j(a, b) {
      a = {
        composerID: a,
        sproutType: b,
        type: c("ReactComposerActionTypes")
          .POST_STARTED_LOGGING_ONLY_DO_NOT_USE,
      };
      c("ReactComposerDispatcher").dispatch(a);
    }
    function k(a, b) {
      l(a, b, c("ReactComposerActionTypes").POST_STARTED);
    }
    function l(a, b, d) {
      var e = b.actorID,
        f = b.composerType,
        g = b.config,
        h = b.onPostSuccess,
        i = b.onPostFailure,
        j = b.targetID,
        k = babelHelpers.objectWithoutPropertiesLoose(b, [
          "actorID",
          "composerType",
          "config",
          "onPostSuccess",
          "onPostFailure",
          "targetID",
        ]);
      window.setTimeout(function () {
        return c("ReactComposerDispatcher").dispatch({
          composerID: a,
          composerType: f,
          type: d,
          actorID: e,
          config: g,
          targetID: j,
          onPostSuccess: h,
          onPostFailure: i,
          otherData: k,
        });
      }, 0);
    }
    function m(a, b) {
      var d = b.actorID,
        e = b.composerType,
        f = b.config,
        g = b.onPostSuccess,
        h = b.targetID,
        i = babelHelpers.objectWithoutPropertiesLoose(b, [
          "actorID",
          "composerType",
          "config",
          "onPostSuccess",
          "targetID",
        ]);
      window.setTimeout(function () {
        return c("ReactComposerDispatcher").dispatch({
          composerID: a,
          composerType: e,
          type: c("ReactComposerActionTypes").PAGES_IG_PHOTO_UPLOAD_STARTED,
          actorID: d,
          config: f,
          targetID: h,
          onPostSuccess: g,
          otherData: i,
        });
      }, 0);
    }
    function n(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").PAGES_JOB_AUTOCONVERT_STARTED,
      });
    }
    function o(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").PAGES_OFFER_AUTOCONVERT_STARTED,
      });
    }
    function p(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").POST_SUCCEEDED,
        loggingToken: b,
      });
    }
    function q(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").POST_FINALLY,
        response: b,
      });
    }
    function r(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").PUBLISH_STARTED,
      });
    }
    function s(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").POST_PREPROCESSING,
      });
    }
    function t(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").COMPOSER_RESET,
      });
    }
    function u(a, b) {
      l(a, b, c("ReactComposerActionTypes").SAVE_STARTED);
    }
    function v(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").EXPAND_SPROUTS,
      });
    }
    function w(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").COLLAPSE_SPROUTS,
      });
    }
    function x(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").SET_LOGGED_SPROUT_PROMOTION_VIEW,
      });
    }
    function y(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").SET_FINISHED_SPROUT_PROMOTION,
      });
    }
    function z(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").SET_QUEUE_FINISHED_SPROUT_PROMOTION,
      });
    }
    function A(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerActionTypes").SET_IS_RUNNING_INTERCEPTION,
        isRunningInterception: b,
      });
    }
    g.initConfig = a;
    g.schedule = d;
    g.postError = e;
    g.postIntended = f;
    g.registerPostIntendedHandler = i;
    g.postStartedLoggingOnlyDoNotUse = j;
    g.postStarted = k;
    g.postOrSaveStarted = l;
    g.igPhotoUploadStarted = m;
    g.jobAutoconvertStarted = n;
    g.offerAutoconvertStarted = o;
    g.postSucceeded = p;
    g.postFinally = q;
    g.publishStarted = r;
    g.postPreprocessing = s;
    g.reset = t;
    g.saveStarted = u;
    g.expandSprouts = v;
    g.collapseSprouts = w;
    g.setLoggedSproutPromotionView = x;
    g.setFinishedSproutPromotion = y;
    g.setQueueFinishedSproutPromotion = z;
    g.setIsRunningInterception = A;
  },
  98
);
__d(
  "ReactComposerPostUtilsCore",
  ["invariant", "ReactComposerActions"],
  function (a, b, c, d, e, f, g, h) {
    function a(a, b, c) {
      (!isNaN(c) && c > 0) || h(0, 5885);
      return babelHelpers["extends"](
        { is_react: !0, xhpc_composerid: a, xhpc_targetid: c },
        b
      );
    }
    function b(a, b) {
      d("ReactComposerActions").postSucceeded(a, b),
        d("ReactComposerActions").reset(a);
    }
    g.getCoreData = a;
    g.handlePostSucceeded = b;
  },
  98
);
__d(
  "TextDelightInComposerGating",
  ["TextDelightConfig", "gkx"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function h(a) {
      return a === "post" ? c("gkx")("678313") : !1;
    }
    function a(a) {
      return h(a) && c("TextDelightConfig").composerOptions.enabled;
    }
    function b(a) {
      return (
        h(a) &&
        c("TextDelightConfig").composerOptions.enabled &&
        c("TextDelightConfig").composerOptions.highlightEnabled
      );
    }
    function d(a) {
      return (
        h(a) &&
        c("TextDelightConfig").composerOptions.enabled &&
        c("TextDelightConfig").composerOptions.backspaceEnabled
      );
    }
    function e(a) {
      return (
        h(a) &&
        c("TextDelightConfig").composerOptions.enabled &&
        c("TextDelightConfig").composerOptions.xbuttonEnabled
      );
    }
    g.checkGKForSurface = h;
    g.isEnabled = a;
    g.isHighlightEnabled = b;
    g.isBackspaceEnabled = d;
    g.isXbuttonEnabled = e;
  },
  98
);
__d(
  "XCometPlayWithFriendsShareAttachmentControllerRouteBuilder",
  ["jsRouteBuilder"],
  function (a, b, c, d, e, f, g) {
    a = c("jsRouteBuilder")(
      "/instantgames/playwithfriends/play/{game_id}/",
      Object.freeze({}),
      void 0
    );
    b = a;
    g["default"] = b;
  },
  98
);
__d(
  "XComposerPublisherCreationHooksController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/async/publisher/creation-hooks/", {
      data: { type: "TypeAssert" },
      story_id: { type: "String" },
    });
  },
  null
);
__d(
  "ComposerPublisher",
  [
    "invariant",
    "ActorURI",
    "AsyncRequest",
    "AsyncResponse",
    "BrandedContentSharedToSponsorStatus",
    "BrandedContentSponsorRelationship",
    "ComposerEditCallsite",
    "ComposerPublishType",
    "ComposerPublisherSupportedParameters",
    "ComposerStoryCreateWebMutation.graphql",
    "ComposerStoryEditWebMutation.graphql",
    "ConstUriUtils",
    "CurrentUser",
    "FBLogger",
    "InstantGamesFeedTypedLogger",
    "MentionsUtils",
    "ODS",
    "OGComposerSuggestionMechanisms",
    "PagesComposerContextUtils",
    "PagesComposerGraphMLGate",
    "PagesComposerUnpublishedPostsStore",
    "PlaceRecommendationEntrypoint",
    "PrivacyBaseState",
    "Promise",
    "QuestionPollTypeJSEnum",
    "ReactComposerActions",
    "ReactComposerMediaUploadStore",
    "ReactComposerPostUtilsCore",
    "ReactComposerStore",
    "ReactComposerWebUnusedParameters",
    "ReactComposerWebWhitelistParameters",
    "TextDelightInComposerGating",
    "WebGraphQLLegacyHelper",
    "XCometPlayWithFriendsShareAttachmentControllerRouteBuilder",
    "XComposerPublisherCreationHooksController",
    "XWebGraphQLMutationController",
    "compactArray",
    "enumUtils",
    "isEmpty",
    "nullthrows",
    "promiseDone",
    "uuidv4",
  ],
  function (a, b, c, d, e, f, g, h) {
    var i,
      j = {
        publish: function (a, b, d) {
          d = j.translateData(a.actorID, a.composerID, d, b);
          j._publishImpl(
            a.actorID,
            d,
            c("nullthrows")(
              c("ComposerStoryCreateWebMutation.graphql").params.id
            ),
            j._getCreationSuccessHandler(a, d),
            j._getErrorHandler(a.composerID, a.onPostFailure),
            j._getFinallyHandler(a.composerID, null)
          );
        },
        publishFromShareDialog: function (a, b, d, e, f) {
          var g = j.translateDataFromShareDialog(b);
          j._publishImpl(
            b.actorId,
            g,
            c("nullthrows")(
              c("ComposerStoryCreateWebMutation.graphql").params.id
            ),
            j._getSuccessHandler(a, g, d, e),
            j._getErrorHandler(a, e),
            j._getFinallyHandler(a, f)
          );
        },
        _publishEditImpl: function (a, b, d, e, f) {
          j._publishImpl(
            a,
            d,
            c("nullthrows")(
              c("ComposerStoryEditWebMutation.graphql").params.id
            ),
            j._getSuccessHandler(b, d, e, f),
            j._getErrorHandler(b, f),
            j._getFinallyHandler(b, null)
          );
        },
        _publishImpl: function (a, b, e, f, g, h) {
          c("promiseDone")(
            j._graphQLRequestPromise(a, b, e).then(f, g)["finally"](h)
          ),
            d("ODS").bumpEntityKey(2966, "webgraphml_publish", "hit");
        },
        _graphQLRequestPromise: function (a, e, f) {
          var g = d("WebGraphQLLegacyHelper").getURI({
            controller: c("XWebGraphQLMutationController"),
            docID: f,
          });
          return new (i || (i = b("Promise")))(function (b, d) {
            var f = new (c("AsyncRequest"))(g)
              .setHandler(function (a) {
                return b(a);
              })
              .setErrorHandler(function (a) {
                return d(a);
              })
              .setData({
                variables: JSON.stringify({
                  client_mutation_id: c("uuidv4")(),
                  actor_id: a,
                  input: e,
                }),
              });
            f.send();
          });
        },
        _getSuccessHandler: function (a, b, c, e) {
          return function (f) {
            var g = j._getFirstGraphQLError(f);
            if (g) {
              j._handleGraphQLError(a, f, e);
              return;
            }
            window.setTimeout(function () {
              var e = j._getShouldSkipPostSucceededHandler(a, b, f);
              if (!e) {
                d("ReactComposerPostUtilsCore").handlePostSucceeded(
                  a,
                  (e = (e = f.payload) == null ? void 0 : e.logging_token) !=
                    null
                    ? e
                    : (e = f.payload) == null
                    ? void 0
                    : (e = e.data) == null
                    ? void 0
                    : (e = e.story_create) == null
                    ? void 0
                    : e.logging_token
                );
              }
              c && c(f);
            }, 0);
          };
        },
        _getCreationSuccessHandler: function (a, b) {
          return function (c) {
            var e, f;
            e =
              c == null
                ? void 0
                : (e = c.payload) == null
                ? void 0
                : (e = e.data) == null
                ? void 0
                : e.story_create;
            var g =
                (e == null ? void 0 : e.story_id) ||
                (e == null ? void 0 : (f = e.story) == null ? void 0 : f.id),
              h = e == null ? void 0 : e.logging_token;
            if (g == null)
              return j._getSuccessHandler(
                a.composerID,
                b,
                a.onPostSuccess,
                a.onPostFailure
              )(c);
            else {
              f = function (c) {
                j._getSuccessHandler(
                  a.composerID,
                  b,
                  a.onPostSuccess,
                  a.onPostFailure
                )(
                  babelHelpers["extends"]({}, c, {
                    payload: { story_id: g, logging_token: h },
                  })
                );
              };
              e = function (b) {
                window.setTimeout(function () {
                  d("ReactComposerActions").reset(a.composerID),
                    window.location.reload();
                }, 0);
              };
              return j._renderRequestPromise(a.actorID, g, b).then(f, e);
            }
          };
        },
        _renderRequestPromise: function (a, e, f) {
          var g = d("ActorURI").create(
            c("XComposerPublisherCreationHooksController")
              .getURIBuilder()
              .getURI(),
            a
          );
          return new (i || (i = b("Promise")))(function (a, b) {
            new (c("AsyncRequest"))(g)
              .setHandler(function (b) {
                return a(b);
              })
              .setErrorHandler(function (a) {
                return b(a);
              })
              .setData({ data: j._getPostCreationHooksData(f), story_id: e })
              .send();
          });
        },
        _getFirstGraphQLError: function (a) {
          return a.payload && a.payload.errors && a.payload.errors[0];
        },
        _getErrorHandler: function (a, b) {
          return function (c) {
            var d = j._getFirstGraphQLError(c);
            if (d) {
              j._handleGraphQLError(a, c, b);
              return;
            }
            j._handleWebFailure(a, c, b);
          };
        },
        _handleGraphQLError: function (a, b, d) {
          var e = j._getFirstGraphQLError(b);
          b = new (c("AsyncResponse"))(b.getRequest(), b);
          b.errorSummary = e ? e.summary : null;
          b.errorDescription = e ? e.description : null;
          b.silentError = e && e.is_silent;
          b.transientError = e && e.is_transient;
          j._handleWebFailure(a, b, d);
        },
        _handleWebFailure: function (a, b, c) {
          window.setTimeout(function () {
            d("ReactComposerActions").postError(a, b), c && c(b);
          }, 0);
        },
        _getFinallyHandler: function (a, b) {
          return function (c) {
            window.setTimeout(function () {
              d("ReactComposerActions").postFinally(a, c), b && b(c);
            }, 0);
          };
        },
        _getShouldSkipPostSucceededHandler: function (a, b, e) {
          a = c("PagesComposerUnpublishedPostsStore").getIsPreview(a);
          if (a) return !0;
          if (
            d("PagesComposerContextUtils").getIsDialogComposer(
              b.composer_entry_point
            ) ||
            ((a = b) != null
              ? (a = a.web_graphml_migration_params) != null
                ? a.is_dialog_composer
                : a
              : a)
          )
            return !0;
          return e.payload && e.payload.isPostPending ? !0 : !1;
        },
        _getSharedCreateMutationData: function (a, b, d, e, f, g, h, i, k, l) {
          var m = {
            actor_id: a,
            client_mutation_id: c("uuidv4")(),
            source: "WWW",
          };
          if (b && b.type === "STORIES")
            m.audiences = [{ stories: { self: { target_id: d } } }];
          else if (b && b.type === "MESSENGER") {
            var n = [];
            b.messenger_ids
              .parseIndividualAndExistingGroups()
              .forEach(function (a) {
                n.push({ direct: { target_id: a } });
              });
            b.messenger_ids.parseNewMessengerGroups().forEach(function (a) {
              n.push({ direct: { group: { participants: { users: a } } } });
            });
            m.audiences = n;
          } else
            k && k === "multi_direct"
              ? (m.audiences = [{ multi_direct: { users: l } }])
              : d && j._getIsDirectedPost(a, d)
              ? (m.audience = { to_id: d })
              : c("CurrentUser").getAccountID() !== a && e === null
              ? (m.audience = { privacy: { base_state: "EVERYONE" } })
              : (m.audience = { web_privacyx: e });
          h && (m.message = j._getTranslatedTextWithEntitiesFields(h, i));
          return j._getSharedMutationData(m, f, g);
        },
        _getSharedMutationData: function (a, b, d) {
          b = { composer_session_id: b || c("uuidv4")() };
          d && (b.ref = d);
          a.logging = b;
          return a;
        },
        _getCommonOriginalMutationData: function (a, b) {
          b.composertags_with && (a.with_tags_ids = b.composertags_with);
          b.multilingual_specified_lang &&
            (a.specified_dialect = b.multilingual_specified_lang);
          if (b.multilingual_statuses && b.multilingual_status_langs) {
            var c = b.multilingual_status_langs,
              d = b.multilingual_rich_text,
              e = {};
            d == null
              ? void 0
              : d.forEach(function (a) {
                  e[a.dialect] = a.composedTextParams;
                });
            a.multilingual_translations =
              (d = b.multilingual_statuses) == null
                ? void 0
                : d.map(function (a, b) {
                    return {
                      message: a,
                      dialect: c[b],
                      composed_text: e[c[b]],
                    };
                  });
          }
          return a;
        },
        translateDataFromShareDialog: function (a) {
          var b = j._getSharedCreateMutationData(
            a.actorId,
            null,
            null,
            a.privacy,
            a.composerSessionID,
            null,
            a.message
          );
          b.attachments = {
            link: {
              internal_linkable_id: a.postId,
              shared_from_post_id: a.postId,
            },
          };
          a.isForcedReshareOfPost &&
            (b.reshare_original_post = "RESHARE_ORIGINAL_POST");
          b.web_graphml_migration_params = { composer_type: "RESHARE" };
          a.videoStartTimeMs && (b.video_start_time_ms = a.videoStartTimeMs);
          return b;
        },
        publishFromEditDialog: function (a, b) {
          j._publishEditImpl(
            a.actorID,
            a.composerID,
            j.translateDataFromEditDialog(
              a.actorID,
              a.composerID,
              b,
              a.composerConfig
            ),
            a.onPostSuccess,
            a.onPostFailure
          );
        },
        translateDataFromEditDialog: function (a, b, d, e) {
          e === void 0 && (e = {});
          var f = d.story_token;
          f || h(0, 2576);
          a = { actor_id: a, client_mutation_id: c("uuidv4")(), story_id: f };
          a = j._getCommonOriginalMutationData(a, d);
          if (d.album_id) a.audience = { album_id: d.album_id };
          else if (d.privacyx) {
            f = { web_privacyx: d.privacyx };
            a.audience = f;
          }
          a.editable_post_feature_capabilities = ["STICKER", "CONTAINED_MEDIA"];
          d.xc_sticker_id === 0
            ? (a.sticker_id = null)
            : d.xc_sticker_id && (a.sticker_id = d.xc_sticker_id);
          d.composertags_place && d.is_explicit_place
            ? (a.explicit_place_id = d.composertags_place)
            : d.composertags_place_name
            ? (a.place_name = d.composertags_place_name)
            : d.composertags_city
            ? (a.implicit_place_id = String(d.composertags_city))
            : (a.explicit_place_id = null);
          f = {};
          if (
            d.action_type_id &&
            d.action_type_id.length &&
            (d.object_id || d.object_str)
          ) {
            f.taggable_activity_id = d.action_type_id[0];
            d.object_id && (f.object_id = d.object_id[0]);
            d.object_str && (f.object_text = d.object_str[0]);
            d.icon_id && (f.icon_id = d.icon_id);
            d.hide_object_attachment &&
              (f.object_attachment_behavior = d.hide_object_attachment
                ? "HIDDEN"
                : "SHOWN");
            if (d.og_suggestion_mechanism)
              for (var g in c("OGComposerSuggestionMechanisms"))
                if (
                  c("OGComposerSuggestionMechanisms")[g] ==
                  d.og_suggestion_mechanism
                ) {
                  f.suggestion_mechanism = g;
                  break;
                }
            a.inline_activities = [f];
          } else a.inline_activities = [];
          if (d.xc_edit_callsite) {
            g = {
              edit_callsite: j._getTranslatedEnum(
                d.xc_edit_callsite,
                c("ComposerEditCallsite")
              ),
            };
            d.xc_story_dom_id && (g.story_dom_id = d.xc_story_dom_id);
            d.xhpc_composerid &&
              (g.composer_dom_element_id = d.xhpc_composerid);
            d.xc_entstory_context &&
              (g.entstory_context = d.xc_entstory_context);
            d.save_only && (g.save_only = d.save_only);
            a.web_graphml_migration_params = g;
          }
          d.xhpc_message
            ? (a.message = j._getTranslatedTextWithEntitiesFields(
                d.xhpc_message,
                d.delight_ranges
              ))
            : (a.message = null);
          d.is_markdown != null &&
            (a.formatting =
              j._getComposerSupportsMarkdown(e) && d.is_markdown
                ? "MARKDOWN"
                : "PLAINTEXT");
          f = d.composer_unpublished_photo;
          if (d.attachment && d.attachment.params)
            (a.attachments = [
              {
                link: j._translateShareAttachment(
                  d.attachment.type,
                  d.attachment.params,
                  d.attachment.shared_from_post_id
                ),
              },
            ]),
              ((d.attachment && d.attachment.reshare_original_post) ||
                d.is_forced_reshare_of_post) &&
                (a.reshare_original_post = "RESHARE_ORIGINAL_POST"),
              a.editable_post_feature_capabilities.push("CONTAINED_LINK");
          else if (f) {
            var i = [],
              k = j._getPhotos(b);
            f.forEach(function (a) {
              k.includes(a)
                ? i.push({ photo: { id: a } })
                : i.push({ video: { id: a, notify_when_processed: !0 } });
            });
            a.attachments = i;
            a.editable_post_feature_capabilities.push("CONTAINED_LINK");
          } else
            d.attachment === null &&
              ((a.attachments = []),
              a.editable_post_feature_capabilities.push("CONTAINED_LINK"));
          g = d.life_event_data;
          g && (a = j._getTranslatedLifeEventAttachment(a, g));
          j._augmentMultiShareAttachmentData(b, a);
          c("isEmpty")(d.action_post_attachment_data) ||
            (a.action_post_attachment_data = d.action_post_attachment_data);
          c("isEmpty")(d.work_checklist_metadata) ||
            (a.work_checklist_metadata = d.work_checklist_metadata);
          d.blocks &&
            (a.composed_text = {
              block_data: d.block_data,
              block_depths: d.block_depths,
              block_types: d.block_types,
              blocks: d.blocks,
              entities: d.entities,
              entity_map: d.entity_map,
              inline_styles: d.inline_styles,
            });
          return j._getSharedMutationData(a, d.composer_session_id, null);
        },
        _translateShareAttachment: function (a, b, c) {
          return {
            share_scrape_data: JSON.stringify({
              share_type: a,
              share_params: b,
              shared_from_post_id: c,
            }),
          };
        },
        _getTranslatedEnum: function (a, b) {
          var c = null;
          for (var d in b)
            if (b[d] === a) {
              c = d;
              break;
            }
          c || h(0, 2577, a);
          return c;
        },
        _getValueFromEnumKey: function (a, b) {
          var c = null;
          for (var d in b)
            if (d === a) {
              c = b[d];
              break;
            }
          c || h(0, 11345, a);
          return c;
        },
        _getComposerSupportsMarkdown: function (a) {
          var b;
          b =
            ((b = a) != null
              ? (b = b.sproutsConfig) != null
                ? (b = b.MARKDOWN) != null
                  ? b.enabled
                  : b
                : b
              : b) === !0;
          a =
            ((a = a) != null
              ? (a = a.taggersConfig) != null
                ? (a = a.MARKDOWN) != null
                  ? a.enabled
                  : a
                : a
              : a) === !0;
          return b || a ? !0 : !1;
        },
        translateData: function (a, b, e, f) {
          var g = j._getSharedCreateMutationData(
            a,
            e,
            f.xhpc_targetid,
            f.privacyx,
            f.composer_session_id,
            f.ref,
            f.xhpc_message,
            f.delight_ranges,
            f.target_type,
            f.composertags_with
          );
          g = j._getCommonOriginalMutationData(g, f);
          g.camera_post_context = {
            deduplication_id: f.composer_session_id,
            source: "composer",
          };
          if (f.instagram_business_account_id || f.crosspost_group_id) {
            var h = {};
            f.instagram_business_account_id &&
              (h.instagram_business_account_ids = [
                f.instagram_business_account_id,
              ]);
            f.crosspost_group_id && (h.group_ids = [f.crosspost_group_id]);
            g.page_crossposting_metadata = h;
          }
          f.xc_sticker_id && (g.referenced_sticker_id = f.xc_sticker_id);
          f.is_welcome_to_group_post &&
            (g.is_welcome_to_group_post = f.is_welcome_to_group_post);
          f.is_ama === !0 && (g.ama_post_metadata = { enabled: !0 });
          f.composer_source_surface &&
            (g.composer_source_surface = f.composer_source_surface);
          f.composer_entry_point &&
            (g.composer_entry_point = f.composer_entry_point);
          f.composer_entry_time &&
            (g.composer_entry_time = f.composer_entry_time);
          h = f.cta_data;
          h &&
            (g.call_to_action_data = {
              type: h.type,
              is_cta_share_post: h.value.is_cta_share_post,
              service_config_id: h.value.service_config_id,
              link: h.value.link,
              customized_message_page_cta_text:
                h.value.customized_message_page_cta_text,
              link_format:
                f.attachment && !c("isEmpty")(f.attachment.videoID)
                  ? "VIDEO_LPP"
                  : null,
            });
          h = {};
          f.composer_session_duration &&
            (h.composition_duration = f.composer_session_duration);
          f.num_keystrokes && (h.number_of_keystrokes = f.num_keystrokes);
          f.num_pastes && (h.number_of_copy_pastes = f.num_pastes);
          ("composer_session_duration" in f ||
            "num_keystrokes" in f ||
            "num_pastes" in f) &&
            (g.composer_session_events_log = h);
          f.composer_type && (g.composer_type = f.composer_type);
          f.is_q_and_a && (g.is_q_and_a = f.is_q_and_a);
          f.is_markdown && (g.formatting = "MARKDOWN");
          f.text_format_preset_id &&
            (g.text_format_preset_id = f.text_format_preset_id);
          if (
            f.action_type_id &&
            f.action_type_id.length &&
            (f.object_id || f.object_str)
          ) {
            h = { taggable_activity_id: f.action_type_id[0] };
            f.object_id && (h.object_id = f.object_id[0]);
            f.object_str && (h.object_text = f.object_str[0]);
            f.icon_id && (h.icon_id = f.icon_id);
            f.hide_object_attachment &&
              (h.object_attachment_behavior = f.hide_object_attachment
                ? "HIDDEN"
                : "SHOWN");
            if (f.og_suggestion_mechanism)
              for (var i in c("OGComposerSuggestionMechanisms"))
                if (
                  c("OGComposerSuggestionMechanisms")[i] ==
                  f.og_suggestion_mechanism
                ) {
                  h.suggestion_mechanism = i;
                  break;
                }
            g.inline_activities = [h];
          }
          if (f.composertags_sponsors) {
            if (f.branded_content_data) {
              i = f.branded_content_data;
              if (i.tagging_data) {
                h = i.tagging_data;
                i.tagging_data = babelHelpers["extends"]({}, i.tagging_data, {
                  shared_to_sponsor_status: d(
                    "enumUtils"
                  ).enumValueToKeyEnforcing(
                    h.shared_to_sponsor_status,
                    c("BrandedContentSharedToSponsorStatus")
                  ),
                  sponsor_relationship: d("enumUtils").enumValueToKeyEnforcing(
                    h.sponsor_relationship,
                    c("BrandedContentSponsorRelationship")
                  ),
                  can_sponsor_add_cta: h.can_sponsor_add_cta === 1,
                });
              }
              g.branded_content_data = f.branded_content_data;
            }
            g.sponsor_id = f.composertags_sponsors[0];
            g.direct_share_status = d("enumUtils").enumValueToKey(
              f.direct_share_status,
              c("BrandedContentSharedToSponsorStatus")
            );
            g.sponsor_relationship = d("enumUtils").enumValueToKey(
              f.sponsor_relationship,
              c("BrandedContentSponsorRelationship")
            );
          }
          i = {};
          f.is_also_posting_video_to_feed &&
            (i.is_also_posting_video_to_feed = f.is_also_posting_video_to_feed);
          c("isEmpty")(f.feed_targeted_data) ||
            (i.feed_targeted_data = JSON.stringify(f.feed_targeted_data));
          c("isEmpty")(f.targeted_privacy_data) ||
            (i.targeted_privacy_data = JSON.stringify(f.targeted_privacy_data));
          c("isEmpty")(f.boosted_post_config) ||
            (i.boosted_post_config = f.boosted_post_config);
          f.target_type && (i.target_type = f.target_type);
          f.xhpc_aggregated_story_composer &&
            (i.xhpc_aggregated_story_composer =
              f.xhpc_aggregated_story_composer);
          f.xhpc_composerid && (i.xhpc_composerid = f.xhpc_composerid);
          f.xhpc_context && (i.xhpc_context = f.xhpc_context);
          f.xhpc_finch && (i.xhpc_finch = f.xhpc_finch);
          f.xhpc_fundraiser_page &&
            (i.xhpc_fundraiser_page = f.xhpc_fundraiser_page);
          if (f.xhpc_publish_type)
            for (h in c("ComposerPublishType"))
              if (c("ComposerPublishType")[h] == f.xhpc_publish_type) {
                i.xhpc_publish_type = h;
                break;
              }
          f.xhpc_timeline && (i.xhpc_timeline = f.xhpc_timeline);
          f.backdated_date &&
            f.backdated_date.year &&
            (i.backdated_array = f.backdated_date);
          f.qn && (i.waterfall_id = f.qn);
          f.post_to_marketplace &&
            (i.xpost_to_marketplace = f.post_to_marketplace);
          f.composer_attachment_sell_audience_target_ids &&
            (i.xpost_target_ids =
              f.composer_attachment_sell_audience_target_ids);
          f.is_dialog_composer && (i.is_dialog_composer = f.is_dialog_composer);
          i && (g.web_graphml_migration_params = i);
          f.fun_fact_prompt_id && (g.fun_fact_prompt_id = f.fun_fact_prompt_id);
          if (f.asked_fun_fact_prompt_data) {
            h = f.asked_fun_fact_prompt_data.prompt_title;
            h &&
              (g.asked_fun_fact_prompt_data = {
                prompt_title: j._getTranslatedTextWithEntitiesFields(h).text,
              });
          }
          f.memorial_tribute_metadata &&
            (g.memorial_tribute_metadata = f.memorial_tribute_metadata);
          f.extensible_sprouts_ranker_request &&
            (g.extensible_sprouts_ranker_request =
              f.extensible_sprouts_ranker_request);
          i =
            f.external_movie_data != null
              ? babelHelpers["extends"]({}, f.external_movie_data, {
                  external_movie_id:
                    ((i = f.external_movie_data) == null
                      ? void 0
                      : i.external_movie_id) !== ""
                      ? (h = f.external_movie_data) == null
                        ? void 0
                        : h.external_movie_id
                      : null,
                })
              : null;
          f.external_movie_data && (g.external_movie_data = i);
          f.place_attachment_setting === 1
            ? (g.place_attachment_setting = "HIDE_ATTACHMENT")
            : f.place_attachment_setting === 2 &&
              (g.place_attachment_setting = "SHOW_ATTACHMENT");
          f.work_learning_unit && (g.work_learning_unit = f.work_learning_unit);
          if (f.is_placelist_post) {
            h = { is_placelist_post: f.is_placelist_post };
            f.placelist_within_page &&
              (h.placelist_within_page = f.placelist_within_page);
            if (f.place_list_entry_point)
              for (i in c("PlaceRecommendationEntrypoint"))
                if (
                  c("PlaceRecommendationEntrypoint")[i] ==
                  f.place_list_entry_point
                ) {
                  h.place_list_entry_point = i;
                  break;
                }
            g.placelist_data = h;
          }
          f.ask_admin_to_post === !0 &&
            (g.ask_admin_to_post_for_user = { is_asking_admin_to_post: !0 });
          f.is_preview === !0
            ? (g.unpublished_content_data = {
                unpublished_content_type: "PREVIEW",
              })
            : f.is_ad_post === !0
            ? (g.unpublished_content_data = {
                unpublished_content_type: "ADS_POST",
              })
            : f.draft === !0 || f.unpublished_content_type === "DRAFT"
            ? (g.unpublished_content_data = {
                unpublished_content_type: "DRAFT",
              })
            : (f.scheduled === !0 ||
                f.unpublished_content_type === "SCHEDULED") &&
              f.scheduled_publish_time &&
              f.unpublished_content_type !== "SCHEDULED_RECURRING"
            ? (g.unpublished_content_data = {
                unpublished_content_type: "SCHEDULED",
                scheduled_publish_time: f.scheduled_publish_time,
              })
            : (f.scheduled === !0 ||
                f.unpublished_content_type === "SCHEDULED_RECURRING") &&
              f.scheduled_publish_time &&
              (g.unpublished_content_data = {
                unpublished_content_type: "SCHEDULED",
                scheduled_publish_time: f.scheduled_publish_time,
                scheduled_post_recurrence_config: {
                  frequency: f.post_frequency,
                  end_time: f.recurring_post_end_time,
                },
              });
          f.composertags_place
            ? (g.explicit_place_id = f.composertags_place)
            : f.composertags_city
            ? (g.implicit_place_id = String(f.composertags_city))
            : f.composertags_place_name &&
              (g.place_name = f.composertags_place_name);
          c("isEmpty")(f.animated_image) ||
            (g.animated_image = f.animated_image);
          c("isEmpty")(f.event_tag) || (g.event_tag = f.event_tag);
          c("isEmpty")(f.holiday_card) || (g.holiday_card = f.holiday_card);
          c("isEmpty")(f.detection_analytics_data) ||
            (g.detection_analytics_data = f.detection_analytics_data);
          c("isEmpty")(f.page_recommendation_ids) ||
            (g.page_recommendation_ids = f.page_recommendation_ids);
          c("isEmpty")(f.page_recommendation) ||
            (g.page_recommendation = f.page_recommendation);
          c("isEmpty")(f.story_list_attachment_data) ||
            (g.story_list_attachment_data = f.story_list_attachment_data);
          c("isEmpty")(f.asset3d_id) || (g.asset3d_id = f.asset3d_id);
          c("isEmpty")(f.living_room_attachment) ||
            (g.living_room_attachment = f.living_room_attachment);
          c("isEmpty")(f.video_meetup) || (g.video_meetup = f.video_meetup);
          c("isEmpty")(f.chatroom) || (g.chatroom = f.chatroom);
          c("isEmpty")(f.local_dev_platform_app_instance) ||
            (g.local_dev_platform_app_instance =
              f.local_dev_platform_app_instance);
          c("isEmpty")(f.action_post_attachment_data) ||
            (g.action_post_attachment_data = f.action_post_attachment_data);
          c("isEmpty")(f.poll_question_data) ||
            (g.poll_question_data = j._getTranslatedPollQuestionData(
              f.poll_question_data
            ));
          c("isEmpty")(f.draft_id) ||
            (g.post_from_draft = { draft_id: f.draft_id });
          f.instant_game_entry_point_data &&
            (g.instant_game_entry_point_data = f.instant_game_entry_point_data);
          f.has_support_now_cta &&
            (f.target_type === "group"
              ? (g.user_funding_promotion_metadata = {
                  is_removed: !1,
                  profile_id: f.xhpc_targetid,
                  type: f.user_funding_attachment_type,
                })
              : (g.fan_funding_promotion_metadata = {
                  is_promotional_post: f.has_support_now_cta,
                  page_id: a,
                  payload: f.fan_funding_promotion_payload,
                }));
          c("isEmpty")(f.work_checklist_metadata) ||
            (g.work_checklist_metadata = f.work_checklist_metadata);
          i = [];
          !c("isEmpty")(f.cta_data) &&
          f.attachment &&
          !c("isEmpty")(f.attachment.photoID)
            ? (i = [{ photo: { id: f.attachment.photoID } }])
            : !c("isEmpty")(f.cta_data) &&
              f.attachment &&
              !c("isEmpty")(f.attachment.videoID)
            ? (i = [
                {
                  video: {
                    id: f.attachment.videoID,
                    notify_when_processed: !0,
                  },
                },
              ])
            : f.attachment && f.attachment.params
            ? ((i = [
                {
                  link: j._translateShareAttachment(
                    f.attachment.type,
                    f.attachment.params,
                    f.attachment.shared_from_post_id
                  ),
                },
              ]),
              ((f.attachment && f.attachment.reshare_original_post) ||
                f.is_forced_reshare_of_post) &&
                (g.reshare_original_post = "RESHARE_ORIGINAL_POST"))
            : f.composer_unpublished_photo
            ? (i = j._getTranslatedMediaAttachments(
                e,
                j._getPhotos(b),
                f.composer_unpublished_photo,
                f.composer_custom_accessibility_caption,
                f.composer_has_crop,
                f.composer_has_filter,
                f.composer_text_overlay,
                f.composer_sticker,
                f.xy_tags
              ))
            : f.attachment_poll_data &&
              (i = [
                {
                  poll: {
                    poll_type: f.attachment_poll_data.poll_type,
                    poll_answers_state:
                      f.attachment_poll_data.poll_answers_state,
                    options: f.attachment_poll_data.options,
                  },
                },
              ]);
          if (f.play_with_friends_game_id) {
            h = c("ReactComposerStore").getTargetType(b);
            new (c("InstantGamesFeedTypedLogger"))()
              .setEvent("play_with_friends_composer_post_attempted")
              .setUISurface("play_with_friends_attachment")
              .setGameID(f.play_with_friends_game_id)
              .setGroupID(h == "group" ? f.xhpc_targetid : null)
              .setPostPrivacyID(f.privacyx)
              .log();
            g.play_with_friends_game_id = f.play_with_friends_game_id;
            a = c(
              "XCometPlayWithFriendsShareAttachmentControllerRouteBuilder"
            ).buildURL({ game_id: parseInt(f.play_with_friends_game_id, 10) });
            i.push({
              link: {
                external: {
                  url:
                    (e = d("ConstUriUtils").getUri(a)) == null
                      ? void 0
                      : (h = e.getQualifiedUri()) == null
                      ? void 0
                      : h.toString(),
                },
              },
            });
          }
          a = j._getProductItemAttachment(f, g.message);
          if (a) {
            e = { product_item: a };
            i.push(e);
          }
          if (f.charity_id) {
            h = { fundraiser_for_story: { charity_id: f.charity_id } };
            i.push(h);
          }
          a = f.life_event_data;
          a && (g = j._getTranslatedLifeEventAttachment(g, a));
          c("isEmpty")(i) || (g.attachments = i);
          j._augmentMultiShareAttachmentData(b, g);
          f.blocks &&
            (g.composed_text = {
              block_data: f.block_data,
              block_depths: f.block_depths,
              block_types: f.block_types,
              blocks: f.blocks,
              entities: f.entities,
              entity_map: f.entity_map,
              inline_styles: f.inline_styles,
            });
          return g;
        },
        _augmentMultiShareAttachmentData: function (a, b) {},
        _getPostCreationHooksData: function (a) {
          var b = {};
          a.audiences && (b.audiences = j._getAudiencesData(a.audiences));
          a.audience && (b.audience = j._getAudienceData(a.audience));
          var d = a.web_graphml_migration_params;
          d &&
            d.xhpc_publish_type &&
            (d.xhpc_publish_type = j._getValueFromEnumKey(
              d.xhpc_publish_type,
              c("ComposerPublishType")
            ));
          b.web_graphml_migration_params = d;
          b.past_time = a.past_time;
          b.is_q_and_a = a.is_q_and_a;
          b.is_local_dev_platform_app_instance =
            a.local_dev_platform_app_instance != null;
          d = a.page_recommendation_ids;
          var e = a.page_recommendation;
          b.is_page_recommendation = (d != null && d.length !== 0) || e != null;
          a.attachments &&
            (b.media_attachments = j._getMediaAttachments(a.attachments));
          b.call_to_action_data = a.call_to_action_data;
          d = a.logging;
          b.logging_ref = d && d.ref;
          e = a.message;
          b.message_text = e && e.text;
          d = a.unpublished_content_data;
          b.unpublished_content_type = d && d.unpublished_content_type;
          return b;
        },
        _getAudiencesData: function (a) {
          return a == null
            ? a
            : a.map(function (a) {
                var b,
                  d = a == null ? void 0 : a.undirected;
                b =
                  a == null
                    ? void 0
                    : (b = a.undirected) == null
                    ? void 0
                    : b.privacy;
                a &&
                  d &&
                  b &&
                  ((b.base_state = j._getValueFromEnumKey(
                    b.base_state,
                    c("PrivacyBaseState")
                  )),
                  (d.privacy = b),
                  (a.undirected = d));
                return a;
              });
        },
        _getAudienceData: function (a) {
          if (a == null) return a;
          var b = a;
          a = a.privacy;
          a &&
            (a == null ? void 0 : a.base_state) &&
            ((a.base_state = j._getValueFromEnumKey(
              a.base_state,
              c("PrivacyBaseState")
            )),
            (b.privacy = a));
          return b;
        },
        _getMediaAttachments: function (a) {
          if (a == null) return a;
          a = a.map(function (a) {
            if (!a || (!a.photo && !a.video)) return null;
            var b = {};
            a.photo && (b.photo = { id: a.photo.id, tags: a.photo.tags });
            a.video && a.video.id && (b.video = { id: a.video.id });
            return b;
          });
          return c("compactArray")(a);
        },
        _getGraphQLConditionKey: function (a) {
          switch (a) {
            case "new":
              return "NEW_ITEM";
            case "refurbished":
              return "REFURBISHED";
            default:
              return "USED";
          }
        },
        _getProductItemAttachment: function (a, b) {
          if (
            a.composer_attachment_sell_price &&
            a.composer_attachment_sell_title
          ) {
            var c = {
              title: a.composer_attachment_sell_title,
              item_price: {
                price: a.composer_attachment_sell_price,
                currency: a.composer_attachment_sell_currency,
              },
              location_page_id: a.composer_attachment_sell_location_page_id,
              condition: j._getGraphQLConditionKey(
                a.composer_attachment_sell_condition
              ),
            };
            a.composer_attachment_sell_pickup_note &&
              (c.pickup_note = j._getTranslatedTextWithEntitiesFields(
                a.composer_attachment_sell_pickup_note
              ));
            b && (c.description = b);
            return c;
          }
          return null;
        },
        _getTranslatedMediaAttachments: function (a, b, d, e, f, g, h, i, j) {
          var k = [];
          d.forEach(function (d) {
            if (b.includes(d)) {
              var l = { id: d };
              f[d] === !0 && (l.crop_state = "CROPPED");
              g[d] === !0 && (l.filter_state = "FILTERED");
              e[d] && (l.custom_accessibility_caption = e[d]);
              if (h[d] && !c("isEmpty")(h[d])) {
                l.text_overlay = h[d];
                if (a.type === "STORIES") {
                  var m = [];
                  l.text_overlay.forEach(function (a) {
                    m.push({ text: { message: { text: a } } });
                  });
                  l.overlays = m;
                }
              }
              if (i[d] && !c("isEmpty")(i[d])) {
                var n = [];
                Object.keys(i[d]).forEach(function (a) {
                  n.push({ id: a, count: i[d][a] });
                });
                l.stickers = n;
              }
              j &&
                Array.isArray(j) &&
                (l.tags = j
                  .filter(function (a) {
                    return a.fbid === l.id;
                  })
                  .map(function (a) {
                    var b = {};
                    a.subject ? (b.id = a.subject) : (b.name = a.name);
                    return { x: a.x, y: a.y, source: a.source, taggee: b };
                  }));
              k.push({ photo: l });
            } else k.push({ video: { id: d, notify_when_processed: !0 } });
          });
          return k;
        },
        _getTranslatedPollQuestionData: function (a) {
          var b = {
            text: a.text,
            hidden_results: a.hidden_results,
            options: a.options,
            question_type: j._getTranslatedEnum(
              a.question_type,
              c("QuestionPollTypeJSEnum")
            ),
          };
          b &&
            ((a.poll_end_time === 0 || a.poll_end_time) &&
              (b.poll_end_time = a.poll_end_time),
            (a.relative_poll_end_time === 0 || a.relative_poll_end_time) &&
              (b.relative_poll_end_time = a.relative_poll_end_time));
          return b;
        },
        _getTranslatedLifeEventAttachment: function (a, b) {
          var c = {
            life_event: {
              extras: b.extras,
              icon: b.icon,
              fallback_media_kind: b.fallback_media_kind,
              fb_media: [],
              life_event_type: b.life_event_type,
              source: b.source,
              start_date: b.start_date,
              logging_data: b.logging_data,
            },
          };
          b.title &&
            (a.title = j._getTranslatedTextWithEntitiesFields(b.title));
          var d = [c];
          b.media.forEach(function (a) {
            a.type === "DEFAULT_MEDIA"
              ? c.life_event.fb_media.push(a.id)
              : (c.life_event.fb_media.push("0"),
                a.type === "VIDEO"
                  ? d.push({ video: { id: a.id, notify_when_processed: !0 } })
                  : d.push({ photo: { id: a.id } }));
          });
          a.attachments = d;
          return a;
        },
        _getTranslatedTextWithEntitiesFields: function (a, b) {
          a = d("MentionsUtils").parseMessageMentions(a);
          var c = a.ranges;
          a = a.text;
          if (!c) return { text: a, ranges: [] };
          c = c.map(function (a) {
            return {
              offset: a.offset,
              length: a.length,
              entity: { id: a.uid },
            };
          });
          d("TextDelightInComposerGating").isHighlightEnabled("post") &&
            b &&
            (c = [].concat(
              c,
              b.map(function (a) {
                return {
                  offset: a.offset,
                  length: a.length,
                  entity: { id: a.campaignID },
                };
              })
            ));
          return { text: a, ranges: c };
        },
        _getShouldUseGraphQLForFeedTargetingFeature: function (a) {
          if (c("isEmpty")(a.feed_targeted_data)) return !1;
          for (var b in a)
            if (
              j._getContainsWhitelistedParameter(a, b) &&
              b !== "feed_targeted_data" &&
              b !== "targeted_privacy_data"
            )
              return !1;
          return d(
            "PagesComposerGraphMLGate"
          ).shouldUseGraphMLForFeedTargetingFeature(a.xhpc_targetid);
        },
        _getShouldUseGraphQLForBoostedPostFeature: function (a) {
          if (c("isEmpty")(a.boosted_post_config)) return !1;
          for (var b in a)
            if (
              j._getContainsWhitelistedParameter(a, b) &&
              b !== "boosted_post_config"
            )
              return !1;
          return d(
            "PagesComposerGraphMLGate"
          ).shouldUseGraphMLForBoostedPostFeature(a.xhpc_targetid);
        },
        _hasModifiedOrMultipleScrapedAttachments: function (a) {
          a = (a = a) != null ? ((a = a.attachment) != null ? a.params : a) : a;
          if (!a || c("isEmpty")(a) || Array.isArray(a)) return !1;
          var b = a.child_attachments,
            d = a.canvas_video,
            e = a.carousel_video_lpp;
          a = a.edited_params;
          if (
            !c("isEmpty")(a) ||
            !c("isEmpty")(e) ||
            !c("isEmpty")(d) ||
            (!c("isEmpty")(b) && Object.keys(b).length > 1)
          )
            return !0;
          for (a in b) {
            if (((e = b[a]) != null ? e.image_source : e) !== "scrape")
              return !0;
          }
          return !1;
        },
        getShouldUseGraphQLForStatus: function (a, b) {
          if (
            !j._getShouldUseGraphQL(b) &&
            !j._getShouldUseGraphQLForFeedTargetingFeature(b) &&
            !j._getShouldUseGraphQLForBoostedPostFeature(b)
          )
            return !1;
          if (c("CurrentUser").getAccountID() !== a) {
            if (b.ask_admin_to_post === !0) return !0;
            a = j._getIsDirectedPost(a, b.xhpc_targetid);
            if (a) {
              d("ODS").bumpEntityKey(
                2966,
                "webgraphml_should_not_use",
                "status_different_actor_directed_post"
              );
              return !1;
            }
            if (j._hasModifiedOrMultipleScrapedAttachments(b)) {
              d("ODS").bumpEntityKey(
                2966,
                "webgraphml_should_not_use",
                "status_has_modified_attachements"
              );
              return !1;
            }
            return !0;
          }
          if (b.target_type === "page") {
            a = j._getPageVisitorStatusPostGK(b.xhpc_targetid);
            a ||
              d("ODS").bumpEntityKey(
                2966,
                "webgraphml_should_not_use",
                "status_failing_gating_page_visitor_post"
              );
            return a;
          }
          return !0;
        },
        getShouldUseGraphQLForMedia: function (a, b) {
          if (!j._getShouldUseGraphQL(b)) return !1;
          if (c("CurrentUser").getAccountID() !== a) {
            if (b.ask_admin_to_post === !0) return !0;
            if (
              d(
                "PagesComposerGraphMLGate"
              ).shouldUseGraphMLForMediaPostCreation(b.xhpc_targetid)
            )
              return !0;
            d("ODS").bumpEntityKey(
              2966,
              "webgraphml_should_not_use",
              "media_different_actor"
            );
            return !1;
          }
          if (b.target_type === "page") {
            d("ODS").bumpEntityKey(
              2966,
              "webgraphml_should_not_use",
              "media_target_type_page"
            );
            return !1;
          }
          return !0;
        },
        getShouldUseGraphQLForShareDialog: function (a) {
          d("ODS").bumpEntityKey(2966, "webgraphml_should_use", "share");
          if (!j._getShouldUseGraphQLForShareDialog(a)) {
            d("ODS").bumpEntityKey(
              2966,
              "webgraphml_should_not_use",
              "share_missing_features"
            );
            return !1;
          }
          if (c("CurrentUser").getAccountID() !== a.actorId) {
            d("ODS").bumpEntityKey(
              2966,
              "webgraphml_should_not_use",
              "share_different_actor"
            );
            return !1;
          }
          if (a.shareType === String(34) || a.shareType === String(77))
            return !1;
          if (a.audienceType !== "self") {
            d("ODS").bumpEntityKey(
              2966,
              "webgraphml_should_not_use",
              "share_unsupported_audience_type_" +
                (a.audienceType ? a.audienceType : "unset")
            );
            return !1;
          }
          a = j._getIsDirectedPost(a.actorId, a.actorId);
          if ((a && !j._getDirectedShareDialogPostGK()) || !a) {
            d("ODS").bumpEntityKey(
              2966,
              "webgraphml_should_not_use",
              "share_" + (a ? "directed" : "undirected") + "_failing_gating"
            );
            return !1;
          }
          return !0;
        },
        _getPhotos: function (a) {
          return c("ReactComposerMediaUploadStore")
            .getPhotos(a)
            .map(function (a) {
              return a.photoID;
            })
            .toArray();
        },
        _getIsSupportedParameter: function (a, b) {
          return (
            Object.values(c("ComposerPublisherSupportedParameters")).includes(
              b
            ) ||
            c("ReactComposerWebUnusedParameters").params.create.includes(b) ||
            c("isEmpty")(a[b])
          );
        },
        _getContainsWhitelistedParameter: function (a, b) {
          return (
            c("ReactComposerWebWhitelistParameters").params.create.includes(
              b
            ) && !c("isEmpty")(a[b])
          );
        },
        _getIsSupportedParameterForShareDialog: function (a, b) {
          var d = "share_dialog_";
          return (
            Object.values(c("ComposerPublisherSupportedParameters")).includes(
              d + b
            ) ||
            c("ReactComposerWebUnusedParameters").params.share.includes(b) ||
            c("isEmpty")(a[b])
          );
        },
        _getShouldUseGraphQL: function (a) {
          for (var b in a)
            if (j._getContainsWhitelistedParameter(a, b)) return !1;
          return !0;
        },
        _getShouldUseGraphQLForEdit: function (a) {
          for (var b in a)
            if (j._getContainsWhitelistedParameterForEdit(a, b)) return !1;
          return !0;
        },
        getShouldUseGraphQLForEdit: function (a, b) {
          d("ODS").bumpEntityKey(2966, "webgraphml_should_use", "edit");
          if (!b.story_token) {
            d("ODS").bumpEntityKey(
              2966,
              "webgraphml_should_not_use",
              "edit_missing_story_token"
            );
            c("FBLogger")("WebGraphML").warn(
              "Missing story token from %s. Context: %s",
              b.xc_edit_callsite,
              b.xc_entstory_context
            );
            return !1;
          }
          if (!j._getShouldUseGraphQLForEdit(b)) {
            d("ODS").bumpEntityKey(
              2966,
              "webgraphml_should_not_use",
              "edit_missing_features"
            );
            return !1;
          }
          if (c("CurrentUser").getAccountID() !== a) {
            d("ODS").bumpEntityKey(
              2966,
              "webgraphml_should_not_use",
              "edit_different_actor"
            );
            return !1;
          }
          return !0;
        },
        _getIsSupportedParameterForEdit: function (a, b) {
          var d = "edit_";
          return (
            Object.values(c("ComposerPublisherSupportedParameters")).includes(
              d + b
            ) ||
            c("ReactComposerWebUnusedParameters").params.edit.includes(b) ||
            c("isEmpty")(a[b])
          );
        },
        _getContainsWhitelistedParameterForEdit: function (a, b) {
          return (
            c("ReactComposerWebWhitelistParameters").params.edit.includes(b) &&
            !c("isEmpty")(a[b])
          );
        },
        _getShouldUseGraphQLForShareDialog: function (a) {
          for (var b in a)
            if (!j._getIsSupportedParameterForShareDialog(a, b)) return !1;
          return !0;
        },
        _getIsDirectedPost: function (a, b) {
          return a !== b;
        },
        _getPageCTAPostGK: function (a) {
          return d(
            "PagesComposerGraphMLGate"
          ).shouldUseGraphMLForPageCTAPostCreation(a);
        },
        _getPageVisitorStatusPostGK: function (a) {
          return d("PagesComposerGraphMLGate").shouldUseGraphMLForVisitorStatus(
            a
          );
        },
        _getDirectedShareDialogPostGK: function () {
          return !0;
        },
      };
    a = j;
    g["default"] = a;
  },
  98
);
__d(
  "ComposerXSessionIDs",
  ["cx", "DOM", "killswitch", "uuidv4"],
  function (a, b, c, d, e, f, g) {
    var h = {},
      i = !b("killswitch")("COMPOSER_LAZY_INITIALIZE_SESSION_ID");
    a = {
      getSessionID: function (a) {
        i && !h[a] && (h[a] = b("uuidv4")());
        return h[a];
      },
      resetSessionID: function (a) {
        h[a] = b("uuidv4")();
      },
      createSessionIDInput: function (a) {
        return b("DOM").create("input", {
          type: "hidden",
          name: "composer_session_id",
          className: "_5r_b",
          value: a,
        });
      },
    };
    e.exports = a;
  },
  null
);
__d(
  "ComposerXMarauderLogger",
  [
    "ComposerStructuredLogger",
    "ComposerStructuredLoggerUtil",
    "ComposerXSessionIDs",
    "Event",
    "MarauderLogger",
  ],
  function (a, b, c, d, e, f, g) {
    var h = {},
      i = "status";
    function j(a, b, c) {
      if (d("ComposerStructuredLoggerUtil").shouldUseFalco(b, a))
        d("ComposerStructuredLogger").logEvent(b, a);
      else {
        var e;
        c || (c = {});
        var f = h[b];
        b = d("ComposerXSessionIDs").getSessionID(b);
        if (!f || !b) return;
        if (c.logOncePerSession) {
          f.loggedEventTypes[b] || (f.loggedEventTypes[b] = {});
          if (f.loggedEventTypes[b][a]) return;
          f.loggedEventTypes[b][a] = !0;
        }
        e =
          (e =
            (e = c.extraData) == null ? void 0 : e.composer_entry_point_name) !=
          null
            ? e
            : k(f);
        var g = f.composerType ? f.composerType : i;
        c = babelHelpers["extends"]({}, c.extraData, {
          composer_entry_point_name: e,
          composer_type: g,
          target_type: f.targetType,
          target_id: f.targetID,
          ref: f.entryPointRef,
          composer_source_surface: f.composerSourceSurface,
          is_edit_composer: f.isEditComposer === !0,
        });
        d("MarauderLogger").log(a, "composer", c, void 0, void 0, b);
      }
    }
    function a(a, b, c) {
      (h[a.id] = babelHelpers["extends"](
        { targetID: b, loggedEventTypes: {} },
        c
      )),
        d("ComposerStructuredLogger").registerComposer(a, b, c);
    }
    function b(a) {
      return h[a];
    }
    function k(a) {
      return a.composerSourceSurface === "page" ? a.ref : "inline_composer";
    }
    function e(a, b) {
      return !b
        ? []
        : [
            c("Event").listen(b, "submit", function () {
              n(a);
            }),
            c("Event").listen(b, "success", function () {
              o(a);
            }),
            c("Event").listen(b, "error", function (b) {
              p(a, {
                error_info: {
                  error_code: b.data.response.error,
                  error_description: b.data.response.errorDescription,
                  error_summary: b.data.response.errorSummary,
                },
              });
            }),
          ];
    }
    function f(a, b) {
      a = h[a];
      if (!a) return;
      switch (b) {
        case "self":
          a.targetType = "feed";
          break;
        case "friend":
          a.targetType = "wall";
          break;
        case "page":
        case "selfpage":
          a.targetType = "page";
          break;
        case "group":
          a.targetType = "group";
          break;
        default:
          a.targetType = "other";
      }
    }
    function l(a, b) {
      j("composer_entry", a, { logOncePerSession: !0, extraData: b });
    }
    function m(a, b) {
      j("composer_post_completed", a, { extraData: b });
    }
    function n(a, b) {
      j("composer_post", a, { extraData: b });
    }
    function o(a, b) {
      j("composer_post_success", a, { extraData: b });
    }
    function p(a, b) {
      j("composer_post_failure", a, { extraData: b });
    }
    g.logEvent = j;
    g.registerComposer = a;
    g.getInstance = b;
    g.getComposerEntryPointName = k;
    g.listenForPostEvents = e;
    g.setShareMode = f;
    g.logEntry = l;
    g.logCompleted = m;
    g.logPost = n;
    g.logPostSuccess = o;
    g.logPostFailure = p;
  },
  98
);
__d(
  "ComposerFocusAcquiredFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1743451");
    b = d("FalcoLoggerInternal").create("composer_focus_acquired", a);
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "ComposerFocusLostFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1743452");
    b = d("FalcoLoggerInternal").create("composer_focus_lost", a);
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "ComposerInitFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1743453");
    b = d("FalcoLoggerInternal").create("composer_init", a);
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerDraftPostEditEnterFlowFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744114");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_draft_post_edit_enter_flow",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerDraftPostEditJSEvents",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      COMPOSER_POST: "composer_post",
      COMPOSER_ENTRY: "composer_entry",
    });
    f["default"] = a;
  },
  66
);
__d(
  "PagesComposerDraftPostEditSubmitFlowFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744115");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_draft_post_edit_submit_flow",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerAutoSavingActionsTypes",
  ["keyMirror"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("keyMirror")({ SET_DRAFT_ID: null });
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerAutoSavingStore",
  ["PagesComposerAutoSavingActionsTypes", "ReactComposerStoreBase"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = { draftID: null };
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b;
        return (b =
          a.call(
            this,
            function () {
              return babelHelpers["extends"]({}, h);
            },
            function (a) {
              switch (a.type) {
                case c("PagesComposerAutoSavingActionsTypes").SET_DRAFT_ID:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$PagesComposerAutoSavingStore1(a);
                  break;
              }
            }
          ) || this);
      }
      var d = b.prototype;
      d.getDraftID = function (a) {
        return this.getComposerData(a).draftID;
      };
      d.$PagesComposerAutoSavingStore1 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.draftID = a.draftID;
        this.emitChange(a.composerID);
      };
      d.hasDraftID = function (a) {
        return !!this.getComposerData(a).draftID;
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ComposerStructuredLogger",
  [
    "ComposerCancelFalcoEvent",
    "ComposerEntryFalcoEvent",
    "ComposerFocusAcquiredFalcoEvent",
    "ComposerFocusLostFalcoEvent",
    "ComposerInitFalcoEvent",
    "ComposerPostFailureFalcoEvent",
    "ComposerPostFalcoEvent",
    "ComposerPostSuccessFalcoEvent",
    "ComposerStructuredLoggerUtil",
    "ComposerXSessionIDs",
    "PagesComposerContextUtils",
    "PagesComposerDraftPostEditEnterFlowFalcoEvent",
    "PagesComposerDraftPostEditJSEvents",
    "PagesComposerDraftPostEditSubmitFlowFalcoEvent",
    "ReactComposerAutoSavingStore",
    "ReactComposerLoggingStore",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = {};
    function a(a, b, c) {
      var d = {};
      h[a.id] = Object.assign(d, { targetID: b, loggedEventTypes: {} }, c);
    }
    function b(a) {
      return h[a];
    }
    function i(a, b, e) {
      var f = h[a],
        g = d("ComposerXSessionIDs").getSessionID(a);
      if (f == null || g === null || g === void 0) return !1;
      if (
        d("PagesComposerContextUtils").getIsDraftComposer(
          d("ComposerStructuredLoggerUtil").getEntryPoint(a)
        ) &&
        !Object.values(c("PagesComposerDraftPostEditJSEvents")).includes(e)
      )
        return !1;
      a = c("ReactComposerLoggingStore").getComposerData(a);
      if (a.uniqueEvents.has(e)) {
        if (a.uniqueEvents.get(e)) return !1;
        a.uniqueEvents = a.uniqueEvents.set(e, !0);
      }
      if (b) {
        f.loggedEventTypes[g] || (f.loggedEventTypes[g] = {});
        if (f.loggedEventTypes[g][e]) return !1;
        f.loggedEventTypes[g][e] = !0;
      }
      return !0;
    }
    function e(a, b) {
      i(a, !0, b) &&
        c("ComposerInitFalcoEvent").log(function () {
          return t(a);
        });
    }
    function j(a, b) {
      i(a, !0, b) &&
        c("ComposerEntryFalcoEvent").log(function () {
          return t(a);
        });
    }
    function k(a, b) {
      i(a, !0, b) &&
        c("ComposerFocusAcquiredFalcoEvent").log(function () {
          return t(a);
        });
    }
    function l(a, b) {
      i(a, !0, b) &&
        c("ComposerFocusLostFalcoEvent").log(function () {
          return t(a);
        });
    }
    function m(a, b) {
      i(a, !0, b) &&
        c("ComposerPostFalcoEvent").log(function () {
          return t(a);
        });
    }
    function n(a, b) {
      i(a, !0, b) &&
        c("ComposerPostSuccessFalcoEvent").log(function () {
          return t(a);
        });
    }
    function o(a, b) {
      i(a, !0, b) &&
        c("ComposerPostFailureFalcoEvent").log(function () {
          return t(a);
        });
    }
    function p(a, b) {
      i(a, !0, b) &&
        c("ComposerCancelFalcoEvent").log(function () {
          return t(a);
        });
    }
    function q(a, b) {
      b === "composer_post" ? r(a, b) : b === "composer_entry" && s(a, b);
    }
    function r(a, b) {
      if (i(a, !0, b)) {
        var e = babelHelpers["extends"](
          {},
          d("ComposerStructuredLoggerUtil").getDraftPostEditLoggingBaseData(a),
          {
            event_data: {
              is_sprouts_composer: 1,
              post_action_type: d(
                "ComposerStructuredLoggerUtil"
              ).getPostActionType(a),
              post_id: c("ReactComposerAutoSavingStore").getDraftID(a),
            },
          }
        );
        if (b === "composer_post" && e.post_id === null) return;
        c("PagesComposerDraftPostEditSubmitFlowFalcoEvent").log(function () {
          return e;
        });
      }
    }
    function f(a, b) {
      d("PagesComposerContextUtils").getIsDraftComposer(
        d("ComposerStructuredLoggerUtil").getEntryPoint(a)
      )
        ? q(a, b)
        : b === "composer_entry"
        ? j(a, b)
        : b === "composer_cancel"
        ? p(a, b)
        : b === "composer_post"
        ? m(a, b)
        : b === "composer_focus_acquired"
        ? k(a, b)
        : b === "composer_focus_lost"
        ? l(a, b)
        : b === "composer_post_success"
        ? n(a, b)
        : b === "composer_post_failure" && o(a, b);
    }
    function s(a, b) {
      if (i(a, !0, b)) {
        var e = babelHelpers["extends"](
          {},
          d("ComposerStructuredLoggerUtil").getDraftPostEditLoggingBaseData(a),
          {
            event_data: {
              is_sprouts_composer: 1,
              post_id: c("ReactComposerAutoSavingStore").getDraftID(a),
            },
          }
        );
        if (b === "composer_entry" && e.post_id === null) return;
        c("PagesComposerDraftPostEditEnterFlowFalcoEvent").log(function () {
          return e;
        });
      }
    }
    function t(a) {
      return babelHelpers["extends"](
        {},
        d("ComposerStructuredLoggerUtil").getLoggingBaseData(a),
        {
          event_data: babelHelpers["extends"](
            {},
            d("ComposerStructuredLoggerUtil").getLoggingEventData(a)
          ),
        }
      );
    }
    g.registerComposer = a;
    g.getInstance = b;
    g.shouldLogEvent = i;
    g.logImpression = e;
    g.logEnterFlow = j;
    g.logFocusAcquired = k;
    g.logFocusLost = l;
    g.logSubmitFlow = m;
    g.logSubmitFlowSuccess = n;
    g.logSubmitFlowFailure = o;
    g.logCancelFlow = p;
    g.logDraftPostEditEvent = q;
    g.logDraftPostEditSubmitFlow = r;
    g.logEvent = f;
    g.logDraftPostEditEnterFlow = s;
    g._getComposerLoggingData = t;
  },
  98
);
__d(
  "PagesComposerWWWInterceptionActionsType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("keyMirrorRecursive")(
      { INTERCEPTION_DETECTED: null, INTERCEPTION_RESPONSE: null },
      "PagesComposerWWWInterceptionActionsType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerAttachmentInitState",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      { UNINITIALIZED: null, INITIALIZING: null, INITIALIZED: null },
      "ReactComposerAttachmentInitState"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerAttachmentType",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      ADVERTISE: "ADVERTISE",
      STATUS: "STATUS",
      MEDIA: "MEDIA",
      ALBUM: "ALBUM",
      MILESTONE: "MILESTONE",
      MLE: "MLE",
      NOTES: "NOTES",
      IG_PHOTO_REMINDER: "IG_PHOTO_REMINDER",
      QANDA: "QANDA",
      PAGES_EXTRA: "PAGES_EXTRA",
      FILE: "FILE",
      QUESTION: "QUESTION",
      VISUAL_POLL: "VISUAL_POLL",
      LIST: "LIST",
      TODO_LIST: "TODO_LIST",
      SELL: "SELL",
      WORK_HEADER: "WORK_HEADER",
      WORK_FOOTER: "WORK_FOOTER",
      SEND_GIFT: "SEND_GIFT",
      LOCAL_DEV_PLATFORM: "LOCAL_DEV_PLATFORM",
      LIVE_BROADCAST: "LIVE_BROADCAST",
      PHOTO_ZOOM_CROP: "PHOTO_ZOOM_CROP",
      PROFILE_PIC_DESCRIPTION: "PROFILE_PIC_DESCRIPTION",
      PROFILE_PIC_FRAME: "PROFILE_PIC_FRAME",
      LIVE_VIDEO: "LIVE_VIDEO",
      DOC: "DOC",
      EVENT: "EVENT",
      GAME: "GAME",
      CTA: "CTA",
      QA: "QA",
      MESSAGE: "MESSAGE",
      WHATSAPP_MESSAGE: "WHATSAPP_MESSAGE",
      GET_DIRECTIONS: "GET_DIRECTIONS",
      CALL: "CALL",
      SHOP: "SHOP",
      PLACE_LIST: "PLACE_LIST",
      QUIZ: "QUIZ",
      ADD_MENTIONED: "ADD_MENTIONED",
      AUDIENCE_SELECTOR: "AUDIENCE_SELECTOR",
      LEARNING_COURSE: "LEARNING_COURSE",
      LEARNING_THIRD_PARTY_LINK: "LEARNING_THIRD_PARTY_LINK",
      PAGE_RECOMMENDATION: "PAGE_RECOMMENDATION",
      POST_TO_GROUP: "POST_TO_GROUP",
      MEDIA_EFFECT_SHARE: "MEDIA_EFFECT_SHARE",
      FIND_PLAYERS: "FIND_PLAYERS",
      SALES_PROMO: "SALES_PROMO",
      JOB_SEARCH: "JOB_SEARCH",
      SHARING_SPACES_SELECTOR: "SHARING_SPACES_SELECTOR",
      UICE_EXAMPLE_ATTACHMENT: "UICE_EXAMPLE_ATTACHMENT",
      EVENT_CREATION: "EVENT_CREATION",
      ASSET_3D: "ASSET_3D",
      LIVING_ROOM: "LIVING_ROOM",
      VIDEO_SUGGESTIONS: "VIDEO_SUGGESTIONS",
      APP_INTEGRATION_AODOCS: "APP_INTEGRATION_AODOCS",
      APP_INTEGRATION_BOX: "APP_INTEGRATION_BOX",
      APP_INTEGRATION_CORNERSTONE: "APP_INTEGRATION_CORNERSTONE",
      APP_INTEGRATION_DROPBOX: "APP_INTEGRATION_DROPBOX",
      APP_INTEGRATION_EGNYTE: "APP_INTEGRATION_EGNYTE",
      APP_INTEGRATION_GDRIVE: "APP_INTEGRATION_GDRIVE",
      APP_INTEGRATION_JIRA: "APP_INTEGRATION_JIRA",
      APP_INTEGRATION_ONEDRIVE: "APP_INTEGRATION_ONEDRIVE",
      APP_INTEGRATION_QUIP: "APP_INTEGRATION_QUIP",
      APP_INTEGRATION_SHAREPOINT: "APP_INTEGRATION_SHAREPOINT",
      APP_INTEGRATION_TASKS: "APP_INTEGRATION_TASKS",
      APP_INTEGRATION_TRELLO: "APP_INTEGRATION_TRELLO",
      INTERN_QA: "INTERN_QA",
      RECRUITING_CANDIDATE: "RECRUITING_CANDIDATE",
      VIDEO_EDITOR: "VIDEO_EDITOR",
      SUPPORT_NOW: "SUPPORT_NOW",
      VISUAL_POLLS: "VISUAL_POLLS",
      WORK_FILE: "WORK_FILE",
      SOTTO_CTA: "SOTTO_CTA",
      SHIFT_SWAP: "SHIFT_SWAP",
      DRAFT_FOR: "DRAFT_FOR",
      WORK_ACHIEVEMENT: "WORK_ACHIEVEMENT",
      WORK_COLLABORATION: "WORK_COLLABORATION",
      CHATROOM: "CHATROOM",
      KNOWLEDGE_NOTES: "KNOWLEDGE_NOTES",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerFocusActionTypes",
  ["keyMirror"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("keyMirror")({
      SUBSCRIBE: null,
      UNSUBSCRIBE: null,
      FOCUS_ACQUIRED: null,
      FOCUS_LOST: null,
    });
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerAttachmentStore",
  [
    "ImmutableObject",
    "PagesComposerWWWInterceptionActionsType",
    "ReactComposerAttachmentActionType",
    "ReactComposerAttachmentInitState",
    "ReactComposerAttachmentType",
    "ReactComposerFocusActionTypes",
    "ReactComposerStoreBaseGatedModule",
    "performanceAbsoluteNow",
  ],
  function (a, b, c, d, e, f, g) {
    var h = [
        c("ReactComposerAttachmentType").STATUS,
        c("ReactComposerAttachmentType").MEDIA,
        c("ReactComposerAttachmentType").SHARING_SPACES_SELECTOR,
      ],
      i = [c("ReactComposerAttachmentType").MEDIA];
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                attachments: [],
                selectedAttachment: null,
                isSelectedAttachmentActive: !1,
                proxiedAttachment: null,
                isContentMultiShareAttachment: !1,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerAttachmentActionType").REGISTER_ATTACHMENT:
                  d && d.$ReactComposerAttachmentStore1(a);
                  break;
                case c("ReactComposerAttachmentActionType").SELECT_ATTACHMENT:
                  d && d.$ReactComposerAttachmentStore2(a);
                  break;
                case c("ReactComposerAttachmentActionType")
                  .SET_ATTACHMENT_MARKUP:
                  d && d.$ReactComposerAttachmentStore3(a);
                  break;
                case c("ReactComposerAttachmentActionType").SET_BOOTLOADED:
                  d && d.$ReactComposerAttachmentStore4(a);
                  break;
                case c("ReactComposerAttachmentActionType").SET_BOOTSTRAPPED:
                  d && d.$ReactComposerAttachmentStore5(a);
                  break;
                case c("ReactComposerAttachmentActionType").SET_INITIALIZED:
                  d && d.$ReactComposerAttachmentStore6(a);
                  break;
                case c("ReactComposerFocusActionTypes").FOCUS_LOST:
                  d && d.$ReactComposerAttachmentStore7(a);
                  break;
                case c("PagesComposerWWWInterceptionActionsType")
                  .INTERCEPTION_DETECTED:
                  d && d.$ReactComposerAttachmentStore8(a);
                  break;
                case c("PagesComposerWWWInterceptionActionsType")
                  .INTERCEPTION_RESPONSE:
                  d && d.$ReactComposerAttachmentStore9(a);
                  break;
                case c("ReactComposerAttachmentActionType")
                  .SET_CONTENT_MULTI_SHARE:
                  d && d.$ReactComposerAttachmentStore10(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var d = b.prototype;
      d.getAttachment = function (a, b) {
        a = this.getComposerData(a);
        return a.attachments.find(function (a) {
          return a.id === b;
        });
      };
      d.getSelectedAttachmentID = function (a) {
        a = this.getComposerData(a);
        return a.selectedAttachment ? a.selectedAttachment.id : null;
      };
      d.getProxiedAttachmentID = function (a) {
        a = this.getComposerData(a);
        return a.proxiedAttachment ? a.proxiedAttachment.id : null;
      };
      d.isContentMultiShareAttachment = function (a) {
        return this.getComposerData(a).isContentMultiShareAttachment;
      };
      d.hasAttachment = function (a, b) {
        return this.getComposerData(a).attachments.some(function (a) {
          return a.id === b;
        });
      };
      d.getIsAttachmentSelected = function (a, b) {
        a = this.getComposerData(a).selectedAttachment;
        return !!a && a.id === b;
      };
      d.getIsAttachmentSelectedOrProxied = function (a, b) {
        if (this.getIsAttachmentSelected(a, b)) return !0;
        else {
          a = this.getComposerData(a).proxiedAttachment;
          return !!a && a.id === b;
        }
      };
      d.isSelectedAttachmentDestinationPickerEligible = function (a) {
        a = this.getComposerData(a).selectedAttachment;
        return a && h.indexOf(a.id) != -1;
      };
      d.isSelectedAttachmentActive = function (a) {
        return this.getComposerData(a).isSelectedAttachmentActive;
      };
      d.isInterceptionDetected = function (a, b) {
        if (!b) return !1;
        a = this.getComposerData(a);
        b = this.$ReactComposerAttachmentStore11(a, b);
        return a.attachments[b] ? a.attachments[b].interceptionDetected : !1;
      };
      d.isBootstrapped = function (a, b) {
        a = this.getComposerData(a);
        b = this.$ReactComposerAttachmentStore11(a, b);
        return a.attachments[b].bootstrapped;
      };
      d.getBootloadDuration = function (a, b) {
        a = this.getComposerData(a);
        b = this.$ReactComposerAttachmentStore11(a, b);
        return a.attachments[b].bootloadDuration;
      };
      d.getBootstrapDuration = function (a, b) {
        a = this.getComposerData(a);
        b = this.$ReactComposerAttachmentStore11(a, b);
        return a.attachments[b].bootstrapDuration;
      };
      d.getInterceptionResponse = function (a) {
        a = this.getComposerData(a);
        return a.interceptionResponse || null;
      };
      d.getAttachmentMarkup = function (a, b) {
        a = this.getComposerData(a);
        b = this.$ReactComposerAttachmentStore11(a, b);
        return a.attachments[b].markup;
      };
      d.getAttachmentsConfig = function (a, b) {
        a = this.getComposerData(a);
        b = this.$ReactComposerAttachmentStore11(a, b);
        return a.attachments[b].config;
      };
      d.getIsMediaCompatibleAttachmentSelected = function (a) {
        a = this.getSelectedAttachmentID(a);
        return i.includes(a);
      };
      d.$ReactComposerAttachmentStore1 = function (a) {
        var b = this.validateAction(a, ["composerID", "id"]),
          d = b[0];
        b = b[1];
        var e = this.getComposerData(d);
        b = new (c("ImmutableObject"))({
          id: b,
          initState: c("ReactComposerAttachmentInitState").UNINITIALIZED,
          bootloaded: a.bootloaded,
          bootstrapped: a.bootstrapped,
          module: a.module,
          postButtonModule: a.postButtonModule,
          initTime: null,
          bootloadDuration: null,
          bootstrapDuration: null,
          interceptionDetected: !1,
          config:
            a.config && b === c("ReactComposerAttachmentType").MEDIA
              ? { videoUploadParams: a.config.videoUploadParams || {} }
              : null,
        });
        e.attachments.push(b);
        a.selected && (e.selectedAttachment = b);
        a.active && (e.isSelectedAttachmentActive = !0);
        this.emitChange(d);
      };
      d.$ReactComposerAttachmentStore9 = function (a) {
        a = this.validateAction(a, ["interceptionResponse", "composerID"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(a);
        c.interceptionResponse = b;
        this.emitChange(a);
      };
      d.$ReactComposerAttachmentStore8 = function (a) {
        a = this.validateAction(a, ["attachmentID", "composerID"]);
        var b = a[0];
        a = a[1];
        var d = this.getComposerData(a);
        b = this.$ReactComposerAttachmentStore11(d, b);
        d.attachments[b].interceptionDetected ||
          (d.attachments[b] = c("ImmutableObject").set(d.attachments[b], {
            interceptionDetected: !0,
          }));
        this.emitChange(a);
      };
      d.$ReactComposerAttachmentStore2 = function (a) {
        var b = this.validateAction(a, ["id", "composerID", "activate"]),
          d = b[0],
          e = b[1];
        b = b[2];
        var f = this.getComposerData(e);
        d = this.$ReactComposerAttachmentStore11(f, d);
        f.selectedAttachment = f.attachments[d];
        f.isSelectedAttachmentActive = b;
        f.attachments[d].initState ===
          c("ReactComposerAttachmentInitState").UNINITIALIZED &&
          (f.attachments[d] = c("ImmutableObject").set(f.attachments[d], {
            initState: c("ReactComposerAttachmentInitState").INITIALIZING,
          }));
        if (a.proxiedAttachmentID) {
          b = this.$ReactComposerAttachmentStore11(f, a.proxiedAttachmentID);
          f.proxiedAttachment = f.attachments[b];
        } else delete f.proxiedAttachment;
        this.emitChange(e);
      };
      d.$ReactComposerAttachmentStore4 = function (a) {
        var b = this.validateAction(a, [
            "id",
            "composerID",
            "attachmentModule",
          ]),
          d = b[0],
          e = b[1];
        b = b[2];
        var f = this.getComposerData(e);
        d = this.$ReactComposerAttachmentStore11(f, d);
        f.attachments[d] = c("ImmutableObject").set(f.attachments[d], {
          bootloaded: !0,
          bootloadDuration:
            c("performanceAbsoluteNow")() - f.attachments[d].initTime,
          module: b,
          postButtonModule: a.postButtonModule,
        });
        this.emitChange(e);
      };
      d.$ReactComposerAttachmentStore5 = function (a) {
        a = this.validateAction(a, ["id", "composerID"]);
        var b = a[0];
        a = a[1];
        var d = this.getComposerData(a);
        b = this.$ReactComposerAttachmentStore11(d, b);
        d.attachments[b] = c("ImmutableObject").set(d.attachments[b], {
          bootstrapped: !0,
          bootstrapDuration:
            c("performanceAbsoluteNow")() - d.attachments[b].initTime,
        });
        this.emitChange(a);
      };
      d.$ReactComposerAttachmentStore3 = function (a) {
        a = this.validateAction(a, ["composerID", "config"]);
        var b = a[0];
        a = a[1];
        var d = this.getComposerData(b),
          e = a.attachmentID;
        if (!e) return;
        e = this.$ReactComposerAttachmentStore11(d, e);
        d.attachments[e] = c("ImmutableObject").set(d.attachments[e], {
          markup: a.markup,
        });
        this.emitChange(b);
      };
      d.$ReactComposerAttachmentStore6 = function (a) {
        a = this.validateAction(a, ["id", "composerID"]);
        var b = a[0];
        a = a[1];
        var d = this.getComposerData(a);
        b = this.$ReactComposerAttachmentStore11(d, b);
        d.attachments[b] = c("ImmutableObject").set(d.attachments[b], {
          initState: c("ReactComposerAttachmentInitState").INITIALIZED,
          initTime: c("performanceAbsoluteNow")(),
        });
        this.emitChange(a);
      };
      d.$ReactComposerAttachmentStore7 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = this.getProxiedAttachmentID(a);
        b &&
          this.$ReactComposerAttachmentStore2({
            composerID: a,
            id: this.getProxiedAttachmentID(a),
            activate: !1,
          });
      };
      d.$ReactComposerAttachmentStore10 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "isContentMultiShareAttachment",
        ]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.isContentMultiShareAttachment = a;
        this.emitChange(b);
      };
      d.$ReactComposerAttachmentStore11 = function (a, b) {
        var c = -1;
        for (var d = 0; d < a.attachments.length; d++)
          if (a.attachments[d].id === b) {
            c = d;
            break;
          }
        if (c === -1) throw new Error("Undefined attachment id: " + b);
        return c;
      };
      return b;
    })(c("ReactComposerStoreBaseGatedModule").module);
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerAudienceActionTypes",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        SET_AUDIENCE: null,
        SET_AUDIENCE_ELEMENT: null,
        SET_AUDIENCE_INSTANCE: null,
        SET_PRIVACYX_NULL_DANGEROUS: null,
        SET_COLLECTION: null,
        SET_TIMELINE_DESTINATION: null,
        TOGGLE_TIMELINE_DESTINATION: null,
        SET_STORIES_DESTINATION: null,
        TOGGLE_STORIES_DESTINATION: null,
        SET_ADS_POST_DESTINATION: null,
        TOGGLE_ADS_POST_DESTINATION: null,
        SET_INSTAGRAM_DESTINATION: null,
        SET_GROUP_DESTINATION: null,
        TOGGLE_INSTAGRAM_DESTINATION: null,
        SAVE_STORIES_STATE: null,
        TOGGLE_MESSENGER_ENTRY: null,
        CLICK_SEE_MESSENGER: null,
        STORE_MESSENGER_ENTRIES: null,
        CLEAR_STORED_MESSENGER_ENTRIES: null,
        ADD_NEW_GROUP: null,
      },
      "ReactComposerAudienceActionTypes"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerAudienceMessengerTypes",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      INDIVIDUAL: "individual",
      EXISTING_GROUP: "existing_group",
      NEW_GROUP: "new_group",
      ALL_NEW_GROUPS: "all_new_groups_attempt",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerAudienceMessengerEntry",
  ["MercuryIDs", "ReactComposerAudienceMessengerTypes", "immutable"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("immutable").Record({
      individual: c("immutable").Set(),
      existing_group: c("immutable").Set(),
      new_group: c("immutable").Set(),
      all_new_groups_attempt: new Set(),
    });
    b = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, d, e, f) {
        return (
          a.call(this, {
            individual: b || c("immutable").Set(),
            existing_group: d || c("immutable").Set(),
            new_group: e || c("immutable").Set(),
            all_new_groups_attempt: f || new Set(),
          }) || this
        );
      }
      var e = b.prototype;
      e.isEmpty = function () {
        return (
          this.individual.size === 0 &&
          this.existing_group.size === 0 &&
          this.new_group.size === 0
        );
      };
      e.flatten = function () {
        var a = c("immutable").Set();
        this.toMap().forEach(function (b, d) {
          return d === c("ReactComposerAudienceMessengerTypes").ALL_NEW_GROUPS
            ? null
            : (a = a.union(b));
        });
        return a;
      };
      e.parseIndividualAndExistingGroups = function () {
        return this.individual.union(this.existing_group);
      };
      e.parseNewMessengerGroups = function () {
        return this.new_group.map(function (a) {
          return a.split(",");
        });
      };
      e.getThreadIDs = function () {
        var a = this.individual.map(function (a) {
            return d("MercuryIDs").getThreadIDFromUserID(a);
          }),
          b = this.existing_group.map(function (a) {
            return d("MercuryIDs").getThreadIDFromThreadFBID(a);
          });
        return a.union(b);
      };
      e.isDuplicateNewGroup = function (a) {
        for (
          var b = this.all_new_groups_attempt,
            c = Array.isArray(b),
            d = 0,
            b = c
              ? b
              : b[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var e;
          if (c) {
            if (d >= b.length) break;
            e = b[d++];
          } else {
            d = b.next();
            if (d.done) break;
            e = d.value;
          }
          e = e;
          if (e.getUniqueID() === a) return !0;
        }
        return !1;
      };
      return b;
    })(a);
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerAudienceStore",
  [
    "csx",
    "invariant",
    "$",
    "DOM",
    "ReactComposerActionStore",
    "ReactComposerAudienceActionTypes",
    "ReactComposerAudienceMessengerEntry",
    "ReactComposerAudienceMessengerTypes",
  ],
  function (a, b, c, d, e, f, g, h, i) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                audience: null,
                audienceElement: null,
                audienceInstance: null,
                legacyAudience: null,
                privacyxNullDangerous: !1,
                collectionID: null,
                privacyLabel: null,
                timelineSelected: !0,
                storiesSelected: !1,
                instagramSelected: !1,
                selectedGroupID: null,
                adsPostSelected: !1,
                storiesSelectedSavedState: null,
                selectedMessengerRecipientEntries: new (c(
                  "ReactComposerAudienceMessengerEntry"
                ))(),
                expandedMessengerSection: !1,
                savedMessengerEntries: new (c(
                  "ReactComposerAudienceMessengerEntry"
                ))(),
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerAudienceActionTypes").SET_AUDIENCE:
                  d && d.$ReactComposerAudienceStore1(a);
                  break;
                case c("ReactComposerAudienceActionTypes").SET_AUDIENCE_ELEMENT:
                  d && d.$ReactComposerAudienceStore2(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .SET_AUDIENCE_INSTANCE:
                  d && d.$ReactComposerAudienceStore3(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .SET_PRIVACYX_NULL_DANGEROUS:
                  d && d.$ReactComposerAudienceStore4(a);
                  break;
                case c("ReactComposerAudienceActionTypes").SET_COLLECTION:
                  d && d.$ReactComposerAudienceStore5(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .SET_TIMELINE_DESTINATION:
                  d && d.$ReactComposerAudienceStore6(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .TOGGLE_TIMELINE_DESTINATION:
                  d && d.$ReactComposerAudienceStore7(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .SET_STORIES_DESTINATION:
                  d && d.$ReactComposerAudienceStore8(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .TOGGLE_STORIES_DESTINATION:
                  d && d.$ReactComposerAudienceStore9(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .SET_ADS_POST_DESTINATION:
                  d && d.$ReactComposerAudienceStore10(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .TOGGLE_ADS_POST_DESTINATION:
                  d && d.$ReactComposerAudienceStore11(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .SET_INSTAGRAM_DESTINATION:
                  d && d.$ReactComposerAudienceStore12(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .SET_GROUP_DESTINATION:
                  d && d.$ReactComposerAudienceStore13(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .TOGGLE_INSTAGRAM_DESTINATION:
                  d && d.$ReactComposerAudienceStore14(a);
                  break;
                case c("ReactComposerAudienceActionTypes").SAVE_STORIES_STATE:
                  d && d.$ReactComposerAudienceStore15(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .TOGGLE_MESSENGER_ENTRY:
                  d && d.$ReactComposerAudienceStore16(a);
                  break;
                case c("ReactComposerAudienceActionTypes").CLICK_SEE_MESSENGER:
                  d && d.$ReactComposerAudienceStore17(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .STORE_MESSENGER_ENTRIES:
                  d && d.$ReactComposerAudienceStore18(a);
                  break;
                case c("ReactComposerAudienceActionTypes")
                  .CLEAR_STORED_MESSENGER_ENTRIES:
                  d && d.$ReactComposerAudienceStore19(a);
                  break;
                case c("ReactComposerAudienceActionTypes").ADD_NEW_GROUP:
                  d && d.$ReactComposerAudienceStore20(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var d = b.prototype;
      d.getAudience = function (a) {
        if (this.getPrivacyxNullDangerous(a)) return null;
        try {
          var b = c("DOM").scry(c("$")(a), "._5dd8");
          b.length < 2 || i(0, 5186);
          b = b[0];
          if (b) {
            b = c("DOM").scry(b, 'input[name="privacyx"]');
            b.length < 2 || i(0, 5187);
            if (b.length === 1) return b[0].value;
          }
        } catch (a) {}
        return this.getComposerData(a).audience;
      };
      d.getLegacyAudience = function (a) {
        return this.getComposerData(a).legacyAudience;
      };
      d.getAudienceElement = function (a) {
        return this.getComposerData(a).audienceElement;
      };
      d.getAudienceInstance = function (a) {
        return this.getComposerData(a).audienceInstance;
      };
      d.getPrivacyxNullDangerous = function (a) {
        return this.getComposerData(a).privacyxNullDangerous;
      };
      d.getCollectionID = function (a) {
        return this.getComposerData(a).collectionID;
      };
      d.getPrivacyLabel = function (a) {
        return this.getComposerData(a).privacyLabel;
      };
      d.getTimelineSelected = function (a) {
        return this.getComposerData(a).timelineSelected;
      };
      d.getStoriesSelected = function (a) {
        return this.getComposerData(a).storiesSelected;
      };
      d.getAdsPePostSelected = function (a) {
        return this.getComposerData(a).adsPostSelected;
      };
      d.getInstagramBusinessAccountID = function (a) {
        return this.getComposerData(a).instagramBusinessAccountID;
      };
      d.getInstagramSelected = function (a) {
        return this.getComposerData(a).instagramSelected;
      };
      d.getSelectedGroupID = function (a) {
        return this.getComposerData(a).selectedGroupID;
      };
      d.getStoriesSelectedSavedState = function (a) {
        return this.getComposerData(a).storiesSelectedSavedState;
      };
      d.getSelectedMessengerRecipientEntries = function (a) {
        return this.getComposerData(a).selectedMessengerRecipientEntries;
      };
      d.getMessengerSectionVisible = function (a) {
        return this.getComposerData(a).expandedMessengerSection;
      };
      d.getStoredMessengerRecipientEntries = function (a) {
        return this.getComposerData(a).savedMessengerEntries;
      };
      d.getNoDestinationSelected = function (a) {
        return (
          !this.getSelectedMessengerRecipientEntries(a) &&
          !this.getStoriesSelectedSavedState(a) &&
          !this.getInstagramSelected(a) &&
          !this.getSelectedGroupID(a) &&
          !this.getStoriesSelected(a) &&
          !this.getTimelineSelected(a)
        );
      };
      d.$ReactComposerAudienceStore1 = function (a) {
        var b = this.validateAction(a, "composerID"),
          c = this.getComposerData(b);
        c.audience = a.audience;
        c.legacyAudience = a.legacyAudience;
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore2 = function (a) {
        a = this.validateAction(a, ["composerID", "audienceElement"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.audienceElement = a;
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore3 = function (a) {
        var b = this.validateAction(a, "composerID"),
          c = this.getComposerData(b);
        c.audienceInstance = a.audienceInstance;
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore4 = function (a) {
        var b = this.validateAction(a, "composerID"),
          c = this.getComposerData(b);
        c.privacyxNullDangerous = a.privacyxNullDangerous;
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore5 = function (a) {
        var b = this.validateAction(a, ["composerID", "collectionID"]),
          c = b[0];
        b = b[1];
        var d = this.getComposerData(c);
        d.collectionID = b;
        d.privacyLabel = a.privacyLabel;
        this.emitChange(c);
      };
      d.$ReactComposerAudienceStore6 = function (a) {
        a = this.validateAction(a, ["composerID", "timelineSelected"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.timelineSelected = a;
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore7 = function (a) {
        a = this.validateAction(a, ["composerID"]);
        var b = this.getComposerData(a);
        b.timelineSelected = !b.timelineSelected;
        this.emitChange(a);
      };
      d.$ReactComposerAudienceStore8 = function (a) {
        a = this.validateAction(a, ["composerID", "storiesSelected"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.storiesSelected = a;
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore9 = function (a) {
        a = this.validateAction(a, ["composerID"]);
        var b = this.getComposerData(a);
        b.storiesSelected = !b.storiesSelected;
        this.emitChange(a);
      };
      d.$ReactComposerAudienceStore10 = function (a) {
        a = this.validateAction(a, ["composerID", "adsPostSelected"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.adsPostSelected = a;
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore11 = function (a) {
        a = this.validateAction(a, ["composerID"]);
        var b = this.getComposerData(a);
        b.adsPostSelected = !b.adsPostSelected;
        this.emitChange(a);
      };
      d.$ReactComposerAudienceStore12 = function (a) {
        a = this.validateAction(a, ["composerID", "instagramSelected"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.instagramSelected = a;
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore13 = function (a) {
        a = this.validateAction(a, ["composerID", "selectedGroupID"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.selectedGroupID = a;
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore14 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "instagramBusinessAccountID",
        ]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.instagramSelected = !c.instagramSelected;
        c.instagramBusinessAccountID
          ? (c.instagramBusinessAccountID = null)
          : (c.instagramBusinessAccountID = a);
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore15 = function (a) {
        a = this.validateAction(a, ["composerID", "storiesSelected"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.storiesSelectedSavedState = a;
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore16 = function (a) {
        a = this.validateAction(a, ["composerID", "targetID", "entryType"]);
        var b = a[0],
          c = a[1];
        a = a[2];
        var d = this.getComposerData(b);
        d.selectedMessengerRecipientEntries[a].has(c)
          ? (d.selectedMessengerRecipientEntries =
              d.selectedMessengerRecipientEntries.set(
                a,
                d.selectedMessengerRecipientEntries[a]["delete"](c)
              ))
          : (d.selectedMessengerRecipientEntries =
              d.selectedMessengerRecipientEntries.set(
                a,
                d.selectedMessengerRecipientEntries[a].add(c)
              ));
        this.emitChange(b);
      };
      d.$ReactComposerAudienceStore17 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = this.getComposerData(a);
        b.expandedMessengerSection = !0;
        this.emitChange(a);
      };
      d.$ReactComposerAudienceStore18 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = this.getComposerData(a);
        b.savedMessengerEntries = b.selectedMessengerRecipientEntries;
        b.selectedMessengerRecipientEntries = new (c(
          "ReactComposerAudienceMessengerEntry"
        ))();
        this.emitChange(a);
      };
      d.$ReactComposerAudienceStore19 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = this.getComposerData(a);
        b.savedMessengerEntries = new (c(
          "ReactComposerAudienceMessengerEntry"
        ))();
        this.emitChange(a);
      };
      d.$ReactComposerAudienceStore20 = function (a) {
        a = this.validateAction(a, ["composerID", "entry"]);
        var b = a[0];
        a = a[1];
        b = this.getComposerData(b);
        b.selectedMessengerRecipientEntries[
          c("ReactComposerAudienceMessengerTypes").ALL_NEW_GROUPS
        ].add(a);
      };
      return b;
    })(c("ReactComposerActionStore"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerMediaUploadType",
  [],
  function (a, b, c, d, e, f) {
    a = "PHOTO";
    b = "VIDEO";
    f.PHOTO = a;
    f.VIDEO = b;
  },
  66
);
__d(
  "ReactComposerMultilingualStatusActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        MOUNTED_MULTILINGUAL_STATUS: null,
        MULTILINGUAL_PROMPT_CLICK: null,
        MULTILINGUAL_PROMPT_CLOSE: null,
        LANGUAGE_CREATED: null,
        LANGUAGE_CHANGED: null,
        LANGUAGE_REMOVED: null,
        SET_LANGUAGE_EDITOR_STATE: null,
        SET_SPECIFIED_POST_LANGUAGE: null,
        PREFILL_MULTILINGUAL_DATA: null,
        REMOVE_EDITOR_STATE_FORMATTING: null,
      },
      "ReactComposerMultilingualStatusActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerStatusActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        SET_EDITOR_STATE: null,
        SET_ORIGINAL_EDITOR_STATE: null,
        SET_TEXT_LENGTH: null,
        SET_MENTIONS: null,
        SET_MENTIONS_SOURCE: null,
        SET_TYPEAHEAD_REPORTER: null,
        REMOVE_EDITOR_STATE_FORMATTING: null,
      },
      "ReactComposerStatusActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "getAutoURLRangesForContentState",
  ["cr:830759", "cr:832181"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      return a
        .getBlockMap()
        .map(function (a) {
          var c = [];
          b("cr:830759") !== null &&
            b("cr:830759")(a, function (a, b, d) {
              c.push({ start: a, end: b, match: d });
            });
          b("cr:832181") !== null &&
            b("cr:832181")(a, function (a, b, d, e) {
              c.push({ start: a, end: b, match: d, hovercard_endpoint: e });
            });
          return c;
        })
        .toArray();
    }
    g["default"] = a;
  },
  98
);
__d(
  "getRichComposedTextDataForSave",
  ["encodeImplicitURLRanges"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      var b = a.encodedContent,
        d = a.implicitLinks;
      a = b.blocks;
      var e = b.entityMap;
      if (d != null) {
        b = Object.keys(e).map(function (a) {
          return Number(a);
        });
        b = Math.max.apply(Math, [0].concat(b));
        var f = b + 1;
        a.forEach(function (a, b) {
          b = c("encodeImplicitURLRanges")(a.text, a.entityRanges, d[b]);
          b.forEach(function (b) {
            var c = b.entity;
            b = b.range;
            var d = f++;
            a.entityRanges.push(babelHelpers["extends"]({}, b, { key: d }));
            e["" + d] = c;
          });
        });
      }
      return {
        blocks: a.map(function (a) {
          return a.text;
        }),
        block_depths: a.map(function (a) {
          return a.depth;
        }),
        block_types: a.map(function (a) {
          return a.type;
        }),
        block_data: a.map(function (a) {
          return a.data ? JSON.stringify(a.data) : "{}";
        }),
        entities: a.map(function (a) {
          return JSON.stringify(a.entityRanges);
        }),
        entity_map: JSON.stringify(e),
        inline_styles: a.map(function (a) {
          return JSON.stringify(a.inlineStyleRanges);
        }),
      };
    }
    g["default"] = a;
  },
  98
);
__d(
  "RichTextViewUtils",
  [
    "FBLogger",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "encodeBlocks",
    "getAutoURLRangesForContentState",
    "getImplicitURLRangesForContentState",
    "getRichComposedTextDataForSave",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a, b) {
      a = c("ReactComposerAttachmentStore").getSelectedAttachmentID(a);
      if (
        a === c("ReactComposerAttachmentType").LIVE_VIDEO ||
        a === c("ReactComposerAttachmentType").SELL
      )
        return !1;
      a = b && b.attachmentsConfig[c("ReactComposerAttachmentType").STATUS];
      return !!(a && a.richTextEditor);
    }
    function h(a) {
      for (
        var b = a.blocks,
          c = Array.isArray(b),
          d = 0,
          b = c
            ? b
            : b[
                typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
              ]();
        ;

      ) {
        var e;
        if (c) {
          if (d >= b.length) break;
          e = b[d++];
        } else {
          d = b.next();
          if (d.done) break;
          e = d.value;
        }
        e = e;
        if (e.type !== 0 || e.inlineStyleRanges.length !== 0) return !0;
      }
      for (e in a.entityMap) {
        d = a.entityMap[e];
        if (d.type !== 0 && d.type !== 12) return !0;
      }
      return !1;
    }
    function b(a) {
      a = a.getCurrentContent();
      var b = c("encodeBlocks")(a),
        d = c("getImplicitURLRangesForContentState")(a),
        e = c("getAutoURLRangesForContentState")(a);
      if (
        !(
          h(b) ||
          e.some(function (a) {
            return a.length;
          })
        )
      )
        return null;
      e.some(function (a) {
        return a.length;
      }) && c("FBLogger")("react_composer").info("autolinks used");
      a = {
        encodedContent: b,
        implicitLinks: d.map(function (a, b) {
          return a.concat(e[b]);
        }),
      };
      return c("getRichComposedTextDataForSave")(a);
    }
    g.isRichTextEditorAllowed = a;
    g.getRichTextBlocksParams = b;
  },
  98
);
__d(
  "TextDelightInComposerLogger",
  ["FunnelLogger", "hashString"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = "TEXT_DELIGHTS_COMPOSER_FUNNEL",
      i = "regex_matched",
      j = "opt_out_tapped",
      k = "opt_out_backspace",
      l = "range_tapped";
    function m(a) {
      return c("hashString")(a);
    }
    function n(a, b) {
      a = m(a);
      if (d("FunnelLogger").getFunnelInstance(h, a)) return;
      d("FunnelLogger").startFunnel(h, a);
      d("FunnelLogger").addFunnelTag(h, a, b);
    }
    function o(a, b, c, e, f) {
      n(a, f),
        d("FunnelLogger").appendActionWithPayload(h, m(a), b, {
          campaign_id: c,
          keyword: e,
        });
    }
    function a(a, b, c, d) {
      o(a, i, b, c, d);
    }
    function b(a, b, c, d) {
      o(a, j, b, c, d);
    }
    function e(a, b, c, d) {
      o(a, k, b, c, d);
    }
    function f(a, b, c, d) {
      o(a, l, b, c, d);
    }
    function p(a) {
      d("FunnelLogger").endFunnel(h, m(a));
    }
    g.startFunnelInstance = n;
    g._appendAction = o;
    g.regexMatched = a;
    g.optOutTapped = b;
    g.optOutBackspace = e;
    g.rangeTapped = f;
    g.endFunnel = p;
  },
  98
);
__d(
  "getChunkForContentState",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    function a(a, b, c) {
      if (b) {
        c = c.getEntity(b);
        if (c.getType() === "EMOTICON") return c.getData().originalEmoticon;
        else if (c.getType() === "EMOJI") return c.getData().emoji.join("");
      }
      return a.replace("@[", "@ [");
    }
    f["default"] = a;
  },
  66
);
__d(
  "getDelightRangesForContentState",
  [
    "TextDelightInComposerGating",
    "TextDelightInComposerLogger",
    "UnicodeUtils",
    "emptyFunction",
    "getChunkForContentState",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a, b, e) {
      if (!d("TextDelightInComposerGating").isHighlightEnabled(b)) return [];
      if (a.getPlainText() === "") return [];
      e && d("TextDelightInComposerLogger").endFunnel(e);
      var f = 0,
        g = [];
      a.getBlockMap().forEach(function (b) {
        var e = b.getText();
        b.findEntityRanges(c("emptyFunction").thatReturnsTrue, function (c, i) {
          i = h(e.slice(c, i), b.getEntityAt(c), a);
          i.isDelight &&
            g.push({
              offset: f,
              length: d("UnicodeUtils").strlen(i.text),
              campaignID: i.campaignID,
            });
          f += d("UnicodeUtils").strlen(i.text);
        });
        f += 1;
      });
      return g;
    }
    function h(a, b, d) {
      if (b) {
        var e = d.getEntity(b);
        if (e.getType() === "DELIGHT" && !e.getData().disabled) {
          e = e.getData().campaignID;
          if (/^\d+$/.test(e)) return { isDelight: !0, text: a, campaignID: e };
        }
      }
      e = c("getChunkForContentState")(a, b, d);
      return { isDelight: !1, text: e };
    }
    g["default"] = a;
  },
  98
);
__d(
  "getMentionsTextForContentState",
  ["emptyFunction", "getChunkForContentState"],
  function (a, b, c, d, e, f) {
    "use strict";
    var g = b("emptyFunction").thatReturnsTrue,
      h = /[\\\]:]/g;
    function a(a, b) {
      b === void 0 && (b = "");
      var c = a.getBlockMap().map(function (b) {
        var c = b.getText(),
          d = [];
        b.findEntityRanges(g, function (e, f) {
          d.push(i(c.slice(e, f), b.getEntityAt(e), a));
        });
        return d.join("");
      });
      return c.join("\n" + b);
    }
    function i(a, c, d) {
      if (c) {
        var e = d.getEntity(c);
        if (e.getType() === "MENTION") {
          a = a.replace(h, function (a) {
            return "\\" + a;
          });
          e = e.getData().id;
          if (/^\d+$/.test(e)) return "@[" + e + ":" + a + "]";
        }
      }
      return b("getChunkForContentState")(a, c, d);
    }
    e.exports = a;
  },
  null
);
__d(
  "ReactComposerStatusStore",
  [
    "ContentState",
    "EditorState",
    "ReactComposerMultilingualStatusActionType",
    "ReactComposerStatusActionType",
    "ReactComposerStoreBase",
    "RichTextViewUtils",
    "getDelightRangesForContentState",
    "getMentionsTextForContentState",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              var a = c("EditorState").createEmpty();
              return {
                activeEditorState: a,
                activeLanguageDialect: null,
                editorState: a,
                length: 0,
                mentionsSource: null,
                originalEditorState: null,
                typeaheadReporter: null,
                mentions: null,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerStatusActionType").SET_MENTIONS_SOURCE:
                  d && d.$ReactComposerStatusStore1(a);
                  break;
                case c("ReactComposerStatusActionType").SET_TYPEAHEAD_REPORTER:
                  d && d.$ReactComposerStatusStore2(a);
                  break;
                case c("ReactComposerStatusActionType").SET_EDITOR_STATE:
                  d && d.$ReactComposerStatusStore3(a);
                  break;
                case c("ReactComposerMultilingualStatusActionType")
                  .SET_LANGUAGE_EDITOR_STATE:
                  d && d.$ReactComposerStatusStore4(a);
                  break;
                case c("ReactComposerStatusActionType")
                  .SET_ORIGINAL_EDITOR_STATE:
                  d && d.$ReactComposerStatusStore5(a);
                  break;
                case c("ReactComposerStatusActionType").SET_MENTIONS:
                  d && d.$ReactComposerStatusStore6(a);
                  break;
                case c("ReactComposerStatusActionType").SET_TEXT_LENGTH:
                  d && d.$ReactComposerStatusStore7(a);
                  break;
                case c("ReactComposerStatusActionType")
                  .REMOVE_EDITOR_STATE_FORMATTING:
                  d && d.$ReactComposerStatusStore8(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.getMentionsSource = function (a) {
        return this.getComposerData(a).mentionsSource;
      };
      e.getTypeaheadReporter = function (a) {
        return this.getComposerData(a).typeaheadReporter;
      };
      e.getEditorState = function (a) {
        return this.getComposerData(a).editorState;
      };
      e.getOriginalEditorState = function (a) {
        return this.getComposerData(a).originalEditorState;
      };
      e.getActiveEditorState = function (a) {
        return this.getComposerData(a).activeEditorState;
      };
      e.getActiveLanguageDialect = function (a) {
        return this.getComposerData(a).activeLanguageDialect;
      };
      e.getMentions = function (a) {
        return this.getComposerData(a).mentions;
      };
      e.getMessage = function (a, b) {
        b === void 0 && (b = !1);
        a = this.getEditorState(a);
        if (!a) return "";
        a = a.getCurrentContent();
        b = b ? "\n" : "";
        return c("getMentionsTextForContentState")(a, b);
      };
      e.getDelightRanges = function (a) {
        var b = this.getEditorState(a);
        return !b
          ? []
          : c("getDelightRangesForContentState")(
              b.getCurrentContent(),
              "post",
              a
            );
      };
      e.getMessageText = function (a) {
        a = this.getEditorState(a);
        if (!a) return "";
        a = a.getCurrentContent();
        return a ? a.getPlainText() : "";
      };
      e.getRichTextBlocks = function (a) {
        a = this.getEditorState(a);
        return !a ? null : d("RichTextViewUtils").getRichTextBlocksParams(a);
      };
      e.getOriginalMessageText = function (a) {
        a = this.getOriginalEditorState(a);
        if (!a) return "";
        a = a.getCurrentContent();
        return a ? a.getPlainText() : "";
      };
      e.getTextLength = function (a) {
        return this.getComposerData(a).textLength;
      };
      e.$ReactComposerStatusStore1 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.mentionsSource = a.mentionsSource;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerStatusStore2 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.typeaheadReporter = a.typeaheadReporter;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerStatusStore3 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.editorState = a.editorState;
        b.activeEditorState = a.editorState;
        b.activeLanguageDialect = null;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerStatusStore4 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.activeEditorState = a.editorState;
        b.activeLanguageDialect = a.languageDialect;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerStatusStore5 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.originalEditorState = a.originalEditorState;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerStatusStore6 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.mentions = a.mentions;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerStatusStore7 = function (a) {
        a = this.validateAction(a, ["composerID", "textLength"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.textLength = a;
        this.emitChange(b);
      };
      e.$ReactComposerStatusStore8 = function (a) {
        var b = a.composerID;
        b = this.getMessageText(b);
        b = c("ContentState").createFromText(b);
        a.editorState = c("EditorState").createWithContent(b);
        this.$ReactComposerStatusStore3(a);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ComposerStructuredLoggerUtil",
  [
    "ComposerStructuredLogger",
    "ComposerXSessionIDs",
    "PagesComposerContextUtils",
    "PagesComposerLoggingUtils",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "ReactComposerAudienceStore",
    "ReactComposerMediaUploadStore",
    "ReactComposerMediaUploadType",
    "ReactComposerScrapedAttachmentStore",
    "ReactComposerStatusStore",
    "ReactComposerStore",
    "ReactComposerTaggerEligibilityUtils",
    "ReactPagesComposerLoggingUtils",
    "ifRequired",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      return {
        actor_id: l(a),
        actor_type: k(a),
        target_id: j(a),
        target_type: i(a),
        is_edit_composer: o(a),
        entry_point: m(a),
        composer_source_surface: n(a),
        referrer: null,
        composer_type: p(a),
        is_visual_composer: null,
        camera_post_source: null,
        creation_session_id: h(a),
      };
    }
    function h(a) {
      return d("ComposerXSessionIDs").getSessionID(a);
    }
    function b(a) {
      var b;
      b =
        (b = d("PagesComposerLoggingUtils").mapToComposerLoggingEntryPoint(
          m(a)
        )) != null
          ? b
          : "unknown";
      return {
        event_location: d(
          "PagesComposerLoggingUtils"
        ).getComposerLocationFromEntryPoint(b),
        actor_id: l(a),
        actor_type: k(a),
        target_id: j(a),
        target_type: i(a),
        composer_layout: "unknown",
        flow: "draft",
        entry_point: b,
        referrer: null,
        waterfall_session_id: h(a),
      };
    }
    function e(a) {
      var b = c("ReactComposerStore").getComposerData(a);
      b = b.destinationsConfig;
      var e = [],
        f = [],
        g = b && b.isSharesheetEnabled;
      g
        ? (e.push("TIMELINE"),
          f.push("TIMELINE"),
          b.showStorySection && (e.push("STORIES"), f.push("STORIES")),
          b.showInstagramSection &&
            (e.push("INSTAGRAM"),
            (!b.instagram || !b.instagram.isEnabled) && f.push("INSTAGRAM")),
          b.showGroupSection && (e.push("GROUPS"), f.push("GROUPS")))
        : (e.push("NONE"), f.push("NONE"));
      b = null;
      var h = c("ReactComposerAttachmentStore").getSelectedAttachmentID(a);
      if (h != null && h === c("ReactComposerAttachmentType").CTA) {
        h = c("ReactComposerAttachmentStore").getAttachment(a, h);
        h != null && (b = h.ctaType);
      }
      return {
        visible_sprouts: c("ReactComposerStore").getDisplayedSprouts(a),
        visible_destinations: e,
        eligible_destinations: f,
        selected_sprouts: d(
          "ReactPagesComposerLoggingUtils"
        ).getSelectedSprouts(a),
        selected_destinations: q(a),
        post_text: c("ReactComposerStatusStore").getMessageText(a),
        post_text_length: c("ReactComposerStatusStore").getTextLength(a),
        post_privacy:
          c("ReactComposerAudienceStore").getAudience(a) || "unknown",
        feed_targeting: null,
        photo_count: c(
          "ReactComposerMediaUploadStore"
        ).getNonsphericalPhotoCount(a),
        video_count: c("ReactComposerMediaUploadStore").getUploadsCount(
          a,
          d("ReactComposerMediaUploadType").VIDEO
        ),
        has_shared_link: c("ReactComposerScrapedAttachmentStore").hasAttachment(
          a
        )
          ? 1
          : 0,
        call_to_action: b,
        ranker_request_id: c("ReactComposerStore").getRankerRequestID(a),
        is_sharesheet_enabled: g ? 1 : 0,
        post_action_type: r(a),
      };
    }
    function i(a) {
      a = d("ComposerStructuredLogger").getInstance(a);
      return a == null ? "other" : a.targetType || "other";
    }
    function j(a) {
      a = d("ComposerStructuredLogger").getInstance(a);
      return a == null ? "-1" : a.targetID || "-1";
    }
    function k(a) {
      a = d("ComposerStructuredLogger").getInstance(a);
      return a == null ? "other" : a.actorType || "user";
    }
    function l(a) {
      a = d("ComposerStructuredLogger").getInstance(a);
      return a == null ? "-1" : a.actorID || "-1";
    }
    function m(a) {
      a = d("ComposerStructuredLogger").getInstance(a);
      return a == null ? "unknown" : a.ref;
    }
    function n(a) {
      a = d("ComposerStructuredLogger").getInstance(a);
      return a == null ? "unknown" : a.composerSourceSurface;
    }
    function o(a) {
      a = d("ComposerStructuredLogger").getInstance(a);
      return a == null ? "0" : a.isEditComposer;
    }
    function p(a) {
      a = d("ComposerStructuredLogger").getInstance(a);
      return a == null ? null : a.composerType;
    }
    function q(a) {
      var b = s(a);
      a = c("ReactComposerStore").getComposerData(a);
      a = a.destinationsConfig;
      var d = [];
      a && a.isSharesheetEnabled
        ? (b.is_news_feed_selected && d.push("TIMELINE"),
          b.is_instagram_selected && d.push("INSTAGRAM"),
          b.is_my_story_selected && d.push("STORIES"))
        : d.push("NONE");
      return d;
    }
    function r(a) {
      var b = "publish";
      c("ifRequired")("ReactComposerPagesStore", function (c) {
        c = c.getPostActionType(a);
        switch (c) {
          case "PUBLISH":
            b = "publish";
            break;
          case "SAVE_DRAFT":
            d("PagesComposerContextUtils").getIsDraftComposer(m(a))
              ? (b = "update_draft")
              : (b = "save_draft");
            break;
          case "SCHEDULE":
            b = "schedule";
            break;
          case "BACKDATE":
            b = "backdate";
            break;
          case "ADS_POST":
            b = "ads_post";
            break;
          default:
            b = "unknown";
            break;
        }
      });
      return b;
    }
    function f(a, b) {
      return d("PagesComposerContextUtils").getIsDraftComposer(m(a)) ? !0 : !1;
    }
    function s(a) {
      return {
        is_eligible_for_my_story: d(
          "ReactComposerTaggerEligibilityUtils"
        ).isStoryCreateEligible(a),
        instagram_eligibility: d(
          "ReactComposerTaggerEligibilityUtils"
        ).getInstagramSharingEligibility(a),
        is_my_story_selected: c(
          "ReactComposerAudienceStore"
        ).getStoriesSelected(a),
        is_ads_pe_post_selected: c(
          "ReactComposerAudienceStore"
        ).getAdsPePostSelected(a),
        is_news_feed_selected: c(
          "ReactComposerAudienceStore"
        ).getTimelineSelected(a),
        is_instagram_selected: c(
          "ReactComposerAudienceStore"
        ).getInstagramSelected(a),
      };
    }
    g.getLoggingBaseData = a;
    g.getWaterfallSessionID = h;
    g.getDraftPostEditLoggingBaseData = b;
    g.getLoggingEventData = e;
    g.getTargetType = i;
    g.getTargetID = j;
    g.getActorType = k;
    g.getActorID = l;
    g.getEntryPoint = m;
    g.getComposerLocation = n;
    g.getIsEditComposer = o;
    g.getComposerType = p;
    g.getSelectedDestinations = q;
    g.getPostActionType = r;
    g.shouldUseFalco = f;
    g.getDestinationsData = s;
  },
  98
);
__d(
  "XPageNuxSelectorAsyncController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/pages/nux_selector/", {
      page_id: { type: "FBID", required: !0 },
      nux_ids: { type: "EnumVector", required: !0, enumType: { member: 0 } },
      surface: { type: "Enum", required: !0, enumType: 1 },
    });
  },
  null
);
__d(
  "PagesNuxFrameworkHelper",
  [
    "AsyncRequest",
    "BasicFBNux",
    "FBLogger",
    "PagesNuxFrameworkTypedLogger",
    "Run",
    "XPageNuxSelectorAsyncController",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = {},
      i = {},
      j = null,
      k = null;
    function l() {
      return j;
    }
    function m(a) {
      j = a;
    }
    function n() {
      return k;
    }
    function o(a) {
      k = a;
    }
    function p(a, b, c, d, e) {
      h[b] || (h[b] = {}),
        (h[b][a] = { showCallback: c, isReadyForRender: d, contextRef: e });
    }
    function q() {
      return h;
    }
    function r(a, b, c) {
      if (!h[b] || !h[b][a]) return;
      h[b][a].isReadyForRender = c;
    }
    function s(a, b) {
      i[a] = b;
    }
    function t() {
      return i;
    }
    function u(a, b) {
      o(b), m(a);
    }
    function v(b, d) {
      var a = n();
      if (!a) return;
      if (!b.isShown()) {
        try {
          b.show();
        } catch (b) {
          c("FBLogger")("pages_nux_framework").mustfix(
            "Nux ID: %s, Surface: %s, raised exception when rendering",
            d,
            a
          );
        }
        b.subscribe("hide", function () {
          z(d, a);
        });
      }
    }
    function w(b) {
      if (!b) return;
      var a = n();
      if (!a) return;
      var e = q()[a][b];
      if (!e.isReadyForRender && e.contextRef) {
        new (c("PagesNuxFrameworkTypedLogger"))()
          .setEvent("nux_framework.hold")
          .setPageID(l())
          .setNuxID(b)
          .setNuxSurface(a)
          .log();
        e.contextRef &&
          e.contextRef.addEventListener("show", function () {
            b &&
              (e.showCallback && e.showCallback(),
              d("BasicFBNux").onView(b),
              new (c("PagesNuxFrameworkTypedLogger"))()
                .setEvent("nux_framework.show_nux")
                .setPageID(l())
                .setNuxID(b)
                .setNuxSurface(a)
                .log());
          });
        s(a, b);
        return;
      }
      e.showCallback.apply();
      d("BasicFBNux").onView(b);
      s(a, b);
      new (c("PagesNuxFrameworkTypedLogger"))()
        .setEvent("nux_framework.show_nux")
        .setPageID(l())
        .setNuxID(b)
        .setNuxSurface(a)
        .log();
    }
    function x() {
      var d = n();
      if (!d) return;
      var a = q()[d];
      if (!a) return;
      var b = t()[d];
      if (b) {
        a[b].isReadyForRender === !1 && r(b, d, !0);
        w(b);
        return;
      }
      b = l();
      if (!b) return;
      b = c("XPageNuxSelectorAsyncController")
        .getURIBuilder()
        .setFBID("page_id", b)
        .setEnumVector("nux_ids", Object.keys(a))
        .setEnum("surface", d)
        .getURI();
      new (c("AsyncRequest"))()
        .setHandler(function (a) {
          w(a.payload);
        })
        .setURI(b)
        .send();
    }
    function y(a, b, d, e, f) {
      p(a, b, d, e ? e : !0, f),
        new (c("PagesNuxFrameworkTypedLogger"))()
          .setEvent("nux_framework.register_nux")
          .setPageID(l())
          .setNuxID(a)
          .setNuxSurface(b)
          .log();
    }
    function z(a, b) {
      s(b, null),
        d("BasicFBNux").onDismiss(a),
        new (c("PagesNuxFrameworkTypedLogger"))()
          .setEvent("nux_framework.xout")
          .setPageID(l())
          .setNuxID(a)
          .setNuxSurface(b)
          .log();
    }
    function a(a, b, c) {
      var d = function () {
        return v(a, b);
      };
      y(b, c, d);
    }
    function b(a) {
      o(a);
    }
    function e(a, b) {
      u(a, b),
        d("Run").onAfterLoad(function () {
          return x();
        });
    }
    function f(a, b, c, d) {
      var e = function () {
        return v(a, b);
      };
      y(b, c, e, !1, d);
    }
    function A(b) {
      var a = n();
      if (!a || a !== b) return;
      a = t();
      if (a[b]) return;
      x();
    }
    g._initSurface = u;
    g._showNux = v;
    g._setNuxActive = w;
    g._pickAndShowNux = x;
    g.registerNux = y;
    g.closeNux = z;
    g.registerNuxFromServer = a;
    g.setCurrentSurface = b;
    g.showNuxAfterLoading = e;
    g.RegisterNuxWithDependency = f;
    g.showNuxAferComponentLoading = A;
  },
  98
);
__d(
  "ReactComposerTaggerType",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      ADS_PE_POST: "ADS_PE_POST",
      CAMERA: "CAMERA",
      INSTAGRAM: "INSTAGRAM",
      PEOPLE: "PEOPLE",
      OG: "OG",
      CALL: "CALL",
      SHOP: "SHOP",
      LOCATION: "LOCATION",
      ACTIVITY: "ACTIVITY",
      BACKDATE: "BACKDATE",
      TARGETING: "TARGETING",
      PUBLISHER_ABTEST_HOLDOUT: "PUBLISHER_ABTEST_HOLDOUT",
      SPONSOR: "SPONSOR",
      VAULTPHOTO: "VAULTPHOTO",
      CONTENT_WARNINGS: "CONTENT_WARNINGS",
      PRODUCT: "PRODUCT",
      XY_PRODUCT: "XY_PRODUCT",
      PRODUCT_SPROUT: "PRODUCT_SPROUT",
      PAGE_CTA: "PAGE_CTA",
      FORMATTED_TEXT: "FORMATTED_TEXT",
      FORMATTED_TEXT_TRAY: "FORMATTED_TEXT_TRAY",
      STICKER: "STICKER",
      MESSAGING: "MESSAGING",
      POLITICAL_INFO: "POLITICAL_INFO",
      ISSUE_TAG: "ISSUE_TAG",
      CONTACT_YOUR_REPRESENTATIVE: "CONTACT_YOUR_REPRESENTATIVE",
      FUN_FACT: "FUN_FACT",
      ALBUM: "ALBUM",
      GIF: "GIF",
      FIND_PLAYERS: "FIND_PLAYERS",
      FUNDRAISER: "FUNDRAISER",
      LIST: "LIST",
      VISUAL_POLL: "VISUAL_POLL",
      RECOMMENDATION: "RECOMMENDATION",
      SALES_PROMO: "SALES_PROMO",
      TAG_EVENT: "TAG_EVENT",
      BREAKING_NEWS: "BREAKING_NEWS",
      ASSET_3D: "ASSET_3D",
      PLAY_WITH_FRIENDS: "PLAY_WITH_FRIENDS",
      STORIES: "STORIES",
      VIDEO_SUGGESTIONS: "VIDEO_SUGGESTIONS",
      LOCAL_ALERTS: "LOCAL_ALERTS",
      MESSENGER: "MESSENGER",
      TODO_LIST: "TODO_LIST",
      LIVING_ROOM: "LIVING_ROOM",
      LOCAL_DEV_PLATFORM: "LOCAL_DEV_PLATFORM",
      GROUP_JOIN_CTA: "GROUP_JOIN_CTA",
      GET_SHOWTIMES: "GET_SHOWTIMES",
      APP_INTEGRATION_AODOCS: "APP_INTEGRATION_AODOCS",
      APP_INTEGRATION_BOX: "APP_INTEGRATION_BOX",
      APP_INTEGRATION_CORNERSTONE: "APP_INTEGRATION_CORNERSTONE",
      APP_INTEGRATION_DROPBOX: "APP_INTEGRATION_DROPBOX",
      APP_INTEGRATION_EGNYTE: "APP_INTEGRATION_EGNYTE",
      APP_INTEGRATION_GDRIVE: "APP_INTEGRATION_GDRIVE",
      APP_INTEGRATION_JIRA: "APP_INTEGRATION_JIRA",
      APP_INTEGRATION_ONEDRIVE: "APP_INTEGRATION_ONEDRIVE",
      APP_INTEGRATION_QUIP: "APP_INTEGRATION_QUIP",
      APP_INTEGRATION_SHAREPOINT: "APP_INTEGRATION_SHAREPOINT",
      APP_INTEGRATION_TASKS: "APP_INTEGRATION_TASKS",
      APP_INTEGRATION_TRELLO: "APP_INTEGRATION_TRELLO",
      SUPPORT_NOW: "SUPPORT_NOW",
      STARS: "stars",
      WORK_FILE: "WORK_FILE",
      AMA: "AMA",
      RECRUITING_CANDIDATE: "RECRUITING_CANDIDATE",
      PAGES_INTERCEPTION: "PAGES_INTERCEPTION",
      SOTTO_CTA: "SOTTO_CTA",
      MEDIA: "MEDIA",
      CHATROOM: "CHATROOM",
      PAID_VIRTUAL_EVENT_GATED_POST: "PAID_VIRTUAL_EVENT_GATED_POST",
      BC_SUPPORT: "BC_SUPPORT",
      COVID_BUSINESS_POST: "COVID_BUSINESS_POST",
      WORK_CHECKLIST: "WORK_CHECKLIST",
      VIDEO_MEETUP: "VIDEO_MEETUP",
      JOB_SEARCH: "JOB_SEARCH",
      HASHTAG: "HASHTAG",
    });
    f["default"] = a;
  },
  66
);
__d(
  "dotAccess",
  [],
  function (a, b, c, d, e, f) {
    function a(a, b, c) {
      b = b.split(".");
      do {
        var d = b.shift();
        a = a[d] || (c && (a[d] = {}));
      } while (b.length && a);
      return a;
    }
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerPagesStore",
  [
    "AsyncRequest",
    "ComposerXSessionIDs",
    "PagesComposerActionsTypes",
    "PagesComposerUnpublishedPostsStore",
    "PagesNuxFrameworkHelper",
    "ReactComposerActionStore",
    "ReactComposerActionTypes",
    "ReactComposerFocusActionTypes",
    "ReactComposerMediaConfig",
    "ReactComposerPostUtils",
    "ReactComposerTaggerType",
    "dotAccess",
    "formatDate",
    "isEmpty",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = "/ajax/react_composer/survey",
      i = 682215755305624,
      j = {
        instagramCrossPosting: !1,
        isDialogComposer: !1,
        isOfferUpsellShown: !1,
        isOfferUpsellAbandoned: !1,
        currentLocale: null,
        interceptionConfig: [],
        composerContextConfig: null,
        composerConfig: null,
        composerType: null,
      },
      k = !1;
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b;
        return (b =
          a.call(
            this,
            function () {
              return babelHelpers["extends"]({}, j);
            },
            function (a) {
              switch (a.type) {
                case c("PagesComposerActionsTypes").INSTAGRAM_CROSS_POSTING:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$ReactComposerPagesStore1(a);
                  break;
                case c("PagesComposerActionsTypes").SHOW_OFFER_UPSELL:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$ReactComposerPagesStore2(a);
                  break;
                case c("PagesComposerActionsTypes").ABANDON_OFFER_UPSELL:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$ReactComposerPagesStore3(a);
                  break;
                case c("PagesComposerActionsTypes").SET_CURRENT_LOCALE:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$ReactComposerPagesStore4(a);
                  break;
                case c("PagesComposerActionsTypes").SET_INTERCEPTION_CONFIG:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$ReactComposerPagesStore5(a);
                  break;
                case c("PagesComposerActionsTypes").SET_PAGES_COMPOSER_CONFIG:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$ReactComposerPagesStore6(a);
                  break;
                case c("PagesComposerActionsTypes")
                  .SET_PAGES_COMPOSER_CONTEXT_CONFIG:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$ReactComposerPagesStore7(a);
                  break;
                case c("PagesComposerActionsTypes").SET_COMPOSER_TYPE:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$ReactComposerPagesStore8(a);
                  break;
                case c("ReactComposerActionTypes").EXPAND_SPROUTS:
                case c("ReactComposerFocusActionTypes").FOCUS_ACQUIRED:
                  k ||
                    (d("PagesNuxFrameworkHelper").setCurrentSurface(
                      "page_composer"
                    ),
                    (k = !0));
                  break;
                case c("PagesComposerActionsTypes").SET_IS_RUNNING_INTERCEPTION:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$ReactComposerPagesStore9(a);
                  break;
                case c("PagesComposerActionsTypes").SET_IS_DIALOG_COMPOSER:
                  babelHelpers.assertThisInitialized(b) &&
                    b.$ReactComposerPagesStore10(a);
                  break;
              }
            }
          ) || this);
      }
      var e = b.prototype;
      e.$ReactComposerPagesStore9 = function (a) {
        a = this.validateAction(a, ["composerID", "isRunningInterception"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.isRunningInterception = a;
        this.emitChange(b);
      };
      e.isRunningInterception = function (a) {
        return !!this.getComposerData(a).isRunningInterception;
      };
      e.getIsOfferUpsellShown = function (a) {
        return this.getComposerData(a).isOfferUpsellShown;
      };
      e.getCurrentLocale = function (a) {
        return this.getComposerData(a).currentLocale;
      };
      e.getInterceptionConfig = function (a) {
        return this.getComposerData(a).interceptionConfig;
      };
      e.getPagesComposerConfig = function (a) {
        a = this.getComposerData(a).pagesComposerConfig;
        return !a || c("isEmpty")(a) ? null : a;
      };
      e.getPagesComposerContextConfig = function (a) {
        a = this.getComposerData(a).pagesComposerContextConfig;
        return !a || c("isEmpty")(a) ? null : a;
      };
      e.getTargetID = function (a) {
        a = this.getPagesComposerContextConfig(a);
        return !a ? null : a.targetID;
      };
      e.getComposerEntryPoint = function (a) {
        return this.getComposerData(a).composerType;
      };
      e.getIsOfferUpsellAbandoned = function (a) {
        return this.getComposerData(a).isOfferUpsellAbandoned;
      };
      e.getPostActionType = function (a) {
        return c("PagesComposerUnpublishedPostsStore").getPostActionType(a);
      };
      e.getIsDialogComposer = function (a) {
        return this.getComposerData(a).isDialogComposer;
      };
      e.__onPostStarted = function (a) {
        var b = babelHelpers["extends"]({}, a.config);
        b.contextInfo = babelHelpers["extends"]({}, b.contextInfo || {});
        var e = c("PagesComposerUnpublishedPostsStore").getIsPreview(
          a.composerID
        );
        if (!e) {
          e = c("PagesComposerUnpublishedPostsStore").getIsDraft(a.composerID);
          b.contextInfo.draft = e;
          e = c("PagesComposerUnpublishedPostsStore").getScheduledPublishTime(
            a.composerID
          );
          if (e) {
            var f = c("formatDate")(e, "m/d/Y", {
                skipPatternLocalization: !0,
              }),
              g = 60 * (60 * e.getHours() + e.getMinutes());
            b.contextInfo.scheduled = !0;
            b.contextInfo.future_date = f;
            b.contextInfo.future_time = g;
            b.contextInfo.scheduled_publish_time = Math.round(
              e.getTime() / 1e3
            );
          }
          f = c("PagesComposerUnpublishedPostsStore").getBackdateConfig(
            a.composerID
          );
          f &&
            ((b.contextInfo.backdated_date = {
              year: f.year,
              month: f.month,
              day: f.day,
            }),
            (b.contextInfo.hide_from_newsfeed = f.hideFromNewsFeed));
          g = c("PagesComposerUnpublishedPostsStore").getIsAdsPost(
            a.composerID
          );
          g && (b.contextInfo.is_ad_post = !0);
          e = c(
            "PagesComposerUnpublishedPostsStore"
          ).getIsReviewableBrandedContent(a.composerID);
          e && (b.contextInfo.is_reviewable_branded_content = !0);
          f = this.getComposerData(a.composerID).instagramCrossPosting;
          f && (b.contextInfo.instagramCrossPosting = !0);
        } else b.contextInfo.is_preview = !0;
        b.contextInfo.is_dialog_composer = this.getComposerData(
          a.composerID
        ).isDialogComposer;
        g = a.config.taggersConfig
          ? a.config.taggersConfig[c("ReactComposerTaggerType").TARGETING]
          : null;
        e = g ? c("dotAccess")(g, "feedTargetingGK") : !1;
        f = a.config.loggingConfig ? a.config.loggingConfig.targetType : null;
        d("ReactComposerPostUtils").post({
          actorID: a.actorID,
          composerConfig: b,
          composerID: a.composerID,
          composerType: a.composerType,
          targetID: a.targetID,
          targetType: f,
          onPostSuccess: a.onPostSuccess,
          onPostFailure: a.onPostFailure,
          useHints: e,
        });
      };
      e.__onPostSucceeded = function (a) {
        a = this.validateAction(a, "composerID");
        var b = this.getComposerData(a);
        b.isOfferUpsellShown &&
          b.isOfferUpsellAbandoned &&
          new (c("AsyncRequest"))()
            .setURI(h)
            .setData({
              config_id: i,
              session_id: d("ComposerXSessionIDs").getSessionID(a),
              composer_id: a,
            })
            .send();
      };
      e.__canPost = function (a) {
        return !d("ReactComposerPostUtils").isPostButtonDisabled(
          a.composerID,
          c("ReactComposerMediaConfig").photo.limit
        );
      };
      e.$ReactComposerPagesStore1 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.instagramCrossPosting = a.enabled;
      };
      e.$ReactComposerPagesStore2 = function (a) {
        a = this.validateAction(a, ["composerID", "config"]);
        a = a[0];
        a = this.getComposerData(a);
        a.isOfferUpsellShown = !0;
      };
      e.$ReactComposerPagesStore3 = function (a) {
        a = this.getComposerData(a.composerID);
        a.isOfferUpsellAbandoned = !0;
      };
      e.$ReactComposerPagesStore4 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.currentLocale = a.currentLocale;
      };
      e.$ReactComposerPagesStore6 = function (a) {
        a = this.validateAction(a, ["composerID", "pagesComposerConfig"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.pagesComposerConfig = a;
        this.emitChange(b);
      };
      e.$ReactComposerPagesStore7 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "pagesComposerContextConfig",
        ]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.pagesComposerContextConfig = a;
        this.emitChange(b);
      };
      e.$ReactComposerPagesStore5 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.interceptionConfig = a.interceptionConfig;
      };
      e.$ReactComposerPagesStore8 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.composerType = a.composerType;
      };
      e.$ReactComposerPagesStore10 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.isDialogComposer = a.isDialogComposer;
      };
      return b;
    })(c("ReactComposerActionStore"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerCTAActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        ADD_OPTION: null,
        ALLOW_MULTI_MEDIA: null,
        SET_CTA_CONFIG: null,
        HAS_PHOTO_FOR_ENTPOST: null,
        HAS_PHOTO: null,
        NEEDS_PHOTO: null,
        HAS_VIDEO: null,
        NEEDS_VIDEO: null,
        USING_PREMADE_POST_VIDEO: null,
        SWITCH_CTA: null,
        FETCH_CTA_DATA: null,
      },
      "ReactComposerCTAActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "XReactComposerCTAAttachmentBootstrapController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/react_composer/cta/bootstrap/", {
      composer_id: { type: "String", required: !0 },
      composer_type: { type: "Enum", required: !0, enumType: 1 },
      target_id: { type: "Int", required: !0 },
      cta_type: { type: "String", required: !0 },
      attachment_id: { type: "String" },
      preview_style: {
        type: "Enum",
        defaultValue: "full_size_preview",
        enumType: 1,
      },
    });
  },
  null
);
__d(
  "ReactComposerCTAStore",
  [
    "ActorURI",
    "AsyncRequest",
    "DOM",
    "ReactComposerAttachmentActionType",
    "ReactComposerCTAActionType",
    "ReactComposerEvents",
    "ReactComposerStoreBase",
    "XReactComposerCTAAttachmentBootstrapController",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                ctaType: "",
                ctaValues: {},
                hasPhoto: c("ReactComposerCTAActionType").NEEDS_PHOTO,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerCTAActionType").FETCH_CTA_DATA:
                  d && d.$ReactComposerCTAStore1(a);
                  break;
                case c("ReactComposerCTAActionType").SET_CTA_CONFIG:
                  d && d.$ReactComposerCTAStore2(a);
                  break;
                case c("ReactComposerCTAActionType").SWITCH_CTA:
                  d && d.$ReactComposerCTAStore3(a);
                  break;
                case c("ReactComposerCTAActionType").ALLOW_MULTI_MEDIA:
                  d && d.$ReactComposerCTAStore4(a);
                  break;
                case c("ReactComposerCTAActionType").HAS_PHOTO:
                  d && d.$ReactComposerCTAStore5(a);
                  break;
                case c("ReactComposerCTAActionType").HAS_PHOTO_FOR_ENTPOST:
                  d && d.$ReactComposerCTAStore6(a);
                  break;
                case c("ReactComposerCTAActionType").NEEDS_PHOTO:
                  d && d.$ReactComposerCTAStore7(a);
                  break;
                case c("ReactComposerCTAActionType").HAS_VIDEO:
                  d && d.$ReactComposerCTAStore8(a);
                  break;
                case c("ReactComposerCTAActionType").NEEDS_VIDEO:
                  d && d.$ReactComposerCTAStore9(a);
                  break;
                case c("ReactComposerCTAActionType").USING_PREMADE_POST_VIDEO:
                  d && d.$ReactComposerCTAStore10(a);
                  break;
                case c("ReactComposerAttachmentActionType").SELECT_ATTACHMENT:
                  d && d.$ReactComposerCTAStore11(a);
                  break;
                default:
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.$ReactComposerCTAStore1 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "selectedCta",
          "actorID",
          "targetID",
          "composerType",
          "attachmentID",
        ]);
        var b = a[0],
          e = a[1],
          f = a[2],
          g = a[3],
          h = a[4];
        a = a[5];
        h = c("XReactComposerCTAAttachmentBootstrapController")
          .getURIBuilder()
          .setString("composer_id", b)
          .setEnum("composer_type", h)
          .setInt("target_id", g)
          .setString("cta_type", e)
          .setString("attachment_id", a);
        g = d("ActorURI").create(h.getURI(), f);
        e = new (c("AsyncRequest"))(g);
        e.send();
        this.emitChange(b);
      };
      e.$ReactComposerCTAStore11 = function (a) {
        var b = this.getComposerData(a.composerID);
        if (
          a.id === b.sourceAttachment ||
          b.sourceAttachment === null ||
          a.proxiedAttachmentID === b.sourceAttachment
        )
          return;
        b.ctaType = null;
        b.ctaValues = null;
        b.ctaMarkup = null;
        b.ctaAttachmentConfig = null;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerCTAStore4 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.allowMultiMedia = a.allowMultiMedia;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerCTAStore5 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.hasPhoto = c("ReactComposerCTAActionType").HAS_PHOTO;
        b.hasCTAVideo = !1;
        b.videoID = null;
        b.photoID = null;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerCTAStore6 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.hasPhoto = c("ReactComposerCTAActionType").HAS_PHOTO;
        b.photoID = a.photoID;
        b.hasCTAVideo = !1;
        b.videoID = null;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerCTAStore7 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.hasPhoto = c("ReactComposerCTAActionType").NEEDS_PHOTO;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerCTAStore8 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.hasCTAVideo = c("ReactComposerCTAActionType").HAS_VIDEO;
        b.videoID = a.videoID;
        b.hasPhoto = !1;
        b.photoID = null;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerCTAStore9 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.hasCTAVideo = c("ReactComposerCTAActionType").NEEDS_VIDEO;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerCTAStore10 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.usingPremadePostVideo = c(
          "ReactComposerCTAActionType"
        ).USING_PREMADE_POST_VIDEO;
        this.emitChange(a.composerID);
      };
      e.removeListeners = function () {
        this.removeAllListeners(c("ReactComposerEvents").CHANGE);
      };
      e.allowMultiMedia = function (a) {
        return this.getComposerData(a).allowMultiMedia === !0;
      };
      e.hasCTAPhotoID = function (a) {
        return this.getComposerData(a).photoID !== null;
      };
      e.hasCTAPhoto = function (a) {
        return (
          this.getComposerData(a).hasPhoto ===
          c("ReactComposerCTAActionType").HAS_PHOTO
        );
      };
      e.hasCTAVideo = function (a) {
        return (
          this.getComposerData(a).hasCTAVideo ===
          c("ReactComposerCTAActionType").HAS_VIDEO
        );
      };
      e.isUsingPremadePostVideo = function (a) {
        return (
          this.getComposerData(a).usingPremadePostVideo ===
          c("ReactComposerCTAActionType").USING_PREMADE_POST_VIDEO
        );
      };
      e.getCTAType = function (a) {
        return this.getComposerData(a).ctaType;
      };
      e.getCTAData = function (a) {
        return {
          type: this.getComposerData(a).ctaType,
          value: this.getComposerData(a).ctaValues,
        };
      };
      e.getCTAMarkup = function (a) {
        return this.getComposerData(a).ctaMarkup;
      };
      e.getVideoID = function (a) {
        a = this.getComposerData(a);
        return a.videoID;
      };
      e.getAttachmentConfig = function (a) {
        var b = this.getComposerData(a);
        if (!b.ctaMarkup) return null;
        var d = b.ctaMarkup,
          e = b.ctaAttachmentConfig;
        this.allowMultiMedia(a) &&
          (e.params.allowMultiMedia = b.allowMultiMedia);
        if (this.hasCTAVideo(a))
          (e.videoID = b.videoID),
            (e.usingPremadePostVideo = this.isUsingPremadePostVideo(a));
        else if (this.hasCTAPhotoID(a)) e.photoID = b.photoID;
        else {
          a = c("DOM")
            .scry(d, 'input[name="attachment[params][images][0]"]')
            .pop();
          b = c("DOM").scry(d, 'input[name="attachment[params][title]"]').pop();
          d = c("DOM")
            .scry(d, 'input[name="attachment[params][summary]"]')
            .pop();
          a &&
            (e.params.images || (e.params.images = []),
            (e.params.images[0] = a.value));
          b && (e.params.title = b.value);
          d && (e.params.summary = d.value);
        }
        return e;
      };
      e.$ReactComposerCTAStore2 = function (a) {
        a = this.validateAction(a, ["composerID", "config"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.ctaType = a.ctaType;
        c.ctaValues = a.ctaValues;
        c.ctaMarkup = a.markup;
        c.ctaAttachmentConfig = a.attachmentConfig;
        this.emitChange(b);
      };
      e.$ReactComposerCTAStore3 = function (a) {
        a = this.validateAction(a, ["composerID", "customizedMessageCta"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.ctaValues.customized_message_page_cta_text = a;
        this.emitChange(b);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactPagesComposerLoggingUtils",
  [
    "ODS",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "ReactComposerCTAStore",
    "ReactComposerMediaUploadStore",
    "ReactComposerMediaUploadType",
    "ReactComposerStore",
    "ReactComposerTaggerStore",
    "ReactComposerTaggerType",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      var b = [],
        d = c("ReactComposerStore").getDisplayedSprouts(a);
      if (d)
        for (
          var d = d,
            e = Array.isArray(d),
            f = 0,
            d = e
              ? d
              : d[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var g;
          if (e) {
            if (f >= d.length) break;
            g = d[f++];
          } else {
            f = d.next();
            if (f.done) break;
            g = f.value;
          }
          g = g;
          h(a, g) && b.push(g);
        }
      return b;
    }
    function h(a, b) {
      switch (b) {
        case "FUNDRAISER":
          return j(a);
        case "GET_BOOKINGS":
          return k(a);
        case "GET_DIRECTIONS":
          return l(a);
        case "GET_MESSAGES":
          return m(a);
        case "GET_PHONE_CALLS":
          return n(a);
        case "GET_SHOPS":
          return o(a);
        case "LIST":
          return p(a);
        case "LOCATION":
          return q(a);
        case "MEDIA":
          return s(a);
        case "MINUTIAE":
          return t(a);
        case "SPONSOR_TAG":
          return u(a);
        case "BC_SUPPORT":
          return v(a);
        case "TAG_PRODUCT":
          return w(a);
        case "VISUAL_POLLS":
          return x(a);
        case "SUPPORT_NOW":
          return i(a);
        case "LOCAL_DEV_PLATFORM":
          return y(a);
        case "GET_TICKET":
          return r(a);
      }
      d("ODS").bumpEntityKey(
        2966,
        "page_selected_feature_unsupported_sprout",
        b
      );
      return !1;
    }
    function i(a) {
      return c("ReactComposerTaggerStore").hasSupportNowCTA(a);
    }
    function j(a) {
      return c("ReactComposerTaggerStore").hasNonprofit(a);
    }
    function k(a) {
      a = c("ReactComposerCTAStore").getCTAType(a);
      return !!a && a === "BOOK_TRAVEL";
    }
    function l(a) {
      a = c("ReactComposerCTAStore").getCTAType(a);
      return !!a && a === "GET_DIRECTIONS";
    }
    function m(a) {
      a = c("ReactComposerCTAStore").getCTAType(a);
      return !!a && a === "MESSAGE_PAGE";
    }
    function n(a) {
      a = c("ReactComposerCTAStore").getCTAType(a);
      return !!a && a === "CALL_NOW";
    }
    function o(a) {
      a = c("ReactComposerCTAStore").getCTAType(a);
      return !!a && a === "SHOP_NOW";
    }
    function p(a) {
      return c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
        a,
        c("ReactComposerAttachmentType").LIST
      );
    }
    function q(a) {
      return c("ReactComposerTaggerStore").hasLocationTag(a);
    }
    function r(a) {
      return c("ReactComposerTaggerStore").hasData(
        a,
        c("ReactComposerTaggerType").GET_SHOWTIMES
      );
    }
    function s(a) {
      var b = c("ReactComposerMediaUploadStore").getNonsphericalPhotoCount(a);
      a = c("ReactComposerMediaUploadStore").getUploadsCount(
        a,
        d("ReactComposerMediaUploadType").VIDEO
      );
      return b > 0 || a > 0;
    }
    function t(a) {
      return c("ReactComposerTaggerStore").hasMinutiae(a);
    }
    function u(a) {
      a = c("ReactComposerTaggerStore").getTaggerData(
        a,
        c("ReactComposerTaggerType").SPONSOR
      );
      return !!a.sponsors && a.sponsors.length > 0;
    }
    function v(a) {
      a = c("ReactComposerTaggerStore").getTaggerData(
        a,
        c("ReactComposerTaggerType").BC_SUPPORT
      );
      return !!a.sponsors && a.sponsors.length > 0;
    }
    function w(a) {
      return (
        c("ReactComposerTaggerStore").getTaggerData(
          a,
          c("ReactComposerTaggerType").PRODUCT
        ).length > 0
      );
    }
    function x(a) {
      return c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
        a,
        c("ReactComposerAttachmentType").VISUAL_POLL
      );
    }
    function y(a) {
      return c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
        a,
        c("ReactComposerAttachmentType").LOCAL_DEV_PLATFORM
      );
    }
    g.getSelectedSprouts = a;
  },
  98
);
__d(
  "ComposerLoggingEntryPointType",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      PAGES_FEED: "pages_feed",
      PAGES_POST: "pages_post",
      PUBLISHING_TOOLS_TAB_PUBLISHED_POSTS:
        "publishing_tools_tab_published_posts",
      PUBLISHING_TOOLS_TAB_SCHEDULED_POSTS:
        "publishing_tools_tab_scheduled_posts",
      PUBLISHING_TOOLS_TAB_DRAFT_POSTS: "publishing_tools_tab_draft_posts",
      PUBLISHING_TOOLS_TAB_DRAFT_EDIT: "publishing_tools_tab_draft_edit",
      PAGES_PROFILE_PIC_ADD_STORY: "pages_profile_pic_add_story",
      FEED_INLINE_VIEWER_ATS_END_CARD: "feed_inline_viewer_ats_end_card",
      PAGES_INSIGHT_TAB_PUBLISHED_POSTS: "pages_insight_tab_published_posts",
      PAGES_SHOP_TAB: "pages_shop_tab",
      PAGE_TIPS: "page_tips",
      PAGE_ADMIN_JOURNEY: "page_admin_journey",
      ADS_CREATE: "ads_create",
      ADS_POWER_EDITOR: "ads_power_editor",
      FACEBOOK_APP_REEL_COMPOSER_COLLABORATOR_TYPEAHEAD:
        "facebook_app_reel_composer_collaborator_typeahead",
      PAGE_CONTENT_TAB_VIDEO_LIBRARY_LIVING_ROOM_CTA:
        "page_content_tab_video_library_living_room_cta",
      PAGE_CONTENT_TAB_CANVAS: "page_content_tab_canvas",
      PAGES_PROMOTIONS_HUB_COUPON_TAB: "pages_promotions_hub_coupon_tab",
      WWW_PAGE_SUPPORTER_TAB: "www_page_supporter_tab",
      PAGE_CONTENT_TAB_LIVING_ROOM_MEGAPHONE:
        "page_content_tab_living_room_megaphone",
      PAGES_POSTS: "pages_posts",
      PAGE_CONTENT_TAB_PUBLISHED_POSTS: "page_content_tab_published_posts",
      PAGE_CONTENT_TAB_PUBLISHED_POSTS_OPTED_OUT:
        "page_content_tab_published_posts_opted_out",
      PAGE_CONTENT_TAB_DRAFT_EDIT: "page_content_tab_draft_edit",
      PAGE_CONTENT_TAB_SCHEDULED_POSTS: "page_content_tab_scheduled_posts",
      PAGE_CONTENT_TAB_SCHEDULED_POSTS_OPTED_OUT:
        "page_content_tab_scheduled_posts_opted_out",
      PAGE_CONTENT_TAB_ADS_POSTS: "page_content_tab_ads_posts",
      PAGE_CONTENT_TAB_DRAFTS: "page_content_tab_drafts",
      VIDEO_HOME_TAHOE_CONTEXT: "video_home_tahoe_context",
      CS_AB_ADVANCED_CREATION_IMAGE: "cs_ab_advanced_creation_image",
      CS_AB_ADVANCED_CREATION_LINK: "cs_ab_advanced_creation_link",
      CS_AB_ADVANCED_CREATION_TEXT: "cs_ab_advanced_creation_text",
      CS_DEFAULT_ENTRYPOINT: "cs_default_entrypoint",
      CS_GLOBAL_BASIC_POST: "cs_global_basic_post",
      CS_GLOBAL_UPLOAD_VIDEO: "cs_global_upload_video",
      CS_GLOBAL_MULTIPOST: "cs_global_multipost",
      CS_HOME_BASIC_POST: "cs_home_basic_post",
      CS_HOME_UPLOAD_VIDEO: "cs_home_upload_video",
      CS_HOME_MULTIPOST: "cs_home_multipost",
      CS_CONTENT_LIBRARY: "cs_content_library",
      CS_CONTENT_LIBRARY_UPLOAD_VIDEOS: "cs_content_library_upload_videos",
      CS_CONTENT_LIBRARY_SCHEDULED_POST: "cs_content_library_scheduled_post",
      CS_CONTENT_LIBRARY_DRAFT_POST: "cs_content_library_draft_post",
      CS_CONTENT_LIBRARY_PUBLISHED_POST: "cs_content_library_published_post",
      CS_BULK_UPLOAD_PANEL: "cs_bulk_upload_panel",
      CS_INSTAGRAM_LEFT_NAV_STORIES_BUTTON:
        "cs_instagram_left_nav_stories_button",
      CS_FB_STORIES: "cs_fb_stories",
      CS_GLOBAL_UPLOAD_REEL: "cs_global_upload_reel",
      CS_IG_CROSSPOST_REEL: "cs_ig_crosspost_reel",
      CS_HOME_TEXT_BASED_EDITOR_AYMT: "cs_home_text_based_editor_aymt",
      CS_AUTO_GENERATE_FB_SHORT: "cs_auto_generate_fb_short",
      CREATOR_STUDIO_UNIFIED_COMPOSER_CONTENT_TAGS_TYPEAHEAD:
        "creator_studio_unified_composer_content_tags_typeahead",
      CREATOR_STUDIO_REEL_COMPOSER_COLLABORATOR_TYPEAHEAD:
        "creator_studio_reel_composer_collaborator_typeahead",
      CREATOR_STUDIO_VIDEO_COMPOSER_COLLABORATOR_TYPEAHEAD:
        "creator_studio_video_composer_collaborator_typeahead",
      CREATOR_STUDIO_NOTIFICATION_SETTINGS_COLLABORATION_BLOCKLIST:
        "creator_studio_notification_settings_collaboration_blocklist",
      CREATOR_STUDIO_COMPOSER: "creator_studio_composer",
      CREATOR_STUDIO_GAMING_VIDEO_EDIT_CLIP:
        "creator_studio_gaming_video_edit_clip",
      CREATOR_STUDIO_VIDEO_COMPOSER: "creator_studio_video_composer",
      CREATOR_STUDIO_COMPOSER_POST_TAGGER:
        "creator_studio_composer_post_tagger",
      CREATOR_STUDIO_COMPOSER_XY_TAGGER: "creator_studio_composer_xy_tagger",
      CREATOR_STUDIO_COMPOSER_BRAND_TAGGER:
        "creator_studio_composer_brand_tagger",
      CREATOR_STUDIO_GAMING_VIDEO_CREATOR_SHARE_STREAM_STATS:
        "creator_studio_gaming_video_creator_share_stream_stats",
      CREATOR_STUDIO_INSIGHTS_BENCHMARKING:
        "creator_studio_insights_benchmarking",
      CREATOR_STUDIO_INSPIRATION_HUB: "creator_studio_inspiration_hub",
      CREATOR_STUDIO_STREAMER_DASHBOARD_COMMUNITY_ENGAGEMENT:
        "creator_studio_streamer_dashboard_community_engagement",
      CS_BULLETIN_SHARE_PUBLICATION_LINK: "cs_bulletin_share_publication_link",
      PAGE_ADMIN_DRAFT_UNIT: "page_admin_draft_unit",
      TIMELINE: "timeline",
      AYMT: "aymt",
      OFFERS_BOOKMARK: "offers_bookmark",
      OLP_MODAL_UPSELL: "olp_modal_upsell",
      OWNER_EMPTY_TAB_BODY: "owner_empty_tab_body",
      OWNER_EMPTY_TAB_HEADER: "owner_empty_tab_header",
      OWNER_EMPTY_TAB_MOBILE: "owner_empty_tab_mobile",
      OWNER_NON_EMPTY_TAB_HEADER: "owner_non_empty_tab_header",
      OWNER_NON_EMPTY_TAB_MOBILE: "owner_non_empty_tab_mobile",
      PAGE_COMPOSER: "page_composer",
      PAGE_COMPOSER_MOBILE: "page_composer_mobile",
      PAGE_INLINE_COMPOSER_MOBILE: "page_inline_composer_mobile",
      QR_CODE_DASH: "qr_code_dash",
      RERUN_FOOTER: "rerun_footer",
      RERUN_NOTIFICATION: "rerun_notification",
      RERUN_OFFER_TAB: "rerun_offer_tab",
      REVIEW_SATUS_NOTIFICATION: "review_status_notification",
      TEST: "test",
      NATIVE_TEMPLATES: "native_templates",
      SCHEDULED_POSTS_ASYNC: "scheduled_posts_async",
      SCHEDULED_POSTS_FAILED_NOTIFICATION:
        "scheduled_posts_failed_notification",
      PROFILE_PIC: "profile_pic",
      ADMINPHOTOVIDEOPOST: "adminPhotoVideoPost",
      ADMINPAGEPOSTFROMPOSTTAB: "adminPagePostFromPostTab",
      ADMIN_POST: "admin_post",
      SHARE_MODAL: "share_modal",
      SHAREBUTTON: "shareButton",
      COVER_PHOTO: "cover_photo",
      PAGEADMINSTATUS: "pageAdminStatus",
      INLINE_COMPOSER: "inline_composer",
      SHARETOYOURPAGEBUTTON: "shareToYourPageButton",
      ADMIN_PHOTO: "admin_photo",
      ADMIN_PHOTO_VIDEO: "admin_photo_video",
      WRITE_POST_BUTTON: "write_post_button",
      ADMINPAGEPOSTFROMSTICKYFOOTER: "adminPagePostFromStickyFooter",
      INSPIRATION: "inspiration",
      WRITE_POST_PHOTO_ICON: "write_post_photo_icon",
      ADMINPAGEPOSTFROMPOSTACTION: "adminPagePostFromPostAction",
      GROUP: "group",
      TAP_ON_PAGE_PROFILE_PHOTO: "tap_on_page_profile_photo",
      MEDIAPOSTFROMTHIRDPARTY: "mediaPostFromThirdParty",
      INLINEADMINPAGEPOST: "inlineAdminPagePost",
      ADMINPAGEPOST: "adminPagePost",
      UPLOAD_PHOTO_TO_ALBUM: "upload_photo_to_album",
      PHOTO_ICON: "photo_icon",
      SHARELINKFROMTHIRDPARTY: "shareLinkFromThirdParty",
      MEDIAGALLERYFOOTER: "mediaGalleryFooter",
      TAP_TO_POST_STORY_CAMERA_FROM_PAGE: "tap_to_post_story_camera_from_page",
      EVENT_ABOUT: "event_about",
      ALBUM: "album",
      FEED_TO_STORY_RESHARE_NOW: "feed_to_story_reshare_now",
      PUBLISHER_BAR_MEDIA: "publisher_bar_media",
      ACTION_RESPONDER_POST_TO_CURRENT_USER_TIMELINE:
        "action_responder_post_to_current_user_timeline",
      REACTION_POST_TO_PAGE: "reaction_post_to_page",
      EVENT: "event",
      SHAREASNEWPOST: "shareAsNewPost",
      ADMINPAGEPOSTFROMREACTNATIVE: "adminPagePostFromReactNative",
      TAP_CAMERA_BUTTON_IN_SNACKS_PHOTO_VIEWER_SELF:
        "tap_camera_button_in_snacks_photo_viewer_self",
      PAGES_VIDEO_TAB_HUB: "pages_video_tab_hub",
      SHARE_DIALOG: "share_dialog",
      PAGEINLINECOMPOSER: "pageInlineComposer",
      SHARETOYOURGROUPBUTTON: "shareToYourGroupButton",
      SHAREEVENT: "shareEvent",
      FB_URL_OPEN_CAMERA_FROM_PAGE_PERMALINK_TO_CREATE_PAGE_STORY:
        "fb_url_open_camera_from_page_permalink_to_create_page_story",
      PHOTO_ALBUM_SWITCHING_VIEW_UPLOAD_PHOTOS:
        "photo_album_switching_view_upload_photos",
      GROUPCOMMERCECOMPOSERHELPER: "groupCommerceComposerHelper",
      VIDEO_PAGE_VIDEO_LIST: "video_page_video_list",
      COMPOSE_MODULE_URL_SEGUE: "compose_module_url_segue",
      SHARE_BUTTON: "share_button",
      FB_URL_OPEN_CAMERA_FROM_PAGE_PERMALINK:
        "fb_url_open_camera_from_page_permalink",
      PAGEPHOTOICON: "pagePhotoIcon",
      FULLSCREENRICHVIDEOPLAYER: "fullscreenRichVideoPlayer",
      FACECAST: "facecast",
      PAGE_CONTENT_TAB_VIDEO_LIBRARY: "page_content_tab_video_library",
      ALBUMGRIDBUTTON: "albumGridButton",
      ADMIN_JOURNEY_WELCOME_POST_TIP: "admin_journey_welcome_post_tip",
      FEED_TO_STORY_RESHARE: "feed_to_story_reshare",
      GRAPHQLPAGESCREEN: "graphQLPageScreen",
      THROWBACKFEEDSTORYFOOTER: "throwbackFeedStoryFooter",
      TAP_VIEWER_SHEET_ADD_TO_STORY_PAGE: "tap_viewer_sheet_add_to_story_page",
      GROUP_SELL_COMPOSER: "group_sell_composer",
      ADMIN_JOURNEY_POST_VISUALS_TIP: "admin_journey_post_visuals_tip",
      RESHARE_TO_PAGE_STORY: "reshare_to_page_story",
      SHAREPAGE: "sharePage",
      PAGEBUTTONBARCOMPOSERICON: "pageButtonBarComposerIcon",
      EDIT_DIALOG: "edit_dialog",
      FB_URL_OPEN_CAMERA_FROM_PAGE: "fb_url_open_camera_from_page",
      NEWSFEED_SHARESHEET: "newsfeed_sharesheet",
      ACTION_BAR_SHARE: "action_bar_share",
      SHARE_COMPOSER_FROM_URI: "share_composer_from_uri",
      GROUPCOMMERCE: "groupCommerce",
      PMAURIHANDLER: "pmaUriHandler",
      PAGE_ADMIN_EVENT_ACTION_LINK: "page_admin_event_action_link",
      EVENT_INSIGHTS_SHARE_TIP: "event_insights_share_tip",
      TAP_SHARE_ARCHIVED_STORY: "tap_share_archived_story",
      NTPAGEMAKEFIRSTPOST: "ntPageMakeFirstPost",
      PUBLISH_BAR_BUTTON_NEXT_TO_SELL_BUTTON:
        "publish_bar_button_next_to_sell_button",
      EVENTMINUTIAEPREFILLED: "eventMinutiaePrefilled",
      PHOTOS_GRID_UPLOAD_PHOTO: "photos_grid_upload_photo",
      ADMIN_JOURNEY_POST_IDEAS_TIP: "admin_journey_post_ideas_tip",
      OTHER: "other",
      ATTENDING_RESPONSE: "attending_response",
      TAP_CAMERA_BUTTON_IN_SNACKS_PHOTO_VIEWER_PAGE:
        "tap_camera_button_in_snacks_photo_viewer_page",
      OPEN_CAMERA_FROM_PAGE: "open_camera_from_page",
      SEARCH_PHOTO_STREAM_VIEWER_UFI: "search_photo_stream_viewer_ufi",
      SHARE_ON_FACEBOOK: "share_on_facebook",
      COMPOSER_INTENT_HANDLER: "composer_intent_handler",
      AMA_DEEPLINK_PAGE_COMPOSER: "ama_deeplink_page_composer",
      INSIGHT_TIP: "insight_tip",
      VIDEO_PAGE_SPOTLIGHT_SELECTOR: "video_page_spotlight_selector",
      NEWSFEEDMEDIAPOSTCOMPOSER: "newsFeedMediaPostComposer",
      SELL_ITEM: "sell_item",
      TAP_VIEWER_SHEET_ADD_TO_STORY_PAGE_BUTTON:
        "tap_viewer_sheet_add_to_story_page_button",
      RESHARE_FROM_PAGE_STORY_MENTION: "reshare_from_page_story_mention",
      OPENSHAREEVENTCOMPOSER: "openShareEventComposer",
      BROWSERLITECALLBACK: "browserLiteCallback",
      TEXTPOSTFROMTHIRDPARTY: "textPostFromThirdParty",
      EVENTWALLSTATUS: "eventWallStatus",
      REACTIONADMINPAGEPOST: "reactionAdminPagePost",
      PAGE_ADMIN_TODO: "page_admin_todo",
      ACTION_RESPONDER_POST: "action_responder_post",
      FACEWEB_COMPOSER: "faceweb_composer",
      GROUP_PHOTOS: "group_photos",
      PAGE_LINK_GROUP: "page_link_group",
      SHAREPAGETABLINK: "SharePageTabLink",
      SHAREQUOTE: "shareQuote",
      FB_URL_PAGE_STORY_EDUCATION_AYMT: "fb_url_page_story_education_aymt",
      PUBLISHER_BAR_RECOMMENDATIONS: "publisher_bar_recommendations",
      LIVING_ROOM: "living_room",
      EVENTWALLPHOTO: "eventWallPhoto",
      INSTANT_ARTICLES_SHARE: "instant_articles_share",
      TAP_MY_STORY: "tap_my_story",
      NOTIFICATION: "notification",
      TAP_CAMERA_BUTTON_END_OF_STORY_FRIEND:
        "tap_camera_button_end_of_story_friend",
      LINK_GROUP: "link_group",
      URL_SHARE: "url_share",
      SHARE_CTA_FROM_EDIT: "share_cta_from_edit",
      PAGE_SHARE_EVENT_NOTIFICATION: "page_share_event_notification",
      PAGE_CONTENT_TAB_VIDEO_LIBRARY_PREMIERE:
        "page_content_tab_video_library_premiere",
      DESKTOP_WEBLINK_SHARING: "desktop_weblink_sharing",
      TAP_RESHARE_PAGE_STORY_ARCHIVE: "tap_reshare_page_story_archive",
      FB_URL_PAGE_STORY_EDUCATION_QP_IN_NEWS_FEED:
        "fb_url_page_story_education_qp_in_news_feed",
      FB_URL_PAGE_STORY_EDUCATION_NOTIFICATION:
        "fb_url_page_story_education_notification",
      TAP_EVENT_PERMALINK_CAMERA_WITHOUT_EFFECT:
        "tap_event_permalink_camera_without_effect",
      PHOTO_VIEWER_UFI: "photo_viewer_ufi",
      REACTION_SHARE_ACTION: "reaction_share_action",
      PUBLISHER_BAR_PHOTO: "publisher_bar_photo",
      PRODUCTDETAILS: "productDetails",
      FULLSCREENVIDEOFEEDBACKACTIONBUTTON:
        "fullscreenVideoFeedbackActionButton",
      SAVED_DASHBOARD_SHARE: "saved_dashboard_share",
      OPENPOSTTOEVENTCOMPOSER: "openPostToEventComposer",
      FUNDRAISER_CREATION_OUTRO: "fundraiser_creation_outro",
      FACECAST_WITH_GUEST_VIEW_SHARE: "facecast_with_guest_view_share",
      REXDASHBOARD: "rexDashboard",
      TAP_CAMERA_BUTTON_IN_SNACKS_PHOTO_VIEWER:
        "tap_camera_button_in_snacks_photo_viewer",
      FUNDRAISERPERSONFORPERSONSHARE: "fundraiserPersonForPersonShare",
      IMMERSIVE: "immersive",
      ASK_FOR_RECOMMENDATION: "ask_for_recommendation",
      LOCAL_LIST_ACTION_BAR: "local_list_action_bar",
      FUNDRAISER_PAGE_PRIMARY_BUTTON: "fundraiser_page_primary_button",
      SIDE_FEED_REMINDER_POST: "side_feed_reminder_post",
      MEDIA_MANAGER: "media_manager",
      SHAREPROFILEINTENT: "shareProfileIntent",
      UFI_SHARE_BUTTON: "ufi_share_button",
      PAGE_CONTENT_ADS_ASSET_VIDEO_LIBRARY:
        "page_content_ads_asset_video_library",
      SOCIAL_PLAYER: "social_player",
      TAP_CAMERA_BUTTON_IN_SNACKS_GROUP_PERMALINK_ENTRYPOINT:
        "tap_camera_button_in_snacks_group_permalink_entrypoint",
      FUNDRAISER_PAGE_INVITES_CARD: "fundraiser_page_invites_card",
      FB_URL: "fb_url",
      FAB_POST_TO_PAGE: "FAB_post_to_page",
      COMPOSER_PREFILL: "composer_prefill",
      LEFT_SIDEBAR: "left_sidebar",
      RICHDOCUMENTUFIVIEW: "richdocumentUfiView",
      ADD_TO_STORY_END: "add_to_story_end",
      AFTER_DONATE: "after_donate",
      EVENT_TOUR_CARD: "event_tour_card",
      ORION: "orion",
      TAP_GROUP_STORY_TRAY_CAMERA: "tap_group_story_tray_camera",
      QUICKSILVER_GAME_CUSTOM_SHARE: "quicksilver_game_custom_share",
      ENDORSEMENT_MODULE: "endorsement_module",
      EDIT_DIALOG_GROUP: "edit_dialog_group",
      FUNDRAISER_SOCIAL_CONTEXT: "fundraiser_social_context",
      FUNDRAISERPERSONTOCHARITYSHARE: "fundraiserPersonToCharityShare",
      SHAREEVENTTOUR: "shareEventTour",
      TAP_ADD_STORY_CELL_IN_VIEW_RECEIPTS:
        "tap_add_story_cell_in_view_receipts",
      EVENT_CHILD_EVENT_BUTTON: "event_child_event_button",
      FUNDRAISER_PAGE_SUPPORTER_CARD: "fundraiser_page_supporter_card",
      FUNDRAISER_PAGE_ACTION_BAR: "fundraiser_page_action_bar",
      MOVIE_PERMALINK: "movie_permalink",
      REXUPSELLONREXSTORY: "rexUpsellOnRexStory",
      THROWBACKUNIFIEDSHARE: "throwbackUnifiedShare",
      BIZ_COMPOSER: "biz_composer",
      BIZ_COMPOSER_XY_TAGGER: "biz_composer_xy_tagger",
      BIZ_COMPOSER_POST_TAGGER: "biz_composer_post_tagger",
      BIZ_APP_POSTS_TAB_NAV_BUTTON: "biz_app_posts_tab_nav_button",
      BIZ_APP_POST_ACTION: "biz_app_post_action",
      BIZ_POST_LIST_POST_BUTTON: "biz_post_list_post_button",
      BIZ_POST_LIST_NULL_STATE_BUTTON: "biz_post_list_null_state_button",
      BIZ_AB_TESTING_WELCOME_MODAL_BUTTON:
        "biz_ab_testing_welcome_modal_button",
      BIZ_AB_TESTING_NULL_STATE_BUTTON: "biz_ab_testing_null_state_button",
      BIZ_HOME_HEADER_CREATE_BUTTON: "biz_home_header_create_button",
      BIZ_HOME_HEADER_PUBLISH_BUTTON: "biz_home_header_publish_button",
      BIZ_HOME_HEADER_PUBLISH_POST_BUTTON:
        "biz_home_header_publish_post_button",
      BIZ_HOME_HEADER_PUBLISH_REEL_BUTTON:
        "biz_home_header_publish_reel_button",
      BIZ_HOME_HEADER_PUBLISH_STORY_BUTTON:
        "biz_home_header_publish_story_button",
      BIZ_HOME_HEADER_PHOTO_BUTTON: "biz_home_header_photo_button",
      BIZ_HOME_HEADER_REELS_TOOLTIP_BUTTON:
        "biz_home_header_reels_tooltip_button",
      BIZ_HOME_HEADER_STORIES_TOOLTIP_BUTTON:
        "biz_home_header_stories_tooltip_button",
      BIZ_PAGE_PRESENCE_FLOATING_ACTION_BUTTON:
        "biz_page_presence_floating_action_button",
      PMA_POST_TAB_FLOATING_ACTION_BUTTON:
        "pma_post_tab_floating_action_button",
      BIZ_APP_BOTTOM_SHEET_AD_BUTTON: "biz_app_bottom_sheet_ad_button",
      BIZ_APP_BOTTOM_SHEET_POST_BUTTON: "biz_app_bottom_sheet_post_button",
      BIZ_APP_BOTTOM_SHEET_PHOTO_VIDEO_BUTTON:
        "biz_app_bottom_sheet_photo_video_button",
      BIZ_APP_BOTTOM_SHEET_VIDEO_BUTTON: "biz_app_bottom_sheet_video_button",
      BIZ_APP_BOTTOM_SHEET_LIVE_VIDEO_BUTTON:
        "biz_app_bottom_sheet_live_video_button",
      BIZ_APP_BOTTOM_SHEET_REEL_BUTTON: "biz_app_bottom_sheet_reel_button",
      BIZ_APP_BOTTOM_SHEET_STORY_BUTTON: "biz_app_bottom_sheet_story_button",
      BIZ_APP_HOME_CALENDAR_CARD_BUTTON: "biz_app_home_calendar_card_button",
      BIZ_APP_HOME_CALENDAR_BOTTOM_SHEET_BUTTON:
        "biz_app_home_calendar_card_bottom_sheet_button",
      BIZ_APP_HOME_CALENDAR_CARD_NULL_STATE_EMBEDDED_LINK:
        "biz_app_home_calendar_card_null_state_embedded_link",
      BIZ_APP_HOME_RECENT_POSTS_NULL_STATE_BUTTON:
        "biz_app_home_recent_posts_null_state_button",
      BIZ_APP_HOME_RECENT_POSTS_SCHEDULE_POST_BUTTON:
        "biz_app_home_recent_posts_schedule_post_button",
      BIZ_APP_IG_COMMENT_MENTION: "biz_app_ig_comment_mention",
      BIZ_APP_INBOX_CREATE_POST_BUTTON: "biz_app_inbox_create_post_button",
      BIZ_APP_BUSINESS_FEED_TAB: "biz_app_business_feed_tab",
      BIZ_APP_CREATIVE_ASSETS_LIST_ITEM_CREATE_POST_BUTTON:
        "biz_app_creative_assets_list_item_create_post_button",
      BIZ_APP_CREATIVE_ASSETS_ASSET_DETAIL_VIEW_CREATE_POST_BUTTON:
        "biz_app_creative_assets_asset_detail_view_create_post_button",
      BIZ_APP_POST_MEGAPHONE: "biz_app_post_megaphone",
      BIZ_APP_HOME_NAV_BAR_CREATE_BOTTOM_SHEET_AD_BUTTON:
        "biz_app_home_nav_bar_create_bottom_sheet_ad_button",
      BIZ_APP_HOME_NAV_BAR_CREATE_BOTTOM_SHEET_POST_BUTTON:
        "biz_app_home_nav_bar_create_bottom_sheet_post_button",
      BIZ_APP_HOME_NAV_BAR_CREATE_BOTTOM_SHEET_PHOTO_VIDEO_BUTTON:
        "biz_app_home_nav_bar_create_bottom_sheet_photo_video_button",
      BIZ_APP_HOME_NAV_BAR_CREATE_BOTTOM_SHEET_VIDEO_BUTTON:
        "biz_app_home_nav_bar_create_bottom_sheet_video_button",
      BIZ_APP_HOME_NAV_BAR_CREATE_BOTTOM_SHEET_LIVE_VIDEO_BUTTON:
        "biz_app_home_nav_bar_create_bottom_sheet_live_video_button",
      BIZ_APP_HOME_NAV_BAR_CREATE_BOTTOM_SHEET_STORY_BUTTON:
        "biz_app_home_nav_bar_create_bottom_sheet_story_button",
      BIZ_APP_SCHEDULE_POST_DEEPLINK: "biz_app_schedule_post_deeplink",
      SCHEDULE_POST_AT_HOT_TIME_NOTIF: "schedule_post_at_hot_time_notif",
      XPOST_ON_FB_AND_IG_TIP: "xpost_on_fb_and_ig_tip",
      BIZ_APP_EXTERNAL_SHARE: "biz_app_external_share",
      PMA_PUBLISH_POST_BUTTON: "pma_publish_post_button",
      PMA_PHOTO_POST_BUTTON: "pma_photo_post_button",
      PMA_VIDEO_POST_BUTTON: "pma_video_post_button",
      PMA_MEDIA_POST_BUTTON: "pma_media_post_button",
      PMA_POSTS_TAB_POST_BUTTON: "pma_posts_tab_post_button",
      BIZ_APP_BOTTOM_SHEET_BIZAPP_STORY_BUTTON:
        "biz_app_bottom_sheet_bizapp_story_button",
      BIZ_APP_REEL_LIST_NULL_STATE_BUTTON:
        "biz_app_reel_list_null_state_button",
      BIZ_APP_REEL_LIST_CREATE_BUTTON: "biz_app_reel_list_create_button",
      BIZ_APP_RECENT_REELS_CREATE_BUTTON: "biz_app_recent_reels_create_button",
      BIZ_APP_STORY_LIST_NULL_STATE_BUTTON:
        "biz_app_story_list_null_state_button",
      BIZ_APP_STORY_LIST_CREATE_BUTTON: "biz_app_story_list_create_button",
      BIZ_APP_FEED_TO_STORY_RESHARE: "biz_app_feed_to_story_reshare",
      BIZ_APP_INBOX_CREATE_STORY_BUTTON: "biz_app_inbox_create_story_button",
      BIZ_APP_STORY_EXTERNAL_DEEPLINK: "biz_app_story_external_deeplink",
      BIZ_APP_STORY_INTERNAL_DEEPLINK: "biz_app_story_internal_deeplink",
      BIZ_APP_STORY_VIEWER_BOTTOM_RIGHT_CREATE_BUTTON:
        "biz_app_story_viewer_bottom_right_create_button",
      BIZ_APP_RECENT_STORIES_CREATE_BUTTON:
        "biz_app_recent_stories_create_button",
      BIZ_APP_CALENDAR_TAP_TO_CREATE_BUTTON:
        "biz_app_calendar_tap_to_create_button",
      BIZ_APP_CALENDAR_HEADER_CREATE_BUTTON:
        "biz_app_calendar_header_create_button",
      BIZ_APP_CALENDAR_UPCOMING_MOMENTS_CREATE_BUTTON:
        "biz_app_calendar_upcoming_moments_create_button",
      BIZ_APP_PHOTOS_HEADER_CREATE_BUTTON:
        "biz_app_photos_header_create_button",
      BIZ_APP_FTUX_SCHEDULE_POST_ACTION: "biz_app_ftux_schedule_post_action",
      BIZ_APP_PO_HOME_SCHEDULE_POST_ACTION:
        "biz_app_po_home_schedule_post_action",
      BIZ_APP_PO_GET_STARTED_SCHEDULE_POST_ACTION:
        "biz_app_po_get_started_schedule_post_action",
      BIZAPP_REELS_TAB_HEADER: "BIZAPP_REELS_TAB_HEADER",
      BIZAPP_REELS_TAB_NULL_STATE: "BIZAPP_REELS_TAB_NULL_STATE",
      BIZAPP_CALENDAR_TAB_HEADER: "BIZAPP_CALENDAR_TAB_HEADER",
      BIZAPP_HOME_HEADER: "BIZAPP_HOME_HEADER",
      BIZ_WEB_HOME: "biz_web_home",
      BIZ_WEB_HOME_CREATE_POST: "biz_web_home_create_post",
      BIZ_WEB_HOME_CREATE_REEL: "biz_web_home_create_reel",
      BIZ_WEB_HOME_GO_LIVE: "biz_web_home_go_live",
      BIZ_WEB_HOME_RECENT_POSTS_CREATE_POST:
        "biz_web_home_recent_posts_create_post",
      BIZ_WEB_HOME_MULTI_ASSETS_CREATE_POST:
        "biz_web_home_multi_assets_create_post",
      BIZ_WEB_ACTIVITY_AYMT_POSTS: "biz_web_activity_aymt_posts",
      BIZ_WEB_BM_ONBOARDING: "biz_web_bm_onboarding",
      BIZ_WEB_SCHEDULE_POST_REMINDER: "biz_web_schedule_post_reminder",
      BIZ_WEB_DUPLICATE_POSTS_AYMT: "biz_web_duplicate_posts_aymt",
      BIZ_WEB_HOME_MOMENTS_CARD: "biz_web_home_moments_card",
      BIZ_WEB_HOME_CALENDAR_CARD: "biz_web_home_calendar_card",
      BIZ_WEB_HOME_CALENDAR_CARD_WEEK_NULL_STATE_POST_CREATION:
        "biz_web_home_calendar_card_week_null_state_post_creation",
      BIZ_WEB_HOME_CALENDAR_CARD_GUIDANCE_CARD:
        "biz_web_home_calendar_card_guidance_card",
      BIZ_WEB_HOME_CREATE_PHOTO_VIDEO: "biz_web_home_create_photo_video",
      BIZ_WEB_HOME_NEWS_FEED_SHARE_USING_BUSINESS_SUITE:
        "biz_web_home_news_feed_share_using_business_suite",
      BIZ_WEB_HOME_POST_ACTIVITY_CARD_DUPLICATE_BUTTON:
        "biz_web_home_post_activity_card_duplicate_button",
      BIZ_WEB_HOME_POST_ACTIVITY_CARD_PUBLISHED_POSTS:
        "biz_web_home_post_activity_card_published_posts",
      BIZ_WEB_HOME_POST_ACTIVITY_CARD_SCHEDULED_POSTS:
        "biz_web_home_post_activity_card_scheduled_posts",
      BIZ_WEB_HOME_POST_ACTIVITY_CARD_DRAFT_POSTS:
        "biz_web_home_post_activity_card_draft_posts",
      BIZ_WEB_HOME_POSTS_AYMT: "biz_web_home_posts_aymt",
      BIZ_WEB_HOME_TYSD: "biz_web_home_tysd",
      BIZ_WEB_HOME_TYSD_STORIES: "biz_web_home_tysd_stories",
      BIZ_WEB_HOME_STORIES_CARD: "biz_web_home_stories_card",
      BIZ_WEB_HOME_UPDATES_CARD_DRAFT_POSTS_EDIT:
        "biz_web_home_updates_card_draft_posts_edit",
      BIZ_WEB_HOME_UPDATES_CARD_DRAFT_POSTS_NULL_STATE:
        "biz_web_home_updates_card_draft_posts_null_state",
      BIZ_WEB_HOME_POST_TO_MULTIPLE_PAGES:
        "biz_web_home_post_to_multiple_pages",
      BIZ_WEB_HOME_BULK_UPLOAD_VIDEOS: "biz_web_home_bulk_upload_videos",
      BIZ_WEB_PUBLISHED_POSTS: "biz_web_published_posts",
      BIZ_WEB_SCHEDULED_POSTS: "biz_web_scheduled_posts",
      BIZ_WEB_CONTENT_MANAGER_POSTS: "biz_web_content_manager_posts",
      BIZ_WEB_CONTENT_MANAGER_DUPLICATE_POSTS:
        "biz_web_content_manager_duplicate_posts",
      BIZ_WEB_CONTENT_MANAGER_PUBLISHED_POSTS:
        "biz_web_content_manager_published_posts",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_POSTS:
        "biz_web_content_manager_scheduled_posts",
      BIZ_WEB_CONTENT_MANAGER_DRAFT_POSTS:
        "biz_web_content_manager_draft_posts",
      BIZ_WEB_CONTENT_MANAGER_FEED_AND_GRID:
        "biz_web_content_manager_feed_and_grid",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR: "biz_web_content_manager_calendar",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_POST_TO_MULTIPLE_PAGES:
        "biz_web_content_manager_calendar_post_to_multiple_pages",
      BIZ_WEB_CONTENT_MANAGER_DRAFT_EDIT: "biz_web_content_manager_draft_edit",
      BIZ_WEB_CONTENT_MANAGER_DRAFT_EDIT_FROM_URL:
        "biz_web_content_manager_draft_edit_from_url",
      BIZ_WEB_CONTENT_MANAGER_FB_FEED_VIEW:
        "biz_web_content_manager_fb_feed_view",
      BIZ_WEB_CONTENT_MANAGER_FB_FEED_VIEW_EDIT_COMPOSER:
        "biz_web_content_manager_fb_feed_view_edit_composer",
      BIZ_WEB_CONTENT_MANAGER_IG_FEED_VIEW:
        "biz_web_content_manager_ig_feed_view",
      BIZ_WEB_CONTENT_MANAGER_IG_GRID_VIEW:
        "biz_web_content_manager_ig_grid_view",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_VIEW:
        "biz_web_content_manager_calendar_view",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_MOMENTS:
        "biz_web_content_manager_calendar_moments",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_CUSTOM_MOMENTS:
        "biz_web_content_manager_calendar_custom_moments",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_RIGHT_PANEL_GOALS_CARD:
        "biz_web_content_manager_calendar_right_panel_goals_card",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_RIGHT_PANEL_GOALS_CARD_CREATE_STORY:
        "biz_web_content_manager_calendar_right_panel_goals_card_create_story",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_RIGHT_PANEL_GOALS_CARD_CREATE_REEL:
        "biz_web_content_manager_calendar_right_panel_goals_card_create_reel",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_RIGHT_PANEL_GOALS_CARD_SCHEDULE_POST:
        "biz_web_content_manager_calendar_right_panel_goals_card_schedule_post",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_RIGHT_PANEL_GOALS_CARD_SCHEDULE_STORY:
        "biz_web_content_manager_calendar_right_panel_goals_card_schedule_story",
      BIZ_WEB_CONTENT_MANAGER_ACTIVE_STORIES_TAB_POSTS:
        "biz_web_content_manager_active_stories_tab_posts",
      BIZ_WEB_CONTENT_MANAGER_ARCHIVE_STORIES_TAB_POSTS:
        "biz_web_content_manager_archive_stories_tab_posts",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_STORIES_TAB_POSTS:
        "biz_web_content_manager_scheduled_stories_tab_posts",
      BIZ_WEB_CONTENT_MANAGER_PHOTOS_TAB: "biz_web_content_manager_photos_tab",
      BIZ_WEB_CONTENT_MANAGER_POST_TO_MULTIPLE_PAGES:
        "biz_web_content_manager_post_to_multiple_pages",
      BIZ_WEB_CONTENT_MANAGER_MENTIONS_AND_TAGS_TAB:
        "biz_web_content_manager_mentions_and_tags_tab",
      BIZ_WEB_CONTENT_MANAGER_COREX_INSPO:
        "biz_web_content_manager_corex_inspo",
      BIZ_WEB_CONTENT_MANAGER_POSTS_FROM_SIMILAR_BUSINESSES_HSCROLL_MODAL:
        "biz_web_content_manager_posts_from_similar_businesses_hscroll_modal",
      BIZ_WEB_CONTENT_MANAGER_VIDEOS_YOU_CAN_CROSSPOST:
        "biz_web_content_manager_videos_you_can_crosspost",
      BIZ_WEB_UNIVERSAL_CREATION: "biz_web_universal_creation",
      BIZ_WEB_UNIVERSAL_CREATION_MENU: "biz_web_universal_creation_menu",
      BIZ_WEB_GLOBAL_CREATE_BUTTON: "biz_web_global_create_button",
      BIZ_WEB_GLOBAL_CREATE_MENU: "biz_web_global_create_menu",
      BIZ_WEB_BUSINESS_PROFILE_COMPLETION_METER:
        "biz_web_business_profile_completion_meter",
      BIZ_WEB_BUSINESS_PROFILE_COMPLETION_METER_STORIES_ITEM:
        "biz_web_business_profile_completion_meter_stories_item",
      BIZ_WEB_BUSINESS_CREATIVE_ASSET_DETAIL_VIEW_POSTS_CREATION:
        "biz_web_business_creative_asset_detail_view_posts_creation",
      BIZ_WEB_BUSINESS_CREATIVE_ASSET_LIST_VIEW_POSTS_CREATION:
        "biz_web_business_creative_asset_list_view_posts_creation",
      BIZ_WEB_RECENT_POSTS_FEED: "biz_web_recent_posts_feed",
      BIZ_WEB_RECENT_POSTS_GRID: "biz_web_recent_posts_grid",
      BIZ_WEB_PRODUCT_TAGGING_SELLER_EDUCATION_AYMT:
        "biz_web_product_tagging_seller_education_aymt",
      BIZ_WEB_PRODUCT_TAGGING_FBI_AYMT: "biz_web_product_tagging_fbi_aymt",
      BIZ_WEB_BUSINESS_FEED: "biz_web_business_feed",
      BIZ_WEB_BUSINESS_FEED_CYMS_UNIT: "biz_web_business_feed_cyms_unit",
      BIZ_WEB_EXPLORE_CARD_CYMS_UNIT: "biz_web_explore_card_cyms_unit",
      BIZ_WEB_AUDIENCE_GROWTH_CARD: "biz_web_audience_growth_card",
      BIZ_WEB_AUDIENCE_GROWTH_FB_POST_IG_LINK:
        "biz_web_audience_growth_fb_post_ig_link",
      BIZ_WEB_FRIEND_INVITER: "biz_web_friend_inviter",
      BIZ_WEB_REACTION_INVITER: "biz_web_reaction_inviter",
      BIZ_WEB_INTERACTION_INVITER: "biz_web_interaction_inviter",
      BIZ_WEB_SCHEDULE_POST_AYMT: "biz_web_schedule_post_aymt",
      BIZ_WEB_SCHEDULE_POST_JEWEL_NOTIF: "biz_web_schedule_post_jewel_notif",
      BIZ_WEB_MORE_TOOLS_CREATE_POST: "biz_web_more_tools_create_post",
      BIZ_WEB_MORE_TOOLS_CREATE_STORY: "biz_web_more_tools_create_story",
      BIZ_WEB_SELF_VIEW: "biz_web_self_view",
      BIZ_WEB_HOME_GOAL_CARD: "biz_web_home_goal_card",
      BIZ_WEB_INSIGHTS_AUDIENCE: "biz_web_insights_audience",
      BIZ_WEB_INSIGHTS_BENCHMARK: "biz_web_insights_benchmark",
      BIZ_WEB_INSIGHTS_GOAL_CARD: "biz_web_insights_goal_card",
      BIZ_WEB_INSIGHTS_GOAL_OVERVIEW: "biz_web_insights_goal_overview",
      BIZ_WEB_INSIGHTS_OVERVIEW: "biz_web_insights_overview",
      BIZ_WEB_INSIGHTS_WEEKLY_PLAN_TAB: "biz_web_insights_weekly_plan_tab",
      BIZ_WEB_MARKET_PLANNER_NOTE: "biz_web_market_planner_note",
      BIZ_WEB_AB_TEST_COMPOSER: "biz_web_ab_test_composer",
      BIZ_WEB_VIDEO_COMPOSER: "biz_web_video_composer",
      BIZ_WEB_VIDEO_COMPOSER_DEFAULT_SFV_TO_REEL:
        "biz_web_video_composer_default_sfv_to_reel",
      BIZ_WEB_VIDEO_COMPOSER_CREATE_REEL_POST_PUBLISH:
        "biz_web_video_composer_create_reel_post_publish",
      BIZ_WEB_REELS_COMPOSER: "biz_web_reels_composer",
      BIZ_WEB_REELS_COMPOSER_HOME_AYMT: "biz_web_reels_composer_home_aymt",
      BIZ_WEB_REELS_CREATION_FROM_EXISTING_VIDEOS_AYMT:
        "biz_web_reels_creation_from_existing_videos_aymt",
      BIZ_WEB_SIMPLIFIED_COMPOSER_UPDATE_CARD:
        "biz_web_simplified_composer_update_card",
      BIZ_WEB_UPCOMING_MOMENTS_POST_REMINDER_AYMT:
        "biz_web_upcoming_moments_post_reminder_aymt",
      BIZ_WEB_COMPOSER_AFTER_PARTY_SCHEDULE:
        "biz_web_composer_after_party_schedule",
      BIZ_WEB_CLIPS_LIBRARY_ALL_CLIPS_EDIT_CLIP:
        "biz_web_clips_library_all_clips_edit_clip",
      BIZ_WEB_CLIPS_LIBRARY_ALL_CLIPS_CREATE_REEL:
        "biz_web_clips_library_all_clips_create_reel",
      BIZ_WEB_CLIPS_LIBRARY_CLIPS_BY_STREAM_EDIT_CLIP:
        "biz_web_clips_library_clips_by_stream_edit_clip",
      BIZ_WEB_CLIPS_LIBRARY_CLIPS_BY_STREAM_CREATE_REEL:
        "biz_web_clips_library_clips_by_stream_create_reel",
      BIZ_WEB_COMPOSER_MESSENGER_MARKETING_CREATE_POST:
        "biz_web_composer_messenger_marketing_create_post",
      BIZ_WEB_COMPOSER_MESSENGER_MARKETING_CREATE_POST_WITH_GET_UPDATE:
        "biz_web_composer_messenger_marketing_create_post_with_get_update",
      BIZ_WEB_STREAMER_HOME_COMPOSER: "biz_web_streamer_home_composer",
      BIZ_WEB_STREAMER_HOME_HEADER_POSTS_COMPOSER:
        "biz_web_streamer_home_header_posts_composer",
      BIZ_WEB_STREAMER_HOME_STORIES_COMPOSER:
        "biz_web_streamer_home_stories_composer",
      BIZ_WEB_HOME_GLOBAL_POST_CREATION: "biz_web_home_global_post_creation",
      BIZ_WEB_HOME_GLOBAL_REEL_CREATION: "biz_web_home_global_reel_creation",
      BIZ_WEB_HOME_GLOBAL_STORIES_CREATION:
        "biz_web_home_global_stories_creation",
      BIZ_WEB_STORY_COMPOSER_PUBLISH_AS_REEL:
        "biz_web_story_composer_publish_as_reel",
      BIZ_WEB_CONTENT_MANAGER_OBJECT_TEMPLATE_PERFORMANCE_BANNER:
        "biz_web_content_manager_object_template_performance_banner",
      BIZ_WEB_INSIGHTS_OBJECT_INSIGHTS_PERFORMANCE_BANNER:
        "biz_web_insights_object_insights_performance_banner",
      BIZ_WEB_INSIGHTS_OBJECT_INSIGHTS_RESHARE_REELS:
        "biz_web_insights_object_insights_reshare_reels",
      BIZ_WEB_ADS_CREATION_POST_PICKER_CREATE_REEL:
        "biz_web_ads_creation_post_picker_create_reel",
      BIZ_WEB_ADS_CREATION_POST_PICKER_CREATE_POST:
        "biz_web_ads_creation_post_picker_create_post",
      BIZ_WEB_HOME_INSIGHTS_OVERVIEW_CARD:
        "biz_web_home_insights_overview_card",
      UNIFIED_VIDEO_COMPOSER_CREATE_REEL_CTA:
        "unified_video_composer_create_reel_cta",
      BIZ_WEB_RESHARE_POSTS_MODAL_CTA: "biz_web_reshare_posts_modal_cta",
      BIZ_WEB_CREATOR_RECOMMENDATION_STORY_COMPOSER_RESHARE_REELS:
        "biz_web_creator_recommendation_story_composer_reshare_reels",
      BIZ_WEB_FTUX_COMMENTS_CREATE_POST_BUTTON:
        "biz_web_ftux_comments_create_post_button",
      BIZ_WEB_FTUX_CREATE_POST_ACTION: "biz_web_ftux_create_post_action",
      BIZ_WEB_FTUX_SCHEDULE_POST_ACTION: "biz_web_ftux_schedule_post_action",
      BIZ_WEB_FTUX_ALL_MESSAGES_CREATE_POST_BUTTON:
        "biz_web_ftux_all_messages_create_post_button",
      BIZ_WEB_FTUX_FRIEND_INVITER_CREATE_POST_BUTTON:
        "biz_web_ftux_friend_inviter_create_post_button",
      BIZ_WEB_ONBOARDING_ALL_MESSAGES_CREATE_POST_BUTTON:
        "biz_web_onboarding_all_messages_create_post_button",
      BIZ_WEB_ONBOARDING_CORE_ACTION_COMPLETION_MODAL:
        "biz_web_onboarding_core_action_completion_modal",
      BIZ_WEB_PO_CREATE_POST_ACTION: "biz_web_po_create_post_action",
      BIZ_WEB_PO_SCHEDULE_POST_ACTION: "biz_web_po_schedule_post_action",
      BIZ_WEB_JEWEL_TAB_SUGGESTIONS: "biz_web_jewel_tab_suggestions",
      BIZ_WEB_GYB_GET_STARTED_CREATE_POST_ACTION:
        "biz_web_gyb_get_started_create_post_action",
      BIZ_WEB_GYB_GET_STARTED_SCHEDULE_POST_ACTION:
        "biz_web_gyb_get_started_schedule_post_action",
      BIZ_WEB_PO_GET_STARTED_CREATE_POST_ACTION:
        "biz_web_po_get_started_create_post_action",
      BIZ_WEB_PO_GET_STARTED_SCHEDULE_POST_ACTION:
        "biz_web_po_get_started_schedule_post_action",
      BIZ_WEB_PO_HOME_CARD_CREATE_POST_ACTION:
        "biz_web_po_home_card_create_post_action",
      BIZ_WEB_PO_HOME_CARD_SCHEDULE_POST_ACTION:
        "biz_web_po_home_card_schedule_post_action",
      BIZ_WEB_PO_HOME_CARD_SCHEDULE_POST_HOT_TIME_BUTTON:
        "biz_web_po_home_card_schedule_post_hot_time_button",
      BIZ_WEB_ACTIVITY_AYMT_STORIES: "biz_web_activity_aymt_stories",
      BIZ_WEB_CONTENT_MANAGER_ACTIVE_STORIES:
        "biz_web_content_manager_active_stories",
      BIZ_WEB_CONTENT_MANAGER_ARCHIVE_STORIES:
        "biz_web_content_manager_archive_stories",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_STORIES:
        "biz_web_content_manager_scheduled_stories",
      BIZ_WEB_CONTENT_MANAGER_ACTIVE_STORIES_NULL_TABLE:
        "biz_web_content_manager_active_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_ARCHIVE_STORIES_NULL_TABLE:
        "biz_web_content_manager_archive_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_STORIES_NULL_TABLE:
        "biz_web_content_manager_scheduled_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_ACTIVE_FB_STORIES_NULL_TABLE:
        "biz_web_content_manager_active_fb_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_ACTIVE_IG_STORIES_NULL_TABLE:
        "biz_web_content_manager_active_ig_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_FB_STORIES_NULL_TABLE:
        "biz_web_content_manager_scheduled_fb_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_IG_STORIES_NULL_TABLE:
        "biz_web_content_manager_scheduled_ig_stories_null_table",
      BIZ_WEB_HOME_CALENDAR_CARD_STORIES_CREATION:
        "biz_web_home_calendar_card_stories_creation",
      BIZ_WEB_HOME_CALENDAR_CARD_WEEK_NULL_STATE_STORIES_CREATION:
        "biz_web_home_calendar_card_week_null_state_stories_creation",
      BIZ_WEB_HOME_STORIES: "biz_web_home_stories",
      BIZ_WEB_HOME_STORIES_AYMT: "biz_web_home_stories_aymt",
      BIZ_WEB_CONTENT_MANAGER_PUBLISHED_POSTS_TAB_STORIES:
        "biz_web_content_manager_published_posts_tab_stories",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_POSTS_TAB_STORIES:
        "biz_web_content_manager_scheduled_posts_tab_stories",
      BIZ_WEB_CONTENT_MANAGER_DRAFT_POSTS_TAB_STORIES:
        "biz_web_content_manager_draft_posts_tab_stories",
      BIZ_WEB_CONTENT_MANAGER_FEED_AND_GRID_TAB_STORIES:
        "biz_web_content_manager_feed_and_grid_tab_stories",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_TAB_STORIES:
        "biz_web_content_manager_calendar_tab_stories",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_MOMENTS_STORIES:
        "biz_web_content_manager_calendar_moments_stories",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_CUSTOM_MOMENTS_STORIES:
        "biz_web_content_manager_calendar_custom_moments_stories",
      BIZ_WEB_CONTENT_MANAGER_PHOTOS_TAB_STORIES:
        "biz_web_content_manager_photos_tab_stories",
      BIZ_WEB_UNIVERSAL_CREATION_STORIES: "biz_web_universal_creation_stories",
      BIZ_WEB_GLOBAL_CREATE_STORIES: "biz_web_global_create_stories",
      BIZ_WEB_BUSINESS_CREATIVE_ASSET_DETAIL_VIEW_STORIES_CREATION:
        "biz_web_business_creative_asset_detail_view_stories_creation",
      BIZ_WEB_BUSINESS_CREATIVE_ASSET_LIST_VIEW_STORIES_CREATION:
        "biz_web_business_creative_asset_list_view_stories_creation",
      BIZ_WEB_PRODUCT_UPDATE_STORIES_MULTI_CREATION_BUTTON:
        "biz_web_product_update_stories_multi_creation_button",
      BIZ_WEB_PUBLISHED_FB_POSTS_TBVE: "biz_web_published_fb_posts_tbve",
      PPT_PUBLISHED_POSTS: "ppt_published_posts",
      PPT_SCHEDULED_POSTS: "ppt_scheduled_posts",
      PPT_DRAFTS: "ppt_drafts",
      BIZ_TOOLS_PUBLISHED_POSTS_TAB_EDIT_COMPOSER:
        "biz_tools_published_posts_tab_edit_composer",
      BIZ_TOOLS_PUBLISHED_FB_POSTS_TAB_EDIT_COMPOSER:
        "biz_tools_published_fb_posts_tab_edit_composer",
      BIZ_TOOLS_PUBLISHED_IG_POSTS_TAB_EDIT_COMPOSER:
        "biz_tools_published_ig_posts_tab_edit_composer",
      BIZ_TOOLS_SCHEDULED_FB_POSTS_TAB_EDIT_COMPOSER:
        "biz_tools_scheduled_fb_posts_tab_edit_composer",
      BIZ_TOOLS_SCHEDULED_IG_POSTS_TAB_EDIT_COMPOSER:
        "biz_tools_scheduled_ig_posts_tab_edit_composer",
      BIZ_TOOLS_SCHEDULED_FB_STORIES_TAB_EDIT_COMPOSER:
        "biz_tools_scheduled_fb_stories_tab_edit_composer",
      BIZ_TOOLS_SCHEDULED_IG_STORIES_TAB_EDIT_COMPOSER:
        "biz_tools_scheduled_ig_stories_tab_edit_composer",
      BRANDS_COLLAB_MANAGER_COMPOSER: "brands_collab_manager_composer",
      BIZ_SUITE_SETTINGS_INSTAGRAM_BC_PARTNER_SEARCH:
        "biz_suite_settings_instagram_bc_partner_search",
      COMMERCE_MANAGER_CREATOR_MANAGEMENT:
        "commerce_manager_creator_management",
      COMMERCE_MANAGER_IG_CHANNEL_SETTINGS:
        "commerce_manager_ig_channel_settings",
      COMMERCE_MANAGER_DROPS_PUBLISHED_POST_EDIT:
        "commerce_manager_drops_published_post_edit",
      COMMERCE_MANAGER_DROPS_SCHEDULED_POST_EDIT:
        "commerce_manager_drops_scheduled_post_edit",
      COMMERCE_MANAGER_DROPS_DRAFT_POST_EDIT:
        "commerce_manager_drops_draft_post_edit",
      COMMERCE_MANAGER_DROPS_POST_CREATION:
        "commerce_manager_drops_post_creation",
      COMMERCE_MANAGER_DROPS_STORY_CREATION:
        "commerce_manager_drops_story_creation",
      COMMERCE_MANAGER_COMMUNITY_CONTENT_STORIES:
        "commerce_manager_community_content_stories",
      COMMERCE_MANAGER_COMMUNITY_CONTENT_POST_CREATION:
        "commerce_manager_community_content_post_creation",
      COMMERCE_MANAGER_COMMUNITY_CONTENT_STORY_CREATION:
        "commerce_manager_community_content_story_creation",
      SELLER_COMMUNITY_CONTENT_HASHTAG_SEARCH:
        "seller_community_content_hashtag_search",
      COMMERCE_MANAGER_OFFERS_POST_CREATION:
        "commerce_manager_offers_post_creation",
      BIZ_TAGGED_COMMUNITY_CONTENT_STORIES:
        "biz_tagged_community_content_stories",
      BIZ_APP_TAGGED_POST: "biz_app_tagged_post",
      BIZ_APP_NOTIFICATION_TAGGED_POST: "biz_app_notification_tagged_post",
      BIZ_SHARING_PLAYGROUND: "biz_sharing_playground",
      BIZ_SHARING_PLAYGROUND_STORIES: "biz_sharing_playground_stories",
      UNIVERSAL_DEEPLINK: "universal_deeplink",
      BIZ_SHARING_HASHTAG_RECOMMENDATION: "biz_sharing_hashtag_recommendation",
      LIVE_SHOPPING_BROADCASTER_HUB: "live_shopping_broadcaster_hub",
      FB_COMPOSER_SCHEDULE_POST_AT_HOT_TIME:
        "fb_composer_schedule_post_at_hot_time",
      FB_COMPOSER_CROSSPOST_ON_FB_AND_IG: "fb_composer_crosspost_on_fb_and_ig",
      FB_COMPOSER_SHARE_TO_GROUPS: "fb_composer_share_to_groups",
      MBS_ONBOARDING_EMAIL_NOTIF: "mbs_onboarding_email_notif",
      ASSET_LIBRARY_BIZ_CREATIVES: "asset_library_biz_creatives",
      EXTERNAL_PPLUS_LAR: "external_pplus_lar",
      REELS_CREATION_FROM_EXISTING_VIDEOS_MODAL_AYMT_IN_CS:
        "reels_creation_from_existing_videos_modal_aymt_in_cs",
      REEL_COMPOSER_FOR_REELS_CREATION_AYMT_IN_CS:
        "reel_composer_for_reels_creation_aymt_in_cs",
      REELS_CREATION_FROM_EXISTING_VIDEOS_MODAL_AYMT_IN_MBS:
        "reels_creation_from_existing_videos_modal_aymt_in_mbs",
      REEL_COMPOSER_FOR_REELS_CREATION_AYMT_IN_MBS:
        "reel_composer_for_reels_creation_in_mbs",
      AUTOGEN_BACK_CATALOG: "autogen_back_catalog",
      AUTO_CLIPS_TO_REELS: "auto_clips_to_reels",
      LIVE_PRODUCER: "live_producer",
      COMET_TBVE: "comet_tbve",
      REMOTE_TRIMMER: "remote_trimmer",
      UNKNOWN: "unknown",
    });
    f["default"] = a;
  },
  66
);
__d(
  "PagesComposerComposerImpressionFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744108");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_composer_impression",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerDraftPostEnterFlowFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744116");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_draft_post_enter_flow",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerDraftPostSubmitFlowFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744117");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_draft_post_submit_flow",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerDraftReminderCardImpressionFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744118");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_draft_reminder_card_impression",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerDraftReminderUnitImpressionFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744119");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_draft_reminder_unit_impression",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerFooterSettingButtonClickFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744120");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_footer_setting_button_click",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerPreviewButtonClickFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744132");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_preview_button_click",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerSchedulePostEnterFlowFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744134");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_schedule_post_enter_flow",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerSchedulePostSubmitFlowFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1744135");
    b = d("FalcoLoggerInternal").create(
      "pages_composer_schedule_post_submit_flow",
      a
    );
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PagesComposerLoggingUtils",
  [
    "ComposerLoggingEntryPointType",
    "ComposerStructuredLogger",
    "ComposerStructuredLoggerUtil",
    "ComposerTargetType",
    "ComposerXSessionIDs",
    "PageContentTabConstants",
    "PagesComposerComposerImpressionFalcoEvent",
    "PagesComposerContextUtils",
    "PagesComposerDraftPostEnterFlowFalcoEvent",
    "PagesComposerDraftPostSubmitFlowFalcoEvent",
    "PagesComposerDraftReminderCardImpressionFalcoEvent",
    "PagesComposerDraftReminderUnitImpressionFalcoEvent",
    "PagesComposerFooterSettingButtonClickFalcoEvent",
    "PagesComposerPreviewButtonClickFalcoEvent",
    "PagesComposerSchedulePostEnterFlowFalcoEvent",
    "PagesComposerSchedulePostSubmitFlowFalcoEvent",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a, b, e, f, g) {
      if (d("PagesComposerContextUtils").getIsDraftComposer(f)) return;
      var h = (f = m(f)) != null ? f : "unknown",
        i = (f = l(e)) != null ? f : "other";
      i === "wall" && (i = "page");
      c("PagesComposerComposerImpressionFalcoEvent").log(function () {
        return {
          event_location: n(h),
          actor_id: a,
          actor_type: a === g ? "page" : "user",
          target_id: g,
          target_type: i,
          flow: "create",
          entry_point: h,
          composer_layout: "unknown",
          referrer: null,
          waterfall_session_id: d("ComposerXSessionIDs").getSessionID(b),
          event_data: d("ComposerStructuredLoggerUtil").getLoggingEventData(b),
        };
      });
    }
    function b(a, b) {}
    function e(a, b) {
      d("ComposerStructuredLogger").shouldLogEvent(
        b,
        !0,
        "footer_setting_button"
      ) &&
        c("PagesComposerFooterSettingButtonClickFalcoEvent").log(function () {
          return {
            event_location: "page__home_tab",
            actor_id: a,
            actor_type: "page",
            target_id: a,
            target_type: "page",
            entry_point: "pages_feed",
            composer_layout: null,
            referrer: null,
            waterfall_session_id: null,
            event_data: {},
          };
        });
    }
    function f(a, b, e, f, g) {
      g === void 0 && (g = "unknown");
      e = { post_ids: [e] };
      var h = babelHelpers["extends"]({}, p(a, b, f, g), { event_data: e });
      f === d("PageContentTabConstants").TABS.DRAFTS
        ? c("PagesComposerDraftPostEnterFlowFalcoEvent").log(function () {
            return h;
          })
        : f === d("PageContentTabConstants").TABS.SCHEDULED_POSTS &&
          c("PagesComposerSchedulePostEnterFlowFalcoEvent").log(function () {
            return h;
          });
    }
    function h(a, b, e, f, g, h) {
      h === void 0 && (h = "unknown");
      e = {
        post_ids: f,
        post_action_type: o(e),
        is_bulk_submit: f.length > 1 ? 1 : 0,
      };
      var i = babelHelpers["extends"]({}, p(a, b, g, h), { event_data: e });
      g === d("PageContentTabConstants").TABS.DRAFTS
        ? c("PagesComposerDraftPostSubmitFlowFalcoEvent").log(function () {
            return i;
          })
        : g === d("PageContentTabConstants").TABS.SCHEDULED_POSTS &&
          c("PagesComposerSchedulePostSubmitFlowFalcoEvent").log(function () {
            return i;
          });
    }
    function i(a, b, e) {
      var f = (e = m(e)) != null ? e : "unknown";
      c("PagesComposerPreviewButtonClickFalcoEvent").log(function () {
        return {
          event_location: n(f),
          actor_id: a,
          actor_type: "page",
          target_id: a,
          target_type: "page",
          flow: d("ComposerStructuredLoggerUtil").getIsEditComposer(b)
            ? "edit"
            : "create",
          entry_point: f,
          composer_layout: null,
          referrer: null,
          waterfall_session_id: d(
            "ComposerStructuredLoggerUtil"
          ).getWaterfallSessionID(b),
          event_data: {},
        };
      });
    }
    function j(a, b) {
      c("PagesComposerDraftReminderUnitImpressionFalcoEvent").log(function () {
        return {
          actor_id: b,
          actor_type: "page",
          composer_layout: "unknown",
          entry_point: "page_admin_draft_unit",
          event_data: {},
          event_location: "page__home_tab",
          flow: null,
          referrer: null,
          target_id: b,
          target_type: "page",
          waterfall_session_id: d("ComposerXSessionIDs").getSessionID(a),
        };
      });
    }
    function k(a, b, e, f) {
      c("PagesComposerDraftReminderCardImpressionFalcoEvent").log(function () {
        var c;
        return {
          actor_id: e,
          actor_type: "page",
          composer_layout: "unknown",
          entry_point: "page_admin_draft_unit",
          event_data: { position: f },
          event_location: n((c = m(b)) != null ? c : "unknown"),
          flow: null,
          referrer: null,
          target_id: e,
          target_type: "page",
          waterfall_session_id: d("ComposerXSessionIDs").getSessionID(a),
        };
      });
    }
    var l = function (a) {
        if (a === null) return null;
        for (var b in c("ComposerTargetType")) {
          var d = c("ComposerTargetType")[b];
          if (d === a) return d;
        }
        return null;
      },
      m = function (a) {
        if (a === null) return null;
        if (a === "page_content_tab_draft_edit")
          return "publishing_tools_tab_draft_posts";
        else if (a === "pages_draft_post_reminders")
          return "page_admin_draft_unit";
        else if (a === "pages_posts") return "pages_post";
        for (var b in c("ComposerLoggingEntryPointType")) {
          var d = c("ComposerLoggingEntryPointType")[b];
          if (d === a) return d;
        }
        return null;
      },
      n = function (a) {
        switch (a) {
          case "pages_feed":
            return "page__home_tab";
          case "pages_post":
            return "page__post_tab";
          case "publishing_tools_tab_published_posts":
            return "page__publishing_tools";
          case "publishing_tools_tab_scheduled_posts":
            return "page__publishing_tools";
          case "publishing_tools_tab_draft_posts":
            return "page__publishing_tools";
          case "pages_profile_pic_add_story":
            return "page__home_tab";
          case "timeline":
            return "newsfeed";
          case "unknown":
            return "unknown";
          default:
            return "unknown";
        }
      };
    function o(a) {
      switch (a) {
        case d("PageContentTabConstants").ACTIONS.EDIT:
          return "edit";
        case d("PageContentTabConstants").ACTIONS.SCHEDULE:
          return "schedule";
        case d("PageContentTabConstants").ACTIONS.BACKDATE:
          return "backdate";
        case d("PageContentTabConstants").ACTIONS.PUBLISH:
          return "publish";
        case d("PageContentTabConstants").ACTIONS.DELETE:
          return "delete";
        case d("PageContentTabConstants").ACTIONS.RESCHEDULE:
          return "reschedule";
        case d("PageContentTabConstants").ACTIONS.UNSCHEDULE:
          return "unschedule";
        default:
          return "unknown";
      }
    }
    function p(a, b, c, e) {
      e === void 0 && (e = "unknown");
      var f = "unknown";
      b === "ADS_PE"
        ? (f = "power_editor")
        : b === "PAGES_MANAGER" && (f = "page__publishing_tools");
      b = "unknown";
      c === d("PageContentTabConstants").TABS.DRAFTS
        ? (b = "draft")
        : c === d("PageContentTabConstants").TABS.SCHEDULED_POSTS &&
          (b = "schedule");
      return {
        event_location: f,
        actor_id: a,
        actor_type: "page",
        target_id: a,
        target_type: "page",
        flow: b,
        entry_point: e,
        composer_layout: "unknown",
        referrer: null,
        waterfall_session_id: null,
      };
    }
    g.logComposerImpression = a;
    g.logConsolidatedEntryButtonClick = b;
    g.logFooterSettingButtonClick = e;
    g.logPageContentTabPostDetailsEnterFlow = f;
    g.logPageContentTabPostDetailsSubmitFlow = h;
    g.logPreviewButtonClick = i;
    g.logDraftReminderUnitImpression = j;
    g.logDraftReminderCardImpression = k;
    g.mapToComposerTargetType = l;
    g.mapToComposerLoggingEntryPoint = m;
    g.getComposerLocationFromEntryPoint = n;
    g.getComposerLoggingPostActionTypeForAction = o;
    g.getPageContentTabLoggingBaseData = p;
  },
  98
);
__d(
  "ReactComposerAudienceActions",
  [
    "ReactComposerAudienceActionTypes",
    "ReactComposerAudienceStore",
    "ReactComposerDispatcher",
  ],
  function (a, b, c, d, e, f, g) {
    b("ReactComposerAudienceStore");
    function a(a, b, d, e) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerAudienceActionTypes").SET_AUDIENCE,
        audience: b,
        legacyAudience: d,
        sourceLoggingName: e,
      });
    }
    function d(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerAudienceActionTypes").SET_AUDIENCE,
        audience: b,
        legacyAudience: d,
        suppressWaterfallLogging: !0,
      });
    }
    function e(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerAudienceActionTypes").SET_AUDIENCE_ELEMENT,
        audienceElement: b,
      });
    }
    function f(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerAudienceActionTypes").SET_AUDIENCE_INSTANCE,
        audienceInstance: b,
      });
    }
    function h(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerAudienceActionTypes").SET_PRIVACYX_NULL_DANGEROUS,
        privacyxNullDangerous: b,
      });
    }
    function i(a, b, d, e) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        sourceLoggingName: b,
        type: c("ReactComposerAudienceActionTypes").SET_COLLECTION,
        collectionID: d,
        privacyLabel: e,
      });
    }
    function j(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").SET_COLLECTION,
        collectionID: b,
      });
    }
    function k(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        timelineSelected: b,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").SET_TIMELINE_DESTINATION,
      });
    }
    function l(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").TOGGLE_TIMELINE_DESTINATION,
      });
    }
    function m(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        storiesSelected: b,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").SET_STORIES_DESTINATION,
      });
    }
    function n(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").TOGGLE_STORIES_DESTINATION,
      });
    }
    function o(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        adsPostSelected: b,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").SET_ADS_POST_DESTINATION,
      });
    }
    function p(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").TOGGLE_ADS_POST_DESTINATION,
      });
    }
    function q(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        instagramSelected: b,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").SET_INSTAGRAM_DESTINATION,
      });
    }
    function r(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        selectedGroupID: b,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").SET_GROUP_DESTINATION,
      });
    }
    function s(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        instagramBusinessAccountID: b,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes")
          .TOGGLE_INSTAGRAM_DESTINATION,
      });
    }
    function t(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        storiesSelected: b,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").SAVE_STORIES_STATE,
      });
    }
    function u(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        targetID: b,
        entryType: d,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").TOGGLE_MESSENGER_ENTRY,
      });
    }
    function v(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").CLICK_SEE_MESSENGER,
      });
    }
    function w(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").STORE_MESSENGER_ENTRIES,
      });
    }
    function x(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes")
          .CLEAR_STORED_MESSENGER_ENTRIES,
      });
    }
    function y(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        entry: b,
        suppressWaterfallLogging: !0,
        type: c("ReactComposerAudienceActionTypes").ADD_NEW_GROUP,
      });
    }
    g.setAudience = a;
    g.setAudienceWithoutLogging = d;
    g.setAudienceElement = e;
    g.setAudienceInstance = f;
    g.setPrivacyxNullDangerous = h;
    g.setCollectionID = i;
    g.setCollectionIDWithoutLogging = j;
    g.setTimelineSelected = k;
    g.toggleTimelineSelected = l;
    g.setStoriesSelected = m;
    g.toggleStoriesSelected = n;
    g.setAdsPostSelected = o;
    g.toggleAdsPostSelected = p;
    g.setInstagramSelected = q;
    g.setSelectedGroupID = r;
    g.toggleInstagramSelected = s;
    g.setStoriesSelectedSavedState = t;
    g.toggleMessengerEntry = u;
    g.clickSeeMessenger = v;
    g.storeSelectedMessengerEntries = w;
    g.clearStoredSelectedMessengerEntries = x;
    g.addNewGroup = y;
  },
  98
);
__d(
  "ReactComposerFocusActions",
  [
    "ReactComposerDispatcher",
    "ReactComposerFocusActionTypes",
    "ReactComposerStore",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    b("ReactComposerStore");
    function a(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerFocusActionTypes").SUBSCRIBE,
        onFocusAcquiredCallback: b,
        onFocusLostCallback: d,
      });
    }
    function d(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerFocusActionTypes").UNSUBSCRIBE,
      });
    }
    function e(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerFocusActionTypes").FOCUS_ACQUIRED,
      });
    }
    function f(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerFocusActionTypes").FOCUS_LOST,
      });
    }
    g.subscribe = a;
    g.unsubscribe = d;
    g.notifyFocusAcquired = e;
    g.notifyFocusLost = f;
  },
  98
);
__d(
  "XPagesProfilePostsController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/{page_token}/posts/", {
      privacy_mutation_token: { type: "String" },
      business_id: { type: "Int" },
      page_token: { type: "String", required: !0 },
      ref: { type: "String" },
      __nodl: { type: "Exists", defaultValue: !1 },
      qr: { type: "String" },
      qr_code_id: { type: "FBID" },
      scan_session_id: { type: "String" },
      mt_nav: { type: "Bool", defaultValue: !1 },
      referrer: { type: "String" },
      msite_tab_async: { type: "Bool", defaultValue: !1 },
      _sref_: { type: "Int" },
      _vref_: { type: "Int" },
      tipID: { type: "String" },
      ndid: { type: "String" },
      entry_point: { type: "Enum", enumType: 1 },
    });
  },
  null
);
__d(
  "XPagesSharingAdminPreferenceController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/pages/sharing/admin_preference/", {
      is_story_channel_selected: { type: "Bool", defaultValue: !1 },
      is_newsfeed_channel_selected: { type: "Bool", defaultValue: !1 },
    });
  },
  null
);
__d(
  "PagesComposerUtils",
  [
    "Arbiter",
    "AsyncRequest",
    "ComposerXMarauderLogger",
    "ReactComposerAudienceActions",
    "ReactComposerFocusActions",
    "XPagesProfilePostsController",
    "XPagesSharingAdminPreferenceController",
    "goURI",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a, b, e) {
      if (a == null || a === "") return;
      c("Arbiter").inform("ReactFeedComposerXBootloader/focuscomposer/" + a);
      d("ReactComposerFocusActions").notifyFocusAcquired(a);
      d("ReactComposerAudienceActions").setStoriesSelected(a, b);
      d("ReactComposerAudienceActions").setTimelineSelected(a, e);
    }
    function b(a, b) {
      a = c("XPagesSharingAdminPreferenceController")
        .getURIBuilder()
        .setBool("is_story_channel_selected", a)
        .setBool("is_newsfeed_channel_selected", b)
        .getURI();
      new (c("AsyncRequest"))(a).send();
    }
    function e(a) {
      var b = ["ads_pe_post", "control", "story_top_story_selected"];
      return b.includes(a);
    }
    function f(a, b) {
      if (b === "PUBLISH") {
        b = c("XPagesProfilePostsController")
          .getURIBuilder()
          .setString("page_token", a)
          .getURI();
        c("goURI")(b);
      }
    }
    function h(a, b, c) {
      d("ComposerXMarauderLogger").logEvent(b, a, {
        extraData: (b = c) != null ? b : null,
      });
    }
    g.focusComposer = a;
    g.saveAdminComposerPreferences = b;
    g.shouldUsePageDefaultDestination = e;
    g.redirectOnPostSuccess = f;
    g.logVideoUploadFunnelEvents = h;
  },
  98
);
__d(
  "ReactComposerMediaUploadActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        PHOTO_UPLOAD_ENQUEUED: null,
        PHOTO_UPLOAD_RESIZE_STARTED: null,
        PHOTO_UPLOAD_RESIZE_PROGRESS: null,
        PHOTO_UPLOAD_RESIZE_DONE: null,
        PHOTO_UPLOAD_RESIZE_FAILED: null,
        PHOTO_UPLOAD_RESIZER_UNAVAILABLE: null,
        PHOTO_UPLOAD_UPLOADING: null,
        PHOTO_UPLOAD_IS_SPHERICAL: null,
        PHOTO_UPLOAD_DONE: null,
        PHOTO_UPLOAD_FAILED: null,
        PHOTO_UPLOAD_RETRY: null,
        PHOTO_UPLOAD_EXTRA_DONE: null,
        PHOTOS_SELECT: null,
        PHOTO_ADD_UPLOAD: null,
        PHOTO_SET_THUMBNAIL: null,
        SPHERICAL_PHOTO_CHECK_DONE: null,
        SPHERICAL_PHOTO_CHECK_FAILED: null,
        SAVE_VIDEO_IN_PAGES_COMPOSER: null,
        VIDEO_UPLOAD_ENQUEUED: null,
        VIDEO_UPLOAD_METADATA_PARSED: null,
        VIDEO_UPLOAD_UPLOADING: null,
        VIDEO_UPLOAD_DONE: null,
        VIDEO_UPLOAD_FAILED: null,
        VIDEO_UPLOAD_RETRY: null,
        VIDEO_SET_THUMBNAIL: null,
        VIDEO_SET_UPLOADER: null,
        VIDEOS_HIDDEN: null,
        VIDEOS_SHOWN: null,
        MEDIA_UPLOAD_MOVED: null,
        MEDIA_UPLOAD_REMOVE: null,
        MEDIA_UPLOAD_PROGRESS: null,
        MEDIA_UPLOAD_INPUT_CLICKED: null,
        MEDIA_UPLOAD_INPUT_DONE: null,
        PREFILL_MEDIAS: null,
        REORDER_MEDIAS: null,
      },
      "ReactComposerMediaUploadActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerPhotoActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        PHOTO_RECOGNITION_STARTED: null,
        PHOTO_RECOGNITION_FINISHED: null,
        PHOTO_RECOGNITION_ALL_FINISHED: null,
        PHOTO_ADD_FACEBOX: null,
        PHOTO_TAG_FACEBOX: null,
        PHOTO_TAG_XY: null,
        PHOTO_TAG_XY_PRODUCT: null,
        PHOTO_UNTAG_FACEBOX: null,
        PHOTO_REMOVE: null,
        PHOTO_UNTAG_SUBJECT_FROM_ALL_PHOTOS: null,
        PHOTO_EDIT_STARTED: null,
        PHOTO_EDIT_FINISHED: null,
        PHOTO_SET_BEING_TAGGED: null,
        PHOTO_LOADING_EDIT_FINISHED: null,
        PHOTO_UNTAG_ALL: null,
        PHOTO_SPHERICAL_UPDATING: null,
        PHOTO_UPDATE_ALL_PHOTO_TAGS: null,
        PHOTO_SET_IS_DEPTHFILE: null,
        PHOTO_UPDATE_ALL_PRODUCT_TAGS: null,
        PHOTO_ADD_PRODUCT_TAG_AI_DATA: null,
        PHOTO_UPDATE_PRODUCT_TAG_AI_DATA: null,
      },
      "ReactComposerPhotoActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerPhotoStore",
  [
    "ReactComposerMediaUploadActionType",
    "ReactComposerPhotoActionType",
    "ReactComposerStoreBase",
    "immutable",
  ],
  function (a, b, c, d, e, f, g) {
    var h = c("immutable").Record({
        isSpherical: !1,
        faceboxes: c("immutable").Map(),
        height: null,
        id: null,
        imageSrc: null,
        uploadIndex: 0,
        isLoadingPhotoEdit: !1,
        isRecognizingFaceboxes: !1,
        thumbSrc: null,
        uploadID: null,
        width: null,
        xyTags: c("immutable").Map(),
        isDepthFile: !1,
        aiData: [],
      }),
      i = c("immutable").Record({
        id: null,
        photoID: null,
        x: null,
        y: null,
        top: null,
        left: null,
        width: null,
        height: null,
        croppedURI: null,
        taggedSubjectID: null,
        taggedValue: null,
        isMagicTag: !1,
        recognizedSubjectID: null,
      }),
      j = c("immutable").Record({
        from_facebox: !1,
        name: null,
        photoID: null,
        source: null,
        subject: null,
        x: null,
        y: null,
        is_product_tag: !1,
        parent_product_id: null,
      });
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                photos: c("immutable").Map(),
                photoBeingTagged: null,
                isSphericalPhotoUpdating: !1,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_DONE:
                  d && d.$ReactComposerPhotoStore1(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_EXTRA_DONE:
                  d && d.$ReactComposerPhotoStore2(a);
                  break;
                case c("ReactComposerMediaUploadActionType").PHOTO_ADD_UPLOAD:
                  d && d.$ReactComposerPhotoStore3(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_RECOGNITION_STARTED:
                  d && d.$ReactComposerPhotoStore4(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_RECOGNITION_FINISHED:
                  d && d.$ReactComposerPhotoStore5(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_RECOGNITION_ALL_FINISHED:
                  d && d.$ReactComposerPhotoStore6(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_ADD_FACEBOX:
                  d && d.$ReactComposerPhotoStore7(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_TAG_XY_PRODUCT:
                  d && d.$ReactComposerPhotoStore8(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_TAG_XY:
                  d && d.$ReactComposerPhotoStore9(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_TAG_FACEBOX:
                  d && d.$ReactComposerPhotoStore10(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_UNTAG_FACEBOX:
                  d && d.$ReactComposerPhotoStore11(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_REMOVE:
                  d && d.$ReactComposerPhotoStore12(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_UNTAG_SUBJECT_FROM_ALL_PHOTOS:
                  d && d.$ReactComposerPhotoStore13(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_SET_BEING_TAGGED:
                  d && d.$ReactComposerPhotoStore14(a);
                  break;
                case c("ReactComposerMediaUploadActionType").PREFILL_MEDIAS:
                  d && d.$ReactComposerPhotoStore15(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_EDIT_STARTED:
                  d && d.$ReactComposerPhotoStore16(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_LOADING_EDIT_FINISHED:
                  d && d.$ReactComposerPhotoStore17(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_UNTAG_ALL:
                  d && d.$ReactComposerPhotoStore18(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_SPHERICAL_UPDATING:
                  d && d.$ReactComposerPhotoStore19(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_UPDATE_ALL_PHOTO_TAGS:
                  d && d.$ReactComposerPhotoStore20(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_SET_IS_DEPTHFILE:
                  d && d.$ReactComposerPhotoStore21(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_UPDATE_ALL_PRODUCT_TAGS:
                  d && d.$ReactComposerPhotoStore22(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_ADD_PRODUCT_TAG_AI_DATA:
                  d && d.$ReactComposerPhotoStore23(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_REMOVE_PRODUCT_TAG_AI_DATA:
                  d && d.$ReactComposerPhotoStore24(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_UPDATE_PRODUCT_TAG_AI_DATA:
                  d && d.$ReactComposerPhotoStore25(a);
                  break;
                default:
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var d = b.prototype;
      d.getPhotos = function (a) {
        return this.getComposerData(a).photos;
      };
      d.isLimitExceeded = function (a, b) {
        return this.getPhotos(a).size > b;
      };
      d.getPhoto = function (a, b) {
        return this.getComposerData(a).photos.get(b);
      };
      d.isRecognizing = function (a) {
        return this.getComposerData(a).photos.some(function (a) {
          return a.isRecognizingFaceboxes;
        });
      };
      d.getIsSubjectTagged = function (a, b) {
        var c = this,
          d = this.getComposerData(a).photos;
        return d.some(function (d) {
          return c.getIsSubjectTaggedInPhoto(a, d.id, b);
        });
      };
      d.getIsSubjectTaggedInPhoto = function (a, b, c) {
        a = this.getPhoto(a, b);
        b = a.faceboxes.some(function (a) {
          return a.taggedSubjectID === c;
        });
        a = a.xyTags.some(function (a) {
          return a.subject === c;
        });
        return b || a;
      };
      d.hasTagsInPhoto = function (a, b) {
        a = this.getPhoto(a, b);
        if (!a) return !1;
        b = a.faceboxes.some(function (a) {
          return a.taggedSubjectID !== null;
        });
        a = a.xyTags.size > 0;
        return b || a;
      };
      d.getAllTaggedFaceboxes = function (a) {
        a = this.getPhotos(a);
        var b = [];
        a.forEach(function (a) {
          b = b.concat(a.faceboxes.toArray());
        });
        return b.filter(function (a) {
          return !!a.get("taggedSubjectID");
        });
      };
      d.getTaggedFaceboxes = function (a, b) {
        a = this.getPhoto(a, b);
        return a
          ? a.faceboxes
              .filter(function (a) {
                return !!a.get("taggedSubjectID");
              })
              .map(function (a) {
                return a.toObject();
              })
              .toArray()
          : null;
      };
      d.getFaceboxes = function (a, b) {
        a = this.getPhoto(a, b);
        return a
          ? a.faceboxes
              .map(function (a) {
                return a.toObject();
              })
              .toArray()
          : null;
      };
      d.getXYTags = function (a, b) {
        a = this.getPhoto(a, b);
        return a
          ? a.xyTags
              .map(function (a) {
                return a.toObject();
              })
              .toArray()
          : null;
      };
      d.getAllXYTags = function (a) {
        a = this.getPhotos(a);
        var b = [];
        a.forEach(function (a) {
          b = b.concat(a.xyTags.toArray());
        });
        return b;
      };
      d.getProductTagAIData = function (a) {
        a = this.getPhotos(a);
        var b = new Map();
        a.forEach(function (a) {
          b.set(a.id, a.aiData);
        });
        return b;
      };
      d.getPhotoBeingTagged = function (a) {
        return this.getComposerData(a).photoBeingTagged;
      };
      d.isSphericalPhotoUpdating = function (a) {
        return this.getComposerData(a).isSphericalPhotoUpdating;
      };
      d.$ReactComposerPhotoStore1 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "uploadID",
          "uploadIndex",
          "photoID",
          "thumbSrc",
          "isSpherical",
          "imageSrc",
          "width",
          "height",
        ]);
        var b = a[0],
          c = a[1],
          d = a[2],
          e = a[3],
          f = a[4],
          g = a[5],
          i = a[6],
          j = a[7];
        a = a[8];
        this.$ReactComposerPhotoStore26(
          b,
          e,
          new h({
            id: e,
            uploadID: c,
            uploadIndex: d,
            thumbSrc: f,
            isSpherical: g,
            imageSrc: i,
            width: j,
            height: a,
          })
        );
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore2 = function (a) {
        this.$ReactComposerPhotoStore1(a);
      };
      d.$ReactComposerPhotoStore4 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.photos = c.photos.update(a, function (a) {
          return a.set("isRecognizingFaceboxes", !0);
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore5 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.photos = c.photos.update(a, function (a) {
          return a && a.set("isRecognizingFaceboxes", !1);
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore6 = function (a) {
        a = this.validateAction(a, ["composerID", "photos"]);
        var b = a[0],
          c = a[1];
        a = this.getComposerData(b);
        a.photos = a.photos.map(function (a) {
          return c.indexOf(a.id) !== -1
            ? a.set("isRecognizingFaceboxes", !1)
            : a;
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore7 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID", "facebox"]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = this.getComposerData(b);
        var e = d.bestRecognition,
          f = null,
          g = null;
        e && ((f = e.subjectID), (g = e.value));
        a.photos = a.photos.update(c, function (a) {
          return (
            a &&
            a.update("faceboxes", function (a) {
              return a.set(
                d.id,
                new i({
                  id: d.id,
                  photoID: c,
                  x: d.x,
                  y: d.y,
                  top: d.top,
                  left: d.left,
                  width: d.width,
                  height: d.height,
                  croppedURI: d.croppedURI,
                  taggedSubjectID: f,
                  taggedValue: g,
                  isMagicTag: !!f,
                  recognizedSubjectID: f,
                })
              );
            })
          );
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore9 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "value",
          "photoID",
          "source",
          "subject",
          "x",
          "y",
        ]);
        var b = a[0],
          c = a[1],
          d = a[2],
          e = a[3],
          f = a[4],
          g = a[5],
          h = a[6];
        a = this.getComposerData(b);
        a.photos = a.photos.update(d, function (a) {
          return a.update("xyTags", function (a) {
            return a.set(
              f,
              new j({ name: c, photoID: d, source: e, subject: f, x: g, y: h })
            );
          });
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore8 = function (a) {
        var b = this.validateAction(a, [
            "composerID",
            "value",
            "photoID",
            "source",
            "subject",
            "x",
            "y",
          ]),
          c = b[0],
          d = b[1],
          e = b[2],
          f = b[3],
          g = b[4],
          h = b[5],
          i = b[6];
        b = this.getComposerData(c);
        b.photos = b.photos.update(e, function (b) {
          return b.update("xyTags", function (b) {
            return b.set(
              g,
              new j({
                name: d,
                photoID: e,
                source: f,
                subject: g,
                x: h,
                y: i,
                is_product_tag: !0,
                parent_product_id: a == null ? void 0 : a.parentProductID,
              })
            );
          });
        });
        this.emitChange(c);
      };
      d.$ReactComposerPhotoStore10 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "photoID",
          "faceboxID",
          "subjectID",
          "value",
        ]);
        var b = a[0],
          c = a[1],
          d = a[2],
          e = a[3],
          f = a[4];
        a = this.getComposerData(b);
        a.photos = a.photos.update(c, function (a) {
          return a.update("faceboxes", function (a) {
            return a.update(d, function (a) {
              return a.withMutations(function (a) {
                return a
                  .set("taggedSubjectID", e)
                  .set("taggedValue", f)
                  .set("isMagicTag", !1);
              });
            });
          });
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore18 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID"]);
        var b = a[0];
        a = a[1];
        var d = this.getComposerData(b);
        d.photos = d.photos.update(a, function (a) {
          a = a.set("xyTags", c("immutable").Map());
          return a;
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore11 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID", "faceboxID"]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = this.getComposerData(b);
        a.photos = a.photos.update(c, function (a) {
          return a.update("faceboxes", function (a) {
            return a.update(d, function (a) {
              return a.withMutations(function (a) {
                return a
                  .remove("taggedSubjectID")
                  .remove("taggedValue")
                  .set("isMagicTag", !1);
              });
            });
          });
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore12 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.photos = c.photos["delete"](a);
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore13 = function (a) {
        a = this.validateAction(a, ["composerID", "subjectID"]);
        var b = a[0],
          c = a[1];
        a = this.getComposerData(b);
        a.photos = a.photos.map(function (a) {
          return a.withMutations(function (a) {
            return a
              .update("faceboxes", function (a) {
                return a.map(function (a) {
                  return a.taggedSubjectID !== c
                    ? a
                    : a.withMutations(function (a) {
                        return a
                          .remove("taggedSubjectID")
                          .remove("taggedValue")
                          .set("isMagicTag", !1);
                      });
                });
              })
              .update("xyTags", function (a) {
                return a.filterNot(function (a) {
                  return a.subject === c;
                });
              });
          });
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore14 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.photoBeingTagged = a;
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore15 = function (a) {
        var b = this;
        a = this.validateAction(a, ["composerID", "medias"]);
        var c = a[0];
        a = a[1];
        a.forEach(function (a) {
          b.$ReactComposerPhotoStore26(
            c,
            a.photoID,
            new h({
              id: a.photoID,
              uploadID: a.uploadID,
              thumbSrc: a.thumbSrc,
              imageSrc: a.imageSrc,
              width: a.width,
              height: a.height,
              isSpherical: a.isSpherical,
            })
          );
        });
        this.emitChange(c);
      };
      d.$ReactComposerPhotoStore16 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.photos = c.photos.update(a, function (a) {
          return a.set("isLoadingPhotoEdit", !0);
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore17 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.photos = c.photos.update(a, function (a) {
          return a.set("isLoadingPhotoEdit", !1);
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore3 = function (a) {
        a = this.validateAction(a, ["composerID", "photo"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerPhotoStore26(b, a.id, a);
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore19 = function (a) {
        a = this.validateAction(a, ["composerID", "isSphericalPhotoUpdating"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.isSphericalPhotoUpdating = a;
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore20 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "photoID",
          "faceboxes",
          "xyTags",
        ]);
        var b = a[0],
          d = a[1],
          e = a[2];
        a = a[3];
        var f = this.getComposerData(b),
          g = {};
        e.forEach(function (a) {
          g[a.id] = new i(a);
        });
        var h = {};
        a.forEach(function (a) {
          h[a.subject] = new j(a);
        });
        f.photos = f.photos.update(d, function (a) {
          return (
            a &&
            a
              .set("faceboxes", c("immutable").Map(g))
              .set("xyTags", c("immutable").Map(h))
          );
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore21 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID", "isDepthFile"]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = this.getComposerData(b);
        a.photos = a.photos.update(c, function (a) {
          return a.set("isDepthFile", d);
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore22 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID", "xyTags"]);
        var b = a[0],
          c = a[1];
        a = a[2];
        var d = this.getComposerData(b),
          e = {};
        a.forEach(function (a) {
          e[a.subject] = new j(a);
        });
        d.photos = d.photos.update(c, function (a) {
          return a.update("xyTags", function (a) {
            return a
              .filterNot(function (a) {
                return a.is_product_tag;
              })
              .merge(e);
          });
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore23 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID", "newTagInfo"]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = this.getComposerData(b);
        var e = a.photos.get(c).aiData,
          f = [],
          g = !0;
        e.forEach(function (a) {
          a.xPosition === d.xPosition &&
            a.yPosition === d.yPosition &&
            a.userAction === d.userAction &&
            (g = !1),
            f.push(a);
        });
        g && f.push(d);
        a.photos = a.photos.update(c, function (a) {
          return a.set("aiData", f);
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore24 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID", "productID"]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = this.getComposerData(b);
        var e = a.photos.get(c).aiData,
          f = [];
        e.forEach(function (a) {
          a.productID !== d && a.userAction === "USER_GENERATED" && f.push(a);
        });
        a.photos = a.photos.update(c, function (a) {
          return a.set("aiData", f);
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore25 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID", "newTagInfo"]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = this.getComposerData(b);
        var e = a.photos.get(c).aiData,
          f = [];
        e.forEach(function (a) {
          d.confidence === "HIGH" &&
          ((d.xPosition === a.xPosition && d.yPosition === a.yPosition) ||
            d.productID === a.productID)
            ? f.push(
                babelHelpers["extends"]({}, a, { userAction: d.userAction })
              )
            : d.confidence === "LOW" &&
              d.xPosition === a.xPosition &&
              d.yPosition === a.yPosition
            ? f.push(
                babelHelpers["extends"]({}, a, {
                  userAction: d.userAction,
                  productID: d.productID,
                })
              )
            : f.push(a);
        });
        a.photos = a.photos.update(c, function (a) {
          return a.set("aiData", f);
        });
        this.emitChange(b);
      };
      d.$ReactComposerPhotoStore26 = function (a, b, c) {
        a = this.getComposerData(a);
        a.photos = a.photos.set(b, c);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerPhotoActions",
  [
    "ReactComposerDispatcher",
    "ReactComposerPhotoActionType",
    "ReactComposerPhotoStore",
  ],
  function (a, b, c, d, e, f, g) {
    b("ReactComposerPhotoStore");
    function a(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        photoID: b,
        type: c("ReactComposerPhotoActionType").PHOTO_RECOGNITION_STARTED,
      });
    }
    function d(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_RECOGNITION_FINISHED,
        photoID: b,
      });
    }
    function e(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_RECOGNITION_ALL_FINISHED,
        photos: b,
        facerecWaterfallEvent: d,
      });
    }
    function f(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_ADD_FACEBOX,
        photoID: b,
        facebox: d,
      });
    }
    function h(a, b, d, e, f, g, h) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_TAG_XY,
        value: d,
        photoID: b,
        source: e,
        subject: f,
        x: g,
        y: h,
      });
    }
    function i(a, b, d, e, f, g, h, i) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_TAG_XY_PRODUCT,
        value: d,
        parentProductID: e,
        photoID: b,
        source: f,
        subject: g,
        x: h,
        y: i,
      });
    }
    function j(a, b, d, e, f) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_TAG_FACEBOX,
        photoID: b,
        faceboxID: d,
        subjectID: e,
        value: f,
      });
    }
    function k(a, b, d, e) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_UNTAG_FACEBOX,
        photoID: b,
        faceboxID: d,
        subjectID: e,
      });
    }
    function l(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_REMOVE,
        photoID: b,
        uploadID: d,
      });
    }
    function m(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType")
          .PHOTO_UNTAG_SUBJECT_FROM_ALL_PHOTOS,
        subjectID: b,
      });
    }
    function n(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_UNTAG_ALL,
        photoID: b,
      });
    }
    function o(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        photoID: b,
        type: c("ReactComposerPhotoActionType").PHOTO_EDIT_STARTED,
      });
    }
    function p(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_EDIT_FINISHED,
      });
    }
    function q(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        photoID: b,
        type: c("ReactComposerPhotoActionType").PHOTO_SET_BEING_TAGGED,
      });
    }
    function r(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_LOADING_EDIT_FINISHED,
        photoID: b,
      });
    }
    function s(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_SPHERICAL_UPDATING,
        isSphericalPhotoUpdating: b,
      });
    }
    function t(a, b, d, e) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_UPDATE_ALL_PHOTO_TAGS,
        photoID: b,
        faceboxes: d,
        xyTags: e,
      });
    }
    function u(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerPhotoActionType").PHOTO_SET_IS_DEPTHFILE,
        photoID: b,
        isDepthFile: d,
      });
    }
    function v(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        type: c("ReactComposerPhotoActionType").PHOTO_UPDATE_ALL_PRODUCT_TAGS,
        composerID: a,
        photoID: b,
        xyTags: d,
      });
    }
    function w(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        type: c("ReactComposerPhotoActionType").PHOTO_ADD_PRODUCT_TAG_AI_DATA,
        composerID: a,
        photoID: b,
        newTagInfo: d,
      });
    }
    function x(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        type: c("ReactComposerPhotoActionType")
          .PHOTO_REMOVE_PRODUCT_TAG_AI_DATA,
        composerID: a,
        photoID: b,
        productID: d,
      });
    }
    function y(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        type: c("ReactComposerPhotoActionType")
          .PHOTO_UPDATE_PRODUCT_TAG_AI_DATA,
        composerID: a,
        photoID: b,
        newTagInfo: d,
      });
    }
    g.startRecognizing = a;
    g.finishRecognizingPhoto = d;
    g.finishRecognizing = e;
    g.addFacebox = f;
    g.tagXY = h;
    g.tagXYProduct = i;
    g.tagFacebox = j;
    g.untagFacebox = k;
    g.removePhoto = l;
    g.untagSubjectFromAllPhotos = m;
    g.untagAllForPhoto = n;
    g.startPhotoEdit = o;
    g.finishPhotoEdit = p;
    g.setPhotoBeingTagged = q;
    g.finishLoadingPhotoEdit = r;
    g.changeSphericalPhotoUpdateStatus = s;
    g.updateAllPhotoTags = t;
    g.setPhotoIsDepthFile = u;
    g.updateAllProductTags = v;
    g.addProductTagAIData = w;
    g.removeProductTagAIData = x;
    g.updateProductTagAIData = y;
  },
  98
);
__d(
  "ReactComposerPhotoUploadState",
  [],
  function (a, b, c, d, e, f) {
    a = "PHOTO_UPLOAD_ENQUEUED";
    b = "PHOTO_UPLOAD_RESIZE_STARTED";
    c = "PHOTO_UPLOAD_RESIZE_DONE";
    d = "PHOTO_UPLOAD_RESIZE_FAILED";
    e = "PHOTO_UPLOAD_UPLOADING";
    var g = "PHOTO_UPLOAD_DONE",
      h = "PHOTO_UPLOAD_FAILED";
    f.PHOTO_UPLOAD_ENQUEUED = a;
    f.PHOTO_UPLOAD_RESIZE_STARTED = b;
    f.PHOTO_UPLOAD_RESIZE_DONE = c;
    f.PHOTO_UPLOAD_RESIZE_FAILED = d;
    f.PHOTO_UPLOAD_UPLOADING = e;
    f.PHOTO_UPLOAD_DONE = g;
    f.PHOTO_UPLOAD_FAILED = h;
  },
  66
);
__d(
  "ReactComposerMediaUploadActions",
  [
    "ReactComposerDispatcher",
    "ReactComposerMediaUploadActionType",
    "ReactComposerMediaUploadStore",
    "ReactComposerPhotoActions",
    "ReactComposerPhotoStore",
    "ReactComposerPhotoUploadState",
  ],
  function (a, b, c, d, e, f, g) {
    b("ReactComposerMediaUploadStore");
    b("ReactComposerPhotoStore");
    function a(b, d, e, f, g, h, i, j, a) {
      j === void 0 && (j = []),
        a === void 0 && (a = !1),
        c("ReactComposerDispatcher").dispatch({
          composerID: b,
          mediaType: h,
          uploadID: d,
          type: g,
          filename: e,
          fileURL: i ? i : "",
          index: f,
          xyTags: j,
          isSpherical: a,
        });
    }
    function e(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        loggingData: d,
        uploadID: b,
        type: c("ReactComposerMediaUploadActionType")
          .PHOTO_UPLOAD_RESIZE_STARTED,
      });
    }
    function f(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        uploadID: b,
        type: c("ReactComposerMediaUploadActionType")
          .PHOTO_UPLOAD_RESIZE_PROGRESS,
        progress: d,
      });
    }
    function h(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        loggingData: d,
        uploadID: b,
        type: c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_RESIZE_DONE,
      });
    }
    function i(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        loggingData: d,
        uploadID: b,
        type: c("ReactComposerMediaUploadActionType")
          .PHOTO_UPLOAD_RESIZE_FAILED,
      });
    }
    function j(a, b, d, e, f) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        loggingData: d,
        uploadID: b,
        type: c("ReactComposerMediaUploadActionType")
          .SPHERICAL_PHOTO_CHECK_DONE,
        sphericalImage: e,
        useLocalSphericalImage: f,
      });
    }
    function k(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        loggingData: d,
        uploadID: b,
        type: c("ReactComposerMediaUploadActionType")
          .SPHERICAL_PHOTO_CHECK_FAILED,
      });
    }
    function l(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        type: c("ReactComposerMediaUploadActionType")
          .VIDEO_UPLOAD_METADATA_PARSED,
        composerID: a,
        uploadID: b,
        metadata: d,
      });
    }
    function m(b, d, e, f, g, h, i, j, k, a) {
      k === void 0 && (k = []),
        a === void 0 && (a = !1),
        c("ReactComposerDispatcher").dispatch({
          composerID: b,
          videoID: d,
          uploadID: e,
          filename: f,
          videoMetadata: g,
          index: h,
          type: c("ReactComposerMediaUploadActionType")
            .SAVE_VIDEO_IN_PAGES_COMPOSER,
          mediaType: i,
          fileURL: j ? j : "",
          xyTags: k,
          isSpherical: a,
        });
    }
    function n(a, b, d, e) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        uploadID: b,
        type: e,
        fileUpload: d,
      });
    }
    function o(a, b, d, e, f, g) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        uploadID: b,
        type: c("ReactComposerMediaUploadActionType").MEDIA_UPLOAD_PROGRESS,
        progress: d,
        use_real_progress_percentage: e,
        use_progress_linearity: f,
        use_progress_transform_x: g,
      });
    }
    function p(b, d, a, e) {
      c("ReactComposerDispatcher").dispatch({
        composerID: b,
        uploadID: d,
        type: c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_IS_SPHERICAL,
        isSpherical: a,
        projectionType: e,
      });
    }
    function q(a) {
      c("ReactComposerDispatcher").dispatch(a);
    }
    function r(b, d, e, f, a, g, h, i) {
      c("ReactComposerDispatcher").dispatch({
        type: c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_EXTRA_DONE,
        composerID: b,
        uploadID: d,
        photoID: e,
        thumbSrc: f,
        isSpherical: a,
        imageSrc: g,
        width: h,
        height: i,
      });
    }
    function s(a, b, d, e, f, g) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        uploadID: b,
        type: g,
        error: f,
        fileUpload: d,
        timeToUpload: e,
      });
    }
    function t(a, b) {
      b.forEach(function (b) {
        return u(a, b);
      });
    }
    function u(a, b) {
      b.state === d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_DONE
        ? d("ReactComposerPhotoActions").removePhoto(a, b.photoID, b.id)
        : v(a, b.id);
    }
    function v(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerMediaUploadActionType").MEDIA_UPLOAD_REMOVE,
        uploadID: b,
      });
    }
    function w(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerMediaUploadActionType").MEDIA_UPLOAD_MOVED,
        from: b,
        to: d,
      });
    }
    function x(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerMediaUploadActionType")
          .PHOTO_UPLOAD_RESIZER_UNAVAILABLE,
      });
    }
    function y(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        method: d,
        numPhotos: b,
        type: c("ReactComposerMediaUploadActionType").PHOTOS_SELECT,
      });
    }
    function z(a, b) {
      c("ReactComposerDispatcher").dispatch({ composerID: a, type: b });
    }
    function A(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        mediaIDs: b,
        type: c("ReactComposerMediaUploadActionType").REORDER_MEDIAS,
      });
    }
    function B(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        medias: b,
        type: c("ReactComposerMediaUploadActionType").PREFILL_MEDIAS,
      });
    }
    function C(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerMediaUploadActionType").VIDEO_SET_THUMBNAIL,
        thumbSrc: d,
        uploadID: b,
      });
    }
    function D(a, b, d, e) {
      c("ReactComposerDispatcher").dispatch({
        type: c("ReactComposerMediaUploadActionType").PHOTO_ADD_UPLOAD,
        composerID: a,
        index: b,
        photo: e,
        upload: d,
      });
    }
    function E(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerMediaUploadActionType").PHOTO_SET_THUMBNAIL,
        thumbSrc: d,
        uploadID: b,
      });
    }
    function F(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerMediaUploadActionType").VIDEOS_HIDDEN,
      });
    }
    function G(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerMediaUploadActionType").VIDEOS_SHOWN,
      });
    }
    g.enqueue = a;
    g.startResizing = e;
    g.progressResizing = f;
    g.doneResizing = h;
    g.failResizing = i;
    g.doneSphericalCheck = j;
    g.failSphericalCheck = k;
    g.videoMetadataParsed = l;
    g.saveVideoInPagesComposer = m;
    g.startUploading = n;
    g.progressUploading = o;
    g.isSpherical = p;
    g.doneUploading = q;
    g.doneUploadingExtra = r;
    g.failUploading = s;
    g.removeAllPhotoUploads = t;
    g.removePhotoAndPhotoUpload = u;
    g.removeMediaUpload = v;
    g.mediaMoved = w;
    g.resizerUnavailable = x;
    g.photosSelect = y;
    g.retryMediaUpload = z;
    g.reorderMedias = A;
    g.prefillMedias = B;
    g.setVideoThumbnail = C;
    g.addPhotoUpload = D;
    g.setPhotoThumbnail = E;
    g.hideVideos = F;
    g.showVideos = G;
  },
  98
);
__d(
  "PhotoEditorSaveStates",
  ["requireWeak"],
  function (a, b, c, d, e, f, g) {
    var h;
    c("requireWeak")("PhotoEditorGraphic", function (a) {
      h = a.Sticker;
    });
    var i = new Map(),
      j = new Map();
    function a(a, b) {
      i.set(a, b);
    }
    function b(a) {
      return i.get(a);
    }
    function d(a, b) {
      j.set(a, b);
    }
    function e(a) {
      return j.get(a);
    }
    function f(a) {
      return i.get(a)
        ? i.get(a).graphics.filter(function (a) {
            return h && a.type === h;
          }).length
        : 0;
    }
    g.setState = a;
    g.getState = b;
    g.setLoggingData = d;
    g.getLoggingData = e;
    g.getTotalNumOfStickersOnPhoto = f;
  },
  98
);
__d(
  "ReactComposerPhotoUpload",
  ["immutable"],
  function (a, b, c, d, e, f, g) {
    a = c("immutable").Record({
      error: {},
      filename: null,
      fileSize: null,
      fileUpload: null,
      fileURL: null,
      height: null,
      id: null,
      mediaType: null,
      originalPhotoID: null,
      photoID: null,
      progress: null,
      useRealProgressPercentage: !1,
      useProgressLinearity: null,
      useProgressTransformX: null,
      state: null,
      thumbSrc: null,
      width: null,
      xyTags: [],
      videoMetadata: null,
      stickyUploadItemID: null,
      canShowSphericalSingletonNux: !1,
      flatPhotoID: null,
      sphericalImage: null,
      isSpherical: !1,
      isSphericalVideo: !1,
      projectionType: null,
      sphericalPhotoID: null,
      useLocalSphericalImage: !1,
      isFromPrefill: !1,
      holidayCardID: null,
    });
    g["default"] = a;
  },
  98
);
__d(
  "StickyUploadBootloader",
  ["Bootloader", "Promise", "promiseDone"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = null,
      j = null;
    function a(a) {
      i ||
        (i = new (h || (h = b("Promise")))(function (a) {
          return c("Bootloader").loadModules(
            ["StickyUploadAPI"],
            function (b) {
              (j = b), a(b);
            },
            "StickyUploadBootloader"
          );
        })),
        a && c("promiseDone")(i.then(a));
    }
    function d() {
      return !!i;
    }
    function e() {
      return j;
    }
    g.loadAPI = a;
    g.hasStartedLoadingAPI = d;
    g.getAPI = e;
  },
  98
);
__d(
  "VideoComposerDispatchers",
  ["ExplicitRegistrationReactDispatcher"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = "DEFAULT_INSTANCE",
      i = {};
    function a(a) {
      if (i[a] != null) return i[a];
      var b = new (c("ExplicitRegistrationReactDispatcher"))({ strict: !0 });
      i[a] = b;
      return b;
    }
    function b(a) {
      a = a != null && a.trim() !== "" ? a : h;
      if (!i[a])
        throw new Error("Dispatcher not found for video composer ID: " + a);
      return i[a];
    }
    function d() {
      i = {};
    }
    a(h);
    g.DEFAULT_VIDEO_COMPOSER_ID = h;
    g.createNewDispatcher = a;
    g.get = b;
    g.clearAll = d;
  },
  98
);
__d(
  "ReactComposerMediaUploadStore",
  [
    "invariant",
    "PhotoEditorSaveStates",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "ReactComposerDispatcher",
    "ReactComposerMediaUploadActionType",
    "ReactComposerMediaUploadType",
    "ReactComposerOptimisticPostingActionType",
    "ReactComposerPhotoActionType",
    "ReactComposerPhotoStore",
    "ReactComposerPhotoUpload",
    "ReactComposerPhotoUploadState",
    "ReactComposerStoreBase",
    "ReactComposerVideoXUploader",
    "StickyUploadBootloader",
    "VideoComposerDispatchers",
    "ifRequired",
    "immutable",
  ],
  function (a, b, c, d, e, f, g, h) {
    var i = {};
    for (a in c("ReactComposerMediaUploadActionType"))
      Object.prototype.hasOwnProperty.call(
        c("ReactComposerMediaUploadActionType"),
        a
      ) &&
        (i[c("ReactComposerMediaUploadActionType")[a]] = c(
          "ReactComposerMediaUploadActionType"
        )[a]);
    b = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, e;
        b =
          a.call(
            this,
            function () {
              return {
                removedIDs: c("immutable").Set(),
                uploads: c("immutable").List(),
                uploadsByID: c("immutable").Map(),
                videoUploader: null,
                hideVideos: !1,
                stickyUploadCollectionID: null,
              };
            },
            function (a) {
              if (e && e.$ReactComposerMediaUploadStore1(a)) return;
              switch (a.type) {
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_ENQUEUED:
                case c("ReactComposerMediaUploadActionType")
                  .VIDEO_UPLOAD_ENQUEUED:
                  e && e.$ReactComposerMediaUploadStore2(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .VIDEO_UPLOAD_METADATA_PARSED:
                  e && e.$ReactComposerMediaUploadStore3(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_RESIZE_STARTED:
                  e && e.$ReactComposerMediaUploadStore4(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_RESIZE_PROGRESS:
                  e && e.$ReactComposerMediaUploadStore5(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_RESIZE_DONE:
                  e &&
                    e.$ReactComposerMediaUploadStore6(
                      a,
                      d("ReactComposerPhotoUploadState")
                        .PHOTO_UPLOAD_RESIZE_DONE
                    );
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_RESIZE_FAILED:
                  e &&
                    e.$ReactComposerMediaUploadStore6(
                      a,
                      d("ReactComposerPhotoUploadState")
                        .PHOTO_UPLOAD_RESIZE_FAILED
                    );
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_UPLOADING:
                case c("ReactComposerMediaUploadActionType")
                  .VIDEO_UPLOAD_UPLOADING:
                  e && e.$ReactComposerMediaUploadStore7(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_IS_SPHERICAL:
                  e && e.$ReactComposerMediaUploadStore8(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .VIDEO_SET_THUMBNAIL:
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_SET_THUMBNAIL:
                  e && e.$ReactComposerMediaUploadStore9(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .MEDIA_UPLOAD_PROGRESS:
                  e && e.$ReactComposerMediaUploadStore5(a);
                  break;
                case c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_DONE:
                case c("ReactComposerMediaUploadActionType").VIDEO_UPLOAD_DONE:
                  c("ReactComposerDispatcher").waitFor([
                    c("ReactComposerPhotoStore").getDispatchToken(),
                  ]);
                  e && e.$ReactComposerMediaUploadStore10(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .SAVE_VIDEO_IN_PAGES_COMPOSER:
                  e && e.$ReactComposerMediaUploadStore11(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_EXTRA_DONE:
                  c("ReactComposerDispatcher").waitFor([
                    c("ReactComposerPhotoStore").getDispatchToken(),
                  ]);
                  e && e.$ReactComposerMediaUploadStore12(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_FAILED:
                case c("ReactComposerMediaUploadActionType")
                  .VIDEO_UPLOAD_FAILED:
                  e && e.$ReactComposerMediaUploadStore13(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .MEDIA_UPLOAD_REMOVE:
                case c("ReactComposerPhotoActionType").PHOTO_REMOVE:
                  e && e.$ReactComposerMediaUploadStore14(a);
                  break;
                case c("ReactComposerMediaUploadActionType").MEDIA_UPLOAD_MOVED:
                  e && e.$ReactComposerMediaUploadStore15(a);
                  break;
                case c("ReactComposerMediaUploadActionType").PREFILL_MEDIAS:
                  e && e.$ReactComposerMediaUploadStore16(a);
                  break;
                case c("ReactComposerMediaUploadActionType").REORDER_MEDIAS:
                  e && e.$ReactComposerMediaUploadStore17(a);
                  break;
                case c("ReactComposerMediaUploadActionType").PHOTO_ADD_UPLOAD:
                  e && e.$ReactComposerMediaUploadStore18(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .SPHERICAL_PHOTO_CHECK_DONE:
                  e && e.$ReactComposerMediaUploadStore19(a);
                  break;
                case c("ReactComposerMediaUploadActionType").VIDEOS_HIDDEN:
                  e && e.$ReactComposerMediaUploadStore20(a);
                  break;
                case c("ReactComposerMediaUploadActionType").VIDEOS_SHOWN:
                  e && e.$ReactComposerMediaUploadStore21(a);
                  break;
                case c("ReactComposerOptimisticPostingActionType")
                  .START_OPTIMISTICALLY_POSTING:
                  e && e.$ReactComposerMediaUploadStore22(a);
                  break;
                default:
              }
            }
          ) || this;
        e = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.getMediaUploadExists = function (a, b) {
        a = this.getComposerData(a);
        return a.uploadsByID.get(b) !== void 0;
      };
      e.getMediaUpload = function (a, b) {
        return this.$ReactComposerMediaUploadStore23(
          this.getComposerData(a),
          b
        );
      };
      e.getUploadIndex = function (a, b) {
        return this.$ReactComposerMediaUploadStore24(
          this.getComposerData(a),
          b
        );
      };
      e.getUploads = function (a) {
        var b = this.getComposerData(a);
        if (b.hideVideos)
          return b.uploads.filter(function (a) {
            return a.mediaType !== d("ReactComposerMediaUploadType").VIDEO;
          });
        else return this.getComposerData(a).uploads;
      };
      e.getPhotos = function (a) {
        a = this.getComposerData(a);
        return a.uploads.filter(function (a) {
          return a.mediaType !== d("ReactComposerMediaUploadType").VIDEO;
        });
      };
      e.getVideos = function (a) {
        a = this.getComposerData(a);
        return a.uploads.filter(function (a) {
          return a.mediaType === d("ReactComposerMediaUploadType").VIDEO;
        });
      };
      e.getUploadsOfType = function (a, b) {
        return this.getUploads(a).filter(function (a) {
          return a.mediaType === b;
        });
      };
      e.getUploadsCount = function (a, b) {
        return !b
          ? this.getComposerData(a).uploads.size
          : this.getComposerData(a).uploads.filter(function (a) {
              return a.mediaType === b;
            }).size;
      };
      e.getNonPrefillVideoUploadsCount = function (a) {
        return this.getUploadsOfType(
          a,
          d("ReactComposerMediaUploadType").VIDEO
        ).filter(function (a) {
          return !a.isFromPrefill;
        }).size;
      };
      e.getSphericalPhotoCount = function (a) {
        return this.getUploadsOfType(
          a,
          d("ReactComposerMediaUploadType").PHOTO
        ).filter(function (a) {
          return a.isSpherical;
        }).size;
      };
      e.getNonsphericalPhotoCount = function (a) {
        return this.getUploadsOfType(
          a,
          d("ReactComposerMediaUploadType").PHOTO
        ).filter(function (a) {
          return !a.isSpherical;
        }).size;
      };
      e.getHasUploadBeenRemoved = function (a, b) {
        a = this.getComposerData(a);
        return a.removedIDs.has(b);
      };
      e.isUploading = function (a) {
        return this.getUploads(a).some(function (a) {
          return (
            a.state !==
              d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_RESIZE_FAILED &&
            a.state !== d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_DONE &&
            a.state !== d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_FAILED
          );
        });
      };
      e.getTotalNumberOfStickersOnPhotos = function (a) {
        var b = 0;
        this.getUploads(a).forEach(function (a) {
          a = a.get("originalPhotoID");
          a &&
            (b += d("PhotoEditorSaveStates").getTotalNumOfStickersOnPhoto(a));
        });
        return b;
      };
      e.getVideoUploader = function (a, b, d) {
        d === void 0 && (d = !1);
        var e = this.getComposerData(a);
        if (!e.videoUploader) {
          a = new (c("ReactComposerVideoXUploader"))({
            composerID: a,
            uploaderParams: b,
            isPageAdminVideoUpload: d,
          });
          e.videoUploader = a;
        }
        return e.videoUploader;
      };
      e.$ReactComposerMediaUploadStore2 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "mediaType",
          "uploadID",
          "filename",
          "fileURL",
          "index",
          "xyTags",
          "isSpherical",
        ]);
        var b = a[0],
          e = a[1],
          f = a[2],
          g = a[3],
          h = a[4],
          i = a[5],
          j = a[6];
        a = a[7];
        e === d("ReactComposerMediaUploadType").VIDEO &&
          this.$ReactComposerMediaUploadStore25(b, f, g);
        this.$ReactComposerMediaUploadStore26(
          b,
          i,
          new (c("ReactComposerPhotoUpload"))({
            id: f,
            mediaType: e,
            state: d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_ENQUEUED,
            filename: g,
            fileURL: h,
            xyTags: j,
            isSpherical: a,
          })
        );
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore3 = function (a) {
        a = this.validateAction(a, ["composerID", "uploadID", "metadata"]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = this.getComposerData(b);
        this.$ReactComposerMediaUploadStore27(a, c, function (a) {
          return a.withMutations(function (a) {
            return a.set("videoMetadata", d);
          });
        });
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore4 = function (a) {
        a = this.validateAction(a, ["composerID", "uploadID"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        this.$ReactComposerMediaUploadStore27(c, a, function (a) {
          return a.withMutations(function (a) {
            return a
              .set(
                "state",
                d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_RESIZE_STARTED
              )
              .set("progress", 0);
          });
        });
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore7 = function (a) {
        a = this.validateAction(a, ["composerID", "uploadID", "fileUpload"]);
        var b = a[0],
          c = a[1],
          e = a[2];
        a = this.getComposerData(b);
        var f = e && e.getFile && e.getFile().size;
        this.$ReactComposerMediaUploadStore27(a, c, function (a) {
          return a.withMutations(function (a) {
            return a
              .set(
                "state",
                d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_UPLOADING
              )
              .set("progress", 0)
              .set("fileUpload", e)
              .set("fileSize", f || null);
          });
        });
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore5 = function (a) {
        var b = this.validateAction(a, ["composerID", "uploadID", "progress"]),
          c = b[0],
          d = b[1],
          e = b[2];
        b = this.getComposerData(c);
        var f = a.use_real_progress_percentage
            ? a.use_real_progress_percentage
            : !1,
          g = a.use_progress_linearity != null ? a.use_progress_linearity : 0,
          h =
            a.use_progress_transform_x != null ? a.use_progress_transform_x : 0;
        this.$ReactComposerMediaUploadStore27(b, d, function (a) {
          return a
            .set("progress", e)
            .set("useRealProgressPercentage", f)
            .set("useProgressLinearity", g)
            .set("useProgressTransformX", h);
        });
        this.emitChange(c);
      };
      e.$ReactComposerMediaUploadStore11 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "mediaType",
          "videoID",
          "uploadID",
          "filename",
          "videoMetadata",
          "fileURL",
          "index",
          "xyTags",
          "isSpherical",
        ]);
        var b = a[0],
          e = a[1],
          f = a[2],
          g = a[3],
          h = a[4],
          i = a[5],
          j = a[6],
          k = a[7],
          l = a[8];
        a = a[9];
        this.$ReactComposerMediaUploadStore26(
          b,
          k,
          new (c("ReactComposerPhotoUpload"))({
            id: g,
            mediaType: e,
            state: d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_ENQUEUED,
            filename: h,
            fileURL: j,
            xyTags: l,
            isSpherical: a,
          })
        );
        k = this.getComposerData(b);
        this.$ReactComposerMediaUploadStore27(k, g, function (a) {
          return a.withMutations(function (a) {
            return a.set("videoMetadata", i);
          });
        });
        this.$ReactComposerMediaUploadStore10({
          composerID: b,
          photoID: f,
          uploadID: g,
        });
        c("ifRequired")("VideoComposerActions", function (a) {
          a.minimizeDialog(
            d("VideoComposerDispatchers").DEFAULT_VIDEO_COMPOSER_ID
          );
        });
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore10 = function (a) {
        var b = this.validateAction(a, ["composerID", "uploadID", "photoID"]),
          c = b[0],
          e = b[1],
          f = b[2];
        b = this.getComposerData(c);
        this.$ReactComposerMediaUploadStore27(b, e, function (b) {
          return b.withMutations(function (b) {
            return b
              .set(
                "state",
                d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_DONE
              )
              .set("photoID", f)
              .set("sphericalPhotoID", a.sphericalPhotoID)
              .set("originalPhotoID", a.originalPhotoID || f)
              .set("progress", 100)
              .set("isSphericalVideo", !!a.isSphericalVideo)
              .remove("fileUpload");
          });
        });
        a.isSpherical ||
          this.$ReactComposerMediaUploadStore27(b, e, function (a) {
            return a.set("isSpherical", !1);
          });
        this.emitChange(c);
      };
      e.$ReactComposerMediaUploadStore12 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "uploadID",
          "photoID",
          "isSpherical",
        ]);
        var b = a[0],
          e = a[1],
          f = a[2];
        a = a[3];
        var g = this.getUploadsCount(b);
        this.$ReactComposerMediaUploadStore26(
          b,
          g,
          new (c("ReactComposerPhotoUpload"))({
            id: e,
            photoID: f,
            mediaType: d("ReactComposerMediaUploadType").PHOTO,
            originalPhotoID: f,
            state: d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_DONE,
            isSpherical: a,
          })
        );
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore8 = function (a) {
        var b = this.validateAction(a, [
            "composerID",
            "uploadID",
            "isSpherical",
          ]),
          c = b[0],
          d = b[1],
          e = b[2];
        this.$ReactComposerMediaUploadStore27(
          this.getComposerData(c),
          d,
          function (b) {
            return b.withMutations(function (b) {
              return b
                .set("isSpherical", e)
                .set("projectionType", a.projectionType);
            });
          }
        );
      };
      e.$ReactComposerMediaUploadStore13 = function (a) {
        var b = this.validateAction(a, ["composerID", "uploadID"]),
          c = b[0];
        b = b[1];
        var e = this.getComposerData(c);
        this.$ReactComposerMediaUploadStore27(e, b, function (b) {
          return b.withMutations(function (b) {
            return b
              .set(
                "state",
                d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_FAILED
              )
              .set("error", a.error);
          });
        });
        this.emitChange(c);
      };
      e.$ReactComposerMediaUploadStore14 = function (a) {
        a = this.validateAction(a, ["composerID", "uploadID"]);
        var b = a[0];
        a = a[1];
        var e = this.getComposerData(b),
          f = this.$ReactComposerMediaUploadStore24(e, a),
          g = e.uploads.get(f);
        if (g.mediaType == d("ReactComposerMediaUploadType").VIDEO) {
          if (
            g.state ===
            d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_UPLOADING
          )
            e.videoUploader.cancelUpload(a);
          else {
            if (!e.videoUploader) {
              var i = c("ReactComposerAttachmentStore").getAttachmentsConfig(
                b,
                c("ReactComposerAttachmentType").MEDIA
              );
              i || h(0, 590);
              this.getVideoUploader(b, i.videoUploadParams);
            }
            e.videoUploader.deleteUpload(a);
          }
          d("StickyUploadBootloader").hasStartedLoadingAPI() &&
            d("StickyUploadBootloader").loadAPI(function (a) {
              if (!g.stickyUploadItemID) return;
              a.deleteItem(g.stickyUploadItemID);
            });
        }
        e.uploads = e.uploads["delete"](f);
        e.uploadsByID = e.uploadsByID["delete"](a);
        for (i = f; i < e.uploads.size; i++) {
          f = e.uploads.get(i).id;
          e.uploadsByID = e.uploadsByID.set(f, i);
        }
        e.removedIDs = e.removedIDs.add(a);
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore9 = function (a) {
        a = this.validateAction(a, ["composerID", "uploadID", "thumbSrc"]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = this.getComposerData(b);
        this.$ReactComposerMediaUploadStore27(a, c, function (a) {
          return a.set("thumbSrc", d);
        });
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore6 = function (a, b) {
        a = this.validateAction(a, ["composerID", "uploadID"]);
        var c = a[0];
        a = a[1];
        this.$ReactComposerMediaUploadStore28(c, a, b);
        this.emitChange(c);
      };
      e.$ReactComposerMediaUploadStore15 = function (a) {
        a = this.validateAction(a, ["composerID", "from", "to"]);
        var b = a[0],
          c = a[1];
        a = a[2];
        var d = this.getComposerData(b);
        d.uploads = d.uploads.splice(c, 1).splice(a, 0, d.uploads.get(c));
        d.uploadsByID = d.uploads
          .groupBy(function (a, b) {
            return b;
          })
          .toMap()
          .map(function (a) {
            return a.first().id;
          })
          .flip();
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore17 = function (a) {
        var b = this;
        a = this.validateAction(a, ["composerID", "mediaIDs"]);
        var c = a[0];
        a = a[1];
        var d = this.getComposerData(c);
        d.uploads = a.map(function (a) {
          return b.$ReactComposerMediaUploadStore23(d, a);
        });
        d.uploadsByID = d.uploads
          .groupBy(function (a, b) {
            return b;
          })
          .toMap()
          .map(function (a) {
            return a.first().id;
          })
          .flip();
        this.emitChange(c);
      };
      e.$ReactComposerMediaUploadStore16 = function (a) {
        var b = this;
        a = this.validateAction(a, ["composerID", "medias"]);
        var e = a[0];
        a = a[1];
        a.forEach(function (a, f) {
          var g = {
            id: a.uploadID,
            photoID: a.photoID,
            mediaType: a.mediaType,
            originalPhotoID: a.photoID,
            state: d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_DONE,
            thumbSrc: a.thumbSrc,
            fileURL: a.fileURL || a.imageSrc,
            filename: a.filename,
            isSpherical: a.isSpherical,
            height: a.height,
            width: a.width,
            isFromPrefill: !0,
            holidayCardID: a.holidayCardID,
          };
          a.mediaType == d("ReactComposerMediaUploadType").VIDEO &&
            a.duration &&
            (g.videoMetadata = { format: { duration: a.duration } });
          b.$ReactComposerMediaUploadStore26(
            e,
            f,
            new (c("ReactComposerPhotoUpload"))(g)
          );
        });
        this.emitChange(e);
      };
      e.$ReactComposerMediaUploadStore18 = function (a) {
        a = this.validateAction(a, ["composerID", "index", "upload"]);
        var b = a[0],
          c = a[1];
        a = a[2];
        var d = this.getComposerData(b);
        d.uploads = d.uploads.splice(c, 0, a);
        for (a = c; a < d.uploads.size; a++) {
          c = d.uploads.get(a).id;
          d.uploadsByID = d.uploadsByID.set(c, a);
        }
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore19 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "uploadID",
          "sphericalImage",
          "useLocalSphericalImage",
        ]);
        var b = a[0],
          c = a[1],
          d = a[2],
          e = a[3];
        a = this.getComposerData(b);
        this.$ReactComposerMediaUploadStore27(a, c, function (a) {
          return a.withMutations(function (a) {
            return a.set("sphericalImage", d).set("useLocalSphericalImage", e);
          });
        });
        this.emitChange(b);
      };
      e.$ReactComposerMediaUploadStore20 = function (a) {
        a = this.validateAction(a, ["composerID"]);
        var b = this.getComposerData(a);
        b.hideVideos = !0;
        this.emitChange(a);
      };
      e.$ReactComposerMediaUploadStore21 = function (a) {
        a = this.validateAction(a, ["composerID"]);
        var b = this.getComposerData(a);
        b.hideVideos = !1;
        this.emitChange(a);
      };
      e.$ReactComposerMediaUploadStore22 = function (a) {
        var b = this,
          c = this.validateAction(a, ["composerID"]);
        d("StickyUploadBootloader").hasStartedLoadingAPI() &&
          d("StickyUploadBootloader").loadAPI(function (a) {
            var d = b.getComposerData(c);
            if (!d.stickyUploadCollectionID) return;
            a.setCollectionVisibility(d.stickyUploadCollectionID, !0);
          });
      };
      e.$ReactComposerMediaUploadStore28 = function (a, b, c) {
        a = this.getComposerData(a);
        this.$ReactComposerMediaUploadStore27(a, b, function (a) {
          return a.set("state", c);
        });
      };
      e.$ReactComposerMediaUploadStore27 = function (a, b, c) {
        b = this.$ReactComposerMediaUploadStore29(a, b);
        var d = b[0];
        b = b[1];
        a.uploads = a.uploads.set(b, c(d, b));
      };
      e.$ReactComposerMediaUploadStore29 = function (a, b) {
        b = this.$ReactComposerMediaUploadStore24(a, b);
        return [a.uploads.get(b), b];
      };
      e.$ReactComposerMediaUploadStore24 = function (a, b) {
        a = a.uploadsByID.get(b);
        if (a === void 0)
          throw new Error("Upload " + b + " hasn't been registered");
        return a;
      };
      e.$ReactComposerMediaUploadStore23 = function (a, b) {
        b = this.$ReactComposerMediaUploadStore24(a, b);
        return a.uploads.get(b);
      };
      e.$ReactComposerMediaUploadStore1 = function (a) {
        if (i[a.type]) {
          var b = a.composerID;
          a = a.uploadID;
          return a == null ? !1 : this.getHasUploadBeenRemoved(b, a);
        }
        return !1;
      };
      e.$ReactComposerMediaUploadStore25 = function (a, b, c) {
        var e = this;
        d("StickyUploadBootloader").loadAPI(function (d) {
          var f = e.getComposerData(a);
          f.stickyUploadCollectionID ||
            (f.stickyUploadCollectionID = d.createCollection(!1));
          var g = d.registerItem(f.stickyUploadCollectionID, c);
          e.$ReactComposerMediaUploadStore27(f, b, function (a) {
            return a.set("stickyUploadItemID", g);
          });
        });
      };
      e.$ReactComposerMediaUploadStore26 = function (a, b, c) {
        var d = this.getComposerData(a);
        d.uploads = d.uploads.splice(b, 0, c);
        for (b = b; b < d.uploads.size; b++) {
          var e = d.uploads.get(b).id;
          d.uploadsByID = d.uploadsByID.set(e, b);
        }
        this.$ReactComposerMediaUploadStore30(a, c);
      };
      e.$ReactComposerMediaUploadStore30 = function (a, b) {
        var c = this;
        if (b.mediaType == d("ReactComposerMediaUploadType").PHOTO) {
          var e = new Image();
          e.onload = function () {
            var d = c.getComposerData(a);
            c.$ReactComposerMediaUploadStore27(d, b.id, function (a) {
              return a.withMutations(function (a) {
                return a.set("height", e.height).set("width", e.width);
              });
            });
            c.emitChange(a);
          };
          e.src = b.fileURL;
        } else if (b.mediaType == d("ReactComposerMediaUploadType").VIDEO) {
          var f = document.createElement("video");
          f.onloadedmetadata = function () {
            var d = c.getComposerData(a);
            c.$ReactComposerMediaUploadStore27(d, b.id, function (a) {
              return a.withMutations(function (a) {
                return a
                  .set("height", f.videoHeight)
                  .set("width", f.videoWidth);
              });
            });
            c.emitChange(a);
          };
          f.src = b.fileURL;
        }
      };
      return b;
    })(c("ReactComposerStoreBase"));
    e = new b();
    g["default"] = e;
  },
  98
);
__d(
  "ReactComposerSlideshowActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        AUDIO_FILE_UPLOAD_ERROR: null,
        AUDIO_FILE_UPLOAD_STARTED: null,
        AUDIO_FILE_UPLOAD_SUCCESS: null,
        CLOSE_EDIT_SLIDESHOW_DIALOG: null,
        CREATE: null,
        DURATION_CHANGE: null,
        FORMAT_CHANGE: null,
        HIDE_SLIDESHOW_EDIT_FIELD: null,
        IMAGE_REMOVE: null,
        IMAGES_SELECT_CONFIRM: null,
        MUSIC_CATEGORY_SELECT: null,
        PREVIEW_STATE_CHANGE: null,
        REORDER_IMAGES: null,
        SELECT_TAB: null,
        SHOW_EDIT_SLIDESHOW_DIALOG: null,
        SHOW_SLIDESHOW_EDIT_FIELD: null,
        SET_STORYLINE_MOOD_FILES: null,
        STORYLINE_MOOD_CHANGE: null,
        STORYLINE_MOOD_DELETE: null,
        STORYLINE_MOOD_SOURCE_CHANGE: null,
        STORYLINE_MOOD_SOURCE_MAP_CHANGE: null,
        TOGGLE_SLIDESHOW_DIALOG: null,
        TRANSITION_CHANGE: null,
      },
      "ReactComposerSlideshowActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "SlideshowImageUtil",
  ["invariant", "SlideshowConstants", "immutable"],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    var i = "-",
      j = 24,
      k = 1.3,
      l = 10,
      m = 460,
      n = 32,
      o = 0.8;
    function a(a, b, d, e) {
      if (e && a) {
        e = Object.keys(a)[0];
        a = a[e];
        return {
          format: c("SlideshowConstants").formats.Original,
          topLeft: a[0],
          bottomRight: a[1],
        };
      }
      return r(
        { width: d.width ? d.width : 0, height: d.height ? d.height : 0 },
        { width: b.width, height: b.height }
      );
    }
    function b(a) {
      var b = a[0].width,
        c = a[0].height;
      for (var d = 0; d < a.length; d++) {
        var e = a[d];
        if (e.width !== b || e.height !== c) return !0;
      }
      return !1;
    }
    function p(a, b, c) {
      a = q(a, c);
      return (c = {}), (c[b] = a), c;
    }
    function d(a, b, d) {
      if (!a.size) return c("immutable").Map();
      var e = c("immutable").Map();
      switch (b) {
        case c("SlideshowConstants").formats.Original:
          var f = a.first();
          f = d.get(f.key);
          var g = f.height,
            h = f.width;
          a.forEach(function (a) {
            e = e.set(
              a.key,
              p(
                d.get(a.key),
                h + c("SlideshowConstants").SIZE_DELIMITER + g,
                h / g
              )
            );
          });
          break;
        case c("SlideshowConstants").formats.Wide:
          a.forEach(function (a) {
            e = e.set(
              a.key,
              p(d.get(a.key), b, c("SlideshowConstants").LANDSCAPE_ASPECT_RATIO)
            );
          });
          break;
        case c("SlideshowConstants").formats.Square:
          a.forEach(function (a) {
            e = e.set(
              a.key,
              p(d.get(a.key), b, c("SlideshowConstants").SQUARE_ASPECT_RATIO)
            );
          });
          break;
        case c("SlideshowConstants").formats.Vertical:
          a.forEach(function (a) {
            e = e.set(
              a.key,
              p(d.get(a.key), b, c("SlideshowConstants").VERTICAL_ASPECT_RATIO)
            );
          });
          break;
        default:
      }
      return e;
    }
    function q(a, b) {
      var c, d;
      a.width / b > a.height
        ? ((c = a.height), (d = a.height * b))
        : ((d = a.width), (c = a.width / b));
      b = (a.width - d) / 2;
      a = (a.height - c) / 2;
      var e = Math.floor(b) - b,
        f = Math.floor(a) - a;
      return [
        [b + e, a + f],
        [Math.round(b + d + e), Math.round(a + c + f)],
      ];
    }
    function e(a, b) {
      var d = b,
        e = b;
      if (a.length > 0) {
        a = a[0];
        a = Object.keys(a)[0];
        switch (a) {
          case c("SlideshowConstants").formats.Wide:
            d = b / c("SlideshowConstants").LANDSCAPE_ASPECT_RATIO;
            break;
          case c("SlideshowConstants").formats.Vertical:
            e = b * c("SlideshowConstants").VERTICAL_ASPECT_RATIO;
            break;
          case c("SlideshowConstants").formats.Square:
            break;
          default:
            b = a.split(c("SlideshowConstants").SIZE_DELIMITER);
            a = Number(b[0]);
            b = Number(b[1]);
            a > b
              ? (d = Math.floor((e * b) / a))
              : (e = Math.floor((d * a) / b));
            break;
        }
      }
      return { width: e, height: d };
    }
    function r(a, b) {
      b = b.width / b.height;
      a = q(a, b);
      a.length === 2 || h(0, 1043);
      return {
        format: c("SlideshowConstants").formats.Original,
        topLeft: a[0],
        bottomRight: a[1],
      };
    }
    function f(a) {
      a = q(a, 1);
      a.length === 2 || h(0, 1043);
      return {
        format: c("SlideshowConstants").formats.Square,
        topLeft: a[0],
        bottomRight: a[1],
      };
    }
    function s(a) {
      a = a.split(i);
      return a[1];
    }
    function t(a) {
      return Math.floor(j * a);
    }
    function u(a) {
      return a ? "bold" : "normal";
    }
    function v() {
      return k;
    }
    function w() {
      return o;
    }
    function x(a, b) {
      return a - n * b * 2 - l * b * 2;
    }
    function y(a) {
      return l * a;
    }
    function z(a) {
      return n * a;
    }
    function A(a) {
      a = Object.keys(a)[0];
      a = a.split(c("SlideshowConstants").SIZE_DELIMITER);
      var b = Number(a[0]);
      a = Number(a[1]);
      return B(b, a);
    }
    function B(a, b) {
      return Math.max(a / m, b / m);
    }
    function C(a, b, d) {
      a = Object.keys(a)[0];
      a = a.split(c("SlideshowConstants").SIZE_DELIMITER);
      var e = Number(a[0]);
      a = Number(a[1]);
      e = F(a, e, b, d);
      return [
        Math.floor(e.marginLeft),
        Math.floor(a - e.marginTop - e.textHeight),
        Math.ceil(e.marginLeft + e.textWidth),
        Math.ceil(a - e.marginTop),
      ];
    }
    function D(a, b, d) {
      a = Object.keys(a)[0];
      a = a.split(c("SlideshowConstants").SIZE_DELIMITER);
      var e = Number(a[0]);
      a = Number(a[1]);
      e = F(a, e, b, d);
      return [
        Math.floor(e.marginLeft),
        Math.floor(a - e.marginTop - e.textHeight),
        Math.ceil(e.marginLeft + e.textWidth),
        Math.ceil(a - e.marginTop),
      ];
    }
    function E(a) {
      if (!a) return null;
      a = a.replace("#", "");
      var b = parseInt(a.substring(0, 2), 16),
        c = parseInt(a.substring(2, 4), 16);
      a = parseInt(a.substring(4, 6), 16);
      return "rgba(" + b + "," + c + "," + a + "," + w() + ")";
    }
    function F(a, b, c, d) {
      var e = c.text_alignment.split(i),
        f = e[1];
      e = e[0];
      var g = t(d),
        h = x(b, d),
        j = x(a, d),
        k = document.createElement("div");
      k.textContent = c.textoverlay_content ? c.textoverlay_content : "";
      k.style.visibility = "hidden";
      k.style.display = "inline-block";
      k.style.wordWrap = "break-word";
      k.style.whiteSpace = "pre-wrap";
      k.style.fontFamily = c.font;
      k.style.fontWeight = u(c.bold);
      k.style.fontSize = g + "px";
      k.style.textAlign = f;
      k.style.maxWidth = h + "px";
      k.style.maxHeight = j + "px";
      k.style.lineHeight = v() * g + "px";
      k.style.padding = y(d) + "px";
      k.style.letterSpacing = "0.2px";
      document.body.appendChild(k);
      c = k.clientWidth;
      h = k.clientHeight;
      document.body.removeChild(k);
      j = n * d;
      g = n * d;
      k = b - n * d;
      var l = a - n * d;
      f == "center"
        ? (j = Math.min((b - c) / 2, k))
        : f == "right" && (j = Math.min(b - n * d - c, k));
      e == "center"
        ? (g = Math.min((a - h) / 2, l))
        : e == "bottom" && (g = Math.min(a - n * d - h, l));
      return { marginLeft: j, marginTop: g, textHeight: h, textWidth: c };
    }
    g.getCroppingSpec = a;
    g.shouldCropImages = b;
    g.getCrops = p;
    g.calculateCropsForFormat = d;
    g.calculateDefaultCoordinates = q;
    g.getPreviewBoxDimensions = e;
    g.getFullSizeImageBoxCroppingSpec = r;
    g.getDefaultCroppingSpec = f;
    g.getHorizontalAlignmentForAPI = s;
    g.getFontSize = t;
    g.getFontWeight = u;
    g.getLineHeight = v;
    g.getOpacity = w;
    g.getTextoverlayMaxEdge = x;
    g.getTextoverlayPadding = y;
    g.getTextoverlayMargin = z;
    g.getScaleMultiplierFromCrops = A;
    g.getScaleMultiplier = B;
    g.getOuterTextboxCoordinatesForAPI = C;
    g.getInnerTextboxCoordinatesForAPI = D;
    g.convertHexToRGBA = E;
    g.calculateTextboxCoordinates = F;
  },
  98
);
__d(
  "ReactComposerSelectedImagesStore",
  [
    "ReactComposerDispatcher",
    "ReactComposerMediaUploadActionType",
    "ReactComposerMediaUploadStore",
    "ReactComposerPhotoStore",
    "ReactComposerSlideshowActionType",
    "ReactComposerStoreBase",
    "SlideshowConstants",
    "SlideshowImageUtil",
    "mergeDeepInto",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(e, a);
      var b = e.prototype;
      b.$ReactComposerSelectedImagesStore1 = function (a, b, c) {
        if (a.isLoading) return {};
        a = d("SlideshowImageUtil").calculateDefaultCoordinates(
          { width: a.width, height: a.height },
          c
        );
        return (c = {}), (c[b] = a), c;
      };
      b.$ReactComposerSelectedImagesStore2 = function (a, b, c) {
        c = c;
        c || (c = this.getComposerData(a).format);
        return this.$ReactComposerSelectedImagesStore3(b, c);
      };
      b.$ReactComposerSelectedImagesStore3 = function (a, b) {
        var d = this;
        if (!a.length) return [];
        switch (b) {
          case c("SlideshowConstants").formats.Original:
            var e = a[0];
            return a.map(function (a) {
              return d.$ReactComposerSelectedImagesStore1(
                a,
                e.width + c("SlideshowConstants").SIZE_DELIMITER + e.height,
                e.width / e.height
              );
            });
          case c("SlideshowConstants").formats.Wide:
            return a.map(function (a) {
              return d.$ReactComposerSelectedImagesStore1(
                a,
                b,
                c("SlideshowConstants").LANDSCAPE_ASPECT_RATIO
              );
            });
          case c("SlideshowConstants").formats.Square:
            return a.map(function (a) {
              return d.$ReactComposerSelectedImagesStore1(
                a,
                b,
                c("SlideshowConstants").SQUARE_ASPECT_RATIO
              );
            });
          case c("SlideshowConstants").formats.Vertical:
            return a.map(function (a) {
              return d.$ReactComposerSelectedImagesStore1(
                a,
                b,
                c("SlideshowConstants").VERTICAL_ASPECT_RATIO
              );
            });
          default:
            return [];
        }
      };
      function e() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                selectedImages: [],
                imagesCrops: [],
                editState: null,
                format: c("SlideshowConstants").formats.Original,
                removedUploadIDs: [],
                addedUploadIDs: [],
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_ENQUEUED:
                  c("ReactComposerDispatcher").waitFor([
                    c("ReactComposerMediaUploadStore").getDispatchToken(),
                  ]);
                  d && d.$ReactComposerSelectedImagesStore4(a);
                  break;
                case c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_DONE:
                  c("ReactComposerDispatcher").waitFor([
                    c("ReactComposerPhotoStore").getDispatchToken(),
                  ]);
                  d && d.$ReactComposerSelectedImagesStore5(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .IMAGES_SELECT_CONFIRM:
                  d && d.$ReactComposerSelectedImagesStore6(a);
                  break;
                case c("ReactComposerSlideshowActionType").IMAGE_REMOVE:
                  d && d.$ReactComposerSelectedImagesStore7(a);
                  break;
                case c("ReactComposerSlideshowActionType").REORDER_IMAGES:
                  d && d.$ReactComposerSelectedImagesStore8(a);
                  break;
                case c("ReactComposerSlideshowActionType").FORMAT_CHANGE:
                  d && d.$ReactComposerSelectedImagesStore9(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .TOGGLE_SLIDESHOW_DIALOG:
                  d && d.$ReactComposerSelectedImagesStore10(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .HIDE_SLIDESHOW_EDIT_FIELD:
                  d && d.$ReactComposerSelectedImagesStore11(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .SHOW_EDIT_SLIDESHOW_DIALOG:
                  d && d.$ReactComposerSelectedImagesStore12(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .CLOSE_EDIT_SLIDESHOW_DIALOG:
                  d && d.$ReactComposerSelectedImagesStore13(a);
                  break;
                case c("ReactComposerSlideshowActionType").CREATE:
                  d && d.$ReactComposerSelectedImagesStore14(a);
                  break;
                default:
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      b.$ReactComposerSelectedImagesStore4 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a),
          d = c("ReactComposerMediaUploadStore").getUploads(a);
        d = this.addNewImagesFromPhotoUploads(
          d,
          b.selectedImages,
          b.removedUploadIDs
        );
        b.selectedImages = b.selectedImages.concat(d);
        b.editState !== null &&
          (b.addedUploadIDs = b.addedUploadIDs.concat(
            d.map(function (a) {
              return a.key;
            })
          ));
        this.emitChange(a);
      };
      b.$ReactComposerSelectedImagesStore5 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a),
          d = c("ReactComposerPhotoStore").getPhotos(a);
        b.selectedImages = this.replacePhotoUploadsFromPhotos(
          d,
          b.selectedImages
        );
        b.imagesCrops = this.$ReactComposerSelectedImagesStore2(
          a,
          b.selectedImages
        );
        this.emitChange(a);
      };
      b.$ReactComposerSelectedImagesStore11 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a);
        b.selectedImages = [];
        b.imagesCrops = [];
        this.emitChange(a);
      };
      b.$ReactComposerSelectedImagesStore10 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        a.shouldShowSlideshowDialog ||
          ((c.selectedImages = []), (c.imagesCrops = []));
        this.emitChange(b);
      };
      b.$ReactComposerSelectedImagesStore6 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.selectedImages = c.selectedImages.concat(a.selectedImages);
        c.imagesCrops = this.$ReactComposerSelectedImagesStore2(
          b,
          c.selectedImages
        );
        this.emitChange(b);
      };
      b.$ReactComposerSelectedImagesStore7 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.editState !== null && c.removedUploadIDs.push(a.removeImage.key);
        var d = c.selectedImages.filter(function (b) {
          return b.key !== a.removeImage.key;
        });
        c.selectedImages = d;
        c.imagesCrops = this.$ReactComposerSelectedImagesStore2(b, d);
        this.emitChange(b);
      };
      b.$ReactComposerSelectedImagesStore8 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        a = a.data;
        var d = a.fromIndex;
        a = a.toIndex;
        var e = c.selectedImages.slice(0),
          f = babelHelpers["extends"]({}, e[d]);
        e[d].remove = !0;
        e.splice(d > a ? a : a + 1, 0, f);
        e = e.filter(function (a) {
          return !a.remove;
        });
        c.selectedImages = e;
        c.imagesCrops = this.$ReactComposerSelectedImagesStore2(b, e);
        this.emitChange(b);
      };
      b.$ReactComposerSelectedImagesStore9 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.format = a.format;
        c.imagesCrops = this.$ReactComposerSelectedImagesStore2(
          b,
          c.selectedImages,
          a.format
        );
        this.emitChange(b);
      };
      b.$ReactComposerSelectedImagesStore12 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a),
          d = {};
        c("mergeDeepInto")(d, b);
        b.editState = d;
        this.emitChange(a);
      };
      b.$ReactComposerSelectedImagesStore13 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a),
          c = b.editState;
        b.selectedImages = c.selectedImages;
        b.imagesCrops = c.imagesCrops;
        b.format = c.format;
        b.editState = null;
        b.removedUploadIDs = [];
        b.addedUploadIDs = [];
        this.emitChange(a);
      };
      b.$ReactComposerSelectedImagesStore14 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a);
        b.editState = null;
        b.removedUploadIDs = [];
        b.addedUploadIDs = [];
        this.emitChange(a);
      };
      b.getImagesFromPhotoUploads = function (a) {
        var b = [];
        a.forEach(function (a) {
          b.push({
            height: null,
            isLoading: !0,
            key: a.id,
            url: null,
            width: null,
          });
        });
        return b;
      };
      b.addNewImagesFromPhotoUploads = function (a, b, c) {
        a = this.getImagesFromPhotoUploads(a);
        return a.filter(function (a) {
          var d = b.findIndex(function (b) {
              return b.key === a.key;
            }),
            e = c.findIndex(function (b) {
              return b === a.key;
            });
          return d === -1 && e === -1;
        });
      };
      b.replacePhotoUploadsFromPhotos = function (a, b) {
        return b.map(function (b) {
          var c = b,
            d = a.find(function (a) {
              return a.uploadID === b.key;
            });
          d != null &&
            (c = {
              height: d.height,
              isLoading: !1,
              key: d.uploadID,
              photoID: d.id,
              thumbSrc: d.thumbSrc,
              url: d.imageSrc,
              width: d.width,
            });
          return c;
        });
      };
      b.getPhotoIDs = function (a) {
        a = this.getComposerData(a);
        return a.selectedImages
          .map(function (a) {
            return a.photoID;
          })
          .slice(0, c("SlideshowConstants").max_photo_num);
      };
      b.getRemovedUploadIDs = function (a) {
        return this.getComposerData(a).removedUploadIDs;
      };
      b.getAddedUploadIDs = function (a) {
        return this.getComposerData(a).addedUploadIDs;
      };
      b.getSelectedImages = function (a) {
        return this.getComposerData(a).selectedImages;
      };
      b.getThumbnailSrc = function (a) {
        a = this.getComposerData(a).selectedImages;
        return a.length > 0 ? a[0].thumbSrc : null;
      };
      b.getImagesCrops = function (a) {
        return this.getComposerData(a).imagesCrops;
      };
      b.getNumberOfImages = function (a) {
        return Math.min(
          this.getComposerData(a).selectedImages.length,
          c("SlideshowConstants").max_photo_num
        );
      };
      b.getFormat = function (a) {
        return this.getComposerData(a).format;
      };
      return e;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerSlideshowActions",
  ["ReactComposerDispatcher", "ReactComposerSlideshowActionType"],
  function (a, b, c, d, e, f, g) {
    function a(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerSlideshowActionType").SHOW_SLIDESHOW_EDIT_FIELD,
      });
    }
    function b(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerSlideshowActionType").HIDE_SLIDESHOW_EDIT_FIELD,
      });
    }
    function d(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        entrypoint: b,
        shouldShowSlideshowDialog: !0,
        type: c("ReactComposerSlideshowActionType").TOGGLE_SLIDESHOW_DIALOG,
      });
    }
    function e(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        shouldShowSlideshowDialog: !1,
        type: c("ReactComposerSlideshowActionType").TOGGLE_SLIDESHOW_DIALOG,
      });
    }
    function f(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerSlideshowActionType").SHOW_EDIT_SLIDESHOW_DIALOG,
      });
    }
    function h(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerSlideshowActionType").CLOSE_EDIT_SLIDESHOW_DIALOG,
      });
    }
    function i(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        selectedImages: b,
        type: c("ReactComposerSlideshowActionType").IMAGES_SELECT_CONFIRM,
      });
    }
    function j(b, a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: b,
        removeImage: a,
        type: c("ReactComposerSlideshowActionType").IMAGE_REMOVE,
      });
    }
    function k(a, b, d) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        data: { fromIndex: b, toIndex: d },
        type: c("ReactComposerSlideshowActionType").REORDER_IMAGES,
      });
    }
    function l(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        selectedStorylineMood: b,
        type: c("ReactComposerSlideshowActionType").STORYLINE_MOOD_CHANGE,
      });
    }
    function m(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        selectedStorylineMood: b,
        type: c("ReactComposerSlideshowActionType").STORYLINE_MOOD_DELETE,
      });
    }
    function n(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        storylineMoodIDSource: b,
        type: c("ReactComposerSlideshowActionType")
          .STORYLINE_MOOD_SOURCE_CHANGE,
      });
    }
    function o(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        storylineMoodIDToSource: b,
        type: c("ReactComposerSlideshowActionType")
          .STORYLINE_MOOD_SOURCE_MAP_CHANGE,
      });
    }
    function p(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        transitionInMS: b,
        type: c("ReactComposerSlideshowActionType").TRANSITION_CHANGE,
      });
    }
    function q(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        durationInMS: b,
        shouldShowDurationWarning: !1,
        type: c("ReactComposerSlideshowActionType").DURATION_CHANGE,
      });
    }
    function r(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        durationInMS: b,
        shouldShowDurationWarning: !0,
        type: c("ReactComposerSlideshowActionType").DURATION_CHANGE,
      });
    }
    function s(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        storylineMoodFiles: b,
        type: c("ReactComposerSlideshowActionType").SET_STORYLINE_MOOD_FILES,
      });
    }
    function t(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerSlideshowActionType").CREATE,
      });
    }
    function u(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        format: b,
        type: c("ReactComposerSlideshowActionType").FORMAT_CHANGE,
      });
    }
    function v(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        tab: b,
        type: c("ReactComposerSlideshowActionType").SELECT_TAB,
      });
    }
    function w(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        selectedMusicCategory: b,
        type: c("ReactComposerSlideshowActionType").MUSIC_CATEGORY_SELECT,
      });
    }
    function x(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        isPreviewPlaying: b,
        type: c("ReactComposerSlideshowActionType").PREVIEW_STATE_CHANGE,
      });
    }
    function y(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerSlideshowActionType").AUDIO_FILE_UPLOAD_STARTED,
      });
    }
    function z(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerSlideshowActionType").AUDIO_FILE_UPLOAD_ERROR,
      });
    }
    function A(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        uploadedMood: b,
        type: c("ReactComposerSlideshowActionType").AUDIO_FILE_UPLOAD_SUCCESS,
      });
    }
    g.showSlideshowEditField = a;
    g.hideSlideshowEditField = b;
    g.showSlideshowDialog = d;
    g.closeSlideshowDialog = e;
    g.showEditSlideshowDialog = f;
    g.closeEditSlideshowDialog = h;
    g.selectImagesConfirm = i;
    g.removeImage = j;
    g.reorderImages = k;
    g.changeStorylineMoodFile = l;
    g.deleteStorylineMoodFile = m;
    g.changeStorylineMoodIDSource = n;
    g.changeStorylineMoodSourceMap = o;
    g.changeTransition = p;
    g.changeDuration = q;
    g.changeDurationBySystem = r;
    g.setStorylineMoodFiles = s;
    g.createSlideshow = t;
    g.changeFormat = u;
    g.selectTab = v;
    g.musicCategorySelect = w;
    g.previewStateChange = x;
    g.audioFileUploadStarted = y;
    g.audioFileUploadError = z;
    g.audioFileUploadSuccess = A;
  },
  98
);
__d(
  "SlideshowFlowTypes",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = {
      SETTINGS_TAB: "SETTINGS_TAB",
      MUSIC_TAB: "MUSIC_TAB",
      FRAMES_TAB: "FRAMES_TAB",
    };
    f.SlideshowTabKey = a;
  },
  66
);
__d(
  "ReactComposerSlideshowStore",
  [
    "ReactComposerSlideshowActionType",
    "ReactComposerStoreBase",
    "SlideshowConstants",
    "SlideshowFlowTypes",
    "mergeDeepInto",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, e;
        b =
          a.call(
            this,
            function () {
              return {
                durationInMS: 1e3,
                editState: null,
                isSlideshowSelected: !1,
                selectedTab:
                  d("SlideshowFlowTypes").SlideshowTabKey.SETTINGS_TAB,
                shouldShowDurationWarning: !1,
                shouldShowSlideshowDialog: !1,
                transitionInMS: c("SlideshowConstants").transitions.None,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerSlideshowActionType").CREATE:
                  e && e.$ReactComposerSlideshowStore1(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .SHOW_SLIDESHOW_EDIT_FIELD:
                  e && e.$ReactComposerSlideshowStore2(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .HIDE_SLIDESHOW_EDIT_FIELD:
                  e && e.$ReactComposerSlideshowStore3(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .TOGGLE_SLIDESHOW_DIALOG:
                  e && e.$ReactComposerSlideshowStore4(a);
                  break;
                case c("ReactComposerSlideshowActionType").TRANSITION_CHANGE:
                  e && e.$ReactComposerSlideshowStore5(a);
                  break;
                case c("ReactComposerSlideshowActionType").DURATION_CHANGE:
                  e && e.$ReactComposerSlideshowStore6(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .SHOW_EDIT_SLIDESHOW_DIALOG:
                  e && e.$ReactComposerSlideshowStore7(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .CLOSE_EDIT_SLIDESHOW_DIALOG:
                  e && e.$ReactComposerSlideshowStore8(a);
                  break;
                case c("ReactComposerSlideshowActionType").SELECT_TAB:
                  e && e.$ReactComposerSlideshowStore9(a);
                  break;
                default:
                  break;
              }
            }
          ) || this;
        e = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.$ReactComposerSlideshowStore1 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a);
        b.isSlideshowSelected = !0;
        b.shouldShowSlideshowDialog = !1;
        b.editState = null;
        this.emitChange(a);
      };
      e.$ReactComposerSlideshowStore9 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.selectedTab = a.tab;
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowStore2 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a);
        b.isSlideshowSelected = !0;
        this.emitChange(a);
      };
      e.$ReactComposerSlideshowStore3 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a);
        b.isSlideshowSelected = !1;
        this.emitChange(a);
      };
      e.$ReactComposerSlideshowStore4 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.shouldShowSlideshowDialog = a.shouldShowSlideshowDialog;
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowStore5 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.transitionInMS = a.transitionInMS;
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowStore6 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.durationInMS = a.durationInMS;
        c.shouldShowDurationWarning = a.shouldShowDurationWarning;
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowStore7 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a),
          d = {};
        c("mergeDeepInto")(d, b);
        b.editState = d;
        b.shouldShowSlideshowDialog = !0;
        this.emitChange(a);
      };
      e.$ReactComposerSlideshowStore8 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a);
        b.shouldShowSlideshowDialog = !1;
        b.isSlideshowSelected = !0;
        var c = b.editState;
        b.durationInMS = c.durationInMS;
        b.transitionInMS = c.transitionInMS;
        b.editState = null;
        this.emitChange(a);
      };
      e.isSlideshowSelected = function (a) {
        return this.getComposerData(a).isSlideshowSelected;
      };
      e.isEditing = function (a) {
        return this.getComposerData(a).editState !== null;
      };
      e.shouldShowSlideshowDialog = function (a) {
        return this.getComposerData(a).shouldShowSlideshowDialog;
      };
      e.getDurationInMS = function (a) {
        return this.getComposerData(a).durationInMS;
      };
      e.getTotalLength = function (a, b) {
        return this.getDurationInMS(a) * b + this.getTransitionInMS(a) * b;
      };
      e.getTransitionInMS = function (a) {
        return this.getComposerData(a).transitionInMS;
      };
      e.getSelectedTab = function (a) {
        return this.getComposerData(a).selectedTab;
      };
      e.getShouldShowDurationWarning = function (a) {
        return this.getComposerData(a).shouldShowDurationWarning;
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "SlideshowAudioUtil",
  ["ix", "Image.react", "react"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = h || b("react");
    a = {
      getMusicCategoryGlyph: function (a) {
        switch (a) {
          case "All Tracks":
            return i.jsx(b("Image.react"), { src: g("129467") });
          case "User Uploaded":
            return i.jsx(b("Image.react"), { src: g("128769") });
          case "Recently Used":
            return i.jsx(b("Image.react"), { src: g("129053") });
          case "Energetic":
            return i.jsx(b("Image.react"), { src: g("128852") });
          case "Inspirational":
            return i.jsx(b("Image.react"), { src: g("128909") });
          case "Fun":
            return i.jsx(b("Image.react"), { src: g("129302") });
          case "Trustworthy":
            return i.jsx(b("Image.react"), { src: g("128881") });
          case "Modern":
            return i.jsx(b("Image.react"), { src: g("129337") });
          default:
            return null;
        }
      },
      storylineMoodCompare: function (a, b) {
        if (!a && !b) return !0;
        else if (!a || !b) return !1;
        return (
          a.fileName === b.fileName &&
          a.moodID === b.moodID &&
          JSON.stringify(a.categories) === JSON.stringify(b.categories)
        );
      },
    };
    e.exports = a;
  },
  null
);
__d(
  "XSlideshowShakrOAuthController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/slideshow/shakr/", {});
  },
  null
);
__d(
  "XSlideshowStorylineMoodAsyncController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/slideshow/storyline_mood/", {
      target_id: { type: "FBID" },
    });
  },
  null
);
__d(
  "XSlideshowStorylineMoodDeleteController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create(
      "/slideshow/storyline_mood/delete/",
      {}
    );
  },
  null
);
__d(
  "XSlideshowStorylineMoodUploadController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create(
      "/slideshow/storyline_mood/upload/",
      {}
    );
  },
  null
);
__d(
  "XSlideshowVideoFrameImagesAsyncController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/slideshow/frame_images/", {
      request_type: { type: "Enum", enumType: 0 },
      video_id: { type: "FBID" },
    });
  },
  null
);
__d(
  "SlideshowDataManager",
  [
    "AsyncRequest",
    "ThisControllerNoLongerExists",
    "XSlideshowShakrOAuthController",
    "XSlideshowStorylineMoodAsyncController",
    "XSlideshowStorylineMoodDeleteController",
    "XSlideshowStorylineMoodUploadController",
    "XSlideshowVideoFrameImagesAsyncController",
    "immutable",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a() {}
      var b = a.prototype;
      b.fetchStorylineMoodSource = function (a, b, d) {
        var e = c("XSlideshowStorylineMoodAsyncController")
          .getURIBuilder()
          .getURI();
        new (c("AsyncRequest"))()
          .setURI(e)
          .setData({ storyline_mood_id: a, total_length: b })
          .setMethod("POST")
          .setHandler(function (a) {
            return d(a.payload);
          })
          .send();
      };
      b.fetchStorylineMoodFiles = function (a, b) {
        var d = this,
          e = c("XSlideshowStorylineMoodAsyncController")
            .getURIBuilder()
            .getURI();
        new (c("AsyncRequest"))()
          .setURI(e)
          .setMethod("GET")
          .setData({ target_id: b })
          .setReadOnly(!0)
          .setHandler(function (b) {
            return a(d.getStorylineMoodFiles(b.payload));
          })
          .send();
      };
      b.getStorylineMoodFiles = function (a) {
        var b = [];
        Object.keys(a).forEach(function (c) {
          b.push({
            moodID: c,
            fileName: a[c].fileName,
            categories: a[c].categories,
            source: null,
          });
        });
        return c("immutable").List(b);
      };
      b.scheduleFrameImagesAsyncJob = function (a) {
        var b = c("XSlideshowVideoFrameImagesAsyncController")
          .getURIBuilder()
          .getURI();
        new (c("AsyncRequest"))()
          .setURI(b)
          .setData({ request_type: 0, video_id: a })
          .setMethod("POST")
          .send();
      };
      b.fetchVideoFrameImages = function (a, b) {
        var d = c("XSlideshowVideoFrameImagesAsyncController")
          .getURIBuilder()
          .getURI();
        new (c("AsyncRequest"))()
          .setURI(d)
          .setData({ request_type: 1, video_id: b })
          .setMethod("POST")
          .setHandler(function (b) {
            return a(b.payload);
          })
          .send();
      };
      b.uploadAudioFile = function (a, b, d, e) {
        var f = this;
        if (!a || !a.input || !a.input.files.length) return;
        var g = c("XSlideshowStorylineMoodUploadController")
            .getURIBuilder()
            .getURI(),
          h = new FormData();
        h.append("audio_file", a.input.files[0]);
        h.append("target_id", b);
        new (c("AsyncRequest"))()
          .setURI(g)
          .setRawData(h)
          .setMethod("POST")
          .setErrorHandler(function (a) {
            return e();
          })
          .setHandler(function (a) {
            return f.$1(a.payload, d, e);
          })
          .send();
        a.clear();
      };
      b.$1 = function (a, b, c) {
        a.success
          ? b({
              moodID: a.moodID,
              fileName: a.fileName,
              categories: a.categories,
              source: null,
            })
          : c();
      };
      b.deleteAudioFile = function (a) {
        var b = c("XSlideshowStorylineMoodDeleteController")
          .getURIBuilder()
          .getURI();
        new (c("AsyncRequest"))()
          .setURI(b)
          .setData({ mood_id: a })
          .setMethod("POST")
          .send();
      };
      b.getShakrScopeToken = function (a) {
        var b = c("XSlideshowShakrOAuthController").getURIBuilder();
        new (c("AsyncRequest"))()
          .setURI(b.getURI())
          .setHandler(function (b) {
            return a(b.payload);
          })
          .send();
      };
      b.pollShakrForVideoURL = function (a, b) {
        var e = d("ThisControllerNoLongerExists").__DEADBUILDER__("o279ohaf");
        new (c("AsyncRequest"))()
          .setURI(e.getURI())
          .setData({ show_id: a })
          .setHandler(function (a) {
            return b(a.payload);
          })
          .send();
      };
      return a;
    })();
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "slideshowGetMaximumTotalLengthInMS",
  ["DateConsts", "SlideshowConstants"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a() {
      var a = c("SlideshowConstants").max_photo_num,
        b = c("SlideshowConstants").image_duration_in_sec_options.slice(-1)[0];
      return a * b * d("DateConsts").MS_PER_SEC;
    }
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerSlideshowAudioStore",
  [
    "ReactComposerDispatcher",
    "ReactComposerMediaUploadActionType",
    "ReactComposerSelectedImagesStore",
    "ReactComposerSlideshowActionType",
    "ReactComposerSlideshowActions",
    "ReactComposerSlideshowStore",
    "ReactComposerStoreBase",
    "SlideshowAudioUtil",
    "SlideshowDataManager",
    "immutable",
    "mergeDeepInto",
    "slideshowGetMaximumTotalLengthInMS",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, e;
        b =
          a.call(
            this,
            function () {
              return {
                audioFileUploadInfo: { isUploading: !1, hasError: !1 },
                editState: null,
                isPreviewPlaying: !1,
                recentlyUsedStorylineMoods: c("immutable").List(),
                selectedMusicCategory: "All Tracks",
                selectedStorylineMood: null,
                storylineMoodFiles: c("immutable").List(),
                storylineMoodIDToSource: c("immutable").Map(),
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerSlideshowActionType")
                  .IMAGES_SELECT_CONFIRM:
                  e &&
                    e.$ReactComposerSlideshowAudioStore1(a, function () {
                      d("ReactComposerSlideshowActions").previewStateChange(
                        a.composerID,
                        !1
                      );
                    });
                  break;
                case c("ReactComposerSlideshowActionType")
                  .STORYLINE_MOOD_CHANGE:
                  e && e.$ReactComposerSlideshowAudioStore2(a);
                  e &&
                    e.$ReactComposerSlideshowAudioStore1(a, function () {
                      d("ReactComposerSlideshowActions").previewStateChange(
                        a.composerID,
                        !0
                      );
                    });
                  break;
                case c("ReactComposerSlideshowActionType")
                  .STORYLINE_MOOD_DELETE:
                  e && e.$ReactComposerSlideshowAudioStore3(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .SHOW_EDIT_SLIDESHOW_DIALOG:
                  e && e.$ReactComposerSlideshowAudioStore4(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .CLOSE_EDIT_SLIDESHOW_DIALOG:
                  e && e.$ReactComposerSlideshowAudioStore5(a);
                  break;
                case c("ReactComposerSlideshowActionType").DURATION_CHANGE:
                  e && e.$ReactComposerSlideshowAudioStore1(a);
                  break;
                case c("ReactComposerMediaUploadActionType")
                  .PHOTO_UPLOAD_ENQUEUED:
                case c("ReactComposerSlideshowActionType").IMAGE_REMOVE:
                  e && e.$ReactComposerSlideshowAudioStore1(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .SET_STORYLINE_MOOD_FILES:
                  e && e.$ReactComposerSlideshowAudioStore6(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .STORYLINE_MOOD_SOURCE_CHANGE:
                  e && e.$ReactComposerSlideshowAudioStore7(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .STORYLINE_MOOD_SOURCE_MAP_CHANGE:
                  e && e.$ReactComposerSlideshowAudioStore8(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .MUSIC_CATEGORY_SELECT:
                  e && e.$ReactComposerSlideshowAudioStore9(a);
                  break;
                case c("ReactComposerSlideshowActionType").PREVIEW_STATE_CHANGE:
                  e && e.$ReactComposerSlideshowAudioStore10(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .AUDIO_FILE_UPLOAD_STARTED:
                  e && e.$ReactComposerSlideshowAudioStore11(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .AUDIO_FILE_UPLOAD_ERROR:
                  e && e.$ReactComposerSlideshowAudioStore12(a);
                  break;
                case c("ReactComposerSlideshowActionType")
                  .AUDIO_FILE_UPLOAD_SUCCESS:
                  e && e.$ReactComposerSlideshowAudioStore13(a);
                  break;
                default:
                  break;
              }
            }
          ) || this;
        e = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.$ReactComposerSlideshowAudioStore1 = function (a, b) {
        var e = a.composerID;
        a = this.getComposerData(e);
        var f = a.selectedStorylineMood;
        if (!f) return;
        var g = f.moodID;
        f = this.getNumberOfImages(e);
        f =
          f === 0
            ? c("slideshowGetMaximumTotalLengthInMS")()
            : this.getTotalLength(e, f);
        var h = this.getStorylineMoodIDToSource(e);
        c("SlideshowDataManager").fetchStorylineMoodSource(g, f, function (a) {
          d("ReactComposerSlideshowActions").changeStorylineMoodIDSource(e, a),
            (h = h.set(g, a)),
            d("ReactComposerSlideshowActions").changeStorylineMoodSourceMap(
              e,
              h
            ),
            b && b();
        });
        a.selectedStorylineMood.source = h.get(g);
        this.emitChange(e);
      };
      e.$ReactComposerSlideshowAudioStore11 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a);
        b.audioFileUploadInfo.isUploading = !0;
        b.audioFileUploadInfo.hasError = !1;
        b.selectedMusicCategory = "User Uploaded";
        this.emitChange(a);
      };
      e.$ReactComposerSlideshowAudioStore12 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a);
        b.audioFileUploadInfo.isUploading = !1;
        b.audioFileUploadInfo.hasError = !0;
        this.emitChange(a);
      };
      e.$ReactComposerSlideshowAudioStore13 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.audioFileUploadInfo.isUploading = !1;
        c.audioFileUploadInfo.hasError = !1;
        c.storylineMoodFiles = c.storylineMoodFiles.unshift(a.uploadedMood);
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowAudioStore9 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.selectedMusicCategory = a.selectedMusicCategory;
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowAudioStore4 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a),
          d = {};
        c("mergeDeepInto")(d, b);
        b.editState = d;
        this.emitChange(a);
      };
      e.$ReactComposerSlideshowAudioStore5 = function (a) {
        a = a.composerID;
        var b = this.getComposerData(a),
          c = b.editState;
        b.selectedStorylineMood = c.selectedStorylineMood;
        b.selectedMusicCategory = c.selectedMusicCategory;
        b.editState = null;
        this.emitChange(a);
      };
      e.$ReactComposerSlideshowAudioStore2 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.selectedStorylineMood = a.selectedStorylineMood;
        a.selectedStorylineMood != null &&
          (c.recentlyUsedStorylineMoods = c.recentlyUsedStorylineMoods.unshift(
            a.selectedStorylineMood
          ));
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowAudioStore3 = function (a) {
        var b = a.composerID,
          e = this.getComposerData(b),
          f = a.selectedStorylineMood;
        d("SlideshowAudioUtil").storylineMoodCompare(
          f,
          e.selectedStorylineMood
        ) && ((e.selectedStorylineMood = null), (e.isPreviewPlaying = !1));
        e.storylineMoodFiles = e.storylineMoodFiles.filter(function (a) {
          return !d("SlideshowAudioUtil").storylineMoodCompare(a, f);
        });
        c("SlideshowDataManager").deleteAudioFile(f.moodID);
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowAudioStore7 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        if (!c.selectedStorylineMood) return;
        c.selectedStorylineMood.source = a.storylineMoodIDSource;
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowAudioStore8 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.storylineMoodIDToSource = a.storylineMoodIDToSource;
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowAudioStore10 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.isPreviewPlaying = a.isPreviewPlaying;
        this.emitChange(b);
      };
      e.$ReactComposerSlideshowAudioStore6 = function (a) {
        var b = a.composerID,
          c = this.getComposerData(b);
        c.storylineMoodFiles = a.storylineMoodFiles;
        this.emitChange(b);
      };
      e.getNumberOfImages = function (a) {
        c("ReactComposerDispatcher").waitFor([
          c("ReactComposerSelectedImagesStore").getDispatchToken(),
        ]);
        return c("ReactComposerSelectedImagesStore").getNumberOfImages(a);
      };
      e.getStorylineMoodFiles = function (a) {
        return this.getComposerData(a).storylineMoodFiles.toArray();
      };
      e.getRecentlyUsedStorylineMoods = function (a) {
        return this.getComposerData(a).recentlyUsedStorylineMoods.toArray();
      };
      e.getSelectedStorylineMood = function (a) {
        return this.getComposerData(a).selectedStorylineMood;
      };
      e.getStorylineMoodIDToSource = function (a) {
        return this.getComposerData(a).storylineMoodIDToSource;
      };
      e.getSelectedMusicCategory = function (a) {
        return this.getComposerData(a).selectedMusicCategory;
      };
      e.getIsPreviewPlaying = function (a) {
        return this.getComposerData(a).isPreviewPlaying;
      };
      e.getAudioFileUploadInfo = function (a) {
        return this.getComposerData(a).audioFileUploadInfo;
      };
      e.getTotalLength = function (a, b) {
        c("ReactComposerDispatcher").waitFor([
          c("ReactComposerSlideshowStore").getDispatchToken(),
        ]);
        return c("ReactComposerSlideshowStore").getTotalLength(a, b);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "WorkUserName.react",
  [
    "CometPlaceholder.react",
    "RelayFBEnvironment",
    "RelayHooks",
    "WorkUserNameQuery.graphql",
    "react",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = d("react");
    function a(a) {
      return i.jsx(d("RelayHooks").RelayEnvironmentProvider, {
        environment: c("RelayFBEnvironment"),
        children: i.jsx(c("CometPlaceholder.react"), {
          fallback: null,
          children: i.jsx(j, babelHelpers["extends"]({}, a)),
        }),
      });
    }
    a.displayName = a.name + " [from " + f.id + "]";
    function j(a) {
      a = a.userID;
      a = d("RelayHooks").useLazyLoadQuery(
        h !== void 0 ? h : (h = b("WorkUserNameQuery.graphql")),
        { userID: a }
      );
      return i.jsx("span", {
        children:
          (a =
            (a = a.user) == null
              ? void 0
              : (a = a.work_info) == null
              ? void 0
              : a.name) != null
            ? a
            : "",
      });
    }
    j.displayName = j.name + " [from " + f.id + "]";
    g["default"] = a;
  },
  98
);
__d(
  "MultimediaUploadProcessingDialog.react",
  [
    "fbt",
    "WorkUserName.react",
    "XUIDialog.react",
    "XUIDialogBody.react",
    "XUIDialogTitle.react",
    "react",
  ],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, c;
        for (var d = arguments.length, e = new Array(d), f = 0; f < d; f++)
          e[f] = arguments[f];
        return (
          ((b = c = a.call.apply(a, [this].concat(e)) || this),
          (c.state = { dialogShown: !0 }),
          b) || babelHelpers.assertThisInitialized(c)
        );
      }
      var d = b.prototype;
      d.UNSAFE_componentWillReceiveProps = function (a) {
        a.show && this.setState({ dialogShown: !0 });
      };
      d.$1 = function () {
        if (this.props.isWorkSharedDraft === !0) {
          var a = i.jsx(c("WorkUserName.react"), {
            userID: this.props.actor_id,
          });
          return this.props.numOfVideos === 1
            ? h._(
                "The video in this post is being processed. We'll send a notification to {final author name} when it's done and the post is ready for review.",
                [h._param("final author name", a)]
              )
            : h._(
                "The videos in this post are being processed. We'll send a notification to {final author name} when they're done and the post is ready for review.",
                [h._param("final author name", a)]
              );
        } else
          return this.props.numOfVideos === 1
            ? h._(
                "The video in your post is being processed. We'll send you a notification when it's finished and your post is ready to view."
              )
            : h._(
                "The videos in your post are being processed. We'll send you a notification when they've finished and your post is ready to view."
              );
      };
      d.$2 = function () {
        return h._("Processing videos");
      };
      d.render = function () {
        return i.jsxs(c("XUIDialog.react"), {
          shown: this.state.dialogShown,
          "data-testid": void 0,
          width: 400,
          children: [
            i.jsx(c("XUIDialogTitle.react"), { children: this.$2() }),
            i.jsx(c("XUIDialogBody.react"), { children: this.$1() }),
          ],
        });
      };
      return b;
    })(i.Component);
    g["default"] = a;
  },
  98
);
__d(
  "PhotosUploadID",
  [],
  function (a, b, c, d, e, f) {
    var g = 1024;
    function a() {
      return (g++).toString();
    }
    f.getNewID = a;
  },
  66
);
__d(
  "ReactComposerMediaFilterUtils",
  ["ComposerXNativeAudioUploadsConfig", "VideoUploadConfig"],
  function (a, b, c, d, e, f, g) {
    function a(a) {
      var b = h(a).length;
      a = i(a).length;
      return b > a;
    }
    function b(a) {
      return h(a).length > 0;
    }
    function d(a) {
      return j(a).length > 0;
    }
    function h(a) {
      return k(a, c("VideoUploadConfig").videoExtensions);
    }
    function i(a) {
      var b = { gif: !0 };
      return k(a, b);
    }
    function j(a) {
      return k(a, c("ComposerXNativeAudioUploadsConfig").audioExtensions);
    }
    function k(a, b) {
      return a.filter(function (a) {
        a = a.indexOf(".") !== -1 ? a.split(".").pop().toLowerCase() : "";
        return b[a];
      });
    }
    g.hasEditableVideos = a;
    g.hasVideos = b;
    g.hasAudioFiles = d;
    g.filterVideos = h;
    g.filterNonEditableVideos = i;
    g.filterAudioFiles = j;
    g.filterFileOfSupportedType = k;
  },
  98
);
__d(
  "fileSliceName",
  ["UserAgent_DEPRECATED"],
  function (a, b, c, d, e, f, g) {
    a = "slice";
    (b = d("UserAgent_DEPRECATED").chrome())
      ? b < 21 && (a = "webkitSlice")
      : (b = d("UserAgent_DEPRECATED").firefox())
      ? b < 13 && (a = "mozSlice")
      : d("UserAgent_DEPRECATED").safari() ||
        (d("UserAgent_DEPRECATED").webkit() && (a = "webkitSlice"));
    c = a;
    g["default"] = c;
  },
  98
);
__d(
  "fileSlice",
  ["fileSliceName"],
  function (a, b, c, d, e, f, g) {
    b = a.File && a.File.prototype[c("fileSliceName")];
    b || (b = a.Blob && a.Blob.prototype[c("fileSliceName")]);
    d = b;
    g["default"] = d;
  },
  98
);
__d(
  "VideoUploadFeatureDetector",
  ["UserAgent_DEPRECATED", "fileSlice"],
  function (a, b, c, d, e, f, g) {
    function a() {
      return typeof c("fileSlice") === "function" && h();
    }
    function b() {
      return !d("UserAgent_DEPRECATED").firefox();
    }
    function e() {
      return "FileList" in window;
    }
    function f() {
      return "FileReader" in window && "DataView" in window;
    }
    function h() {
      return "FormData" in window;
    }
    g.supportsChunking = a;
    g.supportsFullProgress = b;
    g.supportsFileAPI = e;
    g.supportsFileReading = f;
    g.supportsXHR = h;
  },
  98
);
__d(
  "VideoUploadFile",
  ["VideoUploadFeatureDetector", "fileSlice", "md5"],
  function (a, b, c, d, e, f, g) {
    a = (function () {
      function a(a, b, c, d) {
        (this.$1 = a),
          (this.$2 = b),
          (this.$3 = c),
          (this.$4 = d == null ? void 0 : d.toLowerCase());
      }
      a.fromBlob = function (b) {
        var c =
          b.type.indexOf("/") != -1
            ? "." + b.type.split("/").pop().toLowerCase()
            : "";
        c = "blob" + c;
        c = new File([b], c, { type: b.type });
        return a.fromFile(c);
      };
      a.fromFile = function (b) {
        var c = a.getExtensionFromFileName(b.name);
        return new this(null, b, b.size, c);
      };
      a.fromFileInput = function (b) {
        var c = null,
          e = null,
          f = a.getExtensionFromFileInput(b);
        d("VideoUploadFeatureDetector").supportsFileAPI() &&
          b.files.length &&
          ((c = b.files[0]), (e = c.size));
        return new this(b, c, e, f);
      };
      var b = a.prototype;
      b.getFileInput = function () {
        return this.$1;
      };
      b.getFile = function () {
        return this.$2;
      };
      b.getSize = function () {
        return this.$3;
      };
      b.getExtension = function () {
        return this.$4;
      };
      b.getCreatorProduct = function () {
        return this.$4 === "gif" ? 4 : 2;
      };
      b.getChunk = function (a, b) {
        return this.$2 != null ? c("fileSlice").call(this.$2, a, b) : null;
      };
      b.getFilePath = function () {
        var a;
        return (a = this.$2) == null ? void 0 : a.name;
      };
      b.getStableAssetID = function () {
        var a;
        return (a = c("md5")(this.getFilePath())) != null ? a : "unknown";
      };
      a.getExtensionFromFileInput = function (a) {
        return this.getExtensionFromFileName(a.value);
      };
      a.getExtensionFromFileName = function (a) {
        return a != null && a.indexOf(".") !== -1
          ? a.split(".").pop().toLowerCase()
          : "";
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "VideoUploadProgressBar",
  ["cx", "CSS", "VideoUploadFeatureDetector"],
  function (a, b, c, d, e, f, g, h) {
    a = (function () {
      function a(a) {
        (this.$1 = a.progress_bar),
          (this.$2 = a.throbber),
          (this.$3 = a.uploader),
          (this.$4 = a.start_margin),
          (this.$5 = a.start_delay),
          (this.$6 = a.end_margin),
          (this.$7 = a.end_delay),
          (this.$8 = a.progress_bar_label),
          this.$9();
      }
      var b = a.prototype;
      b.reset = function () {
        this.$1.setPosition(0);
      };
      b.getRoot = function () {
        return this.$1.getRoot();
      };
      a.computeProgress = function (a, b, c, d, e) {
        a = Math.min(a + b, c);
        return (a / c) * (100 - d - e) + d;
      };
      b.$9 = function () {
        d("VideoUploadFeatureDetector").supportsFileAPI()
          ? (this.$3.subscribe("upload-requested", this.$10.bind(this)),
            this.$3.subscribe("upload-progressed", this.$11.bind(this)),
            this.$3.subscribe("online", this.$12.bind(this)),
            this.$3.subscribe("offline", this.$13.bind(this)))
          : this.$3.subscribe("upload-requested", this.$14.bind(this));
      };
      b.$10 = function () {
        d("CSS").show(this.$1.getRoot()),
          d("CSS").removeClass(this.$1.getRoot(), "_5r5a"),
          this.$1.setTarget(this.$4, this.$5),
          this.$15(0);
      };
      b.$15 = function (a) {
        this.$8 && this.$1.changeLabel("" + a.toFixed(1) + "%");
      };
      b.$11 = function (b, c) {
        d("CSS").removeClass(this.$1.getRoot(), "_5r5a");
        b = a.computeProgress(
          c.start_offset,
          c.sent_bytes,
          c.file_size,
          this.$4,
          this.$6
        );
        this.$1.setPosition(b);
        this.$15(b);
        b >= 100 - this.$6 && (this.$1.setTarget(100, this.$7), this.$15(100));
      };
      b.$12 = function () {
        d("CSS").removeClass(this.$1.getRoot(), "_5r5a");
      };
      b.$13 = function () {
        d("CSS").addClass(this.$1.getRoot(), "_5r5a");
      };
      b.$14 = function () {
        d("CSS").show(this.$2);
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadAssetEvent",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "ASSET_ADDED",
      "ASSET_STARTED",
      "ASSET_REMOVED",
      "ASSET_FAILED",
      "ASSET_SUCCEED",
      "ASSET_PROGRESS",
      "ASSET_STALL",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadClientEvent",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "CLIENT_CREATED",
      "CLIENT_CONFIG_REQUESTED",
      "CLIENT_CONFIG_RECEIVED",
      "CLIENT_CONFIG_FAILED",
      "CLIENT_CONFIG_CACHED",
      "CLIENT_INTERNET_ONLINE",
      "CLIENT_INTERNET_OFFLINE",
      "CLIENT_INTERNET_UNKNOWN",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadEntryPointID",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = function (a) {
      this.key = a;
    };
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadFBEntryPointID",
  ["MediaUploadEntryPointID"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, c) {
        var d;
        d = a.call(this, b + "\\" + c) || this;
        d.sourceType = b;
        d.entryPointRef = c;
        return d;
      }
      b.castOrThrow = function (a, c) {
        c = c.createThrowableError;
        if (a instanceof b) return a;
        else {
          throw c(
            'Provided entry point ID has incorrect type of "' +
              ((c = a.constructor) == null ? void 0 : c.name) +
              '"'
          );
        }
      };
      return b;
    })(c("MediaUploadEntryPointID"));
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadAsset",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a(a) {
        (this.mediaType = a.mediaType), (this.data = a.data);
      }
      var b = a.prototype;
      b.dataAsFile = function () {
        var a = this.data;
        if (a.mode === "File") return a;
        else return null;
      };
      b.dataAsHTMLInput = function () {
        var a = this.data;
        if (a.mode === "HTMLInput") return a;
        else return null;
      };
      return a;
    })();
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadMediaType",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored(["VIDEO"]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadTime",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    var g = 1e3,
      h = g * 60,
      i = h * 60;
    function a(a) {
      return a;
    }
    function b(a) {
      return a * g;
    }
    function c(a) {
      return a * h;
    }
    function d(a) {
      return a * i;
    }
    function j(a) {
      return a;
    }
    function k(a) {
      return (1 * a) / g;
    }
    function l(a) {
      return (1 * a) / h;
    }
    function m(a) {
      return (1 * a) / i;
    }
    function n(a, b) {
      return a == null ? null : b(a);
    }
    function e(a) {
      return n(a, j);
    }
    function o(a) {
      return n(a, k);
    }
    function p(a) {
      return n(a, l);
    }
    function q(a) {
      return n(a, m);
    }
    function r(a, b) {
      return a + b;
    }
    function s(a, b) {
      return a - b;
    }
    function t(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }
    f.millisecondsToTime = a;
    f.secondsToTime = b;
    f.minutesToTime = c;
    f.hoursToTime = d;
    f.timeToMilliseconds = j;
    f.timeToSeconds = k;
    f.timeToMinutes = l;
    f.timeToHours = m;
    f.maybeTimeToMilliseconds = e;
    f.maybeTimeToSeconds = o;
    f.maybeTimeToMinutes = p;
    f.maybeTimeToHours = q;
    f.addTime = r;
    f.subtractTime = s;
    f.compareTime = t;
  },
  66
);
__d(
  "MediaUploadAssetFactory",
  ["MediaUploadAsset", "MediaUploadMediaType", "MediaUploadTime"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function h(a) {
      if (a == null) return null;
      else {
        a = /\.([^.]+)$/.exec(a);
        if (a == null || a.length < 2) return null;
        else return a[1];
      }
    }
    a = (function () {
      function a(a) {
        a = a.features;
        this.$1 = a;
      }
      var b = a.prototype;
      b.$2 = function (a) {
        return {
          mode: "File",
          file: a,
          lastModified: d("MediaUploadTime").millisecondsToTime(a.lastModified),
          name: a.name,
          size: a.size,
          mimeType: a.type,
          extension: h(a.name),
        };
      };
      b.$3 = function (a) {
        return {
          mode: "HTMLInput",
          inputElement: a,
          name: a.value,
          extension: h(a.value),
        };
      };
      b.createFromFile = function (a, b) {
        b === void 0 && (b = c("MediaUploadMediaType").VIDEO);
        return new (c("MediaUploadAsset"))({ mediaType: b, data: this.$2(a) });
      };
      b.createFromHTMLInput = function (a, b) {
        var d;
        b === void 0 && (b = c("MediaUploadMediaType").VIDEO);
        if (
          this.$1.supportFileFromHTML &&
          ((d = a.files) == null ? void 0 : d.length) > 0
        ) {
          d = a.files[0];
          d = this.$2(d);
        } else d = this.$3(a);
        return new (c("MediaUploadAsset"))({ mediaType: b, data: d });
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadSDK",
  ["MediaUploadAssetFactory"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = function (a) {
      var b = this;
      this.isSupported = function () {
        return (
          b.features.supportFileManipulation && b.features.supportFileFromHTML
        );
      };
      this.currentTimeProvider = a.currentTimeProvider;
      this.randomNumberProvider = a.randomNumberProvider;
      this.randomStringProvider = a.randomStringProvider;
      this.retryPolicyProvider = a.retryPolicyProvider;
      this.promiseTerminator = a.promiseTerminator;
      this.delayedExecutor = a.delayedExecutor;
      this.reportRecoverableError = a.reportRecoverableError;
      this.createThrowableError = a.createThrowableError;
      this.features = a.featureDetector();
      this.registerUnloadHook = a.registerUnloadHook;
      this.factories = { assets: new (c("MediaUploadAssetFactory"))(this) };
    };
    g["default"] = a;
  },
  98
);
__d(
  "mediaUploadFBRetryPolicyProvider",
  ["MediaUploadTime"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = {
      backoff: {
        initial: d("MediaUploadTime").millisecondsToTime(400),
        jitter: d("MediaUploadTime").millisecondsToTime(100),
        expBase: d("MediaUploadTime").millisecondsToTime(100),
        expMultiplier: 1.5,
        max: d("MediaUploadTime").secondsToTime(8),
      },
      limits: {
        totalRetryCount: 3e3,
        totalTime: d("MediaUploadTime").hoursToTime(6),
      },
    };
    function a() {
      return h;
    }
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBSDK",
  [
    "Banzai",
    "FBLogger",
    "MediaUploadSDK",
    "MediaUploadTime",
    "Random",
    "SubscriptionsHandler",
    "WaterfallIDGenerator",
    "clearTimeout",
    "fileSlice",
    "getErrorSafe",
    "mediaUploadFBRetryPolicyProvider",
    "promiseDone",
    "recoverableViolation",
    "setTimeout",
    "unrecoverableViolation",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = "media_upload";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return (
          a.call(this, {
            currentTimeProvider: function () {
              return d("MediaUploadTime").millisecondsToTime(Date.now());
            },
            randomNumberProvider: function (a, b) {
              return (b - a) * c("Random").random() + a;
            },
            randomStringProvider: function () {
              return d("WaterfallIDGenerator").generate();
            },
            retryPolicyProvider: c("mediaUploadFBRetryPolicyProvider"),
            promiseTerminator: function (a) {
              return c("promiseDone")(a);
            },
            delayedExecutor: function (a, b, e) {
              var f = c("setTimeout")(
                b,
                d("MediaUploadTime").timeToMilliseconds(a)
              );
              return {
                cancel: function () {
                  e != null && e(), c("clearTimeout")(f);
                },
              };
            },
            reportRecoverableError: function (a, b) {
              b != null
                ? c("FBLogger")(h).catching(c("getErrorSafe")(b)).mustfix(a)
                : c("recoverableViolation")(a, h);
            },
            createThrowableError: function (a) {
              throw c("unrecoverableViolation")(a, h);
            },
            featureDetector: function () {
              return {
                supportFileFromHTML: "FileList" in window,
                supportFileManipulation:
                  "FileReader" in window &&
                  "DataView" in window &&
                  "FormData" in window &&
                  typeof c("fileSlice") === "function",
              };
            },
            registerUnloadHook: function (a) {
              var b = new (c("SubscriptionsHandler"))();
              a = c("Banzai").subscribe(c("Banzai").SHUTDOWN, a);
              a != null
                ? b.addSubscriptions()
                : c("recoverableViolation")(
                    "Banzai did not return handle for unsubscribing from the unload hook; logging quality will be bad",
                    h
                  );
              return {
                cancel: function () {
                  try {
                    b.release();
                  } catch (a) {
                    c("FBLogger")(h)
                      .catching(c("getErrorSafe")(a))
                      .mustfix("Failed to unsubscribe from the unload hook");
                  }
                },
              };
            },
          }) || this
        );
      }
      return b;
    })(c("MediaUploadSDK"));
    b = new a();
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "MediaUploadFBStage",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "METADATA_EXTRACTION",
      "METADATA_VALIDATION",
      "HASHING",
      "START_REQUEST",
      "BYTES_UPLOAD",
      "RECEIVE_REQUEST",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadSessionEvent",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "SESSION_CONFIRMED",
      "SESSION_SUCCEED",
      "SESSION_FAILED",
      "SESSION_CANCELED",
      "SESSION_FINISHED",
      "SESSION_PROGRESS",
      "PUBLISH_STARTED",
      "PUBLISH_SUCCEED",
      "PUBLISH_FAILED",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadStageEvent",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "STAGE_STARTED",
      "STAGE_PROGRESS",
      "STAGE_SUCCEED",
      "STAGE_FAILED",
      "STAGE_CANCELED",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadVUShim",
  [
    "MediaUploadAssetEvent",
    "MediaUploadClientEvent",
    "MediaUploadFBEntryPointID",
    "MediaUploadFBSDK",
    "MediaUploadFBStage",
    "MediaUploadSessionEvent",
    "MediaUploadStageEvent",
    "MediaUploadVUShimSession",
    "MediaUploadVUShimSurface",
    "Promise",
    "gkx",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h;
    a = (function () {
      function a() {
        this.$1 = new Map();
      }
      var d = a.prototype;
      d.createSession = function (a) {
        if (!c("MediaUploadFBSDK").isSupported()) return null;
        var b = a.source,
          d = a.composer_entry_point_ref;
        if (b == null || d == null) return null;
        b = new (c("MediaUploadFBEntryPointID"))(b, d);
        if (!c("MediaUploadVUShimSurface").isClientSupported(b)) return null;
        if (!c("gkx")("74")) return null;
        d = c("MediaUploadVUShimSurface").getClient(b);
        b = new (c("MediaUploadVUShimSession"))(a, d);
        this.$1.set(b.sessionID, b);
        return b;
      };
      d.triggerPublish = function (a, c) {
        var d = this.$1.get(a.sessionID);
        return d == null
          ? (h || (h = b("Promise"))).resolve({
              isSuccessful: !1,
              errorCode: "MISSING_SESSION",
            })
          : d.triggerPublish(a, c);
      };
      d.setupEventSubscription = function (a) {
        var b = this,
          d = function () {
            if (f) {
              if (g >= e.length) return "break";
              h = e[g++];
            } else {
              g = e.next();
              if (g.done) return "break";
              h = g.value;
            }
            var c = h;
            a.addClientEventListener(c, function (a) {
              return b.emitClientEvents(c);
            });
          };
        for (
          var e = c("MediaUploadClientEvent").members(),
            f = Array.isArray(e),
            g = 0,
            e = f
              ? e
              : e[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var h,
            i = d();
          if (i === "break") break;
        }
        d = function () {
          if (k) {
            if (l >= j.length) return "break";
            i = j[l++];
          } else {
            l = j.next();
            if (l.done) return "break";
            i = l.value;
          }
          var c = i;
          a.addSessionEventListener(c, function (a) {
            var d;
            return (d = b.$1.get(a.sessionID)) == null
              ? void 0
              : d.sessionUpdated(c, a);
          });
        };
        for (
          var j = c("MediaUploadSessionEvent").members(),
            k = Array.isArray(j),
            l = 0,
            j = k
              ? j
              : j[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var m = d();
          if (m === "break") break;
        }
        d = function () {
          if (o) {
            if (p >= n.length) return "break";
            m = n[p++];
          } else {
            p = n.next();
            if (p.done) return "break";
            m = p.value;
          }
          var c = m;
          a.addAssetEventListener(c, function (a, d) {
            var e;
            (e = b.$1.get(a.sessionID)) == null
              ? void 0
              : e.assetUpdated(c, a, d);
          });
        };
        for (
          var n = c("MediaUploadAssetEvent").members(),
            o = Array.isArray(n),
            p = 0,
            n = o
              ? n
              : n[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var q = d();
          if (q === "break") break;
        }
        d = function () {
          if (s) {
            if (t >= r.length) return "break";
            q = r[t++];
          } else {
            t = r.next();
            if (t.done) return "break";
            q = t.value;
          }
          var d = q,
            e = function () {
              if (g) {
                if (h >= f.length) return "break";
                i = f[h++];
              } else {
                h = f.next();
                if (h.done) return "break";
                i = h.value;
              }
              var c = i;
              a.addStageEventListener(d, c, function (a, e) {
                var f;
                (f = b.$1.get(a.sessionID)) == null
                  ? void 0
                  : f.stageUpdated(d, c, a, e);
              });
            };
          for (
            var f = c("MediaUploadFBStage").members(),
              g = Array.isArray(f),
              h = 0,
              f = g
                ? f
                : f[
                    typeof Symbol === "function"
                      ? Symbol.iterator
                      : "@@iterator"
                  ]();
            ;

          ) {
            var i,
              j = e();
            if (j === "break") break;
          }
        };
        for (
          var r = c("MediaUploadStageEvent").members(),
            s = Array.isArray(r),
            t = 0,
            r = s
              ? r
              : r[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var u = d();
          if (u === "break") break;
        }
      };
      d.emitClientEvents = function (a) {
        var b;
        if (a === c("MediaUploadClientEvent").CLIENT_INTERNET_ONLINE)
          b = "online";
        else if (a === c("MediaUploadClientEvent").CLIENT_INTERNET_OFFLINE)
          b = "offline";
        else return;
        for (
          var a = this.$1.values(),
            d = Array.isArray(a),
            e = 0,
            a = d
              ? a
              : a[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var f;
          if (d) {
            if (e >= a.length) break;
            f = a[e++];
          } else {
            e = a.next();
            if (e.done) break;
            f = e.value;
          }
          f = f;
          f.inform(b);
        }
      };
      return a;
    })();
    d = new a();
    e = d;
    g["default"] = e;
  },
  98
);
__d(
  "MediaUploadAssetStatus",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "REQUESTED",
      "SCHEDULED",
      "PROCESSING",
      "UPLOADING",
      "COMPLETED",
      "FAILED",
      "REMOVED",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadCancelReason",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "USER_REQUEST",
      "NAVIGATION_AWAY",
      "UNLOAD_HOOK",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadSessionStatus",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "UNCONFIRMED",
      "CONFIRMED",
      "FAILED",
      "PUBLISHING",
      "COMPLETED",
      "CANCELED",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "GraphQLVideoPublisherInputDataHandlerBase",
  ["invariant"],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    a = (function () {
      function a(a, b) {
        (this.postData = a), (this.extraData = b);
      }
      var b = a.prototype;
      b.mapPostDataToGraphQLInputObject = function () {
        h(0, 85);
      };
      b.hasAPISupport = function () {
        return i(this.postData);
      };
      b.uploadables = function () {
        h(0, 85);
      };
      return a;
    })();
    function i(a) {
      return !0;
    }
    g.GraphQLVideoPublisherInputDataHandlerBase = a;
    g.hasAPISupport = i;
  },
  98
);
__d(
  "CallToActionTypes",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      OPEN_LINK: "OPEN_LINK",
      LIKE_PAGE: "LIKE_PAGE",
      SHOP_NOW: "SHOP_NOW",
      PLAY_GAME: "PLAY_GAME",
      INSTALL_APP: "INSTALL_APP",
      USE_APP: "USE_APP",
      CALL: "CALL",
      CALL_ME: "CALL_ME",
      VIDEO_CALL: "VIDEO_CALL",
      GET_MOBILE_APP: "GET_MOBILE_APP",
      INSTALL_MOBILE_APP: "INSTALL_MOBILE_APP",
      INSTALL_FREE_MOBILE_APP: "INSTALL_FREE_MOBILE_APP",
      USE_MOBILE_APP: "USE_MOBILE_APP",
      MOBILE_DOWNLOAD: "MOBILE_DOWNLOAD",
      BOOK_TRAVEL: "BOOK_TRAVEL",
      LISTEN_MUSIC: "LISTEN_MUSIC",
      WATCH_VIDEO: "WATCH_VIDEO",
      LEARN_MORE: "LEARN_MORE",
      SIGN_UP: "SIGN_UP",
      DOWNLOAD: "DOWNLOAD",
      WATCH_MORE: "WATCH_MORE",
      NO_BUTTON: "NO_BUTTON",
      VISIT_PAGES_FEED: "VISIT_PAGES_FEED",
      MISSED_CALL: "MISSED_CALL",
      CALL_NOW: "CALL_NOW",
      DIAL_CODE: "DIAL_CODE",
      APPLY_NOW: "APPLY_NOW",
      CONTACT: "CONTACT",
      BUY_NOW: "BUY_NOW",
      GET_OFFER: "GET_OFFER",
      GET_OFFER_VIEW: "GET_OFFER_VIEW",
      BUY_TICKETS: "BUY_TICKETS",
      UPDATE_APP: "UPDATE_APP",
      GET_DIRECTIONS: "GET_DIRECTIONS",
      BUY: "BUY",
      SEE_DETAILS: "SEE_DETAILS",
      SEND_UPDATES: "SEND_UPDATES",
      MESSAGE_PAGE: "MESSAGE_PAGE",
      MESSAGE_USER: "MESSAGE_USER",
      DONATE: "DONATE",
      SUBSCRIBE: "SUBSCRIBE",
      SAY_THANKS: "SAY_THANKS",
      SELL_NOW: "SELL_NOW",
      SHARE: "SHARE",
      DONATE_NOW: "DONATE_NOW",
      GET_QUOTE: "GET_QUOTE",
      CONTACT_US: "CONTACT_US",
      ORDER_NOW: "ORDER_NOW",
      START_ORDER: "START_ORDER",
      ADD_TO_CART: "ADD_TO_CART",
      VIDEO_ANNOTATION: "VIDEO_ANNOTATION",
      MOMENTS: "MOMENTS",
      RECORD_NOW: "RECORD_NOW",
      INQUIRE_NOW: "INQUIRE_NOW",
      CONFIRM: "CONFIRM",
      VOTE_NOW: "VOTE_NOW",
      GIVE_FREE_RIDES: "GIVE_FREE_RIDES",
      REGISTER_NOW: "REGISTER_NOW",
      OPEN_MESSENGER_EXT: "OPEN_MESSENGER_EXT",
      CIVIC_ACTION: "CIVIC_ACTION",
      SEND_INVITES: "SEND_INVITES",
      REFER_FRIENDS: "REFER_FRIENDS",
      SAVE: "SAVE",
      REQUEST_TIME: "REQUEST_TIME",
      SEE_MENU: "SEE_MENU",
      EMAIL_NOW: "EMAIL_NOW",
      PAY_OR_REQUEST: "PAY_OR_REQUEST",
      SEARCH: "SEARCH",
      GET_SHOWTIMES: "GET_SHOWTIMES",
      TRY_IT: "TRY_IT",
      LISTEN_NOW: "LISTEN_NOW",
      TRY_ON: "TRY_ON",
      WOODHENGE_SUPPORT: "WOODHENGE_SUPPORT",
      SOTTO_SUBSCRIBE: "SOTTO_SUBSCRIBE",
      SEARCH_MORE: "SEARCH_MORE",
      FOLLOW_USER: "FOLLOW_USER",
      BLOOD_DONATIONS: "BLOOD_DONATIONS",
      CLAIM_OFFER: "CLAIM_OFFER",
      RAISE_MONEY: "RAISE_MONEY",
      UNLIKE_PAGE: "UNLIKE_PAGE",
      BET_NOW: "BET_NOW",
      OPEN_MOVIES: "OPEN_MOVIES",
      EVENT_RSVP: "EVENT_RSVP",
      INTERESTED: "INTERESTED",
      GO_LIVE: "GO_LIVE",
      SEND_TIP: "SEND_TIP",
      WHATSAPP_MESSAGE: "WHATSAPP_MESSAGE",
      GET_EVENT_TICKETS: "GET_EVENT_TICKETS",
      VIEW_INSTAGRAM_PROFILE: "VIEW_INSTAGRAM_PROFILE",
      INSTAGRAM_MESSAGE: "INSTAGRAM_MESSAGE",
      FOLLOW_NEWS_STORYLINE: "FOLLOW_NEWS_STORYLINE",
      LINK_CARD: "LINK_CARD",
      PRE_REGISTER: "PRE_REGISTER",
      SEE_MORE: "SEE_MORE",
      WATCH_APP_UPGRADE: "WATCH_APP_UPGRADE",
      LOYALTY_LEARN_MORE: "LOYALTY_LEARN_MORE",
      ACTIVATE_OFFER: "ACTIVATE_OFFER",
      BOOK_NOW: "BOOK_NOW",
      BOOK_TEST_DRIVE: "BOOK_TEST_DRIVE",
      CHECK_AVAILABILITY: "CHECK_AVAILABILITY",
      FIND_A_GROUP: "FIND_A_GROUP",
      FIND_YOUR_GROUPS: "FIND_YOUR_GROUPS",
      REMIND_ME: "REMIND_ME",
      SAVE_OFFER: "SAVE_OFFER",
      SEE_OFFER: "SEE_OFFER",
      PAY_TO_ACCESS: "PAY_TO_ACCESS",
      PURCHASE_GIFT_CARDS: "PURCHASE_GIFT_CARDS",
      FOLLOW_PAGE: "FOLLOW_PAGE",
      SEND_A_GIFT: "SEND_A_GIFT",
      JOBS_APPLY_NOW: "JOBS_APPLY_NOW",
      VIEW_RESUME: "VIEW_RESUME",
      SWIPE_UP_SHOP: "SWIPE_UP_SHOP",
      SWIPE_UP_PRODUCT: "SWIPE_UP_PRODUCT",
      SEND_GIFT_MONEY: "SEND_GIFT_MONEY",
      SEND_GIFT: "SEND_GIFT",
      WATCH_MUSIC_VIDEO: "WATCH_MUSIC_VIDEO",
      TRY_IN_CAMERA: "TRY_IN_CAMERA",
      WHATSAPP_LINK: "WHATSAPP_LINK",
      PLAY_GAME_ON_FACEBOOK: "PLAY_GAME_ON_FACEBOOK",
      GET_STARTED: "GET_STARTED",
      VISIT_WORLD: "VISIT_WORLD",
      OPEN_INSTANT_APP: "OPEN_INSTANT_APP",
      AUDIO_CALL: "AUDIO_CALL",
      JOIN_GROUP: "JOIN_GROUP",
      GET_PROMOTIONS: "GET_PROMOTIONS",
      VISIT_PROFILE: "VISIT_PROFILE",
      CHAT_ON_WHATSAPP: "CHAT_ON_WHATSAPP",
      EXPLORE_MORE: "EXPLORE_MORE",
      PLAY: "PLAY",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ExpirationType",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      NONE: 0,
      DELETE: 1,
      HIDE: 2,
      ONLY_ME: 3,
      HIDE_LONG_DURATION: 4,
    });
    f["default"] = a;
  },
  66
);
__d(
  "VideoAssetMatureContentRating",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      UNSET: 0,
      SUITABLE_FOR_ALL: 1,
      FOURTEEN_PLUS: 2,
      EIGHTEEN_PLUS: 3,
    });
    f["default"] = a;
  },
  66
);
__d(
  "VideoCommentatingPermission",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({ UNSET: "unset", ALLOW: "allow", DISALLOW: "disallow" });
    f["default"] = a;
  },
  66
);
__d(
  "VideoFundedContentFlagProgram",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      UNSET: 0,
      IS_FUNDED_CONTENT: 1,
      NOT_FUNDED_CONTENT: 2,
    });
    f["default"] = a;
  },
  66
);
__d(
  "VideoProjection",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      FLAT: "flat",
      EQUIRECTANGULAR: "equirectangular",
      CUBEMAP: "cubemap",
      ROTATED_CUBEMAP: "rotated_cubemap",
      BARREL: "barrel",
      BARREL_SPLIT: "barrel_split",
      CDS_BARREL: "cds_barrel",
      HALF_EQUIRECTANGULAR: "half_equirectangular",
    });
    f["default"] = a;
  },
  66
);
__d(
  "VideoStereoFormat",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      MONO: "mono",
      LEFT_RIGHT: "left-right",
      TOP_BOTTOM: "top-bottom",
    });
    f["default"] = a;
  },
  66
);
__d(
  "GraphQLVideoPublisherVideoUploaderInputDataHandler",
  [
    "BrandedContentSharedToSponsorStatus",
    "BrandedContentSponsorRelationship",
    "CallToActionTypes",
    "ClientIDs",
    "ExpirationType",
    "GraphQLVideoPublisherInputDataHandlerBase",
    "VideoAssetMatureContentRating",
    "VideoCommentatingPermission",
    "VideoFundedContentFlagProgram",
    "VideoProjection",
    "VideoStereoFormat",
    "enumUtils",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return a.apply(this, arguments) || this;
      }
      var e = b.prototype;
      e.mapPostDataToGraphQLInputObject = function () {
        var a,
          b = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler1(),
          c = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler2(),
          e = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler3(),
          f = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler4(),
          g = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler5(),
          h = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler6(),
          i = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler7(),
          j = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler8(),
          k = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler9(),
          l = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler10(),
          m = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler11(),
          n = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler12(),
          o = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler13(),
          p = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler14(),
          q = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler15(),
          r = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler16(),
          s = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler17(),
          t = this.$GraphQLVideoPublisherVideoUploaderInputDataHandler18(),
          u = this.postData.publish_as_reel;
        a =
          (a = this.postData.non_uuc_reel_data) != null
            ? a
            : this.$GraphQLVideoPublisherVideoUploaderInputDataHandler19();
        return {
          actor_id: this.extraData.target_id,
          basic_data: b,
          client_mutation_id: d("ClientIDs").getNewClientID(),
          thumbnail_data: c,
          ad_break_data: f,
          vu_editor_data: j,
          post_status_data: e,
          main_composer_tab_data: g,
          distribution_data: h,
          stars_data: i,
          questions_data: k,
          polls_data: l,
          tracking_data: m,
          captions_data: n,
          spherical_data: o,
          live_premiere_data: p,
          video_editor_config_json: this.postData.video_editor_config_json,
          location_preset_data: q,
          video_abtesting_data: r,
          auto_dub_data: s,
          reel_publish_data: t,
          publish_as_reel: u,
          non_uuc_reel_data: a,
        };
      };
      e.uploadables = function () {
        return babelHelpers["extends"](
          {},
          this.$GraphQLVideoPublisherVideoUploaderInputDataHandler20(),
          this.$GraphQLVideoPublisherVideoUploaderInputDataHandler21(),
          this.$GraphQLVideoPublisherVideoUploaderInputDataHandler22()
        );
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler1 = function () {
        var a;
        return {
          source: this.extraData.source,
          target_id: this.extraData.target_id,
          video_id: this.extraData.video_id,
          video_title: this.postData.video_title,
          waterfall_id: this.extraData.waterfall_id,
          xhpc_message: this.postData.xhpc_message,
          creator_product:
            (a = this.extraData.creator_product) == null
              ? void 0
              : a.toString(),
          composer_entry_point_ref: this.extraData.composer_entry_point_ref,
          composer_dialog_version: this.extraData.composer_dialog_version,
          has_file_been_replaced: this.extraData.has_file_been_replaced,
          supports_chunking: this.extraData.supports_chunking,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler2 = function () {
        return { thumbnail_type: this.postData.thumbnail_type };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler21 = function () {
        return this.postData.thumbnail_uploadable;
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler22 = function () {
        var a = {},
          b = this.postData.schedule_custom_background_image,
          c = this.postData.schedule_custom_profile_image,
          d = this.postData.schedule_feed_background_image;
        b != null && (a.schedule_custom_background_image = b);
        c != null && (a.schedule_custom_profile_image = c);
        d != null && (a.schedule_feed_background_image = d);
        return a;
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler4 = function () {
        var a;
        a =
          (a = this.postData.ad_breaks) == null
            ? void 0
            : a.map(function (a) {
                return {
                  time_offset: parseInt(a.time_offset, 10),
                  status: a.status,
                };
              });
        return {
          ad_breaks: a,
          ad_break_prereview: this.postData.ad_break_prereview,
          ad_breaks_experiment_revenue_loss_threshold:
            this.postData.ad_breaks_experiment_revenue_loss_threshold,
          ad_breaks_creator_chosen_contextual_category:
            this.postData.ad_breaks_creator_chosen_contextual_category,
          enable_ad_breaks_experiment:
            this.postData.enable_ad_breaks_experiment,
          ad_breaks_block_lists: this.postData.ad_breaks_block_lists,
          has_ad_breaks_block_lists: this.postData.has_ad_breaks_block_lists,
          is_in_stream_enabled: this.postData.is_in_stream_enabled,
          self_cert_answers: this.postData.self_cert_answers,
          self_cert_educational_form: this.postData.self_cert_educational_form,
          self_cert_selected_no_sensitive:
            this.postData.self_cert_selected_no_sensitive,
          self_cert_predicted_status: this.postData.self_cert_predicted_status,
          should_auto_adjust_manual_ad_breaks:
            this.postData.should_auto_adjust_manual_ad_breaks,
          should_auto_insert_ad_breaks:
            this.postData.should_auto_insert_ad_breaks,
          should_use_image_ads: this.postData.should_use_image_ads,
          monetization_pre_check_options:
            this.postData.monetization_pre_check_options,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler3 = function () {
        return {
          dogfooding: this.postData.dogfooding,
          draft: this.postData.draft,
          is_reviewable_branded_content:
            this.postData.is_reviewable_branded_content,
          scheduled: this.postData.scheduled,
          future_date: this.postData.future_date,
          future_time: this.postData.future_time,
          expiring: this.postData.expiring,
          expire_type:
            this.postData.expire_type != null
              ? d("enumUtils").enumValueToKeyEnforcing(
                  this.postData.expire_type,
                  c("ExpirationType")
                )
              : null,
          expire_time: this.postData.expire_time,
          backdated_date: this.postData.backdated_date,
          hide_from_newsfeed: this.postData.hide_from_newsfeed,
          schedule_timestamp: this.postData.schedule_timestamp,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler23 = function () {
        var a = this.postData.branded_content_data;
        if (a == null) return null;
        var b = a.tagging_data;
        b != null &&
          (b = babelHelpers["extends"]({}, b, {
            shared_to_sponsor_status:
              b.shared_to_sponsor_status != null
                ? d("enumUtils").enumValueToKeyEnforcing(
                    b.shared_to_sponsor_status,
                    c("BrandedContentSharedToSponsorStatus")
                  )
                : null,
            sponsor_relationship:
              b.sponsor_relationship != null
                ? d("enumUtils").enumValueToKeyEnforcing(
                    b.sponsor_relationship,
                    c("BrandedContentSponsorRelationship")
                  )
                : null,
          }));
        return babelHelpers["extends"]({}, a, { tagging_data: b });
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler5 = function () {
        return {
          action_type_id: this.postData.action_type_id,
          branded_content_data:
            this.$GraphQLVideoPublisherVideoUploaderInputDataHandler23(),
          collaborator_id: this.postData.collaborator_id,
          composertags_place_name: this.postData.composertags_place_name,
          composertags_place: this.postData.composertags_place,
          composertags_product_items: this.postData.composertags_product_items,
          composertags_sponsor: this.postData.composertags_sponsor,
          composertags_with: this.postData.composertags_with,
          content_tags: this.postData.content_tags,
          cta_type:
            this.postData.cta_type != null
              ? d("enumUtils").enumValueToKeyEnforcing(
                  this.postData.cta_type,
                  c("CallToActionTypes")
                )
              : null,
          deal_id: this.postData.deal_id,
          direct_share_status:
            this.postData.direct_share_status != null
              ? d("enumUtils").enumValueToKeyEnforcing(
                  this.postData.direct_share_status,
                  c("BrandedContentSharedToSponsorStatus")
                )
              : null,
          episode_data_json: this.postData.episode_data_json,
          external_movie_data: this.postData.external_movie_data,
          feed_targeted_data:
            this.$GraphQLVideoPublisherVideoUploaderInputDataHandler24(),
          fan_funding_promotion_metadata:
            this.postData.fan_funding_promotion_metadata,
          free_form_tags: this.postData.free_form_tags,
          funded_content_program: this.postData.funded_content_program
            ? d("enumUtils").enumValueToKeyEnforcing(
                this.postData.funded_content_program,
                c("VideoFundedContentFlagProgram")
              )
            : null,
          fundraiser_for_story_charity_id:
            this.postData.fundraiser_for_story_charity_id,
          fundraiser_for_story_charity_type:
            this.postData.fundraiser_for_story_charity_type,
          game_id: this.postData.game_id,
          icon_id: this.postData.icon_id,
          is_explicitly_tagged_as_gaming_video:
            this.postData.is_explicitly_tagged_as_gaming_video,
          is_rewards_enabled: this.postData.is_rewards_enabled,
          is_stars_enabled_for_post: this.postData.is_stars_enabled_for_post,
          multilingual_specified_lang:
            this.postData.multilingual_specified_lang,
          multilingual_status_langs: this.postData.multilingual_status_langs,
          multilingual_statuses: this.postData.multilingual_statuses,
          object_id: this.postData.object_id,
          object_str: this.postData.object_str,
          playlistIDs: this.postData.playlistIDs,
          share_to_parent_page_option_selected:
            this.postData.share_to_parent_page_option_selected,
          send_dm_invite: this.postData.send_dm_invite,
          sponsor_relationship: this.postData.sponsor_relationship
            ? d("enumUtils").enumValueToKeyEnforcing(
                this.postData.sponsor_relationship,
                c("BrandedContentSponsorRelationship")
              )
            : null,
          targeted_privacy_data: JSON.stringify(
            this.postData.targeted_privacy_data
          ),
          background_ab_opted_in: this.postData.background_ab_opted_in,
          video_duration: this.postData.video_duration,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler24 = function () {
        var a = babelHelpers["extends"]({}, this.postData.feed_targeted_data);
        this.postData.relevant_until_date != null &&
          (a["relevant-until-date"] = this.postData.relevant_until_date);
        this.postData.relevant_until_time != null &&
          (a["relevant-until-time"] = this.postData.relevant_until_time);
        Object.keys(a).length === 0 && (a = void 0);
        return JSON.stringify(a);
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler6 = function () {
        return {
          commentating_permission:
            this.postData.commentating_permission != null
              ? d("enumUtils").enumValueToKeyEnforcing(
                  this.postData.commentating_permission,
                  c("VideoCommentatingPermission")
                )
              : null,
          crossposting_config: this.postData.crossposting_config,
          disturbing: this.postData.disturbing,
          embeddable: this.postData.embeddable,
          enable_drm: this.postData.enable_drm,
          exclude_from_watch: this.postData.exclude_from_watch,
          mature_content_rating:
            this.postData.mature_content_rating != null
              ? d("enumUtils").enumValueToKeyEnforcing(
                  this.postData.mature_content_rating,
                  c("VideoAssetMatureContentRating")
                )
              : null,
          no_story: this.postData.no_story,
          secret: this.postData.secret,
          shows_v2_episode_data: this.postData.shows_v2_episode_data,
          social_actions: this.postData.social_actions,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler7 = function () {
        return {
          is_receiving_stars_enabled: this.postData.is_receiving_stars_enabled,
          stars_goal_id: this.postData.stars_goal_id,
          stars_cue_trigger_timestamp:
            this.postData.stars_cue_trigger_timestamp,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler11 = function () {
        return {
          custom_labels: this.postData.custom_labels,
          external_video_id: this.postData.external_video_id,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler9 = function () {
        return { questions: this.postData.questions };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler10 = function () {
        return { polls: this.postData.polls };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler25 = function (a) {
        return a.getIsDefault() ? "captions_default" : "captions_file";
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler12 = function () {
        var a,
          b = this;
        a =
          (a = this.postData.captions) == null
            ? void 0
            : a.map(function (a, c) {
                return (
                  b.$GraphQLVideoPublisherVideoUploaderInputDataHandler25(a) + c
                );
              });
        return {
          autopublish_captions: this.postData.autopublish_captions,
          captions: a,
          should_review_all_captions: this.postData.should_review_all_captions,
          spoken_locale: this.postData.spoken_locale,
          autopublish_subtitles: this.postData.autopublish_subtitles,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler20 = function () {
        var a,
          b = this,
          c = {};
        (a = this.postData.captions) == null
          ? void 0
          : a.forEach(function (a, d) {
              c[
                b.$GraphQLVideoPublisherVideoUploaderInputDataHandler25(a) + d
              ] = a.getFile();
            });
        return c;
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler8 = function () {
        return {
          auto_reframe_aspect_ratios: this.postData.auto_reframe_aspect_ratios,
          auto_reframe_publish_mode: this.postData.auto_reframe_publish_mode,
          trailer_review_required: this.postData.trailer_review_required,
          trailer_generate_on: this.postData.trailer_generate_on,
          auto_reframe_mobile_only:
            this.postData.auto_reframe_mobile_only || !1,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler13 = function () {
        return {
          initialHeading: this.postData.initialHeading,
          initialPitch: this.postData.initialPitch,
          fov: this.postData.fov,
          guide_enabled: this.postData.guide_enabled,
          guide_keyframes: this.postData.guide_keyframes,
          enable_omnistab: this.postData.enable_omnistab,
          spherical: this.postData.spherical,
          projection:
            this.postData.projection != null
              ? d("enumUtils").enumValueToKeyEnforcing(
                  this.postData.projection,
                  c("VideoProjection")
                )
              : null,
          stereoMode:
            this.postData.stereoMode != null
              ? d("enumUtils").enumValueToKeyEnforcing(
                  this.postData.stereoMode,
                  c("VideoStereoFormat")
                )
              : null,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler14 = function () {
        return {
          premiere_time_ms: this.postData.premiere_time_ms,
          should_premiere: this.postData.should_premiere,
          premiere_in_living_room_video_ids:
            this.postData.premiere_in_living_room_video_ids,
          premiere_custom_profile_image_focus:
            this.postData.premiere_custom_profile_image_focus,
          feed_background_focus: this.postData.feed_background_focus,
          premiere_audience: this.postData.premiere_audience,
          premiere_is_loe: this.postData.premiere_is_loe,
          premiere_event_category_id: this.postData.premiere_event_category_id,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler15 = function () {
        return { location_preset_id: this.postData.location_preset_id };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler16 = function () {
        return {
          is_abtesting: this.postData.is_abtesting,
          should_publish_uuc: this.postData.should_publish_uuc,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler17 = function () {
        return {
          dubbing_enabled: this.postData.dubbing_enabled,
          dub_voice_speed: this.postData.dub_voice_speed,
          target_locale: this.postData.target_locale,
          voice_code: this.postData.voice_code,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler19 = function () {
        return {
          publish_as_non_uuc_reel: this.postData.publish_as_non_uuc_reel,
        };
      };
      e.$GraphQLVideoPublisherVideoUploaderInputDataHandler18 = function () {
        return this.postData.reel_publish_data;
      };
      return b;
    })(
      d("GraphQLVideoPublisherInputDataHandlerBase")
        .GraphQLVideoPublisherInputDataHandlerBase
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReelComposerReframeAspectRatio",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "NONE",
      "VERTICAL",
      "SQUARE",
      "FOUR_BY_FIVE",
      "MANUAL_9X16",
      "SPLIT_1X3",
    ]);
    f.ReelComposerReframeAspectRatio = a;
  },
  66
);
__d(
  "ReelCreationFlowUtils",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    var g = (a = b("$InternalEnum")).Mirrored([
      "PUBLISH_NOW",
      "SCHEDULE",
      "DRAFT",
    ]);
    c = a.Mirrored(["AUDIO", "VIDEO"]);
    d = a.Mirrored(["CREATE", "EDIT", "AB_TESTING"]);
    e = a.Mirrored(["CREATOR_STUDIO", "MBS"]);
    b = function (a) {
      switch (a) {
        case g.PUBLISH_NOW:
          return "published";
        case g.DRAFT:
          return "draft";
        case g.SCHEDULE:
          return "scheduled";
      }
    };
    f.ReelPublishType = g;
    f.ReelEnhancementType = c;
    f.ReelComposerMode = d;
    f.ReelsComposerEntrypoint = e;
    f.getReelPostStatusFromReelPublishType = b;
  },
  66
);
__d(
  "getEnumFromString",
  ["memoizeByReference"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      var b = {};
      Object.values(a).forEach(function (a) {
        b[a] = a;
      });
      return b;
    }
    var h = c("memoizeByReference")(a);
    function b(a, b) {
      if (b == null) return null;
      a = h(a);
      return a[b] != null ? a[b] : null;
    }
    g["default"] = b;
  },
  98
);
__d(
  "ReelComposerReelPublishMutation",
  [
    "DateConsts",
    "ISOCountryCode",
    "ReelComposerReelPublishMutation.graphql",
    "ReelComposerReframeAspectRatio",
    "ReelCreationFlowUtils",
    "RelayModern",
    "getEnumFromString",
    "requireDeferred",
    "uuidv4",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = c("requireDeferred")("ODS").__setRef(
        "ReelComposerReelPublishMutation"
      ),
      j = 1,
      k = h !== void 0 ? h : (h = b("ReelComposerReelPublishMutation.graphql"));
    function a(
      a,
      b,
      c,
      e,
      f,
      g,
      h,
      i,
      j,
      m,
      n,
      o,
      p,
      q,
      r,
      s,
      t,
      u,
      v,
      w,
      x,
      y,
      z,
      A,
      B,
      C,
      D,
      E,
      F,
      G,
      H,
      I,
      J,
      K,
      L,
      M,
      N
    ) {
      b = l(
        b,
        c,
        e,
        f,
        g,
        h,
        i,
        j,
        m,
        n,
        o,
        p,
        q,
        r,
        s,
        t,
        u,
        v,
        w,
        x,
        y,
        z,
        C,
        D,
        E,
        F,
        G,
        H,
        I,
        J,
        K,
        L,
        M,
        N
      );
      d("RelayModern").commitMutation(a, {
        mutation: k,
        variables: { input: b },
        onCompleted: A,
        onError: function (a) {
          return B();
        },
      });
    }
    function l(
      a,
      b,
      e,
      f,
      g,
      h,
      k,
      l,
      o,
      p,
      q,
      r,
      s,
      t,
      u,
      v,
      w,
      x,
      y,
      z,
      A,
      B,
      C,
      D,
      E,
      F,
      G,
      H,
      I,
      J,
      K,
      L,
      M,
      N
    ) {
      var O =
        h === d("ReelCreationFlowUtils").ReelPublishType.DRAFT || N === !0;
      h = h === d("ReelCreationFlowUtils").ReelPublishType.SCHEDULE && N !== !0;
      N = {
        title: l,
        enable_remix: g,
        is_draft: O,
        is_scheduled: h,
        scheduled_publish_time: k,
      };
      g =
        (w == null ? void 0 : w.id) != null
          ? {
              id: w.id,
              offset:
                ((l = x) != null ? l : w.audio.highlightStartTimeMs) /
                d("DateConsts").MS_PER_SEC,
              duration: (p - o) / d("DateConsts").MS_PER_SEC,
            }
          : null;
      O =
        q &&
        r ===
          d("ReelComposerReframeAspectRatio").ReelComposerReframeAspectRatio
            .NONE &&
        g === null &&
        v === 0;
      h = O
        ? null
        : {
            start_time_in_sec: o / d("DateConsts").MS_PER_SEC,
            end_time_in_sec: p / d("DateConsts").MS_PER_SEC,
          };
      l =
        (x =
          C == null
            ? void 0
            : (k = C.countries) == null
            ? void 0
            : k
                .map(function (a) {
                  return c("getEnumFromString")(c("ISOCountryCode"), a);
                })
                .filter(Boolean)) != null
          ? x
          : [];
      q = ((w = C == null ? void 0 : C.regions) != null ? w : []).map(function (
        a
      ) {
        var b;
        return {
          key: a.key,
          country: (b = a.country) != null ? b : "",
          name: (b = a.name) != null ? b : "",
        };
      });
      l.length > 0 &&
        i.onReady(function (a) {
          a.bumpEntityKey(5907, "fb_stories_web", "geo_gating.reel.create", 1);
        });
      return {
        video_id: (O = a) != null ? O : "",
        should_skip_encoding: (o = b) != null ? o : !1,
        should_enforce_video_editor_path: (p = e) != null ? p : !1,
        metadata: N,
        trim_timestamps: h,
        reframe_aspect_ratio: m(r),
        client_info: f,
        client_mutation_id:
          (k = f == null ? void 0 : f.client_session_id) != null
            ? k
            : c("uuidv4")(),
        reframe_aggressiveness: j,
        video_collaboration: { collaborators: s },
        video_thumbnail_file_id: t,
        thumbnail_type: u.toString(),
        audio_enhancement: { processing: v },
        music_overlay: g,
        placements: y,
        ig_business_id: z,
        manual_reframe: A ? n(A) : null,
        audio_mixing: babelHelpers["extends"]({}, B),
        targeted_privacy_data:
          l.length > 0 || q.length > 0
            ? { age_min: 0, geo_locations: { countries: l, regions: q } }
            : null,
        overlay: D,
        main_track: E,
        original_resolution: F,
        is_receiving_stars_enabled: G,
        linked_vod_data: H != null ? { target_video_id: H } : null,
        videolist: I != null ? { videolist_id: I } : null,
        hashtags_logging_data: {
          added_hashtags: ((x = J) != null ? x : []).map(function (a) {
            return { hashtag: a.hashtag, tool_type: a.toolType };
          }),
        },
        fb_monetization_data: K,
        embeddable: L,
        total_video_duration: M,
      };
    }
    e = { aspect_ratio_denominator: 16, aspect_ratio_numerator: 9 };
    function m(a) {
      switch (a) {
        case d("ReelComposerReframeAspectRatio").ReelComposerReframeAspectRatio
          .NONE:
          return null;
        case d("ReelComposerReframeAspectRatio").ReelComposerReframeAspectRatio
          .MANUAL_9X16:
        case d("ReelComposerReframeAspectRatio").ReelComposerReframeAspectRatio
          .SPLIT_1X3:
        case d("ReelComposerReframeAspectRatio").ReelComposerReframeAspectRatio
          .VERTICAL:
          return { aspect_ratio_denominator: 16, aspect_ratio_numerator: 9 };
        case d("ReelComposerReframeAspectRatio").ReelComposerReframeAspectRatio
          .SQUARE:
          return { aspect_ratio_denominator: 1, aspect_ratio_numerator: 1 };
        case d("ReelComposerReframeAspectRatio").ReelComposerReframeAspectRatio
          .FOUR_BY_FIVE:
          return { aspect_ratio_denominator: 5, aspect_ratio_numerator: 4 };
      }
    }
    function n(a) {
      return {
        left: a == null ? void 0 : a.crop_section_relative_top_x,
        right: a
          ? a.crop_section_relative_top_x + a.crop_section_relative_width
          : void 0,
        top: a == null ? void 0 : a.crop_section_relative_top_y,
        bottom: a
          ? a.crop_section_relative_top_y + a.crop_section_relative_height
          : void 0,
      };
    }
    g.reelPublishMutation = a;
    g.getReelPublishInputObject = l;
    g.DEFAULT_ASPECT_RATIO_PARAMS = e;
    g.getAspectRatioParams = m;
  },
  98
);
__d(
  "VideoComposerVideoPublishingMutation",
  [
    "RelayAPIConfig",
    "VideoComposerVideoPublishingMutation.graphql",
    "cr:1012418",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = 1e3 * 90,
      j =
        h !== void 0
          ? h
          : (h = b("VideoComposerVideoPublishingMutation.graphql"));
    function a(a, d, e, f, g) {
      var h = c("RelayAPIConfig").fetchTimeout;
      c("RelayAPIConfig").fetchTimeout = i;
      return b("cr:1012418").commitMutation(d, {
        uploadables: e,
        mutation: j,
        variables: { input: a },
        onCompleted: function (a) {
          (c("RelayAPIConfig").fetchTimeout = h), f(a);
        },
        onError: function (a) {
          (c("RelayAPIConfig").fetchTimeout = h), g(a);
        },
      });
    }
    g.commit = a;
  },
  98
);
__d(
  "VideoComposerVideoPublisher",
  [
    "ReelComposerReelPublishMutation",
    "ReelComposerReframeAspectRatio",
    "ReelCreationFlowUtils",
    "RelayFBEnvironmentFactory",
    "VideoComposerVideoPublishingMutation",
    "err",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a(a) {
        (this.$1 = a.mapPostDataToGraphQLInputObject()),
          (this.$3 = a.hasAPISupport()),
          (this.$2 = a.uploadables());
      }
      var b = a.prototype;
      b.publish = function (a, b) {
        if (this.$1.publish_as_reel === !0) {
          var e,
            f,
            g,
            h = c("RelayFBEnvironmentFactory").getForActorID(
              this.$1.basic_data.target_id
            );
          e = ((e = this.$1.post_status_data) == null ? void 0 : e.draft)
            ? d("ReelCreationFlowUtils").ReelPublishType.DRAFT
            : ((e = this.$1.post_status_data) == null ? void 0 : e.scheduled)
            ? d("ReelCreationFlowUtils").ReelPublishType.SCHEDULE
            : d("ReelCreationFlowUtils").ReelPublishType.PUBLISH_NOW;
          var i = null;
          f = (f = this.$1.post_status_data) == null ? void 0 : f.future_date;
          g = (g = this.$1.post_status_data) == null ? void 0 : g.future_time;
          f != null && g != null && (i = +new Date(f).getTime() + +g * 1e3);
          d("ReelComposerReelPublishMutation").reelPublishMutation(
            h,
            (f = this.$1.basic_data.video_id) != null ? f : "",
            !1,
            null,
            {
              entry_point: "CS_IG_CROSSPOST_REEL",
              composer_entry_point: "CS_IG_CROSSPOST_REEL",
              product: "CREATOR_STUDIO",
              feature: "IG_REELS_SHARED_TO_FB",
            },
            !1,
            e,
            i != null ? i / 1e3 : 0,
            (g = this.$1.basic_data.xhpc_message) != null ? g : "",
            0,
            0,
            !0,
            d("ReelComposerReframeAspectRatio").ReelComposerReframeAspectRatio
              .NONE,
            [],
            null,
            "generated_default",
            0,
            null,
            null,
            ["FACEBOOK_REEL"],
            null,
            null,
            null,
            function () {},
            function () {}
          );
        } else {
          if (!this.$3)
            throw c("err")(
              "This api does not support your publishing use case"
            );
          d("VideoComposerVideoPublishingMutation").commit(
            this.$1,
            c("RelayFBEnvironmentFactory").getForActorID(
              this.$1.basic_data.target_id
            ),
            this.$2,
            a,
            b
          );
        }
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "VideoUploadGraphQLPostRequestManager",
  [
    "FBLogger",
    "GraphQLVideoPublisherInputDataHandlerBase",
    "GraphQLVideoPublisherVideoUploaderInputDataHandler",
    "VideoComposerVideoPublisher",
    "clearTimeout",
    "cr:909282",
    "err",
    "mixin",
    "setTimeout",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, c, d, e) {
        var f;
        f = a.call(this) || this;
        f.$VideoUploadGraphQLPostRequestManager1 = 0;
        f.$VideoUploadGraphQLPostRequestManager2 = 0;
        f.$VideoUploadGraphQLPostRequestManager3 = 0;
        f.$VideoUploadGraphQLPostRequestManager4 = 0;
        f.$VideoUploadGraphQLPostRequestManager5 = 0;
        f.$VideoUploadGraphQLPostRequestManager6 = 0;
        f.$VideoUploadGraphQLPostRequestManager7 = null;
        f.$VideoUploadGraphQLPostRequestManager8 = null;
        f.$VideoUploadGraphQLPostRequestManager9 = !1;
        f.$VideoUploadGraphQLPostRequestManager1 = b;
        f.$VideoUploadGraphQLPostRequestManager2 = c;
        f.$VideoUploadGraphQLPostRequestManager3 = 0;
        f.$VideoUploadGraphQLPostRequestManager4 = d;
        f.$VideoUploadGraphQLPostRequestManager5 = e;
        f.$VideoUploadGraphQLPostRequestManager6 = 0;
        return f;
      }
      var e = b.prototype;
      e.sendRequest = function (a) {
        this.$VideoUploadGraphQLPostRequestManager8 = a;
        if (this.$VideoUploadGraphQLPostRequestManager9) {
          c("FBLogger")("video_publish_graphql").info(
            "Sending publishing request again while processing another request"
          );
          return;
        }
        this.$VideoUploadGraphQLPostRequestManager10();
        this.inform("request-started");
      };
      e.clearRequest = function () {
        (this.$VideoUploadGraphQLPostRequestManager9 = !1),
          (this.$VideoUploadGraphQLPostRequestManager6 = 0),
          (this.$VideoUploadGraphQLPostRequestManager3 = 0);
      };
      e.$VideoUploadGraphQLPostRequestManager10 = function () {
        var a = this.$VideoUploadGraphQLPostRequestManager8;
        if (a == null) return;
        c("clearTimeout")(this.$VideoUploadGraphQLPostRequestManager7);
        this.$VideoUploadGraphQLPostRequestManager7 = null;
        var b = a.getMetadata();
        a = this.__createRequestData(a);
        b = new (c("GraphQLVideoPublisherVideoUploaderInputDataHandler"))(b, a);
        this.$VideoUploadGraphQLPostRequestManager9 = !0;
        a = new (c("VideoComposerVideoPublisher"))(b);
        a.publish(
          this.$VideoUploadGraphQLPostRequestManager11.bind(this),
          this.$VideoUploadGraphQLPostRequestManager12.bind(this)
        );
      };
      e.__createRequestData = function (a) {
        var b = a.getVideoID(),
          d = a.getTargetID();
        if (b == null) throw c("err")("Video id cannot be null");
        if (d == null) throw c("err")("Target id cannot be null");
        return {
          video_id: b,
          target_id: d,
          source: "COMPOSER",
          waterfall_id: a.getWaterfallID() || "",
          creator_product: a.getCreatorProduct(),
          composer_entry_point_ref:
            a.getComposerEntryPointRef && a.getComposerEntryPointRef(),
          composer_dialog_version: a.getComposerDialogVersion(),
          has_file_been_replaced: a.getHasFileBeenReplaced(),
          supports_chunking: a.getSupportsChunking(),
        };
      };
      e.$VideoUploadGraphQLPostRequestManager11 = function (a) {
        this.inform("request-finished", {
          video_asset_id:
            (a = a.video_publish) == null ? void 0 : a.video_asset_id,
        });
        this.clearRequest();
      };
      e.$VideoUploadGraphQLPostRequestManager13 = function (a) {
        this.inform("request-failed", {
          error_code: a.number,
          error_description: a.message,
          error_summary: a.name,
          error_object: a,
        }),
          this.clearRequest();
      };
      e.$VideoUploadGraphQLPostRequestManager12 = function (a) {
        this.$VideoUploadGraphQLPostRequestManager14(a) &&
        this.$VideoUploadGraphQLPostRequestManager6 <
          this.$VideoUploadGraphQLPostRequestManager4
          ? (c("FBLogger")("video_publish_graphql").info(
              "retry publishing for error: %s",
              a.stack
            ),
            this.$VideoUploadGraphQLPostRequestManager6++,
            this.$VideoUploadGraphQLPostRequestManager15(
              this.$VideoUploadGraphQLPostRequestManager16(
                this.$VideoUploadGraphQLPostRequestManager5,
                this.$VideoUploadGraphQLPostRequestManager6
              )
            ))
          : this.$VideoUploadGraphQLPostRequestManager13(a);
      };
      e.$VideoUploadGraphQLPostRequestManager16 = function (a, b) {
        return Math.pow(a, b) * 1e3;
      };
      e.$VideoUploadGraphQLPostRequestManager15 = function (a) {
        c("clearTimeout")(this.$VideoUploadGraphQLPostRequestManager7),
          (this.$VideoUploadGraphQLPostRequestManager7 = c("setTimeout")(
            this.$VideoUploadGraphQLPostRequestManager10.bind(this),
            a
          ));
      };
      e.$VideoUploadGraphQLPostRequestManager14 = function (a) {
        a = a.toString();
        return a.includes("NetworkTransportError") ||
          a.includes("NetworkTimeoutError") ||
          a.includes("NetworkRequestError")
          ? !0
          : !1;
      };
      e.hasAPISupport = function (a) {
        return d("GraphQLVideoPublisherInputDataHandlerBase").hasAPISupport(a);
      };
      return b;
    })(c("mixin")(b("cr:909282")));
    g["default"] = a;
  },
  98
);
__d(
  "FileForm",
  [
    "ArbiterMixin",
    "AsyncRequest",
    "AsyncResponse",
    "AsyncUploadRequest",
    "BehaviorsMixin",
    "DOMQuery",
    "DataStore",
    "Event",
    "FBLogger",
    "Form",
    "Parent",
    "isElementNode",
    "mixin",
    "setTimeout",
    "shield",
  ],
  function (a, b, c, d, e, f, g) {
    function h(a) {
      var b = {};
      a = d("DOMQuery").scry(a, 'input[type="file"]');
      a.forEach(function (a) {
        b[a.name] = a.files;
      });
      return b;
    }
    function i(a) {
      a = d("DOMQuery").scry(a, 'input[type="file"]');
      a.forEach(function (a) {
        a.files = null;
      });
    }
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, e, f) {
        var g;
        g = a.call(this) || this;
        g._allowCrossOrigin = !1;
        g._allowCrossPageTransition = !1;
        g._uploadInParallel = !1;
        g._handleSubmit = function (a) {
          if (a.isDefaultPrevented() || a.getTarget() !== g._form) return;
          if (g.inform("submit") === !1) {
            a.prevent();
            return;
          }
          g.submit(a);
        };
        g._click = function (a) {
          a = a.getTarget();
          while (c("isElementNode")(a)) {
            if (a.type === "submit") {
              g._clickTarget = a;
              c("setTimeout")(g._unclick, 0);
              break;
            }
            a = a.parentNode;
          }
        };
        g._unclick = function () {
          g._clickTarget = null;
        };
        g.initial = function (a) {
          return g.inform("initial", { upload: a });
        };
        if (b.getAttribute("rel") === "async")
          throw c("FBLogger")("FileForm", "primer-only").mustfixThrow(
            "FileForm cannot be used with Primer forms."
          );
        if ((b.getAttribute("method") || "").toUpperCase() !== "POST")
          throw c("FBLogger")("FileForm", "post-only").mustfixThrow(
            "FileForm must be used with POST forms."
          );
        g._form = b;
        g._previousEncoding = g._form.enctype;
        g._form.enctype = g._form.encoding = "multipart/form-data";
        g._files = null;
        g._customHeader = {};
        e && g.enableBehaviors(e);
        g._options = f || {};
        g.setAllowCrossOrigin(g._options.allowCrossOrigin);
        g.setAllowCrossPageTransition(g._options.allowCrossPageTransition);
        g.setUploadInParallel(g._options.uploadInParallel);
        g.setConcurrentLimit(g._options.concurrentLimit);
        g.setPreprocessHandler(g._options.preprocessHandler);
        g.setNetworkErrorRetryLimit(g._options.networkErrorRetryLimit);
        g._listeners = [
          c("Event").listen(
            document.documentElement,
            "submit",
            g._handleSubmit
          ),
          c("Event").listen(g._form, "click", g._click),
        ];
        d("DataStore").set(
          g._form,
          "FileForm",
          babelHelpers.assertThisInitialized(g)
        );
        return g;
      }
      var e = b.prototype;
      e.getRoot = function () {
        return this._form;
      };
      e.setAllowCrossOrigin = function (a) {
        this._allowCrossOrigin = !!a;
        return this;
      };
      e.setAllowCrossPageTransition = function (a) {
        this._allowCrossPageTransition = !!a;
        return this;
      };
      e.setUploadInParallel = function (a) {
        this._uploadInParallel = !!a;
        return this;
      };
      e.setConcurrentLimit = function (a) {
        this._concurrentLimit = a;
        return this;
      };
      e.setCustomHttpHeader = function (a, b) {
        this._customHeader[a] = b;
        return this;
      };
      e.setPreprocessHandler = function (a) {
        this._preprocessHandler = a;
        return this;
      };
      e.setNetworkErrorRetryLimit = function (a) {
        this._retryLimit = a;
        return this;
      };
      e.setFiles = function (a) {
        this._files = a;
        return this;
      };
      e.submit = function (a) {
        var b = this,
          e;
        if (this._uploadInParallel && c("AsyncUploadRequest").isSupported()) {
          e = new (c("AsyncUploadRequest"))()
            .setPreprocessHandler(this._preprocessHandler)
            .setData(d("Form").serialize(this._form, this._clickTarget))
            .setNetworkErrorRetryLimit(this._retryLimit);
          for (var f in this._customHeader)
            e.setCustomHttpHeader(f, this._customHeader[f]);
          this._concurrentLimit && e.setLimit(this._concurrentLimit);
          this._files ? e.setFiles(this._files) : e.setFiles(h(this._form));
          var g = [
            e.subscribe("progress", function (a, c) {
              b.progress(c, c.getProgressEvent());
            }),
            e.subscribe("initial", function (a, c) {
              b.initial(c);
            }),
            e.subscribe("success", function (a, c) {
              b.success(c, c.getResponse());
            }),
            e.subscribe("start", function (a, c) {
              b.inform("start", { upload: c });
            }),
            e.subscribe("failure", function (a, c) {
              b.failure(c, c.getResponse());
              return !1;
            }),
            e.subscribe("complete", function () {
              while (g.length) g.pop().unsubscribe();
            }),
          ];
        } else
          (function () {
            var a,
              f = b._files;
            if (f) {
              a = d("Form").createFormData(
                d("Form").serialize(b._form, b._clickTarget)
              );
              var g = c("AsyncUploadRequest").parseFiles(f);
              f = function (b) {
                var c = g[b];
                c.length === 1
                  ? a.append(b, c[0])
                  : ((b += "[]"),
                    c.forEach(function (c) {
                      a.append(b, c);
                    }));
                b;
              };
              for (var h in g) f(h);
            } else a = d("Form").createFormData(b._form, b._clickTarget);
            e = new (c("AsyncRequest"))()
              .setRawData(a)
              .setHandler(function (a) {
                return b.success(null, a);
              })
              .setErrorHandler(function (a) {
                return b.failure(null, a);
              })
              .setUploadProgressHandler(function (a) {
                return b.progress(null, a);
              })
              .setInitialHandler(c("shield")(b.initial, b, null));
            b.inform("start", { upload: null });
          })();
        e.setAllowCrossOrigin(this._allowCrossOrigin)
          .setAllowCrossPageTransition(this._allowCrossPageTransition)
          .setRelativeTo(this._form)
          .setStatusElement(this._getStatusElement())
          .setURI(this._form.action)
          .send();
        this._request = e;
        a && a.prevent();
      };
      e.success = function (a, b) {
        b = { response: b, upload: a };
        this.inform("success", b) !== !1 &&
          c("Event").fire(this._form, "success", b);
        this._cleanup();
      };
      e.failure = function (a, b) {
        a = { response: b, upload: a };
        this.inform("failure", a) !== !1 &&
          c("Event").fire(this._form, "error", a) !== !1 &&
          c("AsyncResponse").defaultErrorHandler(b);
        this._cleanup();
      };
      e.progress = function (a, b) {
        this.inform("progress", { event: b, upload: a });
      };
      e.abort = function () {
        this._request && (this._request.abort(), this._cleanup());
      };
      e.clear = function () {
        i(this._form);
      };
      e.destroy = function () {
        this._cleanup();
        while (this._listeners && this._listeners.length)
          this._listeners.pop().remove();
        this._listeners = null;
        this._form.enctype = this._form.encoding = this._previousEncoding;
        d("DataStore").remove(this._form, "FileForm");
      };
      e._cleanup = function () {
        this._request = null;
      };
      e._getStatusElement = function () {
        return d("Parent").byClass(this._form, "stat_elem") || this._form;
      };
      b.getInstance = function (a) {
        return d("DataStore").get(a, "FileForm");
      };
      return b;
    })(c("mixin")(c("ArbiterMixin"), c("BehaviorsMixin")));
    Object.assign(a, {
      EVENTS: ["start", "submit", "initial", "progress", "success", "failure"],
    });
    g["default"] = a;
  },
  98
);
__d(
  "submitForm",
  ["DOM"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      var b = a.querySelector('input[type="submit"]');
      b != null
        ? b.click()
        : ((b = c("DOM").create("input", {
            type: "submit",
            className: "hidden_elem",
          })),
          c("DOM").appendContent(a, b),
          b.click(),
          c("DOM").remove(b));
    }
    g["default"] = a;
  },
  98
);
__d(
  "VideoUploadRequest",
  [
    "AsyncRequest",
    "DOM",
    "DTSG",
    "FileForm",
    "Form",
    "VideoUploadFeatureDetector",
    "emptyFunction",
    "flattenPHPQueryData",
    "submitForm",
  ],
  function (a, b, c, d, e, f) {
    var g = "video";
    a = (function () {
      "use strict";
      function a(a) {
        this.$1 = a;
        this.$2 = null;
        this.$3 = !1;
        this.$4 = null;
        this.$5 = null;
        this.$6 = null;
        this.$7 = null;
        this.$8 = a = b("emptyFunction");
        this.$9 = a;
        this.$10 = a;
        this.$11 = a;
        this.$12 = null;
      }
      var c = a.prototype;
      c.setAllowCrossOrigin = function (a) {
        this.$3 = a;
        return this;
      };
      c.setData = function (a) {
        this.$4 = a;
        return this;
      };
      c.setWaterfallID = function (a) {
        this.$6 = a;
        return this;
      };
      c.setSuccessHandler = function (a) {
        this.$8 = a;
        return this;
      };
      c.setErrorHandler = function (a) {
        this.$9 = a;
        return this;
      };
      c.setTransportErrorHandler = function (a) {
        this.$10 = a;
        return this;
      };
      c.setUploadProgressHandler = function (a) {
        this.$11 = a;
        return this;
      };
      c.setTimeoutHandler = function (a, b) {
        this.$7 = a;
        this.$12 = b;
        return this;
      };
      c.setThumbnail = function (a) {
        this.$13 = a;
        return this;
      };
      c.setCustomProfileImage = function (a) {
        this.$14 = a;
        return this;
      };
      c.setCustomBackgroundImage = function (a) {
        this.$15 = a;
        return this;
      };
      c.setFeedBackgroundImage = function (a) {
        this.$16 = a;
        return this;
      };
      c.setHandle = function (a) {
        this.$5 = a;
        return this;
      };
      c.setCaptions = function (a) {
        this.$17 = a;
        return this;
      };
      c.setPollOptionImages = function (a) {
        this.$18 = a;
        return this;
      };
      c.send = function () {
        if (this.$2)
          throw new Error("An upload request is already in progress.");
        if (b("VideoUploadFeatureDetector").supportsXHR()) {
          this.$2 = this.$19();
          if (
            this.$13 ||
            this.$17 ||
            this.$14 ||
            this.$15 ||
            this.$16 ||
            this.$18
          ) {
            var a = new FormData();
            this.$13 && a.append("thumb", this.$13);
            this.$14 && a.append("schedule_custom_profile_image", this.$14);
            this.$15 && a.append("schedule_custom_background_image", this.$15);
            this.$16 && a.append("schedule_feed_background_image", this.$16);
            this.$17 &&
              this.$17.forEach(function (b, c) {
                c = b.getIsDefault() ? "captions_default" : "captions_file" + c;
                a.append(c, b.getFile());
              });
            if (this.$18) {
              var c = this.$18;
              Object.keys(c).forEach(function (b) {
                a.append(b, c[b]);
              });
            }
            if (this.$4) {
              var d = b("flattenPHPQueryData")(this.$4);
              Object.keys(d).forEach(function (b) {
                a.append(b, d[b]);
              });
            }
            this.$2.setRawData(a);
          }
          this.$2.send();
        } else (this.$2 = this.$20()), this.$21(this.$2);
      };
      c.sendChunk = function (a) {
        if (this.$2)
          throw new Error("An upload request is already in progress.");
        var b = new FormData();
        this.$5
          ? b.append("fbuploader_video_file_chunk", this.$5)
          : b.append("video_file_chunk", a);
        this.$2 = this.$19();
        this.$2.setRawData(b);
        this.$2.send();
      };
      c.sendFile = function (a) {
        if (this.$2)
          throw new Error("An upload request is already in progress.");
        this.$2 = this.$20();
        var c = a.cloneNode(!1);
        a.name = g;
        b("DOM").replace(a, c);
        b("DOM").appendContent(this.$2.getRoot(), a);
        this.$21(this.$2);
        a.name = c.name;
        b("DOM").replace(c, a);
      };
      c.abort = function () {
        if (!this.$2) return;
        this.$2.abort();
        this.$2 = null;
      };
      c.$19 = function () {
        var a = this.__getAsyncRequest()
          .setAllowCrossOrigin(this.$3)
          .setURI(this.$1)
          .setData(this.$4)
          .setRequestHeader("X_FB_VIDEO_WATERFALL_ID", this.$6)
          .setHandler(this.$8)
          .setErrorHandler(this.$9)
          .setTransportErrorHandler(this.$10)
          .setUploadProgressHandler(this.$11);
        this.$12 && a.setTimeoutHandler(this.$7, this.$12);
        return a;
      };
      c.__getAsyncRequest = function () {
        return new (b("AsyncRequest"))();
      };
      c.$20 = function () {
        var a = b("DOM").create("form", { action: this.$1, method: "POST" });
        b("Form").createHiddenInputs(
          babelHelpers["extends"]({ fb_dtsg: b("DTSG").getToken() }, this.$4),
          a
        );
        a = new (b("FileForm"))(a, null, { allowCrossOrigin: this.$3 });
        a.subscribe("success", this.$22.bind(this));
        a.subscribe("failure", this.$23.bind(this));
        a.subscribe("progress", this.$24.bind(this));
        return a;
      };
      c.$21 = function (a) {
        b("DOM").appendContent(document.body, a.getRoot()),
          b("submitForm")(a.getRoot());
      };
      c.$22 = function (a, b) {
        this.$8(b.response);
      };
      c.$23 = function (a, b) {
        this.$9(b.response);
      };
      c.$24 = function (a, b) {
        this.$11(b.event);
      };
      return a;
    })();
    e.exports = a;
  },
  null
);
__d(
  "VideoUploadPostRequestManager",
  [
    "VideoUploadLogger",
    "VideoUploadRequest",
    "clearTimeout",
    "cr:909282",
    "mixin",
    "setTimeout",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, c, d, e, f) {
        var g;
        g = a.call(this) || this;
        g.$VideoUploadPostRequestManager2 = b;
        g.$VideoUploadPostRequestManager3 = c;
        g.$VideoUploadPostRequestManager4 = d;
        g.$VideoUploadPostRequestManager5 = 0;
        g.$VideoUploadPostRequestManager6 = e;
        g.$VideoUploadPostRequestManager7 = f;
        g.$VideoUploadPostRequestManager8 = 0;
        return g;
      }
      var d = b.prototype;
      d.$VideoUploadPostRequestManager9 = function () {
        return this.$VideoUploadPostRequestManager1
          ? new (c("VideoUploadLogger"))({
              source: this.$VideoUploadPostRequestManager1.getSource(),
              waterfall_id:
                this.$VideoUploadPostRequestManager1.getWaterfallID(),
              target_id: this.$VideoUploadPostRequestManager1.getTargetID(),
              composer_entry_point_ref:
                this.$VideoUploadPostRequestManager1.getComposerEntryPointRef &&
                this.$VideoUploadPostRequestManager1.getComposerEntryPointRef(),
            })
          : null;
      };
      d.getRequest = function () {
        return this.$VideoUploadPostRequestManager10;
      };
      d.sendRequest = function (a) {
        this.$VideoUploadPostRequestManager1 = a;
        if (this.$VideoUploadPostRequestManager10) {
          var b = this.$VideoUploadPostRequestManager9();
          b && b.logEvent(c("VideoUploadLogger").EVENT_DUPLICATE_POST_REQUEST);
          return;
        }
        this.$VideoUploadPostRequestManager11 = babelHelpers["extends"](
          {},
          a.getMetadata(),
          this.__createRequestData(a)
        );
        this.$VideoUploadPostRequestManager12 =
          this.$VideoUploadPostRequestManager11.thumb;
        this.$VideoUploadPostRequestManager13 =
          this.$VideoUploadPostRequestManager11.schedule_custom_profile_image;
        this.$VideoUploadPostRequestManager14 =
          this.$VideoUploadPostRequestManager11.schedule_custom_background_image;
        this.$VideoUploadPostRequestManager15 =
          this.$VideoUploadPostRequestManager11.schedule_feed_background_image;
        delete this.$VideoUploadPostRequestManager11.thumb;
        this.$VideoUploadPostRequestManager16 =
          this.$VideoUploadPostRequestManager11.captions;
        delete this.$VideoUploadPostRequestManager11.captions;
        this.$VideoUploadPostRequestManager17 = a.getWaterfallID();
        this.$VideoUploadPostRequestManager18 =
          this.$VideoUploadPostRequestManager11.pollImages;
        this.$VideoUploadPostRequestManager19();
        this.inform("request-started");
      };
      d.$VideoUploadPostRequestManager19 = function () {
        c("clearTimeout")(this.$VideoUploadPostRequestManager20),
          (this.$VideoUploadPostRequestManager20 = null),
          (this.$VideoUploadPostRequestManager10 = this.__getVideoUploadRequest(
            this.$VideoUploadPostRequestManager2
          )
            .setAllowCrossOrigin(!0)
            .setData(this.$VideoUploadPostRequestManager11)
            .setThumbnail(this.$VideoUploadPostRequestManager12)
            .setCustomProfileImage(this.$VideoUploadPostRequestManager13)
            .setCustomBackgroundImage(this.$VideoUploadPostRequestManager14)
            .setFeedBackgroundImage(this.$VideoUploadPostRequestManager15)
            .setCaptions(this.$VideoUploadPostRequestManager16)
            .setWaterfallID(this.$VideoUploadPostRequestManager17)
            .setPollOptionImages(this.$VideoUploadPostRequestManager18)
            .setSuccessHandler(this.$VideoUploadPostRequestManager21.bind(this))
            .setErrorHandler(this.$VideoUploadPostRequestManager22.bind(this))
            .setTransportErrorHandler(
              this.$VideoUploadPostRequestManager23.bind(this)
            )),
          this.$VideoUploadPostRequestManager10.send();
      };
      d.__createRequestData = function (a) {
        return {
          video_id: a.getVideoID(),
          target_id: a.getTargetID(),
          source: a.getSource(),
          waterfall_id: a.getWaterfallID(),
          creator_product: a.getCreatorProduct(),
          composer_entry_point_ref:
            a.getComposerEntryPointRef && a.getComposerEntryPointRef(),
          composer_dialog_version: a.getComposerDialogVersion(),
          has_file_been_replaced: a.getHasFileBeenReplaced(),
          supports_chunking: a.getSupportsChunking(),
        };
      };
      d.__getVideoUploadRequest = function (a) {
        return new (c("VideoUploadRequest"))(a);
      };
      d.clearRequest = function () {
        (this.$VideoUploadPostRequestManager10 = null),
          (this.$VideoUploadPostRequestManager8 = 0),
          (this.$VideoUploadPostRequestManager5 = 0);
      };
      d.isInProgress = function () {
        return !!this.$VideoUploadPostRequestManager10;
      };
      d.$VideoUploadPostRequestManager24 = function (a) {
        c("clearTimeout")(this.$VideoUploadPostRequestManager20),
          (this.$VideoUploadPostRequestManager20 = c("setTimeout")(
            this.$VideoUploadPostRequestManager19.bind(this),
            a
          ));
      };
      d.$VideoUploadPostRequestManager25 = function (a, b) {
        return Math.pow(a, b) * 1e3;
      };
      d.$VideoUploadPostRequestManager21 = function (a) {
        a = a.getPayload();
        this.inform("request-finished", {
          video_id: a.video_id,
          video_asset_id: a.video_asset_id,
          container_type: a.container_type,
          transport_retries: this.$VideoUploadPostRequestManager5,
          server_retries: this.$VideoUploadPostRequestManager8,
          premiere_destination_video_id: a.premiere_destination_video_id,
        });
        this.clearRequest();
      };
      d.$VideoUploadPostRequestManager26 = function (a) {
        this.inform("request-failed", {
          error_code: a.getError(),
          error_description: a.getErrorDescription(),
          error_summary: a.getErrorSummary(),
          transport_retries: this.$VideoUploadPostRequestManager5,
          server_retries: this.$VideoUploadPostRequestManager8,
          error_is_silent: a.isSilent(),
          error_is_transient: a.isTransient(),
          www_request_id:
            (a = a.getPayload()) == null ? void 0 : a.__www_request_id__,
        });
        this.clearRequest();
      };
      d.$VideoUploadPostRequestManager22 = function (a) {
        this.$VideoUploadPostRequestManager10 = null;
        this.$VideoUploadPostRequestManager5 = 0;
        var b = this.$VideoUploadPostRequestManager9();
        if (b) {
          var d = {
            server_retries: this.$VideoUploadPostRequestManager8,
            extra_data: { failure_is_transient: a.isTransient() },
          };
          b.logEvent(
            c("VideoUploadLogger").EVENT_HANDLING_SERVER_FAILURE_RESPONSE,
            d
          );
        }
        a.isTransient() &&
        this.$VideoUploadPostRequestManager8 <
          this.$VideoUploadPostRequestManager6
          ? (this.$VideoUploadPostRequestManager8++,
            this.$VideoUploadPostRequestManager24(
              this.$VideoUploadPostRequestManager25(
                this.$VideoUploadPostRequestManager7,
                this.$VideoUploadPostRequestManager8
              )
            ))
          : this.$VideoUploadPostRequestManager26(a);
      };
      d.$VideoUploadPostRequestManager23 = function (a) {
        var b = this.$VideoUploadPostRequestManager9();
        if (b) {
          var d = {
            extra_data: {
              transport_retries: this.$VideoUploadPostRequestManager5,
            },
          };
          b.logEvent(
            c("VideoUploadLogger").EVENT_HANDLING_TRANSPORT_FAILURE_RESPONSE,
            d
          );
        }
        this.$VideoUploadPostRequestManager3 === 0 ||
        this.$VideoUploadPostRequestManager5 >=
          this.$VideoUploadPostRequestManager3
          ? this.$VideoUploadPostRequestManager26(a)
          : (this.$VideoUploadPostRequestManager5++,
            (this.$VideoUploadPostRequestManager10 = null),
            this.$VideoUploadPostRequestManager24(
              this.$VideoUploadPostRequestManager25(
                this.$VideoUploadPostRequestManager4,
                this.$VideoUploadPostRequestManager5
              )
            ));
      };
      return b;
    })(c("mixin")(b("cr:909282")));
    d = a;
    g["default"] = d;
  },
  98
);
__d(
  "VideoUploadRequestContext",
  [],
  function (a, b, c, d, e, f) {
    a = (function () {
      function a() {
        var a = this;
        this.$14 = !1;
        this.$21 = 0;
        this.$22 = !1;
        this.$23 = !1;
        this.$26 = !1;
        this.getComposerEntryPointRef = function () {
          return a.$11;
        };
        this.reset();
      }
      var b = a.prototype;
      b.setFile = function (a) {
        this.$1 = a;
        return this;
      };
      b.getFile = function () {
        return this.$1;
      };
      b.setMetadata = function (a) {
        this.$24 = a;
        return this;
      };
      b.getMetadata = function () {
        return this.$24;
      };
      b.setVideoID = function (a) {
        this.$2 = a;
        return this;
      };
      b.getVideoID = function () {
        return this.$2;
      };
      b.setXPVAssetID = function (a) {
        this.$29 = a;
        return this;
      };
      b.getXPVAssetID = function () {
        return this.$29;
      };
      b.setIsXPVSingleProd = function (a) {
        this.$30 = a;
        return this;
      };
      b.getIsXPVSingleProd = function () {
        return this.$30;
      };
      b.setUploadSessionID = function (a) {
        this.$3 = a;
        return this;
      };
      b.getUploadSessionID = function () {
        return this.$3;
      };
      b.setFbRegion = function (a) {
        this.$4 = a;
        return this;
      };
      b.getFbRegion = function () {
        return this.$4;
      };
      b.setStartOffset = function (a) {
        this.$5 = a;
        return this;
      };
      b.getStartOffset = function () {
        return this.$5;
      };
      b.setEndOffset = function (a) {
        this.$6 = a;
        return this;
      };
      b.getEndOffset = function () {
        return this.$6;
      };
      b.setPartitionStartOffset = function (a) {
        this.$17 = a;
        return this;
      };
      b.getPartitionStartOffset = function () {
        return this.$17;
      };
      b.setPartitionEndOffset = function (a) {
        this.$18 = a;
        return this;
      };
      b.getPartitionEndOffset = function () {
        return this.$18;
      };
      b.setPartitionNo = function (a) {
        this.$19 = a;
        return this;
      };
      b.getPartitionNo = function () {
        return this.$19;
      };
      b.setTargetID = function (a) {
        this.$7 = a;
        return this;
      };
      b.getTargetID = function () {
        return this.$7;
      };
      b.setSource = function (a) {
        this.$8 = a;
        return this;
      };
      b.setComposerDialogVersion = function (a) {
        this.$9 = a;
        return this;
      };
      b.getComposerDialogVersion = function () {
        return this.$9;
      };
      b.getSource = function () {
        return this.$8;
      };
      b.setWaterfallID = function (a) {
        this.$10 = a;
        return this;
      };
      b.getWaterfallID = function () {
        return this.$10;
      };
      b.setComposerEntryPointRef = function (a) {
        this.$11 = a;
        return this;
      };
      b.setComposerWorkSharedDraftMode = function (a) {
        this.$12 = a;
        return this;
      };
      b.getComposerWorkSharedDraftMode = function () {
        return this.$12;
      };
      b.setHasFileBeenReplaced = function (a) {
        this.$14 = a;
        return this;
      };
      b.getHasFileBeenReplaced = function () {
        return this.$14;
      };
      b.setSupportsChunking = function (a) {
        this.$15 = a;
        return this;
      };
      b.getSupportsChunking = function () {
        return this.$15;
      };
      b.setSupportsFileAPI = function (a) {
        this.$16 = a;
        return this;
      };
      b.getSupportsFileAPI = function () {
        return this.$16;
      };
      b.setCreatorProduct = function (a) {
        this.$20 = a;
        return this;
      };
      b.getCreatorProduct = function () {
        return this.$20;
      };
      b.setLastKnownUploadSpeed = function (a) {
        this.$21 = a;
        return this;
      };
      b.getLastKnownUploadSpeed = function () {
        return this.$21 || 0;
      };
      b.setUseParallelChunks = function (a) {
        this.$22 = a;
        return this;
      };
      b.getUseParallelChunks = function () {
        return this.$22;
      };
      b.setIsSphericalVideo = function (a) {
        this.$23 = a;
        return this;
      };
      b.getIsSphericalVideo = function () {
        return this.$23;
      };
      b.setSphericalMetadata = function (a) {
        this.$25 = a;
        return this;
      };
      b.getSphericalMetadata = function () {
        return this.$25;
      };
      b.setEnableOmnistab = function (a) {
        this.$26 = a;
        return this;
      };
      b.getEnableOmnistab = function () {
        return this.$26;
      };
      b.setClientChunkSize = function (a) {
        this.$27 = a;
        return this;
      };
      b.getClientChunkSize = function () {
        return this.$27;
      };
      b.setVideoPublisherActionSource = function (a) {
        this.$28 = a;
        return this;
      };
      b.getVideoPublisherActionSource = function () {
        return this.$28;
      };
      b.setComposerSessionID = function (a) {
        this.$13 = a;
        return this;
      };
      b.getComposerSessionID = function () {
        return this.$13;
      };
      b.setRetryState = function (a) {
        this.$31 = a;
        return this;
      };
      b.getRetryState = function () {
        return this.$31;
      };
      b.setCreativeTools = function (a) {
        this.$32 = a;
        return this;
      };
      b.getCreativeTools = function () {
        return this.$32;
      };
      b.reset = function () {
        (this.$1 = null),
          (this.$2 = null),
          (this.$3 = null),
          (this.$4 = null),
          (this.$5 = null),
          (this.$6 = null),
          (this.$7 = null),
          (this.$8 = null),
          (this.$9 = null),
          (this.$10 = null),
          (this.$11 = null),
          (this.$12 = null),
          (this.$14 = !1),
          (this.$15 = null),
          (this.$16 = null),
          (this.$17 = null),
          (this.$18 = null),
          (this.$19 = null),
          (this.$20 = null),
          (this.$21 = 0),
          (this.$22 = !1),
          (this.$23 = !1),
          (this.$24 = {}),
          (this.$25 = {}),
          (this.$26 = !1),
          (this.$27 = null),
          (this.$28 = {}),
          (this.$13 = null),
          (this.$31 = null),
          (this.$32 = null);
      };
      return a;
    })();
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadSingleAssetPublisher",
  [
    "Promise",
    "VideoUploadGraphQLPostRequestManager",
    "VideoUploadPostRequestManager",
    "VideoUploadRequestContext",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h;
    a = (function () {
      function a() {}
      a.publish = function (b) {
        a.$1 == null && (a.$1 = new a());
        return a.$1.publish(b);
      };
      var d = a.prototype;
      d.publish = function (a) {
        var c = this;
        return new (h || (h = b("Promise")))(function (b) {
          var d = c.$2(a.sessionSnapshot, a.assetSnapshot, a.postData),
            e,
            f = c.$3(a.postRequestManagerParams);
          f.hasAPISupport(a.postData) && (e = f);
          e == null && (e = c.$4(a.postRequestManagerParams));
          c.$5(e, b);
          e.sendRequest(d);
        });
      };
      d.$4 = function (a) {
        return new (c("VideoUploadPostRequestManager"))(
          a == null ? void 0 : a.chunk_post_uri,
          a == null ? void 0 : a.post_max_transport_retries,
          a == null ? void 0 : a.post_transport_retry_interval_base,
          a == null ? void 0 : a.post_max_server_retries,
          a == null ? void 0 : a.post_server_retry_interval_base
        );
      };
      d.$3 = function (a) {
        var b;
        return new (c("VideoUploadGraphQLPostRequestManager"))(
          (b = a == null ? void 0 : a.post_max_transport_retries) != null
            ? b
            : 0,
          (b = a == null ? void 0 : a.post_transport_retry_interval_base) !=
          null
            ? b
            : 0,
          (b = a == null ? void 0 : a.post_max_server_retries) != null ? b : 0,
          (b = a == null ? void 0 : a.post_server_retry_interval_base) != null
            ? b
            : 0
        );
      };
      d.$5 = function (a, b) {
        a.subscribe("request-finished", function (a, c) {
          a = { event: a, payload: c };
          b({ isSuccessful: !0, rawResponse: a });
        }),
          a.subscribe("request-failed", function (a, c) {
            a = { event: a, payload: c };
            var d =
              (c == null ? void 0 : c.error_code) == null ||
              (c == null ? void 0 : c.error_code) == 0
                ? "PublishError"
                : c == null
                ? void 0
                : c.error_code;
            b({
              isSuccessful: !1,
              errorCode: d,
              rawErrorObject: c == null ? void 0 : c.error_object,
              rawResponse: a,
            });
          });
      };
      d.$2 = function (a, b, d) {
        return new (c("VideoUploadRequestContext"))()
          .setVideoID(b.videoID)
          .setTargetID(b.request.attributes.targetID)
          .setSource(a.entryPoint.sourceType)
          .setWaterfallID(a.sessionID)
          .setCreatorProduct(b.request.attributes.creatorProduct)
          .setComposerEntryPointRef(a.entryPoint.entryPointRef)
          .setComposerDialogVersion(b.request.attributes.composerDialogVersion)
          .setHasFileBeenReplaced(
            (a = b.request.attributes.hasFileBeenReplaced) != null ? a : !1
          )
          .setSupportsChunking(!0)
          .setMetadata(d);
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadVUShimLogger",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a(a) {
        this.$1 = a;
      }
      var b = a.prototype;
      b.logEvent = function (a, b) {};
      b.postOnShutdown = function (a) {
        return { remove: function () {} };
      };
      b.getWaterfallID = function () {
        return this.$1;
      };
      return a;
    })();
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadVUShimSession",
  [
    "MediaUploadAssetEvent",
    "MediaUploadAssetStatus",
    "MediaUploadCancelReason",
    "MediaUploadFBSDK",
    "MediaUploadFBStage",
    "MediaUploadSessionEvent",
    "MediaUploadSessionStatus",
    "MediaUploadSingleAssetPublisher",
    "MediaUploadStageEvent",
    "MediaUploadVUShimLogger",
    "MediaUploadVUShimSurface",
    "Promise",
    "WaterfallIDGenerator",
    "cr:909282",
    "mixin",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h;
    a = (function (a) {
      babelHelpers.inheritsLoose(e, a);
      function e(b, e) {
        var f;
        f = a.call(this) || this;
        f.sessionID = d("WaterfallIDGenerator").generate();
        f.$MediaUploadVUShimSession1 = b;
        f.$MediaUploadVUShimSession3 =
          (b = b.waterfall_id) != null ? b : f.sessionID;
        f.$MediaUploadVUShimSession6 = e;
        f.$MediaUploadVUShimSession5 = new (c("MediaUploadVUShimLogger"))(
          f.$MediaUploadVUShimSession3
        );
        f.$MediaUploadVUShimSession10 =
          !f.$MediaUploadVUShimSession1.background_upload;
        return f;
      }
      var f = e.prototype;
      f.createTestLogger = function () {};
      f.getLogger = function () {
        return this.$MediaUploadVUShimSession5;
      };
      f.start = function (a) {
        var b = this;
        this.inform("set-waterfall-id", {
          waterfallID: this.$MediaUploadVUShimSession3,
        });
        var d = c("MediaUploadVUShimSurface").createAssetRequest(
          function (b) {
            var d = a.getFile(),
              e = a.getFileInput();
            if (d != null) return b.createFromFile(d);
            else if (e != null) {
              d = b.createFromHTMLInput(e);
              if (d.dataAsFile() == null)
                throw c("MediaUploadFBSDK").createThrowableError(
                  "Cannot get File from the HTML input element"
                );
              else return d;
            } else
              throw c("MediaUploadFBSDK").createThrowableError(
                "Invalid video upload file, it contains only null objects"
              );
          },
          a.getStableAssetID(),
          function (a) {
            var c;
            return {
              targetID:
                (c = b.$MediaUploadVUShimSession4) != null
                  ? c
                  : b.$MediaUploadVUShimSession1.target_id,
              composerSessionID: b.$MediaUploadVUShimSession2,
              actorID: b.$MediaUploadVUShimSession1.as_actor_id,
              composerDialogVersion: "V2",
              publisherActionSource:
                b.$MediaUploadVUShimSession1.video_publisher_action_source,
              creatorProduct:
                ((c = a.dataAsFile()) == null ? void 0 : c.extension) === "gif"
                  ? 4
                  : 2,
            };
          }
        );
        this.$MediaUploadVUShimSession9 = d;
        this.$MediaUploadVUShimSession6.startUploads(this.sessionID, [d]);
        this.$MediaUploadVUShimSession10 &&
          this.$MediaUploadVUShimSession6.confirmSession(
            this.sessionID,
            [d],
            function (a) {
              return a.set("dummyPublish", !0);
            }
          );
      };
      f.setTargetID = function (a) {
        this.$MediaUploadVUShimSession4 = a;
      };
      f.setComposerSessionID = function (a) {
        this.$MediaUploadVUShimSession2 = a;
      };
      f.post = function (a) {
        this.$MediaUploadVUShimSession10
          ? c("MediaUploadFBSDK").reportRecoverableError(
              "Video upload client configured for pessimistic upload and explicit publish calls are now allowed"
            )
          : this.$MediaUploadVUShimSession9 != null &&
            this.$MediaUploadVUShimSession6.confirmSession(
              this.sessionID,
              [this.$MediaUploadVUShimSession9],
              function (b) {
                return b.set("postData", a);
              }
            );
      };
      f.cancel = function (a) {
        this.$MediaUploadVUShimSession6.cancelSession(
          this.sessionID,
          c("MediaUploadCancelReason").USER_REQUEST
        );
      };
      f.abandon = function (a) {
        this.$MediaUploadVUShimSession6.cancelSession(
          this.sessionID,
          c("MediaUploadCancelReason").USER_REQUEST
        );
      };
      f.isPostInProgress = function () {
        var a;
        return (
          ((a = this.$MediaUploadVUShimSession7) == null
            ? void 0
            : a.status) === c("MediaUploadSessionStatus").PUBLISHING
        );
      };
      f.isInProgress = function () {
        var a;
        return (
          ((a = this.$MediaUploadVUShimSession8) == null
            ? void 0
            : a.status) === c("MediaUploadAssetStatus").PROCESSING ||
          ((a = this.$MediaUploadVUShimSession8) == null
            ? void 0
            : a.status) === c("MediaUploadAssetStatus").UPLOADING
        );
      };
      f.getHasUploadFinished = function () {
        var a;
        return (
          ((a = this.$MediaUploadVUShimSession8) == null
            ? void 0
            : a.status) === c("MediaUploadAssetStatus").COMPLETED
        );
      };
      f.getVideoID = function () {
        var a;
        return (a = this.$MediaUploadVUShimSession8) == null
          ? void 0
          : a.videoID;
      };
      f.getUploadTime = function () {
        var a, b;
        a =
          (a = this.$MediaUploadVUShimSession8) == null
            ? void 0
            : (a = a.uploadSummary) == null
            ? void 0
            : a.startedAtMs;
        b =
          (b = this.$MediaUploadVUShimSession8) == null
            ? void 0
            : (b = b.uploadSummary) == null
            ? void 0
            : b.finishedAtMs;
        return a != null && b != null ? b - a : null;
      };
      f.getExPartitionNumber = function (a) {
        return 0;
      };
      f.getIsSphericalVideo = function () {
        var a;
        return (a =
          (a = this.$MediaUploadVUShimSession8) == null
            ? void 0
            : (a = a.metadata) == null
            ? void 0
            : a.isSpherical) != null
          ? a
          : !1;
      };
      f.startFlow = function () {
        this.$MediaUploadVUShimSession10
          ? c("MediaUploadFBSDK").reportRecoverableError(
              "Video upload client configured for pessimistic upload and explicit publish calls are now allowed"
            )
          : this.$MediaUploadVUShimSession9 != null &&
            this.$MediaUploadVUShimSession6.confirmSession(this.sessionID, [
              this.$MediaUploadVUShimSession9,
            ]);
      };
      f.sessionUpdated = function (a, b) {
        this.$MediaUploadVUShimSession7 = b;
        var d = b.extras.getUnsafe("postData");
        if (d == null) return;
        b = b.publishingResponse;
        switch (a) {
          case c("MediaUploadSessionEvent").PUBLISH_STARTED:
            this.inform("post-started", d);
            break;
          case c("MediaUploadSessionEvent").PUBLISH_SUCCEED:
            this.inform(
              "post-finished",
              babelHelpers["extends"](
                {},
                (a = b == null ? void 0 : b.payload) != null ? a : {},
                d
              )
            );
            break;
          case c("MediaUploadSessionEvent").PUBLISH_FAILED:
            this.inform(
              "post-failed",
              (a = b == null ? void 0 : b.payload) != null ? a : {}
            );
            break;
          default:
        }
      };
      f.assetUpdated = function (a, b, d) {
        var e;
        this.$MediaUploadVUShimSession7 = b;
        this.$MediaUploadVUShimSession8 = d;
        var f, g;
        b =
          (b = (b = d.asset.dataAsFile()) == null ? void 0 : b.size) != null
            ? b
            : 0;
        e =
          (e = (e = d.uploadSummary) == null ? void 0 : e.skippedUpload) != null
            ? e
            : !1;
        switch (a) {
          case c("MediaUploadAssetEvent").ASSET_ADDED:
            f = "upload-requested";
            break;
          case c("MediaUploadAssetEvent").ASSET_STARTED:
            f = "upload-started";
            break;
          case c("MediaUploadAssetEvent").ASSET_REMOVED:
            f = "upload-canceled";
            break;
          case c("MediaUploadAssetEvent").ASSET_PROGRESS:
            f = "upload-progressed";
            g = {
              start_offset: 0,
              end_offset: b,
              file_size: b,
              sent_bytes: e
                ? b
                : (a =
                    (a = d.uploadSummary) == null ? void 0 : a.uploadedBytes) !=
                  null
                ? a
                : 0,
              video_id: d.videoID,
              upload_domain: d.uploadServiceDomain,
              skip_upload: e,
              transport_retries: d.retries.totalRetryAttempts,
            };
            break;
          case c("MediaUploadAssetEvent").ASSET_SUCCEED:
            f = "upload-finished";
            g = {
              start_offset: 0,
              end_offset: b,
              video_id: d.videoID,
              is_spherical_video:
                (e =
                  d == null
                    ? void 0
                    : (a = d.metadata) == null
                    ? void 0
                    : a.isSpherical) != null
                  ? e
                  : !1,
            };
            break;
          case c("MediaUploadAssetEvent").ASSET_FAILED:
            f = "upload-failed";
            g = {
              error_code: (b = d.lastAction) == null ? void 0 : b.rawErrorCode,
              error_summary:
                (a = d.lastAction) == null
                  ? void 0
                  : (e = a.displayError) == null
                  ? void 0
                  : e.summary,
              error_description:
                (b = d.lastAction) == null
                  ? void 0
                  : (a = b.displayError) == null
                  ? void 0
                  : a.description,
              error_is_transient:
                (e = d.lastAction) == null
                  ? void 0
                  : (b = e.errorAttributes) == null
                  ? void 0
                  : b.transientError,
              upload_domain: d.uploadServiceDomain,
              www_request_id:
                (a = d.lastAction) == null ? void 0 : a.networkRequestID,
            };
            break;
          default:
        }
        f != null && this.inform(f, g);
      };
      f.stageUpdated = function (a, b, d, e) {
        this.$MediaUploadVUShimSession7 = d;
        this.$MediaUploadVUShimSession8 = e;
        if (
          a === c("MediaUploadStageEvent").STAGE_SUCCEED &&
          b === c("MediaUploadFBStage").METADATA_EXTRACTION
        ) {
          if (e.metadata != null) {
            d = e.metadata;
            a = d.durationMs == null ? void 0 : d.durationMs / 1e3;
            e = {
              format: {
                duration: a,
                isSpherical: (b = d.isSpherical) != null ? b : !1,
              },
              metadata: {},
              streams: {
                numAudioTracks: 1,
                primaryVideo: {
                  type: "video",
                  width: d.width,
                  height: d.height,
                  duration: a,
                },
                primaryAudio: { type: "audio", duration: a },
              },
            };
          } else e = null;
          this.inform("metadata-parsed", e);
        }
      };
      f.triggerPublish = function (a, d) {
        var e;
        this.$MediaUploadVUShimSession7 = a;
        this.$MediaUploadVUShimSession8 = d[0];
        e = (e = a.extras.getBoolean("dummyPublish")) != null ? e : !1;
        var f = a.extras.getUnsafe("postData");
        if (e) return (h || (h = b("Promise"))).resolve({ isSuccessful: !0 });
        else if (f == null)
          return (h || (h = b("Promise"))).resolve({
            isSuccessful: !1,
            errorCode: "MISSING_POST_DATA",
          });
        else
          return c("MediaUploadSingleAssetPublisher").publish({
            sessionSnapshot: a,
            assetSnapshot: d[0],
            postData: f,
            postRequestManagerParams: this.$MediaUploadVUShimSession1,
          });
      };
      return e;
    })(c("mixin")(b("cr:909282")));
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadOperationOutcome",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "SUCCESS",
      "CANCELED",
      "FAILED_NON_TRANSIENT",
      "FAILED_NO_MORE_RETRIES",
      "FAILED_OUT_OF_TIME",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadCancelablePromise",
  ["Promise"],
  function (a, b, c, d, e, f) {
    "use strict";
    var g,
      h = { cancel: function () {} };
    a = (function () {
      function a(a) {
        var c = this;
        this.$1 = !1;
        this.promise = new (g || (g = b("Promise")))(function (b, d) {
          (c.$2 = a(b, d)), c.$2 == null && (c.$2 = h), c.$1 && c.$2.cancel();
        });
      }
      a.resolve = function (b) {
        return new a(function (a) {
          a(b);
        });
      };
      var c = a.prototype;
      c.then = function (b) {
        var c = this;
        return new a(function (d, e) {
          var f = { cancelable: c };
          c.promise
            .then(function (d) {
              f.cancelable = h;
              if (c.$1) return d;
              else {
                d = b(d);
                if (d instanceof a) {
                  f.cancelable = d;
                  return d.promise;
                } else return d;
              }
            })
            .then(d)
            ["catch"](function () {
              (f.cancelable = h), e.apply(void 0, arguments);
            });
          return {
            cancel: function () {
              f.cancelable.cancel();
            },
          };
        });
      };
      c.isCanceled = function () {
        return this.$1;
      };
      c.cancel = function () {
        if (!this.$1) {
          var a;
          this.$1 = !0;
          (a = this.$2) == null ? void 0 : a.cancel();
        }
      };
      return a;
    })();
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadPipeline",
  ["MediaUploadCancelablePromise", "MediaUploadOperationOutcome"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = (function () {
      function a(a, b) {
        var d = this;
        this.$2 = [];
        this.$3 = null;
        this.$2 = a;
        this.$1 = b;
        this.cancelablePromise = new (c("MediaUploadCancelablePromise"))(
          function (a, b) {
            d.$4(a, b, [].concat(d.$2));
            return {
              cancel: function () {
                var b;
                (b = d.$3) == null ? void 0 : b.cancel();
                d.$3 = null;
                a(c("MediaUploadOperationOutcome").CANCELED);
              },
            };
          }
        );
      }
      var b = a.prototype;
      b.$4 = function (a, b, d) {
        var e = this;
        if (d.length === 0)
          (this.$3 = null), a(c("MediaUploadOperationOutcome").SUCCESS);
        else {
          var f = d.shift();
          f = f();
          this.$1.promiseTerminator(
            f.promise
              .then(function (f) {
                e.cancelablePromise.isCanceled()
                  ? a(c("MediaUploadOperationOutcome").CANCELED)
                  : f === c("MediaUploadOperationOutcome").SUCCESS
                  ? e.$4(a, b, d)
                  : a(f);
              })
              ["catch"](b)
          );
          this.$3 = f;
        }
      };
      return a;
    })();
    a = (function () {
      function a(a) {
        (this.$2 = []), (this.$1 = a);
      }
      var b = a.prototype;
      b.addCancelableStep = function (a) {
        this.$2.push(a);
      };
      b.addPlainStep = function (a) {
        this.$2.push(function () {
          return new (c("MediaUploadCancelablePromise"))(function (b) {
            b(a());
          });
        });
      };
      b.run = function () {
        var a = new h(this.$2, this.$1);
        return a.cancelablePromise;
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadAssetStrategy",
  [
    "MediaUploadAssetEvent",
    "MediaUploadAssetStatus",
    "MediaUploadOperationOutcome",
    "MediaUploadPipeline",
    "Promise",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h;
    a = (function () {
      function a(a) {
        (this.$1 = a.implementation),
          (this.$2 = a.executor),
          (this.$3 = a.params);
      }
      var d = a.prototype;
      d.removeAsset = function (a) {
        a.updateStatusAndEmit(c("MediaUploadAssetStatus").REMOVED);
        (a = a.inFlightUpload) == null ? void 0 : a.cancel();
      };
      d.addAsset = function (a) {
        a.sessionContext.assetsByID.set(a.assetID, a),
          a.emitAssetEvent(c("MediaUploadAssetEvent").ASSET_ADDED);
      };
      d.scheduleUpload = function (a) {
        var b = this;
        a.updateStatusAndEmit(c("MediaUploadAssetStatus").SCHEDULED);
        return this.$2.schedule(function () {
          return b.$4(a);
        });
      };
      d.$4 = function (a) {
        var d = this;
        if (a.isRemoved()) return (h || (h = b("Promise"))).resolve();
        a.updateStatusAndEmit(c("MediaUploadAssetStatus").PROCESSING);
        var e = new (c("MediaUploadPipeline"))(this.$3);
        e.addCancelableStep(function () {
          return d.$1.runClientLazyLoading(a);
        });
        e.addCancelableStep(function () {
          return d.$1.runLocalAssetStategy(a);
        });
        e.addCancelableStep(function () {
          a.updateStatusAndEmit(c("MediaUploadAssetStatus").UPLOADING);
          return d.$1.runNetworkAssetStategy(a);
        });
        e = e.run();
        a.inFlightUpload = e;
        return e.promise
          .then(function (b) {
            return d.$5(a, b);
          })
          ["catch"](function (b) {
            d.$3.reportRecoverableError(
              "Unexpected failure during asset pipeline execution",
              b
            ),
              a.updateStatusAndEmit(c("MediaUploadAssetStatus").FAILED);
          });
      };
      d.$5 = function (a, b) {
        if (a.isRemoved()) return;
        switch (b) {
          case c("MediaUploadOperationOutcome").SUCCESS:
            a.updateStatusAndEmit(c("MediaUploadAssetStatus").COMPLETED);
            break;
          case c("MediaUploadOperationOutcome").CANCELED:
            a.updateStatusAndEmit(c("MediaUploadAssetStatus").REMOVED);
            break;
          default:
            a.updateStatusAndEmit(c("MediaUploadAssetStatus").FAILED);
        }
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadRetryState",
  ["MediaUploadTime"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a(a, b) {
        (this.retryPolicy = a),
          (this.$3 = 0),
          (this.$4 = 0),
          (this.$1 = b.currentTimeProvider),
          (this.$2 = b.randomNumberProvider),
          (this.$5 = this.$1());
      }
      var b = a.prototype;
      b.resetBackoff = function () {
        this.$3 = 0;
      };
      b.getRetryAttempts = function () {
        return this.$4;
      };
      b.getRetryAttemptsSinceLastReset = function () {
        return this.$3;
      };
      b.calculateBackoffDelay = function () {
        var a = this.retryPolicy.backoff,
          b = d("MediaUploadTime").timeToMilliseconds(a.initial),
          c = a.expBase,
          e = a.expMultiplier;
        this.$3 > 0 &&
          c != null &&
          e != null &&
          (b +=
            d("MediaUploadTime").timeToMilliseconds(c) *
            Math.pow(e, this.$3 - 1));
        a.max != null &&
          (b = Math.min(b, d("MediaUploadTime").timeToMilliseconds(a.max)));
        c =
          a.jitter == null
            ? 0
            : d("MediaUploadTime").timeToMilliseconds(a.jitter);
        c > 0 && (b += this.$2(-0.5 * c, 0.5 * c));
        return d("MediaUploadTime").millisecondsToTime(Math.round(b));
      };
      b.exceedTotalRetries = function () {
        var a;
        return (
          ((a = this.retryPolicy.limits) == null
            ? void 0
            : a.totalRetryCount) != null &&
          this.$4 > this.retryPolicy.limits.totalRetryCount
        );
      };
      b.exceedTotalDuration = function () {
        var a;
        return (
          ((a = this.retryPolicy.limits) == null ? void 0 : a.totalTime) !=
            null &&
          d("MediaUploadTime").compareTime(
            (a = this.retryPolicy.limits) == null ? void 0 : a.totalTime,
            d("MediaUploadTime").subtractTime(this.$1(), this.$5)
          ) <= 0
        );
      };
      b.increaseRetryAttemptCounter = function () {
        this.$3++, this.$4++;
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadClientResult",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "ACCEPTED",
      "SESSION_NOT_FOUND",
      "ASSET_NOT_FOUND",
      "ASSET_ALREADY_EXISTS",
      "SESSION_ALREADY_CANCELED",
      "SESSION_ALREADY_PUBLISHING",
      "SESSION_ALREADY_PUBLISHED",
      "SESSION_NOT_FAILED",
      "INVALID_TYPE",
      "UNSUPPORTED_BROWSER",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadSessionStrategy",
  [
    "MediaUploadCancelReason",
    "MediaUploadClientResult",
    "MediaUploadSessionEvent",
    "MediaUploadSessionStatus",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a(a) {
        (this.$1 = a.implementation),
          (this.$2 = a.assetStrategy),
          (this.$3 = a.params);
      }
      var b = a.prototype;
      b.$4 = function (a) {
        if (a.isConfirmed() && a.progress.publishingExtrasProvided) {
          var b = a.getActiveAssets();
          for (
            var d = b,
              e = Array.isArray(d),
              f = 0,
              d = e
                ? d
                : d[
                    typeof Symbol === "function"
                      ? Symbol.iterator
                      : "@@iterator"
                  ]();
            ;

          ) {
            var g;
            if (e) {
              if (f >= d.length) break;
              g = d[f++];
            } else {
              f = d.next();
              if (f.done) break;
              g = f.value;
            }
            g = g;
            if (g.isFailed()) {
              a.updateStatusAndEmit(c("MediaUploadSessionStatus").FAILED);
              return;
            }
          }
          b.every(function (a) {
            return a.isCompleted();
          }) && this.$5(a);
        }
      };
      b.$5 = function (a) {
        a.updateStatusAndEmit(c("MediaUploadSessionStatus").PUBLISHING);
        var b = [];
        for (
          var d = a.assetsByID.values(),
            e = Array.isArray(d),
            f = 0,
            d = e
              ? d
              : d[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var g;
          if (e) {
            if (f >= d.length) break;
            g = d[f++];
          } else {
            f = d.next();
            if (f.done) break;
            g = f.value;
          }
          g = g;
          g.isCompleted() && b.push(g);
        }
        g = this.$1
          .publish(a, b)
          .then(function (b) {
            (a.progress.publishingResponse = b.rawResponse),
              b.isSuccessful
                ? (a.emitSessionEvent(
                    c("MediaUploadSessionEvent").PUBLISH_SUCCEED
                  ),
                  a.updateStatusAndEmit(
                    c("MediaUploadSessionStatus").COMPLETED
                  ))
                : (a.updateLastError({
                    rawErrorCode: b.errorCode,
                    rawErrorObject: b.rawErrorObject,
                  }),
                  a.emitSessionEvent(
                    c("MediaUploadSessionEvent").PUBLISH_FAILED
                  ),
                  a.updateStatusAndEmit(c("MediaUploadSessionStatus").FAILED),
                  a.updateLastError());
          })
          ["catch"](function (b) {
            a.updateLastError({ rawErrorObject: b }),
              a.emitSessionEvent(c("MediaUploadSessionEvent").PUBLISH_FAILED),
              a.updateStatusAndEmit(c("MediaUploadSessionStatus").FAILED),
              a.updateLastError();
          });
        this.$3.promiseTerminator(g);
      };
      b.$6 = function (a, b) {
        var c = this;
        this.$2.scheduleUpload(b)["finally"](function () {
          return c.$4(a);
        });
      };
      b.$7 = function (a) {
        if (a.isPublished())
          return c("MediaUploadClientResult").SESSION_ALREADY_PUBLISHED;
        else if (a.isPublishing())
          return c("MediaUploadClientResult").SESSION_ALREADY_PUBLISHING;
        else if (a.isCanceled())
          return c("MediaUploadClientResult").SESSION_ALREADY_CANCELED;
        else return c("MediaUploadClientResult").ACCEPTED;
      };
      b.$8 = function (a) {
        var b = this;
        a.releaseOnFinish.push(
          this.$3.registerUnloadHook(function () {
            b.cancel(a, c("MediaUploadCancelReason").UNLOAD_HOOK);
          })
        );
        a.updateStatusAndEmit(c("MediaUploadSessionStatus").CONFIRMED);
      };
      b.cancel = function (a, b) {
        var d = this.$7(a);
        if (d !== c("MediaUploadClientResult").ACCEPTED) return d;
        a.progress.cancelReason = b;
        a.updateStatusAndEmit(c("MediaUploadSessionStatus").CANCELED);
        for (
          d = a.assetsByID.values(),
            b = Array.isArray(d),
            a = 0,
            d = b
              ? d
              : d[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var e;
          if (b) {
            if (a >= d.length) break;
            e = d[a++];
          } else {
            a = d.next();
            if (a.done) break;
            e = a.value;
          }
          e = e;
          this.$2.removeAsset(e);
        }
        return c("MediaUploadClientResult").ACCEPTED;
      };
      b.removeAsset = function (a, b) {
        var d = this.$7(a);
        if (d !== c("MediaUploadClientResult").ACCEPTED) return d;
        d = a.assetsByID.get(b);
        if (d == null) return c("MediaUploadClientResult").ASSET_NOT_FOUND;
        this.$2.removeAsset(d);
        this.$4(a);
        return c("MediaUploadClientResult").ACCEPTED;
      };
      b.uploadAsset = function (a, b) {
        var d = this.$7(a);
        if (d !== c("MediaUploadClientResult").ACCEPTED) return d;
        d = a.assetsByID.get(b.assetID);
        if (d != null && !d.isRemoved())
          return c("MediaUploadClientResult").ASSET_ALREADY_EXISTS;
        d = this.$1.createAssetContext(a, b);
        this.$2.addAsset(d);
        this.$6(a, d);
        return c("MediaUploadClientResult").ACCEPTED;
      };
      b.syncAssetUploads = function (a, b) {
        var d = this.$7(a);
        if (d !== c("MediaUploadClientResult").ACCEPTED) return d;
        d = new Set(
          b.map(function (a) {
            return a.assetID;
          })
        );
        var e = new Set(a.assetsByID.keys());
        for (e in e)
          if (!d.has(e)) {
            var f = a.assetsByID.get(e);
            f != null && this.$2.removeAsset(f);
          }
        this.uploadAssets(a, b);
        return c("MediaUploadClientResult").ACCEPTED;
      };
      b.uploadAssets = function (a, b) {
        var c = this,
          d = {};
        b.forEach(function (b) {
          return (d[b.assetID] = c.uploadAsset(a, b));
        });
        return d;
      };
      b.updateSessionExtras = function (a, b, d) {
        var e = this.$7(a);
        if (e !== c("MediaUploadClientResult").ACCEPTED) return e;
        b(a.extras);
        d && (a.progress.publishingExtrasProvided = !0);
        return c("MediaUploadClientResult").ACCEPTED;
      };
      b.retry = function (a) {
        var b = this.$7(a);
        if (b !== c("MediaUploadClientResult").ACCEPTED) return b;
        else if (!a.isFailed())
          return c("MediaUploadClientResult").SESSION_NOT_FAILED;
        a.renewRetryID();
        this.$8(a);
        for (
          var b = a.assetsByID.values(),
            d = Array.isArray(b),
            e = 0,
            b = d
              ? b
              : b[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var f;
          if (d) {
            if (e >= b.length) break;
            f = b[e++];
          } else {
            e = b.next();
            if (e.done) break;
            f = e.value;
          }
          f = f;
          f.isSchedulable() && this.$6(a, f);
        }
        this.$4(a);
        return c("MediaUploadClientResult").ACCEPTED;
      };
      b.confirm = function (a) {
        var b = this.$7(a);
        if (b !== c("MediaUploadClientResult").ACCEPTED) return b;
        else if (a.isFailed()) return this.retry(a);
        else if (a.isConfirmed()) {
          this.$4(a);
          return c("MediaUploadClientResult").ACCEPTED;
        }
        this.$8(a);
        this.$4(a);
        return c("MediaUploadClientResult").ACCEPTED;
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadClientContext",
  [
    "MediaUploadAssetStrategy",
    "MediaUploadRetryState",
    "MediaUploadSessionStrategy",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a(a) {
        (this.sdk = a.sdk),
          (this.emitter = a.emitter),
          (this.executor = a.executor),
          (this.progressCalculator = a.progressCalculator),
          (this.assetStrategy = new (c("MediaUploadAssetStrategy"))({
            implementation: this,
            executor: this.executor,
            params: this.sdk,
          })),
          (this.sessionStrategy = new (c("MediaUploadSessionStrategy"))({
            implementation: this,
            assetStrategy: this.assetStrategy,
            params: this.sdk,
          }));
      }
      var b = a.prototype;
      b.runLocalAssetStategy = function (a) {
        throw this.sdk.createThrowableError("Not implemented");
      };
      b.runNetworkAssetStategy = function (a) {
        throw this.sdk.createThrowableError("Not implemented");
      };
      b.runClientLazyLoading = function (a) {
        throw this.sdk.createThrowableError("Not implemented");
      };
      b.createSessionContext = function (a) {
        throw this.sdk.createThrowableError("Not implemented");
      };
      b.createAssetContext = function (a, b) {
        throw this.sdk.createThrowableError("Not implemented");
      };
      b.publish = function (a, b) {
        throw this.sdk.createThrowableError("Not implemented");
      };
      b.subscribeToHooks = function () {
        throw this.sdk.createThrowableError("Not implemented");
      };
      b.createRetryState = function () {
        return new (c("MediaUploadRetryState"))(
          this.sdk.retryPolicyProvider(),
          this.sdk
        );
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadBytesSummary",
  ["MediaUploadTime"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a(a) {
        this.$1 = a;
      }
      var b = a.prototype;
      b.reset = function () {
        this.$2 = null;
      };
      b.updateForUploadStart = function (a) {
        var b = this.$1.currentTimeProvider();
        this.$2 = {
          fullyCompleted: !1,
          startedAt: b,
          updatedAt: b,
          totalBytes: a,
          uploadedBytes: 0,
          skippedUpload: !1,
        };
      };
      b.updateForUploadSkip = function (a) {
        var b = this.$1.currentTimeProvider();
        this.$2 = {
          fullyCompleted: !0,
          startedAt: b,
          updatedAt: b,
          finishedAt: b,
          totalBytes: a,
          uploadedBytes: a,
          skippedUpload: !0,
        };
      };
      b.updateForProgress = function (a) {
        var b = this.$2;
        if (b == null) {
          this.$1.reportRecoverableError(
            "Upload stats have not been initialized"
          );
          return;
        }
        b.uploadedBytes = a;
        b.updatedAt = this.$1.currentTimeProvider();
      };
      b.updateForUploadComplete = function () {
        var a = this.$2;
        if (a == null) {
          this.$1.reportRecoverableError(
            "Upload stats have not been initialized"
          );
          return;
        }
        this.updateForProgress(a.totalBytes);
        a.fullyCompleted = !0;
        a.uploadedBytes = a.totalBytes;
      };
      b.updateForUploadAbandoned = function () {
        var a = this.$2;
        if (a == null) {
          this.$1.reportRecoverableError(
            "Upload stats have not been initialized"
          );
          return;
        }
        a.finishedAt = this.$1.currentTimeProvider();
      };
      b.computeSpeedBps = function () {
        var a = this.$2;
        if (a == null || a.skippedUpload) return null;
        else {
          var b = d("MediaUploadTime").timeToSeconds(
            d("MediaUploadTime").subtractTime(a.updatedAt, a.startedAt)
          );
          return b > 0.1 ? a.uploadedBytes / b : 0;
        }
      };
      b.computeUploadedPortion = function () {
        var a = this.$2;
        if (a == null) return null;
        else if (a.fullyCompleted) return 1;
        else if (a.totalBytes === 0) return 0;
        else return (1 * a.uploadedBytes) / a.totalBytes;
      };
      b.computeSnapshot = function () {
        var a = this.$2;
        if (a == null) return null;
        else
          return {
            uploadedBytes: a.uploadedBytes,
            speedBps: this.computeSpeedBps(),
            skippedUpload: a.skippedUpload,
            startedAtMs: d("MediaUploadTime").timeToMilliseconds(a.startedAt),
            finishedAtMs: d("MediaUploadTime").maybeTimeToMilliseconds(
              a.finishedAt
            ),
          };
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadAssetContext",
  [
    "MediaUploadAssetEvent",
    "MediaUploadAssetStatus",
    "MediaUploadBytesSummary",
    "MediaUploadOperationOutcome",
    "MediaUploadStageEvent",
    "MediaUploadTime",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a(a) {
        var b = a.sessionContext,
          d = a.assetRequest,
          e = a.emitter,
          f = a.progressCalculator,
          g = a.retryState;
        a = a.params;
        this.sessionContext = b;
        this.request = d;
        this.assetID = d.assetID;
        this.asset = d.asset;
        this.retryState = g;
        this.$2 = e;
        this.$3 = f;
        this.$1 = a.currentTimeProvider;
        this.$4 = c("MediaUploadAssetStatus").REQUESTED;
        this.createdAt = this.$1();
        this.uploadSummary = new (c("MediaUploadBytesSummary"))(a);
        this.progress = {
          completedStages: new Set(),
          calculated: { rawValue: 0, percentageComplete: 0 },
        };
      }
      var b = a.prototype;
      b.emitAssetEvent = function (a) {
        this.$2.emitAssetEvent(a, this),
          (a === c("MediaUploadAssetEvent").ASSET_SUCCEED ||
            a === c("MediaUploadAssetEvent").ASSET_REMOVED) &&
            this.recalculateProgressAndEmit();
      };
      b.emitStageEvent = function (a, b) {
        this.$2.emitStageEvent(a, this, b),
          a === c("MediaUploadStageEvent").STAGE_SUCCEED &&
            (this.progress.completedStages.add(b),
            this.recalculateProgressAndEmit()),
          a === c("MediaUploadStageEvent").STAGE_PROGRESS &&
            this.recalculateProgressAndEmit();
      };
      b.emitStageEventForOperationOutcome = function (a, b) {
        a === c("MediaUploadOperationOutcome").SUCCESS
          ? this.emitStageEvent(c("MediaUploadStageEvent").STAGE_SUCCEED, b)
          : a === c("MediaUploadOperationOutcome").CANCELED
          ? this.emitStageEvent(c("MediaUploadStageEvent").STAGE_CANCELED, b)
          : this.emitStageEvent(c("MediaUploadStageEvent").STAGE_FAILED, b);
      };
      b.recalculateProgressAndEmit = function () {
        var a = this.$3.calculateAssetProgress(this);
        this.sessionContext.recalculateProgressAndEmit();
        a && this.emitAssetEvent(c("MediaUploadAssetEvent").ASSET_PROGRESS);
      };
      b.$5 = function () {
        this.uploadSummary.reset(),
          this.progress.completedStages.clear(),
          this.recalculateProgressAndEmit();
      };
      b.updateStatusAndEmit = function (a) {
        if (this.$4 === a) return;
        this.$4 = a;
        switch (a) {
          case c("MediaUploadAssetStatus").REMOVED:
            this.emitAssetEvent(c("MediaUploadAssetEvent").ASSET_REMOVED);
            break;
          case c("MediaUploadAssetStatus").FAILED:
            this.emitAssetEvent(c("MediaUploadAssetEvent").ASSET_FAILED);
            break;
          case c("MediaUploadAssetStatus").COMPLETED:
            this.emitAssetEvent(c("MediaUploadAssetEvent").ASSET_SUCCEED);
            break;
          case c("MediaUploadAssetStatus").PROCESSING:
            this.emitAssetEvent(c("MediaUploadAssetEvent").ASSET_STARTED);
            break;
          case c("MediaUploadAssetStatus").UPLOADING:
            this.progress.lastAttemptStartedAt = this.$1();
            break;
          case c("MediaUploadAssetStatus").REQUESTED:
          case c("MediaUploadAssetStatus").SCHEDULED:
            this.$5();
            break;
        }
      };
      b.isCompleted = function () {
        return this.$4 === c("MediaUploadAssetStatus").COMPLETED;
      };
      b.isSchedulable = function () {
        return (
          this.$4 === c("MediaUploadAssetStatus").REQUESTED ||
          this.$4 === c("MediaUploadAssetStatus").FAILED
        );
      };
      b.isRemoved = function () {
        return this.$4 === c("MediaUploadAssetStatus").REMOVED;
      };
      b.isFailed = function () {
        return this.$4 === c("MediaUploadAssetStatus").FAILED;
      };
      b.__composeBaseSnapshot = function () {
        return {
          asset: this.asset,
          assetID: this.assetID,
          status: this.$4,
          createdAtMs: d("MediaUploadTime").timeToMilliseconds(this.createdAt),
          lastUploadStartedAtMs: d("MediaUploadTime").maybeTimeToMilliseconds(
            this.progress.lastAttemptStartedAt
          ),
          metadata:
            this.metadata == null
              ? void 0
              : {
                  width: this.metadata.width,
                  height: this.metadata.height,
                  isSpherical: this.metadata.isSpherical,
                  durationMs: d("MediaUploadTime").maybeTimeToMilliseconds(
                    this.metadata.duration
                  ),
                },
          retries: { totalRetryAttempts: this.retryState.getRetryAttempts() },
          uploadSummary: this.uploadSummary.computeSnapshot(),
          percentageComplete: this.progress.calculated.percentageComplete,
        };
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadExtrasStorage",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a(a) {
        (this.$2 = new Map()), (this.$1 = a);
      }
      var b = a.prototype;
      b.setFromObject = function (a) {
        var b = Object.keys(a);
        for (var c = 0; c < b.length; c++) {
          var d = b[c];
          this.set(d, a[d]);
        }
        return this;
      };
      b.set = function (a, b) {
        this.$2.set(a, b);
        return this;
      };
      b.getNumber = function (a) {
        var b = this.getUnsafe(a);
        if (b == null || typeof b === "number") return b;
        else {
          this.$1.reportRecoverableError(
            "Requested key " + a + " as number, but it was " + typeof b
          );
          return null;
        }
      };
      b.getString = function (a) {
        var b = this.getUnsafe(a);
        if (b == null || typeof b === "string") return b;
        else {
          this.$1.reportRecoverableError(
            "Requested key " + a + " as string, but it was " + typeof b
          );
          return null;
        }
      };
      b.getBoolean = function (a) {
        var b = this.getUnsafe(a);
        if (b == null || typeof b === "boolean") return b;
        else {
          this.$1.reportRecoverableError(
            "Requested key " + a + " as boolean, but it was " + typeof b
          );
          return null;
        }
      };
      b.getUnsafe = function (a) {
        return this.$2.get(a);
      };
      b.getClassInstance = function (a, b) {
        var c = this.getUnsafe(a);
        if (c == null || c instanceof b) return c;
        else {
          this.$1.reportRecoverableError(
            "Requested key " +
              a +
              " as " +
              String(b) +
              ", but it was something else"
          );
          return null;
        }
      };
      return a;
    })();
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadFBAssetContext",
  [
    "ErrorNormalizeUtils",
    "MediaUploadAssetContext",
    "MediaUploadExtrasStorage",
    "MediaUploadStageEvent",
    "MediaUploadTime",
    "getErrorSafe",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b) {
        var d;
        d = a.call(this, b) || this;
        d.request = b.assetRequest;
        d.sessionContext = b.sessionContext;
        d.processing = {
          rawData: new (c("MediaUploadExtrasStorage"))(b.params),
        };
        return d;
      }
      var e = b.prototype;
      e.recordStageOutcome = function (a) {
        var b = a.stage,
          d = a.outcome,
          e = a.rawErrorCode,
          f = a.rawErrorObject,
          g = a.displayError,
          h = a.errorAttributes;
        a = a.networkRequestID;
        f =
          f == null
            ? void 0
            : c("ErrorNormalizeUtils").normalizeError(c("getErrorSafe")(f));
        this.$MediaUploadFBAssetContext1 = {
          stage: b,
          outcome: d,
          rawErrorCode: e,
          errorObject: f,
          displayError: g,
          errorAttributes: h,
          networkRequestID: a,
        };
      };
      e.emitStageEvent = function (b, d) {
        b === c("MediaUploadStageEvent").STAGE_STARTED &&
          (this.$MediaUploadFBAssetContext1 = null),
          a.prototype.emitStageEvent.call(this, b, d);
      };
      e.composeSnapshot = function () {
        var a = this.__composeBaseSnapshot();
        return babelHelpers["extends"]({}, a, {
          videoID: this.videoID,
          request: this.request,
          uploadServiceDomain: this.processing.uploadServiceDomain,
          hash:
            this.processing.pseudoHash == null
              ? null
              : {
                  hashValue: this.processing.pseudoHash.hashValue,
                  calculationTimeCostMs: d(
                    "MediaUploadTime"
                  ).timeToMilliseconds(
                    this.processing.pseudoHash.calculationTimeCost
                  ),
                },
          lastAction: this.$MediaUploadFBAssetContext1,
        });
      };
      b.castOrThrow = function (a, c) {
        c = c.createThrowableError;
        if (a instanceof b) return a;
        else {
          throw c(
            'Provided asset context has incorrect type of "' +
              ((c = a.constructor) == null ? void 0 : c.name) +
              '"'
          );
        }
      };
      return b;
    })(c("MediaUploadAssetContext"));
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadClientEventContext",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = function (a, b) {
      (this.startedAt = a.currentTimeProvider()), (this.entryPoint = b);
    };
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadSessionContext",
  [
    "MediaUploadExtrasStorage",
    "MediaUploadSessionEvent",
    "MediaUploadSessionStatus",
    "MediaUploadTime",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = new Set([
      c("MediaUploadSessionStatus").COMPLETED,
      c("MediaUploadSessionStatus").CANCELED,
      c("MediaUploadSessionStatus").FAILED,
    ]);
    a = (function () {
      function a(a) {
        var b = a.sessionID,
          d = a.emitter,
          e = a.progressCalculator;
        a = a.params;
        this.assetsByID = new Map();
        this.sessionID = b;
        this.$1 = d;
        this.$2 = e;
        this.extras = new (c("MediaUploadExtrasStorage"))(a);
        this.$4 = a.currentTimeProvider;
        this.$5 = a.randomStringProvider;
        this.$6 = c("MediaUploadSessionStatus").UNCONFIRMED;
        this.$3 = { createdAt: this.$4() };
        this.progress = {
          retryID: this.$5(),
          publishingExtrasProvided: !1,
          publishingDone: !1,
          percentageComplete: 0,
        };
        this.releaseOnFinish = [];
      }
      var b = a.prototype;
      b.emitSessionEvent = function (a) {
        this.$1.emitSessionEvent(a, this),
          a === c("MediaUploadSessionEvent").PUBLISH_SUCCEED &&
            ((this.progress.publishingDone = !0),
            this.recalculateProgressAndEmit()),
          a === c("MediaUploadSessionEvent").SESSION_FINISHED && this.$7();
      };
      b.renewRetryID = function () {
        this.progress.retryID = this.$5();
      };
      b.updateLastError = function (a) {
        this.__lastError = a;
      };
      b.recalculateProgressAndEmit = function () {
        this.$2.calculateSessionProgress(this) &&
          this.emitSessionEvent(c("MediaUploadSessionEvent").SESSION_PROGRESS);
      };
      b.$7 = function () {
        while (this.releaseOnFinish.length > 0) {
          var a = this.releaseOnFinish.pop();
          a.cancel();
        }
      };
      b.updateStatusAndEmit = function (a) {
        if (this.$6 === a) return;
        this.$6 = a;
        this.progress.terminalStatus == null &&
          h.has(a) &&
          ((this.progress.terminalStatus = a),
          this.emitSessionEvent(c("MediaUploadSessionEvent").SESSION_FINISHED));
        switch (a) {
          case c("MediaUploadSessionStatus").CONFIRMED:
            this.progress.terminalStatus = void 0;
            this.$3.confirmedAt = this.$4();
            this.emitSessionEvent(
              c("MediaUploadSessionEvent").SESSION_CONFIRMED
            );
            break;
          case c("MediaUploadSessionStatus").COMPLETED:
            this.emitSessionEvent(c("MediaUploadSessionEvent").SESSION_SUCCEED);
            break;
          case c("MediaUploadSessionStatus").CANCELED:
            this.emitSessionEvent(
              c("MediaUploadSessionEvent").SESSION_CANCELED
            );
            break;
          case c("MediaUploadSessionStatus").FAILED:
            this.emitSessionEvent(c("MediaUploadSessionEvent").SESSION_FAILED);
            break;
          case c("MediaUploadSessionStatus").PUBLISHING:
            this.emitSessionEvent(c("MediaUploadSessionEvent").PUBLISH_STARTED);
            break;
          default:
        }
      };
      b.getActiveAssets = function () {
        var a = [];
        for (
          var b = this.assetsByID.values(),
            c = Array.isArray(b),
            d = 0,
            b = c
              ? b
              : b[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var e;
          if (c) {
            if (d >= b.length) break;
            e = b[d++];
          } else {
            d = b.next();
            if (d.done) break;
            e = d.value;
          }
          e = e;
          e.isRemoved() || a.push(e);
        }
        return a;
      };
      b.isCanceled = function () {
        return this.$6 === c("MediaUploadSessionStatus").CANCELED;
      };
      b.isPublished = function () {
        return this.$6 === c("MediaUploadSessionStatus").COMPLETED;
      };
      b.isPublishing = function () {
        return this.$6 === c("MediaUploadSessionStatus").PUBLISHING;
      };
      b.isConfirmed = function () {
        return this.$6 === c("MediaUploadSessionStatus").CONFIRMED;
      };
      b.isFailed = function () {
        return this.$6 === c("MediaUploadSessionStatus").FAILED;
      };
      b.__composeBaseSnapshot = function () {
        return {
          sessionID: this.sessionID,
          retryID: this.progress.retryID,
          status: this.$6,
          extras: this.extras,
          timing: {
            createdAtMs: d("MediaUploadTime").timeToMilliseconds(
              this.$3.createdAt
            ),
            confirmedAtMs: d("MediaUploadTime").maybeTimeToMilliseconds(
              this.$3.confirmedAt
            ),
          },
          terminalStatus: this.progress.terminalStatus,
          percentageComplete: this.progress.percentageComplete,
          publishingResponse: this.progress.publishingResponse,
          cancelReason: this.progress.cancelReason,
        };
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBSessionContext",
  ["ErrorNormalizeUtils", "MediaUploadSessionContext", "getErrorSafe"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b) {
        var c;
        c =
          a.call(this, {
            sessionID: b.sessionID,
            emitter: b.emitter,
            progressCalculator: b.progressCalculator,
            params: b.params,
          }) || this;
        c.entryPoint = b.entryPoint;
        return c;
      }
      var d = b.prototype;
      d.composeSnapshot = function () {
        var a = this.__composeBaseSnapshot();
        return babelHelpers["extends"]({}, a, {
          entryPoint: this.entryPoint,
          lastError:
            this.__lastError == null
              ? null
              : {
                  errorObject:
                    this.__lastError.rawErrorObject == null
                      ? null
                      : c("ErrorNormalizeUtils").normalizeError(
                          c("getErrorSafe")(this.__lastError.rawErrorObject)
                        ),
                  rawErrorCode: this.__lastError.rawErrorCode,
                },
        });
      };
      b.castOrThrow = function (a, c) {
        c = c.createThrowableError;
        if (a instanceof b) return a;
        else {
          throw c(
            'Provided session context has incorrect type of "' +
              ((c = a.constructor) == null ? void 0 : c.name) +
              '"'
          );
        }
      };
      return b;
    })(c("MediaUploadSessionContext"));
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBClientEventContext",
  [
    "ErrorNormalizeUtils",
    "MediaUploadClientEventContext",
    "MediaUploadFBAssetContext",
    "MediaUploadFBSessionContext",
    "MediaUploadTime",
    "getErrorSafe",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b) {
        var d;
        d = a.call(this, b.envParams, b.entryPoint) || this;
        d.entryPoint = b.entryPoint;
        b.context != null &&
        b.context instanceof c("MediaUploadFBSessionContext")
          ? (d.sessionContext = b.context)
          : b.context != null &&
            b.context instanceof c("MediaUploadFBAssetContext") &&
            ((d.sessionContext = b.context.sessionContext),
            (d.assetContext = b.context));
        return d;
      }
      b.castOrThrow = function (a, c) {
        if (a instanceof b) return a;
        else {
          throw c.createThrowableError(
            'Provided client event context has incorrect type of "' +
              ((c = a.constructor) == null ? void 0 : c.name) +
              '"'
          );
        }
      };
      var e = b.prototype;
      e.composerSnapshot = function () {
        var a, b;
        a =
          ((a = this.errorInfo) == null ? void 0 : a.rawErrorObject) == null
            ? void 0
            : c("ErrorNormalizeUtils").normalizeError(
                c("getErrorSafe")(
                  (a = this.errorInfo) == null ? void 0 : a.rawErrorObject
                )
              );
        return {
          entryPoint: this.entryPoint,
          startedAtMs: d("MediaUploadTime").timeToMilliseconds(this.startedAt),
          sessionSnapshot:
            (b = this.sessionContext) == null ? void 0 : b.composeSnapshot(),
          assetSnapshot:
            (b = this.assetContext) == null ? void 0 : b.composeSnapshot(),
          errorObject: a,
        };
      };
      return b;
    })(c("MediaUploadClientEventContext"));
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadEventEmitterAdapter",
  [
    "EventEmitter",
    "MediaUploadFBAssetContext",
    "MediaUploadFBClientEventContext",
    "MediaUploadFBSessionContext",
    "MediaUploadFBStage",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = function (a) {
      return a;
    };
    a = (function () {
      function a(a) {
        (this.$2 = new (c("EventEmitter"))()),
          (this.$1 = a),
          (this.emitter = this.$3()),
          (this.subscriber = this.$4());
      }
      var b = a.prototype;
      b.$3 = function () {
        var a = this,
          b = function (b) {
            b = c("MediaUploadFBSessionContext").castOrThrow(b, a.$1);
            return b.composeSnapshot();
          },
          d = function (b) {
            b = c("MediaUploadFBAssetContext").castOrThrow(b, a.$1);
            return b.composeSnapshot();
          },
          e = this.$2,
          f = function (b) {
            try {
              for (
                var c = arguments.length,
                  d = new Array(c > 1 ? c - 1 : 0),
                  f = 1;
                f < c;
                f++
              )
                d[f - 1] = arguments[f];
              e.emit.apply(e, [h(b)].concat(d));
            } catch (c) {
              a.$1.reportRecoverableError(
                "Session pub/sub chain failed for event " + String(b),
                c
              );
            }
          };
        return {
          emitClientEvent: function (b, d) {
            f(
              b,
              c("MediaUploadFBClientEventContext")
                .castOrThrow(d, a.$1)
                .composerSnapshot()
            );
          },
          emitSessionEvent: function (a, c) {
            f(a, b(c));
          },
          emitAssetEvent: function (a, c) {
            f(a, b(c.sessionContext), d(c));
          },
          emitStageEvent: function (e, g, h) {
            h = c("MediaUploadFBStage").cast(String(h));
            if (h == null) {
              a.$1.reportRecoverableError(
                "Invalid stage value, it must be MediaUploadFBStage, ignoring"
              );
              return;
            }
            f(e, b(g.sessionContext), d(g), h);
          },
        };
      };
      b.$4 = function () {
        var a = this,
          b = function (b, c) {
            try {
              b();
            } catch (b) {
              a.$1.reportRecoverableError(
                "Stage pub/sub chain failed for event " + c(),
                b
              );
            }
          };
        return {
          addClientEventListener: function (c, d) {
            var e = a.$2.addListener(h(c), function (a) {
              return b(
                function () {
                  return d(a);
                },
                function () {
                  return String(c);
                }
              );
            });
            return {
              cancel: function () {
                return e.remove();
              },
            };
          },
          addSessionEventListener: function (c, d) {
            var e = a.$2.addListener(h(c), function (a) {
              return b(
                function () {
                  return d(a);
                },
                function () {
                  return String(c);
                }
              );
            });
            return {
              cancel: function () {
                return e.remove();
              },
            };
          },
          addAssetEventListener: function (c, d) {
            var e = a.$2.addListener(h(c), function (a, e) {
              return b(
                function () {
                  return d(a, e);
                },
                function () {
                  return String(c);
                }
              );
            });
            return {
              cancel: function () {
                return e.remove();
              },
            };
          },
          addStageEventListener: function (c, d, e) {
            var f = a.$2.addListener(h(c), function (a, f, g) {
              d === g &&
                b(
                  function () {
                    return e(a, f);
                  },
                  function () {
                    return String(c) + "  " + String(g);
                  }
                );
            });
            return {
              cancel: function () {
                return f.remove();
              },
            };
          },
        };
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadExecutor",
  ["Promise"],
  function (a, b, c, d, e, f) {
    "use strict";
    var g;
    a = (function () {
      function a(a) {
        a === void 0 && (a = 1), (this.$1 = []), (this.$3 = 0), (this.$2 = a);
      }
      var c = a.prototype;
      c.schedule = function (a) {
        var c = this;
        return new (g || (g = b("Promise")))(function (b) {
          var d = function () {
            var c = a();
            c["finally"](b);
            return c;
          };
          c.$1.push(d);
          c.$4();
        });
      };
      c.$4 = function () {
        var a = this;
        if (this.$3 >= this.$2 || this.$1.length === 0) return;
        var b = this.$1.shift();
        b()["finally"](function () {
          a.$3--, a.$4();
        });
        this.$3++;
      };
      return a;
    })();
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadAssetRequest",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = function (a) {
      var b = a.assetID,
        c = a.asset;
      a = a.extras;
      this.assetID = b;
      this.asset = c;
      this.extras = a;
    };
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadFBAssetRequest",
  ["MediaUploadAssetRequest"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b) {
        var c = b.assetID,
          d = b.asset,
          e = b.extras;
        b = b.attributes;
        c = a.call(this, { assetID: c, asset: d, extras: e }) || this;
        c.attributes = {
          targetID: b.targetID,
          actorID: b.actorID,
          hasFileBeenReplaced: b.hasFileBeenReplaced,
          composerDialogVersion: b.composerDialogVersion,
          publisherActionSource: b.publisherActionSource,
          creatorProduct: b.creatorProduct,
          composerSessionID: b.composerSessionID,
        };
        return c;
      }
      b.castOrThrow = function (a, c) {
        c = c.createThrowableError;
        if (a instanceof b) return a;
        else {
          throw c(
            'Provided asset request has incorrect type of "' +
              ((c = a.constructor) == null ? void 0 : c.name) +
              '"'
          );
        }
      };
      return b;
    })(c("MediaUploadAssetRequest"));
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadClient",
  ["MediaUploadClientResult"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a(a) {
        (this.$4 = new Map()),
          (this.$1 = a.implementation),
          (this.$2 = a.sessionStrategy),
          (this.$3 = a.envParams),
          this.$1.subscribeToHooks(),
          this.$3.isSupported() ||
            this.$3.reportRecoverableError(
              "This browser does not support this version of the Media Upload SDK"
            );
      }
      var b = a.prototype;
      b.cancelSession = function (a, b) {
        if (!this.$3.isSupported())
          return c("MediaUploadClientResult").UNSUPPORTED_BROWSER;
        a = this.$4.get(a);
        return a == null
          ? c("MediaUploadClientResult").SESSION_NOT_FOUND
          : this.$2.cancel(a, b);
      };
      b.cleanSession = function (a) {
        return !this.$3.isSupported()
          ? c("MediaUploadClientResult").UNSUPPORTED_BROWSER
          : this.$4["delete"](a)
          ? c("MediaUploadClientResult").ACCEPTED
          : c("MediaUploadClientResult").SESSION_NOT_FOUND;
      };
      b.retrySession = function (a) {
        if (!this.$3.isSupported())
          return c("MediaUploadClientResult").UNSUPPORTED_BROWSER;
        a = this.$4.get(a);
        return a == null
          ? c("MediaUploadClientResult").SESSION_NOT_FOUND
          : this.$2.retry(a);
      };
      b.$5 = function (a) {
        var b = this.$4.get(a);
        b == null && ((b = this.$1.createSessionContext(a)), this.$4.set(a, b));
        return b;
      };
      b.updateSessionExtras = function (a, b) {
        if (!this.$3.isSupported())
          return c("MediaUploadClientResult").UNSUPPORTED_BROWSER;
        a = this.$5(a);
        return this.$2.updateSessionExtras(a, b, !1);
      };
      b.confirmSession = function (a, b, d) {
        if (!this.$3.isSupported())
          return c("MediaUploadClientResult").UNSUPPORTED_BROWSER;
        a = this.$5(a);
        if (d != null) {
          d = this.$2.updateSessionExtras(a, d, !0);
          if (d !== c("MediaUploadClientResult").ACCEPTED) return d;
        }
        d = this.$2.syncAssetUploads(a, b);
        return d !== c("MediaUploadClientResult").ACCEPTED
          ? d
          : this.$2.confirm(a);
      };
      b.startUploads = function (a, b) {
        if (!this.$3.isSupported()) {
          var d = {};
          b.forEach(function (a) {
            return (d[a.assetID] = c(
              "MediaUploadClientResult"
            ).UNSUPPORTED_BROWSER);
          });
          return d;
        }
        a = this.$5(a);
        return this.$2.uploadAssets(a, b);
      };
      b.removeUpload = function (a, b) {
        if (!this.$3.isSupported())
          return c("MediaUploadClientResult").UNSUPPORTED_BROWSER;
        a = this.$4.get(a);
        return a == null
          ? c("MediaUploadClientResult").SESSION_NOT_FOUND
          : this.$2.removeAsset(a, b);
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBClient",
  ["MediaUploadClient"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b) {
        return a.call(this, b) || this;
      }
      return b;
    })(c("MediaUploadClient"));
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBDefaultServerConfigurationRetriever",
  [
    "MediaUploadCancelablePromise",
    "MediaUploadClientEvent",
    "MediaUploadFBClientEventContext",
    "MediaUploadFBDefaultServerConfigurationRetrieverQuery.graphql",
    "MediaUploadOperationOutcome",
    "MediaUploadTime",
    "RelayFBEnvironment",
    "RelayHooks",
    "URI",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i =
        h !== void 0
          ? h
          : (h = b(
              "MediaUploadFBDefaultServerConfigurationRetrieverQuery.graphql"
            )),
      j = {
        metadataValidation: {
          minSizeKB: 1,
          maxSizeKB: 10 * 1024 * 1024,
          minDuration: d("MediaUploadTime").secondsToTime(1),
          maxDuration: d("MediaUploadTime").hoursToTime(24),
          minWidth: 100,
          minHeight: 100,
          minAspectRatio: 0.5,
          maxAspectRatio: 4,
          extensions: new Set([
            "3g2",
            "3gp",
            "3gpp",
            "asf",
            "avi",
            "dat",
            "divx",
            "dv",
            "f4v",
            "flv",
            "gif",
            "m2ts",
            "m4v",
            "mkv",
            "mod",
            "mov",
            "mp4",
            "mpe",
            "mpeg",
            "mpeg4",
            "mpg",
            "mts",
            "nsv",
            "ogm",
            "ogv",
            "qt",
            "rmvb",
            "tmp",
            "tod",
            "ts",
            "vob",
            "webm",
            "wmv",
          ]),
          acceptDimensionsFromPlayer: !1,
        },
        startRequest: {
          baseURI: new (c("URI"))(
            "https://vupload-edge.facebook.com/ajax/video/upload/requests/start/"
          ),
        },
        startRequestPath: "/ajax/video/upload/requests/start/",
        receiveRequest: {
          baseURI: new (c("URI"))(
            "https://vupload-edge.facebook.com/ajax/video/upload/requests/receive/"
          ),
        },
        receiveRequestPath: "/ajax/video/upload/requests/receive/",
        uploadService: {
          defaultService: {
            serviceName: "rupload",
            serviceDomain: "facebook.com",
            serviceConsumer: "fb_video",
          },
          targetedService: null,
          tracing: { enabled: !1, minFileSizeKB: 102400 },
          oculusCreatorStudio: "meta_quest_media_studio",
        },
        networkMonitor: {
          networkProbe: { enabled: !0 },
          internetProbe: {
            enabled: !1,
            timeout: d("MediaUploadTime").secondsToTime(2),
            backoffPolicy: {
              backoff: {
                initial: d("MediaUploadTime").secondsToTime(10),
                jitter: d("MediaUploadTime").secondsToTime(0),
                expBase: d("MediaUploadTime").secondsToTime(1),
                expMultiplier: 2,
                max: d("MediaUploadTime").secondsToTime(60),
              },
              limits: {},
            },
          },
          stallDetector: {
            enabled: !1,
            timeout: d("MediaUploadTime").secondsToTime(30),
          },
        },
      };
    a = (function () {
      function a(a) {
        (this.$5 = !0),
          (this.$1 = a.entryPoint),
          (this.$3 = a.emitter),
          (this.$2 = a.setters),
          (this.$4 = a.envParams);
      }
      var b = a.prototype;
      b.$6 = function () {
        return d("RelayHooks").fetchQuery(c("RelayFBEnvironment"), i, {
          source_type: this.$1.sourceType,
        });
      };
      b.run = function (a) {
        var b = this,
          d = new (c("MediaUploadFBClientEventContext"))({
            entryPoint: this.$1,
            envParams: this.$4,
            context: a,
          });
        if (this.$5) {
          this.$3.emitClientEvent(
            c("MediaUploadClientEvent").CLIENT_CONFIG_REQUESTED,
            d
          );
          return new (c("MediaUploadCancelablePromise"))(function (a) {
            try {
              var e = b.$6().subscribe({
                error: (function (a) {
                  function b(b) {
                    return a.apply(this, arguments);
                  }
                  b.toString = function () {
                    return a.toString();
                  };
                  return b;
                })(function (e) {
                  b.$4.reportRecoverableError(
                    "Error getting client configuration",
                    e
                  ),
                    b.$3.emitClientEvent(
                      c("MediaUploadClientEvent").CLIENT_CONFIG_FAILED,
                      d
                    ),
                    b.$7(null),
                    a(c("MediaUploadOperationOutcome").SUCCESS);
                }),
                next: function (e) {
                  b.$3.emitClientEvent(
                    c("MediaUploadClientEvent").CLIENT_CONFIG_RECEIVED,
                    d
                  ),
                    b.$7(e),
                    (b.$5 = !1),
                    a(c("MediaUploadOperationOutcome").SUCCESS);
                },
              });
              return {
                cancel: function () {
                  e.unsubscribe();
                },
              };
            } catch (e) {
              b.$4.reportRecoverableError(
                "Error requesting client configuration",
                e
              ),
                b.$7(null),
                b.$3.emitClientEvent(
                  c("MediaUploadClientEvent").CLIENT_CONFIG_FAILED,
                  d
                ),
                a(c("MediaUploadOperationOutcome").SUCCESS);
            }
          });
        } else {
          this.$3.emitClientEvent(
            c("MediaUploadClientEvent").CLIENT_CONFIG_CACHED,
            d
          );
          return c("MediaUploadCancelablePromise").resolve(
            c("MediaUploadOperationOutcome").SUCCESS
          );
        }
      };
      b.$8 = function (a) {
        var b, c;
        if (
          (a == null
            ? void 0
            : (b = a["default"]) == null
            ? void 0
            : b.service_name) == null ||
          (a == null
            ? void 0
            : (b = a["default"]) == null
            ? void 0
            : b.service_domain) == null
        )
          this.$4.reportRecoverableError(
            "Invalid configuration for default endpoint of the Upload Service, falling back to default"
          ),
            (b = j.uploadService.defaultService);
        else {
          var d;
          b = {
            serviceName:
              a == null
                ? void 0
                : (d = a["default"]) == null
                ? void 0
                : d.service_name,
            serviceDomain:
              a == null
                ? void 0
                : (d = a["default"]) == null
                ? void 0
                : d.service_domain,
            serviceConsumer: j.uploadService.defaultService.serviceConsumer,
          };
        }
        if (
          (a == null
            ? void 0
            : (d = a.targeted) == null
            ? void 0
            : d.service_name) != null &&
          (a == null
            ? void 0
            : (d = a.targeted) == null
            ? void 0
            : d.service_domain) != null
        ) {
          d = {
            serviceName:
              a == null
                ? void 0
                : (d = a.targeted) == null
                ? void 0
                : d.service_name,
            serviceDomain:
              a == null
                ? void 0
                : (d = a.targeted) == null
                ? void 0
                : d.service_domain,
          };
        } else
          (a == null ? void 0 : a.targeted) == null
            ? (d = null)
            : (this.$4.reportRecoverableError(
                "Invalid configuration for target endpoint of the Upload Service, falling back to default"
              ),
              (d = j.uploadService.targetedService));
        if (
          (a == null ? void 0 : (c = a.tracing) == null ? void 0 : c.enabled) !=
            null &&
          (a == null
            ? void 0
            : (c = a.tracing) == null
            ? void 0
            : c.min_file_size_kb) != null
        ) {
          a = {
            enabled:
              a == null ? void 0 : (c = a.tracing) == null ? void 0 : c.enabled,
            minFileSizeKB:
              a == null
                ? void 0
                : (c = a.tracing) == null
                ? void 0
                : c.min_file_size_kb,
          };
        } else
          this.$4.reportRecoverableError(
            "Invalid configuration for tracing in the Upload Service, falling back to default"
          ),
            (a = j.uploadService.tracing);
        c = !1;
        this.$1.sourceType === "vr_creator_studio" &&
          ((c = !0), (b.serviceConsumer = j.uploadService.oculusCreatorStudio));
        this.$2.uploadService({
          defaultService: b,
          targetedService: d,
          tracing: a,
          includeAccessToken: c,
        });
      };
      b.$9 = function (a) {
        var b;
        if (
          (a == null ? void 0 : a.min_size_kb) == null ||
          (a == null ? void 0 : a.max_size_kb) == null ||
          (a == null ? void 0 : a.min_width) == null ||
          (a == null ? void 0 : a.min_height) == null ||
          (a == null ? void 0 : a.min_duration_secs) == null ||
          (a == null ? void 0 : a.max_duration_secs) == null ||
          (a == null ? void 0 : a.min_aspect_ration) == null ||
          (a == null ? void 0 : a.max_aspect_ration) == null ||
          (a == null ? void 0 : a.allowed_extensions) == null ||
          (a == null ? void 0 : a.accept_dimensions_from_player) == null
        )
          this.$4.reportRecoverableError(
            "Invalid metadata validation, falling back to default"
          ),
            (b = babelHelpers["extends"](
              { sourceType: this.$1.sourceType },
              j.metadataValidation
            )),
            this.$1.sourceType === "vr_creator_studio" &&
              (b.maxSizeKB = 100 * 1024 * 1024);
        else {
          var c = a == null ? void 0 : a.max_duration_secs;
          b = {
            sourceType: this.$1.sourceType,
            minSizeKB: a == null ? void 0 : a.min_size_kb,
            maxSizeKB: a == null ? void 0 : a.max_size_kb,
            minWidth: a == null ? void 0 : a.min_width,
            minHeight: a == null ? void 0 : a.min_height,
            minAspectRatio: a == null ? void 0 : a.min_aspect_ration,
            maxAspectRatio: a == null ? void 0 : a.max_aspect_ration,
            extensions: new Set(a == null ? void 0 : a.allowed_extensions),
            acceptDimensionsFromPlayer:
              a == null ? void 0 : a.accept_dimensions_from_player,
            minDuration: d("MediaUploadTime").secondsToTime(
              a == null ? void 0 : a.min_duration_secs
            ),
            maxDuration: d("MediaUploadTime").secondsToTime(c),
          };
        }
        this.$2.metadataValidation(b);
      };
      b.$10 = function (a) {
        return (a == null ? void 0 : a.backoff_initial_ms) == null
          ? null
          : {
              backoff: {
                initial: d("MediaUploadTime").millisecondsToTime(
                  a == null ? void 0 : a.backoff_initial_ms
                ),
                jitter:
                  (a == null ? void 0 : a.backoff_jitter_ms) == null
                    ? null
                    : d("MediaUploadTime").millisecondsToTime(
                        a == null ? void 0 : a.backoff_jitter_ms
                      ),
                expBase:
                  (a == null ? void 0 : a.backoff_exp_base_ms) == null
                    ? null
                    : d("MediaUploadTime").millisecondsToTime(
                        a == null ? void 0 : a.backoff_exp_base_ms
                      ),
                expMultiplier: a == null ? void 0 : a.backoff_exp_multiplier,
                max:
                  (a == null ? void 0 : a.backoff_max_ms) == null
                    ? null
                    : d("MediaUploadTime").millisecondsToTime(
                        a == null ? void 0 : a.backoff_max_ms
                      ),
              },
              limits: {
                totalRetryCount:
                  a == null ? void 0 : a.limits_total_retry_count,
                totalTime:
                  (a == null ? void 0 : a.limits_total_time_ms) == null
                    ? null
                    : d("MediaUploadTime").millisecondsToTime(
                        a == null ? void 0 : a.limits_total_time_ms
                      ),
              },
            };
      };
      b.$11 = function (a) {
        var b,
          c = this.$10(a == null ? void 0 : a.internet_probe_backoff);
        if (
          (a == null ? void 0 : a.network_probe_enabled) == null ||
          (a == null ? void 0 : a.internet_probe_enabled) == null ||
          (a == null ? void 0 : a.internet_probe_timeout_ms) == null ||
          c == null ||
          (a == null ? void 0 : a.stall_detection_enabled) == null ||
          (a == null ? void 0 : a.stall_detection_timeout_ms) == null
        )
          this.$4.reportRecoverableError(
            "Invalid network monitor configuration, falling back to default"
          ),
            (b = j.networkMonitor);
        else {
          var e = a.network_probe_enabled,
            f = a.internet_probe_enabled,
            g = a.internet_probe_timeout_ms,
            h = a.stall_detection_enabled;
          a = a.stall_detection_timeout_ms;
          b = {
            networkProbe: { enabled: e },
            internetProbe: {
              enabled: f,
              timeout: d("MediaUploadTime").millisecondsToTime(g),
              backoffPolicy: c,
            },
            stallDetector: {
              enabled: h,
              timeout: d("MediaUploadTime").millisecondsToTime(a),
            },
          };
        }
        this.$2.networkMonitor(b);
      };
      b.$12 = function (a) {
        var b;
        (a == null ? void 0 : a.uri) == null
          ? (this.$4.reportRecoverableError(
              "Invalid metadata validation, falling back to default"
            ),
            this.$1.sourceType === "vr_creator_studio"
              ? (b = {
                  baseURI: new (c("URI"))(
                    "https://" + window.location.hostname + j.startRequestPath
                  ),
                })
              : (b = j.startRequest))
          : (b = { baseURI: new (c("URI"))(a == null ? void 0 : a.uri) });
        this.$2.startRequest(b);
      };
      b.$13 = function (a) {
        var b;
        (a == null ? void 0 : a.uri) == null
          ? (this.$4.reportRecoverableError(
              "Invalid metadata validation, falling back to default"
            ),
            this.$1.sourceType === "vr_creator_studio"
              ? (b = {
                  baseURI: new (c("URI"))(
                    "https://" + window.location.hostname + j.receiveRequestPath
                  ),
                })
              : (b = j.receiveRequest))
          : (b = { baseURI: new (c("URI"))(a == null ? void 0 : a.uri) });
        this.$2.receiveRequest(b);
      };
      b.$7 = function (a) {
        var b;
        this.$12(
          a == null
            ? void 0
            : (b = a.media_upload_config) == null
            ? void 0
            : b.network_start
        );
        this.$13(
          a == null
            ? void 0
            : (b = a.media_upload_config) == null
            ? void 0
            : b.network_receive
        );
        this.$8(
          a == null
            ? void 0
            : (b = a.media_upload_config) == null
            ? void 0
            : b.network_upload_service
        );
        this.$9(
          a == null
            ? void 0
            : (b = a.media_upload_config) == null
            ? void 0
            : b.video_metadata_validation
        );
        this.$11(
          a == null
            ? void 0
            : (b = a.media_upload_config) == null
            ? void 0
            : b.network_monitor
        );
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBStageOutcome",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "SUCCESS",
      "CANCEL",
      "EXCEPTION",
      "INTERNAL_FAILURE",
      "UNSUPPORTED_FEATURE",
      "ASSET_IS_NOT_FILE",
      "ASSET_IS_NOT_SUPPORTED",
      "REQUEST_ERROR",
      "INVALID_SERVER_RESPONSE",
      "MISSING_MANDATORY_DATA",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadFBFileHasher",
  [
    "MediaUploadFBStage",
    "MediaUploadFBStageOutcome",
    "MediaUploadOperationOutcome",
    "MediaUploadStageEvent",
    "Promise",
    "asyncToGeneratorRuntime",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h;
    a = (function () {
      function a(a) {
        (this.$1 = c("MediaUploadFBStage").HASHING),
          (this.$2 = a.pseudoHasher),
          (this.$3 = a.fullHasher);
      }
      var d = a.prototype;
      d.process = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* (a) {
          a.emitStageEvent(c("MediaUploadStageEvent").STAGE_STARTED, this.$1);
          try {
            yield this.$4(a);
          } catch (b) {
            a.recordStageOutcome({
              stage: this.$1,
              outcome: c("MediaUploadFBStageOutcome").EXCEPTION,
              rawErrorObject: b,
            });
          }
          a.emitStageEvent(c("MediaUploadStageEvent").STAGE_SUCCEED, this.$1);
          return c("MediaUploadOperationOutcome").SUCCESS;
        });
        function d(b) {
          return a.apply(this, arguments);
        }
        return d;
      })();
      d.$5 = function (a, c, d) {
        return c == null
          ? (h || (h = b("Promise"))).resolve()
          : c.hash(a.file).then(function (a) {
              a.outcome === "SUCCESS" && d(a.value);
              return a;
            });
      };
      d.$4 = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* (a) {
          var d = this,
            e = a.asset.dataAsFile();
          if (e == null) {
            a.recordStageOutcome({
              stage: this.$1,
              outcome: c("MediaUploadFBStageOutcome").MISSING_MANDATORY_DATA,
            });
            return;
          }
          var f = yield this.$5(e, this.$3, function (b) {
            return (a.processing.fullHash = b);
          }).then(
            (function () {
              var c = b("asyncToGeneratorRuntime").asyncToGenerator(function* (
                b
              ) {
                if ((b == null ? void 0 : b.outcome) === "SUCCESS") {
                  a.processing.pseudoHash = a.processing.fullHash;
                  return [b, b];
                } else
                  return [
                    b,
                    yield d.$5(e, d.$2, function (b) {
                      return (a.processing.pseudoHash = b);
                    }),
                  ];
              });
              return function (a) {
                return c.apply(this, arguments);
              };
            })()
          );
          for (f of f)
            if ((f == null ? void 0 : f.outcome) === "FILE_TOO_LARGE") {
              a.recordStageOutcome({
                stage: this.$1,
                outcome: c("MediaUploadFBStageOutcome").ASSET_IS_NOT_SUPPORTED,
              });
              return;
            } else if ((f == null ? void 0 : f.outcome) === "FAILURE") {
              a.recordStageOutcome({
                stage: this.$1,
                outcome: c("MediaUploadFBStageOutcome").INTERNAL_FAILURE,
                rawErrorCode: f == null ? void 0 : f.rawErrorCode,
                rawErrorObject: f == null ? void 0 : f.rawErrorObject,
              });
              return;
            }
          a.recordStageOutcome({
            stage: this.$1,
            outcome: c("MediaUploadFBStageOutcome").SUCCESS,
          });
        });
        function d(b) {
          return a.apply(this, arguments);
        }
        return d;
      })();
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadNetworkStatus",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum")({
      UNKNOWN: "Unknown",
      CONNECTED: "Connected",
      DISCONNECTED: "Disconnected",
      TIMEOUT: "TimedOut",
    });
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadFBInternetProbe",
  [
    "AsyncRequest",
    "MediaUploadCancelablePromise",
    "MediaUploadNetworkStatus",
    "Promise",
    "asyncToGeneratorRuntime",
    "uuidv4",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = "https://rupload.facebook.com/fb_video/ping-";
    a = (function () {
      function a(a, b) {
        (this.$2 = a), (this.$1 = b), (this.$3 = ["" + i + c("uuidv4")()]);
      }
      var d = a.prototype;
      d.$4 = function (a) {
        return new (c("MediaUploadCancelablePromise"))(function (b) {
          var d = new (c("AsyncRequest"))()
            .setAllowCrossOrigin(!0)
            .setAllowCredentials(!0)
            .setMethod("GET")
            .setURI(a)
            .setReadOnly(!0)
            .setOption("suppressEvaluation", !0)
            .setHandler(function (a) {
              a =
                a == null
                  ? void 0
                  : (a = a.payload) == null
                  ? void 0
                  : a.status;
              b(
                a === 200
                  ? c("MediaUploadNetworkStatus").CONNECTED
                  : c("MediaUploadNetworkStatus").DISCONNECTED
              );
            })
            .setTransportErrorHandler(function () {
              b(c("MediaUploadNetworkStatus").DISCONNECTED);
            })
            .setErrorHandler(function () {
              b(c("MediaUploadNetworkStatus").DISCONNECTED);
            });
          d.send() || b(c("MediaUploadNetworkStatus").DISCONNECTED);
          return {
            cancel: function () {
              d.abort();
            },
          };
        });
      };
      d.$5 = function () {
        var a = this;
        return new (h || (h = b("Promise")))(function (b) {
          a.$1.delayedExecutor(a.$2.timeout, function () {
            return b(c("MediaUploadNetworkStatus").TIMEOUT);
          });
        });
      };
      d.probe = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* () {
          var a = this,
            c = this.$3.map(function (b) {
              return a.$4(b);
            }),
            d = (h || (h = b("Promise"))).race(
              [this.$5()].concat(
                c.map(function (a) {
                  return a.promise;
                })
              )
            );
          d = yield d;
          c.forEach(function (a) {
            return a.cancel();
          });
          return d;
        });
        function c() {
          return a.apply(this, arguments);
        }
        return c;
      })();
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBLocalAssetStrategy",
  ["MediaUploadPipeline"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a(a) {
        (this.$1 = a.envParams),
          (this.metadataParser = a.metadataParser),
          (this.metadataValidator = a.metadataValidator),
          (this.fileHasher = a.fileHasher);
      }
      var b = a.prototype;
      b.run = function (a) {
        var b = this,
          d = new (c("MediaUploadPipeline"))(this.$1);
        d.addPlainStep(function () {
          return b.metadataParser.parse(a);
        });
        d.addPlainStep(function () {
          return b.metadataValidator.validate(
            a,
            b.metadataParser.retriveRawMetadata(a)
          );
        });
        var e = this.fileHasher;
        e != null &&
          d.addPlainStep(function () {
            return e.process(a);
          });
        return d.run();
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "ISOVideoBoxConstants",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = 8;
    b = [255, 204, 130, 99, 248, 85, 74, 147, 136, 20, 88, 122, 2, 82, 31, 221];
    c = [174, 36, 178, 77, 60, 143, 79, 24, 138, 123, 224, 9, 193, 56, 53, 193];
    f.BOX_BASE_SIZE = a;
    f.GSPHERICAL_UUID = b;
    f.FBSPHERICAL_UUID = c;
  },
  66
);
__d(
  "FBSphericalMetadataTags",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      SPHERICAL: "FBSpherical:Spherical",
      INITIAL_VERTICAL_FOV_DEGREES: "FBSpherical:InitialVerticalFOVDegrees",
      GUIDE: "FBSpherical:Guide",
      HOTSPOT: "FBSpherical:HotspotMetadata",
      USED_360_DIRECTOR: "FBSpherical:Used360Director",
    });
    f["default"] = a;
  },
  66
);
__d(
  "GSphericalMetadataTags",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      SPHERICAL: "GSpherical:Spherical",
      INITIAL_VIEW_HEADING_DEGREES: "GSpherical:InitialViewHeadingDegrees",
      INITIAL_VIEW_PITCH_DEGREES: "GSpherical:InitialViewPitchDegrees",
      PROJECTION_TYPE: "GSpherical:ProjectionType",
      STEREO_MODE: "GSpherical:StereoMode",
      STITCHED: "GSpherical:Stitched",
      STITCHING_SOFTWARE: "GSpherical:StitchingSoftware",
      CROPPED_AREA_IMAGE_WIDTH_PIXELS: "GSphercal:CroppedAreaImageWidthPixels",
      CROPPED_AREA_IMAGE_HEIGHT_PIXELS:
        "GSphercal:CroppedAreaImageHeightPixels",
      CROPPED_AREA_LEFT_PIXELS: "GSphercal:CroppedAreaLeftPixels",
      CROPPED_AREA_TOP_PIXELS: "GSphercal:CroppedAreaTopPixels",
      FULL_PANO_WIDTH_PIXELS: "GSphercal:FullPanoWidthPixels",
      FULL_PANO_HEIGHT_PIXELS: "GSphercal:FullPanoHeightPixels",
    });
    f["default"] = a;
  },
  66
);
__d(
  "SphericalVideoMetadataTags",
  ["FBSphericalMetadataTags", "GSphericalMetadataTags"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = Object.freeze({
      GSPHERICAL: c("GSphericalMetadataTags"),
      FBSPHERICAL: c("FBSphericalMetadataTags"),
    });
    g["default"] = a;
  },
  98
);
__d(
  "VideoSphericalMetadataUtil",
  ["SphericalVideoMetadataTags", "VideoProjection", "VideoStereoFormat"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      if (!a) return null;
      a = a.replace(/\0/g, "");
      if (window.DOMParser) {
        var b = new DOMParser();
        b = b.parseFromString(a, "text/xml");
      } else
        (b = new window.ActiveXObject("Microsoft.XMLDOM")),
          (b.async = "false"),
          b.loadXML(a);
      return b;
    }
    function b(a) {
      if (Object.values(c("VideoProjection")).includes(a)) return a;
      else return null;
    }
    function d(a) {
      if (Object.values(c("VideoStereoFormat")).includes(a)) return a;
      else return null;
    }
    function e(a) {
      a = a.getElementsByTagNameNS("*", "*");
      var b = null;
      for (var d = 0; d < a.length; d++) {
        var e = a[d],
          f = e.nodeName,
          g = e.parentElement;
        if (
          f !== "parsererror" &&
          g &&
          g.nodeName !== "parsererror" &&
          Object.values(c("SphericalVideoMetadataTags").GSPHERICAL).indexOf(f) <
            0 &&
          Object.values(c("SphericalVideoMetadataTags").GSPHERICAL).indexOf(
            g.nodeName
          ) < 0
        ) {
          b || (b = "");
          g = e.outerHTML;
          b += "<" + f + g.slice(f.length + 1, -(f.length + 1)) + f + ">";
        }
      }
      return b;
    }
    function f(a, b, c, d, e) {
      if (
        b !== null &&
        c !== null &&
        d !== null &&
        e !== null &&
        a.projectionType === "equirectangular" &&
        (a.stereoMode === "left-right" || a.stereoMode === "top-bottom")
      ) {
        a = parseInt(b, 10);
        b = parseInt(c, 10);
        c = parseInt(d, 10);
        d = parseInt(e, 10);
        if (Math.abs(a - c / 2) <= 1 && Math.abs(b - d) <= 1) return !0;
      }
      return !1;
    }
    function h(a, b, c) {
      return new File([a], b, { type: c });
    }
    function i(a) {
      var b = new ArrayBuffer(a.length),
        c = new DataView(b);
      for (var d = 0; d < a.length; d++) c.setUint8(d, a.charCodeAt(d));
      return b;
    }
    function j(a, b, c) {
      a = a.buffer;
      return h(a, b, c);
    }
    function k(a, b) {
      if (a.length !== b.length) return !1;
      for (var c = 0; c < a.length; c++) if (a[c] !== b[c]) return !1;
      return !0;
    }
    g.parseXMLToDocument = a;
    g.stringToProjectionType = b;
    g.stringToStereoMode = d;
    g.getUnsupportedGSphericalTagsXML = e;
    g.isGoogleVR180 = f;
    g.arrayBufferToFile = h;
    g.stringToArrayBuffer = i;
    g.bufferToFile = j;
    g.uuidArrayEquals = k;
  },
  98
);
__d(
  "VideoUploadMetadataParserErrorCode",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "FILE_READING_NOT_SUPPORTED",
      "UNKNOWN_FILE_EXTENSION",
      "INTERNAL_FAILURE",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "checkForSphericalTag",
  ["VideoSphericalMetadataUtil"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      a = d("VideoSphericalMetadataUtil").parseXMLToDocument(a);
      if (!a) return !1;
      a = a.getElementsByTagNameNS("*", "Spherical");
      if (a.length === 0) return !1;
      a = a[0];
      a = a.childNodes[0].nodeValue;
      return a.toLowerCase() === "true";
    }
    g["default"] = a;
  },
  98
);
__d(
  "getVideo64BitAtomLength",
  ["Int64"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a, b, d, e) {
      var f = a.getUint32(b + e + d);
      a = a.getUint32(b + d + e + e);
      return new (c("Int64"))(a, f).toNumber();
    }
    g["default"] = a;
  },
  98
);
__d(
  "VideoUploadMetadataParser",
  [
    "Bootloader",
    "ErrorNormalizeUtils",
    "ISOVideoBoxConstants",
    "Promise",
    "VideoSphericalMetadataUtil",
    "VideoUploadFeatureDetector",
    "VideoUploadMetadataParserErrorCode",
    "asyncToGeneratorRuntime",
    "checkForSphericalTag",
    "err",
    "fileSlice",
    "getErrorSafe",
    "getVideo64BitAtomLength",
    "gkx",
    "nullthrows",
    "promiseDone",
  ],
  function (a, b, c, d, e, f, g) {
    var h,
      i = 4,
      j = 4,
      k = c("gkx")("6366") ? 20482048 : 5242880,
      l = 24,
      m = 88,
      n = 20,
      o = 16,
      p = 4,
      q = 84,
      r = 20,
      s = 62,
      t = 4,
      u = 12,
      v = 12,
      w = 16,
      x = 16,
      y = { 0: 36, 1: 52, 2: 72 },
      z = 1,
      A = 1,
      B = 4,
      C = 1,
      D = 1,
      E = 4,
      F = 4,
      G = 1e3,
      H = 16,
      I = 32,
      J = 34;
    e = (function () {
      function e(a, b, c, d) {
        (this.$1 = a),
          (this.$2 = b == null ? function () {} : b),
          (this.$4 = c),
          (this.$5 = !0),
          (this.$3 = d);
      }
      var f = e.prototype;
      f.getHandler = function () {
        return this.$2;
      };
      f.$6 = function (a) {
        this.$2(a), this.$3 != null && this.$3({ success: !0, metadata: a });
      };
      f.$7 = function (a, b) {
        this.$2(null);
        if (this.$3 != null) {
          b =
            b == null
              ? void 0
              : c("ErrorNormalizeUtils").normalizeError(c("getErrorSafe")(b));
          this.$3({ success: !1, errorCode: a, errorObject: b });
        }
      };
      f.parse = function () {
        if (!d("VideoUploadFeatureDetector").supportsFileReading()) {
          this.$7(
            c("VideoUploadMetadataParserErrorCode").FILE_READING_NOT_SUPPORTED
          );
          return null;
        }
        switch (this.$1.getExtension()) {
          case "mp4":
          case "mov":
          case "m4v":
          case "3gp":
          case "3g2":
            break;
          case "mkv":
            if (c("gkx")("816873")) break;
          default:
            this.$7(
              c("VideoUploadMetadataParserErrorCode").UNKNOWN_FILE_EXTENSION
            );
            return null;
        }
        return this.$8();
      };
      f.$8 = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* () {
          var a = this,
            d = this.$9(),
            e = this.$10();
          return new (h || (h = b("Promise")))(function (f, g) {
            try {
              c("promiseDone")(
                (h || (h = b("Promise"))).all([d, e]).then(
                  function (b) {
                    var c = b[0];
                    if (c.completed) {
                      b = b[1];
                      c.videoPlayerData = b;
                      a.$6(c);
                    }
                    f(c);
                  },
                  function (b) {
                    a.$7(
                      c("VideoUploadMetadataParserErrorCode").INTERNAL_FAILURE,
                      b
                    ),
                      g(b);
                  }
                )
              );
            } catch (b) {
              a.$7(c("VideoUploadMetadataParserErrorCode").INTERNAL_FAILURE, b),
                g(b);
            }
          });
        });
        function d() {
          return a.apply(this, arguments);
        }
        return d;
      })();
      f.$9 = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* () {
          var a = this,
            d;
          switch (this.$1.getExtension()) {
            case "mp4":
            case "mov":
            case "m4v":
            case "3gp":
            case "3g2":
              d = this.$11(0, Math.min(k, this.$1.getSize() || 0), null);
              break;
            case "mkv":
              yield new (h || (h = b("Promise")))(function (b, e) {
                c("Bootloader").loadModules(
                  ["VideoUploadMetadataMKVParser"],
                  function (c) {
                    c = new c(a.$1);
                    d = c.parse();
                    b();
                  },
                  "VideoUploadMetadataParser"
                );
              });
              break;
            default:
              throw new Error("Unrecognized file extension in _parseImpl");
          }
          return c("nullthrows")(d);
        });
        function d() {
          return a.apply(this, arguments);
        }
        return d;
      })();
      f.$11 = function (a, d, e) {
        var f = this,
          g = new FileReader();
        return new (h || (h = b("Promise")))(function (h, i) {
          g.onload = (function () {
            var c = b("asyncToGeneratorRuntime").asyncToGenerator(function* (
              b
            ) {
              try {
                if (!(g.result instanceof ArrayBuffer))
                  throw new Error(
                    "reader.result is something other than ArrayBuffer"
                  );
                b = f.$12(new DataView(g.result), 0, d - a, a, e);
                if (b.completed) {
                  var c = f.$13(b);
                  c.completed = !0;
                  h(c);
                } else {
                  c = yield f.$11(
                    a + b.nextOffset,
                    Math.min(f.$1.getSize() || 0, a + b.nextOffset + k),
                    b
                  );
                  h(c);
                }
              } catch (a) {
                i(a);
              }
            });
            return function (a) {
              return c.apply(this, arguments);
            };
          })();
          var j = f.$1.getFile();
          g.readAsArrayBuffer(c("fileSlice").call(j, a, d));
        });
      };
      f.$10 = function () {
        if (!this.$4 || !a.URL || !a.URL.createObjectURL) return null;
        var c = this.$1.getFile(),
          d = document.createElement("video"),
          e = new (h || (h = b("Promise")))(function (a, b) {
            var c = window.setTimeout(function () {
              window.clearTimeout(c), b("Video onloadedmetadata timed out");
            }, G);
          }),
          f = new h(function (b, e) {
            d.onloadedmetadata = function () {
              try {
                var a = { width: d.videoWidth, height: d.videoHeight };
                b(a);
              } catch (a) {
                e(a);
              }
            };
            try {
              d.src = a.URL.createObjectURL(c);
            } catch (a) {
              e(a);
            }
          });
        return h.race([f, e]);
      };
      f.$14 = function (a, b, c) {
        var d = [];
        for (var e = 0; e < c; e++)
          d.push(String.fromCharCode(a.getUint8(b + e)));
        return d.join("");
      };
      f.$15 = function (a, b, c) {
        var d = {
            version: null,
            ambisonic_type: null,
            ambisonic_order: null,
            ambisonic_channel_ordering: null,
            ambisonic_normalization: null,
            num_channels: null,
            channel_map: [],
          },
          e = 0;
        d.version = a.getUint8(b + e);
        e = z;
        d.ambisonic_type = a.getUint8(b + e);
        e += A;
        d.ambisonic_order = a.getUint32(b + e);
        e += B;
        d.ambisonic_channel_ordering = a.getUint8(b + e);
        e += C;
        d.ambisonic_normalization = a.getUint8(b + e);
        e += D;
        d.num_channels = a.getUint32(b + e);
        e += E;
        for (var f = 0; f < d.num_channels; f++) {
          d.channel_map.push(a.getUint32(b + e));
          e += F;
          if (e > c) return null;
        }
        return JSON.stringify(d);
      };
      f.$16 = function (a, b, e, f) {
        try {
          var g = j + i,
            h = d("ISOVideoBoxConstants").GSPHERICAL_UUID.length;
          if (g + h < e) {
            var k = [];
            for (var l = 0; l < h; l++) k.push(a.getUint8(b + g + l));
            l = d("VideoSphericalMetadataUtil").uuidArrayEquals(
              k,
              d("ISOVideoBoxConstants").GSPHERICAL_UUID
            );
            k = d("VideoSphericalMetadataUtil").uuidArrayEquals(
              k,
              d("ISOVideoBoxConstants").FBSPHERICAL_UUID
            );
            g += h;
            if (l || k) {
              h = this.$14(a, b + g, e - g);
              c("checkForSphericalTag")(h) &&
                ((f.sphericalMetadata.spherical = !0),
                k
                  ? (f.sphericalMetadata.FBSphericalMetadataXML = h)
                  : (f.sphericalMetadata.sphericalMetadataXml = h));
            }
          }
        } catch (a) {}
      };
      f.$12 = function (a, b, d, e, f) {
        f = f || {
          widths: [],
          heights: [],
          streamTypes: [],
          streamDurations: [],
          spherical: !1,
          sphericalMetadata: {
            sphericalMetadataXml: null,
            FBSphericalMetadataXML: null,
            fbSpatialAudioMetadataXml: null,
            ytSa3dMetadataJson: null,
          },
          isParsingInMediaInformationAtom: !1,
          endOfMediaInformationAtomOffset: null,
          streamSampleCounts: [],
          samples: [],
        };
        var g = null;
        while (b < d) {
          var h = a.getUint32(b),
            k = this.$14(a, b + i, j);
          h === 1 && (h = c("getVideo64BitAtomLength")(a, b, j, i));
          if (b + h > d) {
            f.completed = !1;
            f.nextOffset = b;
            h > d && (f.nextOffset += h);
            return f;
          }
          f.isParsingInMediaInformationAtom &&
            b >= Number(f.endOfMediaInformationAtomOffset) &&
            ((f.isParsingInMediaInformationAtom = !1),
            (f.endOfMediaInformationAtomOffset = null));
          if (b + e === 0 && k !== "ftyp") throw new Error("No ftyp atom");
          if (h === 0) throw new Error("len is 0");
          var z = function () {
            var d = a.getUint32(b + n),
              e = a.getUint32(b + l);
            if (d === 0) throw c("err")("mvhd timescale is 0");
            return e / d;
          };
          switch (k) {
            case "moov":
            case "trak":
            case "mdia":
            case "stbl":
              b += i + j;
              break;
            case "mvhd":
              f.duration = z();
              b += h;
              break;
            case "tkhd":
              k = a.getUint16(b + q);
              var A = a.getUint16(b + m);
              f.widths.push(k);
              f.heights.push(A);
              f.samples.push({ descriptions: [] });
              g = a.getUint32(b + r);
              b += h;
              break;
            case "hdlr":
              if (!f.isParsingInMediaInformationAtom) {
                k = this.$14(a, b + o, p);
                switch (k) {
                  case "vide":
                    k = "video";
                    break;
                  case "soun":
                    k = "audio";
                    break;
                  case "subt":
                    k = "subtitle";
                    break;
                  default:
                    k = "data";
                }
                f.streamTypes.push(k);
              }
              b += h;
              break;
            case "mdhd":
              f.streamDurations.push(z());
              b += h;
              break;
            case "uuid":
              this.$16(a, b, h, f);
              b += h;
              break;
            case "meta":
              A = v + u + t;
              k = this.$14(a, b + A, 4);
              if (k !== "face") {
                b += h;
                break;
              }
              z = i + j + s;
              A = this.$14(a, b + z, h - z);
              A !== null &&
                (f.sphericalMetadata.fbSpatialAudioMetadataXml == null &&
                  (f.sphericalMetadata.fbSpatialAudioMetadataXml =
                    "<fb360_spatial_audio>"),
                g
                  ? (f.sphericalMetadata.fbSpatialAudioMetadataXml +=
                      '\n                <track id="' +
                      g.toString() +
                      '">\n                  ' +
                      A +
                      "\n                </track>\n              ")
                  : (f.sphericalMetadata.fbSpatialAudioMetadataXml +=
                      "\n                <spatial_audio_formatting>\n                  " +
                      A +
                      "\n                </spatial_audio_formatting>\n              "));
              b += h;
              break;
            case "minf":
              k = this.$14(a, b + 2 * i + j, j);
              k === "smhd" || k === "vmhd"
                ? ((b += i + j),
                  (f.isParsingInMediaInformationAtom = !0),
                  (f.endOfMediaInformationAtomOffset = b + h))
                : (f.streamSampleCounts.push(null), (b += h));
              break;
            case "stsd":
              b += w;
              break;
            case "avc1":
              if (this.$5 && f.samples.length > 0) {
                z = f.samples[f.samples.length - 1];
                z.descriptions.push({
                  width: a.getUint16(b + I),
                  height: a.getUint16(b + J),
                });
              }
              b += h;
              break;
            case "mp4a":
            case "sowt":
            case "raw ":
            case "twos":
            case "fl32":
            case "fl64":
            case "in24":
            case "in32":
            case "ulaw":
            case "alaw":
            case "lpcm":
            case "Opus":
              A = a.getUint16(b + x).toString();
              Object.prototype.hasOwnProperty.call(y, A)
                ? (b += y[A])
                : (b += h);
              break;
            case "SA3D":
              k = this.$15(a, b + i + j, h);
              k !== null &&
                f.sphericalMetadata.ytSa3dMetadataJson === null &&
                (f.sphericalMetadata.ytSa3dMetadataJson = k);
              b += h;
              break;
            case "stsz":
            case "stz2":
              f.streamSampleCounts.push(a.getUint32(b + H));
              b += h;
              break;
            default:
              b += h;
          }
        }
        f.completed = !0;
        f.sphericalMetadata.fbSpatialAudioMetadataXml &&
          (f.sphericalMetadata.fbSpatialAudioMetadataXml +=
            "</fb360_spatial_audio>");
        return f;
      };
      f.$13 = function (a) {
        var b = { streams: { numAudioTracks: 0 }, format: {}, metadata: {} },
          c = a.widths.length,
          d = a.heights.length,
          e = a.streamTypes.length,
          f = a.streamDurations.length,
          g = a.streamSampleCounts.length,
          h = a.samples.length;
        if (c !== d || c !== e || c !== f || c !== g || c !== h)
          throw new Error(
            "Number of parsed widths, heights, durations or sample counts for video file are mismatched."
          );
        for (d = 0; d < c; d++) {
          var i = {
            width: a.widths[d],
            height: a.heights[d],
            duration: a.streamDurations[d],
            type: a.streamTypes[d],
            sampleCount: a.streamSampleCounts[d],
          };
          if (i.type === "video") {
            this.$5 &&
              a.samples[d].descriptions.forEach(function (a) {
                a.width > i.width &&
                  a.height > i.height &&
                  ((i.width = a.width), (i.height = a.height));
              });
            e = i.width * i.height;
            f = b.streams.primaryVideo;
            (!f || f.width * f.height > e) && (b.streams.primaryVideo = i);
          } else if (i.type === "audio") {
            g = b.streams.primaryAudio;
            (!g || g.duration < i.duration) && (b.streams.primaryAudio = i);
            b.streams.numAudioTracks++;
          }
        }
        b.format.duration = a.duration;
        b.format.isSpherical = a.sphericalMetadata.spherical;
        a.sphericalMetadata.spherical &&
          ((b.metadata.sphericalMetadataXml =
            a.sphericalMetadata.sphericalMetadataXml),
          (b.metadata.FBSphericalMetadataXML =
            a.sphericalMetadata.FBSphericalMetadataXML),
          (b.metadata.fbSpatialAudioMetadataXml =
            a.sphericalMetadata.fbSpatialAudioMetadataXml),
          (b.metadata.ytSa3dMetadataJson =
            a.sphericalMetadata.ytSa3dMetadataJson));
        return b;
      };
      return e;
    })();
    g["default"] = e;
  },
  98
);
__d(
  "MediaUploadFBMetadataParser",
  [
    "MediaUploadFBStage",
    "MediaUploadFBStageOutcome",
    "MediaUploadOperationOutcome",
    "MediaUploadStageEvent",
    "MediaUploadTime",
    "Promise",
    "VideoUploadFile",
    "VideoUploadMetadataParser",
    "asyncToGeneratorRuntime",
    "gkx",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = "MediaUploadMetadataParser";
    a = (function () {
      function a() {
        this.$1 = c("MediaUploadFBStage").METADATA_EXTRACTION;
      }
      var e = a.prototype;
      e.parse = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* (a) {
          a.emitStageEvent(c("MediaUploadStageEvent").STAGE_STARTED, this.$1);
          try {
            yield this.$2(a);
          } catch (b) {
            a.recordStageOutcome({
              stage: this.$1,
              outcome: c("MediaUploadFBStageOutcome").EXCEPTION,
              rawErrorObject: b,
            });
          }
          a.emitStageEvent(c("MediaUploadStageEvent").STAGE_SUCCEED, this.$1);
          return c("MediaUploadOperationOutcome").SUCCESS;
        });
        function d(b) {
          return a.apply(this, arguments);
        }
        return d;
      })();
      e.retriveRawMetadata = function (a) {
        return a.processing.rawData.getUnsafe(i);
      };
      e.$2 = function (a) {
        var d = this,
          e = a.asset;
        e = e.dataAsFile();
        if (e == null) {
          a.recordStageOutcome({
            stage: this.$1,
            outcome: c("MediaUploadFBStageOutcome").ASSET_IS_NOT_FILE,
          });
          return (h || (h = b("Promise"))).resolve();
        }
        var f = new (c("VideoUploadFile"))(null, e.file, e.size, e.extension);
        return new (h || (h = b("Promise")))(function (b) {
          var e = new (c("VideoUploadMetadataParser"))(
            f,
            null,
            c("gkx")("6377"),
            function (e) {
              e.success
                ? d.$3(a, e.metadata)
                : e.errorObject != null
                ? a.recordStageOutcome({
                    stage: d.$1,
                    outcome: c("MediaUploadFBStageOutcome").EXCEPTION,
                    rawErrorCode: String(e.errorCode),
                    rawErrorObject: e.errorObject,
                  })
                : a.recordStageOutcome({
                    stage: d.$1,
                    outcome: c("MediaUploadFBStageOutcome").INTERNAL_FAILURE,
                    rawErrorCode: String(e.errorCode),
                  }),
                b();
            }
          );
          e.parse();
        });
      };
      e.$3 = function (a, b) {
        var c, e, f, g;
        a.processing.rawData.set(i, b);
        c = (c = b.format) == null ? void 0 : c.duration;
        c = c == null ? void 0 : d("MediaUploadTime").secondsToTime(c);
        e =
          (e = b.streams) == null
            ? void 0
            : (e = e.primaryVideo) == null
            ? void 0
            : e.width;
        f =
          (f = b.streams) == null
            ? void 0
            : (f = f.primaryVideo) == null
            ? void 0
            : f.height;
        b.videoPlayerData != null &&
          ((g = b.videoPlayerData) == null ? void 0 : g.width) > 0 &&
          ((g = b.videoPlayerData) == null ? void 0 : g.height) > 0 &&
          ((e = b.videoPlayerData.width), (f = b.videoPlayerData.height));
        b = (g = b.format) == null ? void 0 : g.isSpherical;
        a.metadata = { duration: c, width: e, height: f, isSpherical: b };
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "VideoUploadFileValidator",
  ["errorCode", "fbt", "cr:909496", "cr:909497", "react"],
  function (a, b, c, d, e, f, g, h) {
    var i,
      j = i || b("react"),
      k = [
        1363019, 1363020, 1363021, 1363022, 1363023, 1363024, 1363025, 1363026,
        1363027, 1363030, 1363031, 1363032, 1363033, 1363038, 1363039, 1363040,
        1363048,
      ],
      l = ["VIDEO__INVALID_GUIDE_DATA"];
    a = (function () {
      "use strict";
      function a(a) {
        this.$1 = a;
      }
      var c = a.prototype;
      c.validate = function (a, b) {
        return (
          this.$2(a) && this.$3(a) && this.$4(a.getExtension() === "gif", b)
        );
      };
      c.getValidationErrorMessage = function (a, b) {
        return (
          this.$5(a) || this.$6(a) || this.$7(a.getExtension() === "gif", b)
        );
      };
      a.canReplaceVideoForError = function (a) {
        if (!a) return !0;
        if (l.indexOf(a) > -1) return !1;
        return k.indexOf(a) > -1 ? !0 : !1;
      };
      c.$2 = function (a) {
        a = this.$5(a);
        if (a) {
          b("cr:909496") !== null &&
            b("cr:909496").show(a.summary, a.description);
          return !1;
        } else return !0;
      };
      c.$5 = function (a) {
        if (
          this.$1.extensions[
            (a = a.getExtension()) == null ? void 0 : a.toLowerCase()
          ]
        )
          return;
        a = "http://www.facebook.com/help/218673814818907/";
        a = j.jsx(b("cr:909497"), {
          target: "_blank",
          href: a,
          children: h._("recommended formats"),
        });
        return {
          summary: h._("Unsupported file format"),
          description: h._(
            "Sorry, the file you selected is in a format that we don't support. Please use one of our {link} for video files.",
            [h._param("link", a)]
          ),
        };
      };
      c.$3 = function (a) {
        a = this.$6(a);
        if (a) {
          b("cr:909496") !== null &&
            b("cr:909496").show(a.summary, a.description);
          return !1;
        } else return !0;
      };
      c.$6 = function (a) {
        var b;
        if (a.getSize() === null) return;
        a.getSize() < this.$1.minSize && (b = this.$8());
        a.getSize() > this.$1.maxSize && (b = this.$9());
        return b;
      };
      c.$8 = function () {
        var a = Math.round(this.$1.minSize / 1024);
        return {
          summary: h._("Video File Too Small"),
          description: h._(
            "The video file you tried to upload is too small. The minimum size for a video file is {min-size} KB. Please try again with a larger file.",
            [h._param("min-size", a)]
          ),
        };
      };
      c.$9 = function () {
        var a = Math.floor(this.$1.maxSize / 1024 / 1024);
        return {
          summary: h._("Video File Too Large"),
          description: h._(
            "The video file you tried to upload is too large. The maximum size for a video file is {max-size} MB. Please try again with a smaller file.",
            [h._param("max-size", a)]
          ),
        };
      };
      c.$4 = function (a, c) {
        a = this.$7(a, c);
        if (a) {
          b("cr:909496") !== null &&
            b("cr:909496").show(a.summary, a.description);
          return !1;
        } else return !0;
      };
      c.$7 = function (a, b) {
        var c;
        if (!b) return;
        var d = b.format.duration;
        d &&
          (d > this.$1.maxLength && (c = this.$10()),
          d < this.$1.minLength && !a && (c = this.$11()));
        if (!b.streams || !b.streams.primaryVideo) return;
        d = b.streams.primaryVideo.width;
        a = b.streams.primaryVideo.height;
        var e = 0,
          f = 0;
        b.videoPlayerData !== null &&
          ((e = b.videoPlayerData.height), (f = b.videoPlayerData.width));
        this.$1.acceptDimensionsFromPlayer &&
          f !== 0 &&
          e !== 0 &&
          ((d = f), (a = e));
        !b.streams.primaryVideo && b.streams.primaryAudio && (c = this.$12());
        d < this.$1.minWidth && (c = this.$13());
        a < this.$1.minHeight && (c = this.$14());
        f = d / a;
        this.$1.require16to9AspectRatio &&
          (f > 2 || f < 1.6) &&
          (c = this.$15());
        this.$1.minAspectRatio &&
          f < this.$1.minAspectRatio &&
          (c = this.$16());
        this.$1.maxAspectRatio &&
          f > this.$1.maxAspectRatio &&
          (c = this.$17());
        return c;
      };
      c.$10 = function () {
        if (this.$1.source === "profile_video")
          return {
            summary: h._("Profile video duration too long"),
            description: h._(
              "The maximum length is {max-length} seconds. Please upload a shorter video.",
              [h._param("max-length", this.$1.maxLength)]
            ),
          };
        else if (this.$1.source === "event_cover_video")
          return {
            summary: h._("Event cover video duration too long"),
            description: h._(
              "Videos can't be longer than {max-length} seconds.",
              [h._param("max-length", this.$1.maxLength)]
            ),
          };
        else
          return {
            summary: h._("Video duration too long"),
            description: h._(
              "The duration of the video you tried to upload is too long. The maximum duration for a video is {max-length} minutes. Please upload a shorter video.",
              [h._param("max-length", Math.round(this.$1.maxLength / 60))]
            ),
          };
      };
      c.$11 = function () {
        return {
          summary: h._("Video file too short"),
          description: h._(
            {
              second:
                "The duration of the video that you tried to upload is too short. The minimum length for a video is {min-length} second. Please upload a longer video.",
              seconds:
                "The duration of the video that you tried to upload is too short. The minimum length for a video is {min-length} seconds. Please upload a longer video.",
            },
            [
              h._enum(this.$1.minLength === 1 ? "second" : "seconds", {
                second: "second",
                seconds: "seconds",
              }),
              h._param("min-length", this.$1.minLength),
            ]
          ),
        };
      };
      c.$12 = function () {
        var a =
          "http://www.facebook.com/help/?faq=218673814818907#What-formats-of-video-files-can-I-upload?";
        a = j.jsx(b("cr:909497"), {
          href: a,
          children: h._("supported video format"),
        });
        return {
          summary: h._("No video detected"),
          description: h._(
            "It looks like you're trying to upload a file that isn't a video. Please try uploading a {supported-video-format link}",
            [h._param("supported-video-format link", a)]
          ),
        };
      };
      c.$13 = function () {
        return {
          summary: h._("Video width too narrow"),
          description: h._(
            "The width of the video you tried to upload is too short. The minimum width for a video is {min-width}. Please upload a wider video.",
            [h._param("min-width", this.$1.minWidth)]
          ),
        };
      };
      c.$15 = function () {
        return {
          summary: h._("Problem with uploading video"),
          description: h._(
            "Videos look best when they have a 16:9 aspect ratio. Please edit your video and upload it again."
          ),
        };
      };
      c.$14 = function () {
        return {
          summary: h._("Video height too short"),
          description: h._(
            "The height of the video you tried to upload is too short. The minimum height for a video is {min-height}. Please upload a taller video.",
            [h._param("min-height", this.$1.minHeight)]
          ),
        };
      };
      c.$17 = function () {
        return {
          summary: h._("Video too wide"),
          description: h._(
            "The video you selected is too wide. Aspect ratios for videos need to be between {max_aspect_ratio} and {min_aspect_ratio}. Please record and upload a taller video.",
            [
              h._param("max_aspect_ratio", this.$1.maxAspectRatio + ":1"),
              h._param("min_aspect_ratio", this.$1.minAspectRatio + ":1"),
            ]
          ),
        };
      };
      c.$16 = function () {
        return {
          summary: h._("Video too tall"),
          description: h._(
            "The video you selected is too tall. Aspect ratios for videos need to be between {max_aspect_ratio} and {min_aspect_ratio}. Please record and upload a narrower video.",
            [
              h._param("max_aspect_ratio", this.$1.maxAspectRatio + ":1"),
              h._param("min_aspect_ratio", this.$1.minAspectRatio + ":1"),
            ]
          ),
        };
      };
      return a;
    })();
    e.exports = a;
  },
  null
);
__d(
  "MediaUploadFBMetadataValidator",
  [
    "MediaUploadFBStage",
    "MediaUploadFBStageOutcome",
    "MediaUploadOperationOutcome",
    "MediaUploadStageEvent",
    "MediaUploadTime",
    "Promise",
    "VideoUploadFile",
    "VideoUploadFileValidator",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h;
    a = (function () {
      function a(a) {
        (this.$1 = c("MediaUploadFBStage").METADATA_VALIDATION), (this.$2 = a);
      }
      var e = a.prototype;
      e.validate = function (a, d) {
        a.emitStageEvent(c("MediaUploadStageEvent").STAGE_STARTED, this.$1);
        try {
          d = this.$3(a, d);
        } catch (b) {
          a.recordStageOutcome({
            stage: this.$1,
            outcome: c("MediaUploadFBStageOutcome").EXCEPTION,
            rawErrorObject: b,
          }),
            (d = c("MediaUploadOperationOutcome").SUCCESS);
        }
        a.emitStageEventForOperationOutcome(d, this.$1);
        return (h || (h = b("Promise"))).resolve(d);
      };
      e.$4 = function (a) {
        var b = {};
        a.extensions.forEach(function (a) {
          return (b[a] = 1);
        });
        return {
          minSize: a.minSizeKB * 1024,
          maxSize: a.maxSizeKB * 1024,
          maxLength: d("MediaUploadTime").timeToSeconds(a.maxDuration),
          minLength: d("MediaUploadTime").timeToSeconds(a.minDuration),
          acceptDimensionsFromPlayer: a.acceptDimensionsFromPlayer,
          minWidth: a.minWidth,
          minHeight: a.minHeight,
          require16to9AspectRatio: !1,
          minAspectRatio: a.minAspectRatio,
          maxAspectRatio: a.maxAspectRatio,
          source: a.sourceType,
          extensions: b,
        };
      };
      e.$3 = function (a, b) {
        var d = a.asset.dataAsFile();
        if (d == null) {
          a.recordStageOutcome({
            stage: this.$1,
            outcome: c("MediaUploadFBStageOutcome").ASSET_IS_NOT_FILE,
          });
          return c("MediaUploadOperationOutcome").SUCCESS;
        }
        if (this.configuration == null)
          throw this.$2.createThrowableError(
            "Missing configuration in the MediaUploadFBMetadataValidator"
          );
        d = new (c("VideoUploadFile"))(null, d.file, d.size, d.extension);
        var e = this.$4(this.configuration);
        e = new (c("VideoUploadFileValidator"))(e);
        e = e.getValidationErrorMessage(d, b);
        if (e != null) {
          a.recordStageOutcome({
            stage: this.$1,
            outcome: c("MediaUploadFBStageOutcome").INTERNAL_FAILURE,
            displayError: e,
          });
          return c("MediaUploadOperationOutcome").FAILED_NON_TRANSIENT;
        } else {
          a.recordStageOutcome({
            stage: this.$1,
            outcome: c("MediaUploadFBStageOutcome").SUCCESS,
          });
          return c("MediaUploadOperationOutcome").SUCCESS;
        }
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadOperationAttemptOutcome",
  ["$InternalEnum"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("$InternalEnum").Mirrored([
      "SUCCESS",
      "CANCELED",
      "TRANSIENT_FAILURE",
      "TRANSIENT_FAILURE_IMMEDIATE_RETRY",
      "NON_TRANSIENT_FAILURE",
    ]);
    c = a;
    f["default"] = c;
  },
  66
);
__d(
  "MediaUploadRetryableOperation",
  [
    "MediaUploadCancelablePromise",
    "MediaUploadOperationAttemptOutcome",
    "MediaUploadOperationOutcome",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a(a, b, d) {
        var e = this;
        this.$4 = null;
        this.$1 = a;
        this.$2 = b;
        this.$3 = d;
        this.cancelablePromise = new (c("MediaUploadCancelablePromise"))(
          function (a) {
            e.$5(a);
            return {
              cancel: function () {
                var b;
                (b = e.$4) == null ? void 0 : b.cancel();
                e.$4 = null;
                a(c("MediaUploadOperationOutcome").CANCELED);
              },
            };
          }
        );
      }
      a.createAsPromise = function (b, c, d) {
        b = new a(b, c, d);
        return b.cancelablePromise;
      };
      var b = a.prototype;
      b.$5 = function (a) {
        var b = this,
          d = this.$1();
        this.$4 = d;
        this.$3.promiseTerminator(
          d.promise.then(
            function (c) {
              (b.$4 = null), b.$6(a, c);
            },
            function (d) {
              b.$4 = null;
              b.$6(
                a,
                c("MediaUploadOperationAttemptOutcome").NON_TRANSIENT_FAILURE
              );
              throw d;
            }
          )
        );
      };
      b.$6 = function (a, b) {
        switch (b) {
          case c("MediaUploadOperationAttemptOutcome").CANCELED:
            a(c("MediaUploadOperationOutcome").CANCELED);
            break;
          case c("MediaUploadOperationAttemptOutcome").SUCCESS:
            a(c("MediaUploadOperationOutcome").SUCCESS);
            break;
          case c("MediaUploadOperationAttemptOutcome").NON_TRANSIENT_FAILURE:
            a(c("MediaUploadOperationOutcome").FAILED_NON_TRANSIENT);
            break;
          case c("MediaUploadOperationAttemptOutcome").TRANSIENT_FAILURE:
            this.$7(a, !1);
            break;
          case c("MediaUploadOperationAttemptOutcome")
            .TRANSIENT_FAILURE_IMMEDIATE_RETRY:
            this.$7(a, !0);
            break;
        }
      };
      b.$7 = function (a, b) {
        var d = this;
        this.$2.increaseRetryAttemptCounter();
        if (this.$2.exceedTotalDuration())
          a(c("MediaUploadOperationOutcome").FAILED_OUT_OF_TIME);
        else if (this.$2.exceedTotalRetries())
          a(c("MediaUploadOperationOutcome").FAILED_NO_MORE_RETRIES);
        else if (b) this.$5(a);
        else {
          b = this.$2.calculateBackoffDelay();
          this.$4 = this.$3.delayedExecutor(
            b,
            function () {
              return d.$5(a);
            },
            function () {
              return a(c("MediaUploadOperationOutcome").CANCELED);
            }
          );
        }
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBNetworkAssetStrategy",
  ["MediaUploadPipeline", "MediaUploadRetryableOperation"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a(a, b, c, d) {
        (this.$1 = a),
          (this.startRequest = b),
          (this.uploadServiceRequest = c),
          (this.receiveRequest = d);
      }
      var b = a.prototype;
      b.run = function (a) {
        var b = this,
          d = a.asset.dataAsFile();
        if (d == null)
          throw this.$1.createThrowableError(
            "Browser is not compatible with current version of the SDK"
          );
        else {
          var e = new (c("MediaUploadPipeline"))(this.$1);
          e.addCancelableStep(function () {
            return c("MediaUploadRetryableOperation").createAsPromise(
              function () {
                return b.startRequest.send(a);
              },
              a.retryState,
              b.$1
            );
          });
          e.addCancelableStep(function () {
            return c("MediaUploadRetryableOperation").createAsPromise(
              function () {
                return b.uploadServiceRequest.send(
                  a,
                  d,
                  b.startRequest.retriveResponse(a)
                );
              },
              a.retryState,
              b.$1
            );
          });
          e.addCancelableStep(function () {
            return c("MediaUploadRetryableOperation").createAsPromise(
              function () {
                return b.receiveRequest.send(
                  a,
                  b.startRequest.retriveResponse(a),
                  b.uploadServiceRequest.retriveResponse(a)
                );
              },
              a.retryState,
              b.$1
            );
          });
          return e.run();
        }
      };
      b.cancel = function () {};
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBNetworkProbe",
  ["MediaUploadNetworkStatus", "Network"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a() {}
      var b = a.prototype;
      b.probe = function () {
        return c("Network").isOnline()
          ? c("MediaUploadNetworkStatus").CONNECTED
          : c("MediaUploadNetworkStatus").DISCONNECTED;
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBEndpointRequest",
  [
    "AsyncRequest",
    "MediaUploadCancelablePromise",
    "MediaUploadOperationAttemptOutcome",
    "MediaUploadStageEvent",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function () {
      function a() {}
      var b = a.prototype;
      b.send = function (a, b) {
        var d = this;
        return new (c("MediaUploadCancelablePromise"))(function (e) {
          b.emitStageEvent(c("MediaUploadStageEvent").STAGE_STARTED, a.stage);
          var f = a.createPayload();
          if (f == null) {
            b.emitStageEvent(c("MediaUploadStageEvent").STAGE_FAILED, a.stage);
            e(c("MediaUploadOperationAttemptOutcome").NON_TRANSIENT_FAILURE);
            return;
          }
          var g = new (c("AsyncRequest"))()
            .setAllowCrossOrigin(!0)
            .setURI(a.uri)
            .setData(f)
            .setRequestHeader(
              "X_FB_VIDEO_WATERFALL_ID",
              b.sessionContext.sessionID
            )
            .setProgressHandler(function () {
              a.networkNotifier.notifyOnProgress(b, a.stage);
            })
            .setHandler(function (c) {
              e(d.$1(a, b, c));
            })
            .setErrorHandler(function (c) {
              e(d.$2(a, b, c));
            });
          if (g.send()) {
            a.networkNotifier.notifyOnNewRequest(b, a.stage);
            return {
              cancel: function () {
                a.networkNotifier.notifyOnAbandon(b, a.stage), g.abort();
              },
            };
          } else e(c("MediaUploadOperationAttemptOutcome").NON_TRANSIENT_FAILURE);
        });
      };
      b.$1 = function (a, b, d) {
        var e;
        a.networkNotifier.notifyOnResponse(b, a.stage);
        (e = b.retryState) == null ? void 0 : e.resetBackoff();
        a.acceptSuccessfulResponse(d);
        b.emitStageEvent(c("MediaUploadStageEvent").STAGE_SUCCEED, a.stage);
        return c("MediaUploadOperationAttemptOutcome").SUCCESS;
      };
      b.$2 = function (a, b, d) {
        var e = d.error < 1e3,
          f = d.error > 9999;
        e || f
          ? a.networkNotifier.notifyOnResponse(b, a.stage)
          : a.networkNotifier.notifyOnTransportError(b, a.stage);
        a.acceptErrorResponse(d);
        b.emitStageEvent(c("MediaUploadStageEvent").STAGE_FAILED, a.stage);
        b = (e && d.error >= 400 && d.error < 500) || (f && !d.transientError);
        return b
          ? c("MediaUploadOperationAttemptOutcome").NON_TRANSIENT_FAILURE
          : c("MediaUploadOperationAttemptOutcome").TRANSIENT_FAILURE;
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBReceiveRequest",
  [
    "ActorURI",
    "MediaUploadCancelablePromise",
    "MediaUploadFBEndpointRequest",
    "MediaUploadFBStage",
    "MediaUploadFBStageOutcome",
    "MediaUploadOperationAttemptOutcome",
    "MediaUploadStageEvent",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = "MediaUploadFBReceiveRequest";
    a = (function () {
      function a(a) {
        (this.$1 = c("MediaUploadFBStage").RECEIVE_REQUEST),
          (this.$2 = a.entryPoint),
          (this.$3 = a.payloadHook),
          (this.$4 = a.customHeadersHook),
          (this.$5 = a.envParams),
          (this.$6 = new (c("MediaUploadFBEndpointRequest"))()),
          (this.$7 = a.networkNotifier);
      }
      var b = a.prototype;
      b.send = function (a, b, e) {
        var f = this;
        if (this.configuration == null)
          throw this.$5.createThrowableError(
            "Missing configuration in the MediaUploadFBReceiveRequest"
          );
        if ((b == null ? void 0 : b.skip_upload) === !0) {
          a.recordStageOutcome({
            stage: this.$1,
            outcome: c("MediaUploadFBStageOutcome").SUCCESS,
          });
          a.emitStageEvent(c("MediaUploadStageEvent").STAGE_SUCCEED, this.$1);
          return c("MediaUploadCancelablePromise").resolve(
            c("MediaUploadOperationAttemptOutcome").SUCCESS
          );
        }
        return this.$6.send(
          {
            stage: this.$1,
            networkNotifier: this.$7,
            uri:
              a.request.attributes.actorID == null
                ? this.configuration.baseURI
                : d("ActorURI").create(
                    this.configuration.baseURI,
                    a.request.attributes.actorID
                  ),
            createPayload: function () {
              return f.$8(a, b, e);
            },
            createCustomHeaders: function () {
              return f.$9(a);
            },
            acceptSuccessfulResponse: function (b) {
              a.processing.rawData.set(h, b.payload),
                a.recordStageOutcome({
                  stage: f.$1,
                  outcome: c("MediaUploadFBStageOutcome").SUCCESS,
                });
            },
            acceptErrorResponse: function (b) {
              a.recordStageOutcome({
                stage: f.$1,
                outcome: c("MediaUploadFBStageOutcome").REQUEST_ERROR,
                rawErrorCode: b.error,
                displayError: {
                  summary: b.errorSummary,
                  description: b.errorDescription,
                },
                errorAttributes: {
                  silentError: b.silentError,
                  transientError: b.transientError,
                },
                networkRequestID:
                  (b = b.payload) == null ? void 0 : b.__www_request_id__,
              });
            },
          },
          a
        );
      };
      b.$9 = function (a) {
        var b = this.$4;
        if (b)
          return b({
            assetSnapshot: a.composeSnapshot(),
            sessionSnapshot: a.sessionContext.composeSnapshot(),
          });
        else return null;
      };
      b.$8 = function (a, b, d) {
        if (b == null) {
          a.recordStageOutcome({
            stage: this.$1,
            outcome: c("MediaUploadFBStageOutcome").MISSING_MANDATORY_DATA,
            rawErrorCode: "MISSING_START_CALL_RESPONSE",
          });
          return null;
        }
        if (d == null) {
          a.recordStageOutcome({
            stage: this.$1,
            outcome: c("MediaUploadFBStageOutcome").MISSING_MANDATORY_DATA,
            rawErrorCode: "MISSING_UPLOAD_SERVICE_RESPONSE",
          });
          return null;
        }
        var e = a.asset.dataAsFile();
        e = {
          waterfall_id: a.sessionContext.sessionID,
          target_id: a.request.attributes.targetID,
          video_id: b.video_id,
          source: this.$2.sourceType,
          composer_entry_point_ref: this.$2.entryPointRef,
          supports_chunking: !0,
          supports_upload_service: !0,
          partition_start_offset: 0,
          partition_end_offset: e == null ? void 0 : e.size,
          start_offset: 0,
          end_offset: e == null ? void 0 : e.size,
          upload_speed: a.uploadSummary.computeSpeedBps(),
          fbuploader_video_file_chunk: d.everstoreHandle,
          has_file_been_replaced: a.request.attributes.hasFileBeenReplaced,
          composer_dialog_version: a.request.attributes.composerDialogVersion,
          composer_work_shared_draft_mode:
            a.request.attributes.workSharedDraftMode,
        };
        d = this.$3;
        d != null &&
          d({
            assetSnapshot: a.composeSnapshot(),
            sessionSnapshot: a.sessionContext.composeSnapshot(),
            startCallResponse: b,
            payload: e,
          });
        return e;
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFBStartRequest",
  [
    "ActorURI",
    "MediaUploadFBEndpointRequest",
    "MediaUploadFBStage",
    "MediaUploadFBStageOutcome",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = "MediaUploadFBStartRequest";
    a = (function () {
      function a(a) {
        (this.$1 = c("MediaUploadFBStage").START_REQUEST),
          (this.$2 = a.entryPoint),
          (this.$3 = a.payloadHook),
          (this.$4 = a.customHeadersHook),
          (this.$5 = a.envParams),
          (this.$6 = new (c("MediaUploadFBEndpointRequest"))()),
          (this.$7 = a.networkNotifier);
      }
      var b = a.prototype;
      b.retriveResponse = function (a) {
        return a.processing.rawData.getUnsafe(h);
      };
      b.send = function (a) {
        var b = this;
        if (this.configuration == null)
          throw this.$5.createThrowableError(
            "Missing configuration in the MediaUploadFBStartRequest"
          );
        return this.$6.send(
          {
            stage: this.$1,
            networkNotifier: this.$7,
            uri:
              a.request.attributes.actorID == null
                ? this.configuration.baseURI
                : d("ActorURI").create(
                    this.configuration.baseURI,
                    a.request.attributes.actorID
                  ),
            createPayload: function () {
              return b.$8(a);
            },
            createCustomHeaders: function () {
              return b.$9(a);
            },
            acceptSuccessfulResponse: function (d) {
              var e = d.payload;
              if (e.video_id != null)
                a.processing.rawData.set(h, e),
                  (a.videoID = e.video_id),
                  a.recordStageOutcome({
                    stage: b.$1,
                    outcome: c("MediaUploadFBStageOutcome").SUCCESS,
                  });
              else {
                a.recordStageOutcome({
                  stage: b.$1,
                  outcome: c("MediaUploadFBStageOutcome")
                    .INVALID_SERVER_RESPONSE,
                  networkRequestID:
                    (e = d.payload) == null ? void 0 : e.__www_request_id__,
                });
              }
            },
            acceptErrorResponse: function (d) {
              a.recordStageOutcome({
                stage: b.$1,
                outcome: c("MediaUploadFBStageOutcome").REQUEST_ERROR,
                rawErrorCode: d.error,
                displayError: {
                  summary: d.errorSummary,
                  description: d.errorDescription,
                },
                errorAttributes: {
                  silentError: d.silentError,
                  transientError: d.transientError,
                },
                networkRequestID:
                  (d = d.payload) == null ? void 0 : d.__www_request_id__,
              });
            },
          },
          a
        );
      };
      b.$9 = function (a) {
        var b = this.$4;
        if (b != null)
          return b({
            assetSnapshot: a.composeSnapshot(),
            sessionSnapshot: a.sessionContext.composeSnapshot(),
          });
        else return null;
      };
      b.$8 = function (a) {
        var b,
          c = a.asset.dataAsFile();
        b = {
          waterfall_id: a.sessionContext.sessionID,
          target_id: a.request.attributes.targetID,
          source: this.$2.sourceType,
          composer_entry_point_ref: this.$2.entryPointRef,
          supports_chunking: c != null,
          supports_file_api: c != null,
          file_size: c == null ? 0 : c.size,
          file_extension: String(a.asset.data.extension),
          spherical: (b = a.metadata) == null ? void 0 : b.isSpherical,
          partition_start_offset: 0,
          partition_end_offset: c == null ? void 0 : c.size,
          has_file_been_replaced: a.request.attributes.hasFileBeenReplaced,
          composer_dialog_version: a.request.attributes.composerDialogVersion,
          video_publisher_action_source:
            a.request.attributes.publisherActionSource,
          composer_work_shared_draft_mode:
            a.request.attributes.workSharedDraftMode,
        };
        c = this.$3;
        c != null &&
          c({
            assetSnapshot: a.composeSnapshot(),
            sessionSnapshot: a.sessionContext.composeSnapshot(),
            payload: b,
          });
        return b;
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "ResumableUploadService",
  ["cr:720"],
  function (a, b, c, d, e, f, g) {
    g["default"] = b("cr:720");
  },
  98
);
__d(
  "ResumableUploadServiceState.enum",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = Object.freeze({
      CANCEL: "upload-cancel",
      FAIL: "upload-fail",
      FILE_TOO_LARGE: "upload-too-large",
      NOT_STARTED: "upload-not-started",
      PROGRESS: "upload-progress",
      START: "upload-start",
      SUCCESS: "upload-success",
      TRANSPORT_FAILURE: "upload-transport-fail",
    });
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadFBUploadServiceRequest",
  [
    "AsyncResponse",
    "MediaUploadCancelablePromise",
    "MediaUploadFBStage",
    "MediaUploadFBStageOutcome",
    "MediaUploadOperationAttemptOutcome",
    "MediaUploadStageEvent",
    "RelayAPIConfig",
    "ResumableUploadService",
    "ResumableUploadServiceState.enum",
    "md5",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = "MediaUploadFBUploadServiceRequest";
    a = (function () {
      function a(a) {
        (this.$1 = c("MediaUploadFBStage").BYTES_UPLOAD),
          (this.$2 = a.envParams),
          (this.$3 = a.networkNotifier);
      }
      var b = a.prototype;
      b.send = function (a, b, d) {
        var e = this;
        return new (c("MediaUploadCancelablePromise"))(function (f) {
          a.emitStageEvent(c("MediaUploadStageEvent").STAGE_STARTED, e.$1);
          var g = e.configuration;
          if (g == null)
            throw e.$2.createThrowableError(
              "Missing configuration in the MediaUploadFBUploadServiceRequest"
            );
          if (d == null) {
            a.recordStageOutcome({
              stage: e.$1,
              outcome: c("MediaUploadFBStageOutcome").MISSING_MANDATORY_DATA,
              rawErrorCode: "MISSING_START_CALL_RESPONSE",
            });
            a.emitStageEvent(c("MediaUploadStageEvent").STAGE_FAILED, e.$1);
            f(c("MediaUploadOperationAttemptOutcome").NON_TRANSIENT_FAILURE);
            return;
          }
          if (d.skip_upload) {
            a.uploadSummary.updateForUploadSkip(b.size);
            a.recordStageOutcome({
              stage: e.$1,
              outcome: c("MediaUploadFBStageOutcome").SUCCESS,
            });
            a.emitStageEvent(c("MediaUploadStageEvent").STAGE_SUCCEED, e.$1);
            f(c("MediaUploadOperationAttemptOutcome").SUCCESS);
            return;
          }
          a.uploadSummary.updateForUploadStart(b.size);
          a.recalculateProgressAndEmit();
          g = e.$4(a, b, g, d);
          var h = c("ResumableUploadService").create(g);
          a.processing.uploadServiceDomain = h.getServiceName();
          e.$5(a, h, f);
          h.resume(b.file);
          e.$3.notifyOnNewRequest(a, e.$1);
          return {
            cancel: function () {
              h.cancel();
            },
          };
        });
      };
      b.retriveResponse = function (a) {
        return a.processing.rawData.getUnsafe(h);
      };
      b.$6 = function (a, b, d) {
        this.$3.notifyOnResponse(a, this.$1),
          typeof d === "string"
            ? (a.processing.rawData.set(h, { everstoreHandle: d }),
              a.recordStageOutcome({
                stage: this.$1,
                outcome: c("MediaUploadFBStageOutcome").SUCCESS,
              }),
              a.emitStageEvent(
                c("MediaUploadStageEvent").STAGE_SUCCEED,
                this.$1
              ),
              b(c("MediaUploadOperationAttemptOutcome").SUCCESS))
            : (a.recordStageOutcome({
                stage: this.$1,
                outcome: c("MediaUploadFBStageOutcome").INVALID_SERVER_RESPONSE,
                rawErrorCode: "RECEIVED_HANDLE_IS_NOT_STRING",
              }),
              a.emitStageEvent(
                c("MediaUploadStageEvent").STAGE_FAILED,
                this.$1
              ),
              b(c("MediaUploadOperationAttemptOutcome").NON_TRANSIENT_FAILURE));
      };
      b.$7 = function (a, b, d) {
        d.error < 1e3
          ? this.$3.notifyOnResponse(a, this.$1)
          : this.$3.notifyOnTransportError(a, this.$1);
        a.recordStageOutcome({
          stage: this.$1,
          outcome: c("MediaUploadFBStageOutcome").REQUEST_ERROR,
          rawErrorCode: d.error,
          displayError: {
            summary: d.errorSummary,
            description: d.errorDescription,
          },
          errorAttributes: {
            silentError: d.silentError,
            transientError: d.transientError,
          },
        });
        a.emitStageEvent(c("MediaUploadStageEvent").STAGE_FAILED, this.$1);
        a = d.error >= 400 && d.error < 500;
        b(
          a
            ? c("MediaUploadOperationAttemptOutcome").NON_TRANSIENT_FAILURE
            : c("MediaUploadOperationAttemptOutcome").TRANSIENT_FAILURE
        );
      };
      b.$8 = function (a, b, d) {
        d instanceof c("AsyncResponse")
          ? this.$7(a, b, d)
          : (this.$3.notifyOnAbandon(a, this.$1),
            a.recordStageOutcome({
              stage: this.$1,
              outcome: c("MediaUploadFBStageOutcome").REQUEST_ERROR,
              rawErrorObject: d,
            }),
            a.emitStageEvent(c("MediaUploadStageEvent").STAGE_FAILED, this.$1),
            b(c("MediaUploadOperationAttemptOutcome").TRANSIENT_FAILURE));
      };
      b.$9 = function (a, b) {
        this.$3.notifyOnAbandon(a, this.$1),
          a.recordStageOutcome({
            stage: this.$1,
            outcome: c("MediaUploadFBStageOutcome").CANCEL,
          }),
          a.emitStageEvent(c("MediaUploadStageEvent").STAGE_CANCELED, this.$1),
          b(c("MediaUploadOperationAttemptOutcome").CANCELED);
      };
      b.$10 = function (a, b) {
        this.$3.notifyOnProgress(a, this.$1),
          (b == null ? void 0 : b.loaded) != null &&
            (a.uploadSummary.updateForProgress(b.loaded),
            a.emitStageEvent(
              c("MediaUploadStageEvent").STAGE_PROGRESS,
              this.$1
            ));
      };
      b.$5 = function (a, b, d) {
        var e = this;
        b.addListener(
          c("ResumableUploadServiceState.enum").SUCCESS,
          function (b) {
            return e.$6(a, d, b);
          }
        );
        b.addListener(
          c("ResumableUploadServiceState.enum").TRANSPORT_FAILURE,
          function (b) {
            return e.$7(a, d, b);
          }
        );
        b.addListener(c("ResumableUploadServiceState.enum").FAIL, function (b) {
          return e.$8(a, d, b);
        });
        b.addListener(
          c("ResumableUploadServiceState.enum").CANCEL,
          function () {
            return e.$9(a, d);
          }
        );
        b.addListener(
          c("ResumableUploadServiceState.enum").PROGRESS,
          function (b) {
            return e.$10(a, b);
          }
        );
      };
      b.$4 = function (a, b, d, e) {
        var f;
        b = b.file;
        f = [
          String(b.lastModified),
          b.name,
          b.type,
          String(b.size),
          (f = (f = a.processing.pseudoHash) == null ? void 0 : f.hashValue) !=
          null
            ? f
            : [a.sessionContext.sessionID, a.assetID].join("-"),
        ].join("-");
        f = [c("md5")(f), String(e.start_offset), String(e.end_offset)].join(
          "-"
        );
        var g =
            d.tracing.enabled && d.tracing.minFileSizeKB < b.size / 1024
              ? [
                  "video_upload_www",
                  [a.assetID, String(a.retryState.getRetryAttempts())].join(
                    "_"
                  ),
                  [String(a.sessionContext.sessionID), String(e.video_id)].join(
                    "_"
                  ),
                ].join(":")
              : null,
          h = d.defaultService,
          i = h.serviceName;
        h = h.serviceDomain;
        a.retryState.getRetryAttemptsSinceLastReset() < 10 &&
          d.targetedService != null &&
          ((i = d.targetedService.serviceName),
          (h = d.targetedService.serviceDomain));
        var j = null;
        d.includeAccessToken && (j = c("RelayAPIConfig").accessToken);
        return {
          consumer: d.defaultService.serviceConsumer,
          accessToken: j,
          sessionKey: f,
          serviceName: i,
          serviceDomain: h,
          tracingHeaderValue: g,
          receiveParameters: {
            start_offset: String(e.start_offset),
            end_offset: String(e.end_offset),
            composer_session_id: a.sessionContext.sessionID,
            upload_session_id: String(e.upload_session_id),
            product_media_id: e.video_id,
            xpv_asset_id: e.xpv_asset_id,
            is_xpv_single_prod: e.is_xpv_single_prod,
            fb_region: e.fb_region,
            total_file_size: String(b.size),
            target_id: a.request.attributes.targetID,
            video_waterfall_id: a.sessionContext.sessionID,
          },
        };
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadFalcoLogger",
  [
    "CurrentUser",
    "MediaUploadAssetEvent",
    "MediaUploadClientEvent",
    "MediaUploadFBStage",
    "MediaUploadFBStageOutcome",
    "MediaUploadSessionEvent",
    "MediaUploadSessionStatus",
    "MediaUploadStageEvent",
    "MediaUploadTime",
    "logVideoUploadViaFalco",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = new Map([
        [
          c("MediaUploadClientEvent").CLIENT_CONFIG_REQUESTED,
          "upload.client.started_client_config_fetch",
        ],
        [
          c("MediaUploadClientEvent").CLIENT_CONFIG_RECEIVED,
          "upload.client.finished_client_config_fetch",
        ],
        [
          c("MediaUploadClientEvent").CLIENT_CONFIG_FAILED,
          "upload.client.failed_client_config_fetch",
        ],
        [
          c("MediaUploadClientEvent").CLIENT_CONFIG_CACHED,
          "upload.client.cached_client_config_fetch",
        ],
      ]),
      i = new Map([
        [
          c("MediaUploadSessionEvent").SESSION_CONFIRMED,
          "upload.client.started_flow",
        ],
        [
          c("MediaUploadSessionEvent").PUBLISH_STARTED,
          "upload.client.started_sending_post_request",
        ],
        [
          c("MediaUploadSessionEvent").PUBLISH_SUCCEED,
          "upload.client.finished_sending_post_request",
        ],
        [
          c("MediaUploadSessionEvent").PUBLISH_FAILED,
          "upload.client.failed_sending_post_request",
        ],
      ]),
      j = new Map([
        [c("MediaUploadSessionStatus").FAILED, "upload.client.failed_flow"],
        [c("MediaUploadSessionStatus").CANCELED, "upload.client.canceled_flow"],
        [
          c("MediaUploadSessionStatus").COMPLETED,
          "upload.client.finished_flow",
        ],
      ]),
      k = new Map([
        [
          c("MediaUploadAssetEvent").ASSET_ADDED,
          "upload.client.requested_uploading",
        ],
        [
          c("MediaUploadAssetEvent").ASSET_STARTED,
          "upload.client.started_uploading",
        ],
        [
          c("MediaUploadAssetEvent").ASSET_FAILED,
          "upload.client.failed_uploading",
        ],
        [
          c("MediaUploadAssetEvent").ASSET_REMOVED,
          "upload.client.canceled_uploading",
        ],
        [
          c("MediaUploadAssetEvent").ASSET_SUCCEED,
          "upload.client.finished_uploading",
        ],
        [
          c("MediaUploadAssetEvent").ASSET_STALL,
          "upload.client.stall_detected",
        ],
      ]),
      l = new Map([
        [
          c("MediaUploadStageEvent").STAGE_STARTED,
          new Map([
            [
              c("MediaUploadFBStage").START_REQUEST,
              "upload.client.started_sending_start_request",
            ],
            [
              c("MediaUploadFBStage").BYTES_UPLOAD,
              "upload.client.started_sending_bytes",
            ],
            [
              c("MediaUploadFBStage").RECEIVE_REQUEST,
              "upload.client.started_sending_receive_request",
            ],
          ]),
        ],
        [
          c("MediaUploadStageEvent").STAGE_SUCCEED,
          new Map([
            [
              c("MediaUploadFBStage").START_REQUEST,
              "upload.client.finished_sending_start_request",
            ],
            [
              c("MediaUploadFBStage").BYTES_UPLOAD,
              "upload.client.finished_sending_bytes",
            ],
            [
              c("MediaUploadFBStage").RECEIVE_REQUEST,
              "upload.client.finished_sending_receive_request",
            ],
          ]),
        ],
        [
          c("MediaUploadStageEvent").STAGE_FAILED,
          new Map([
            [
              c("MediaUploadFBStage").START_REQUEST,
              "upload.client.failed_sending_start_request",
            ],
            [
              c("MediaUploadFBStage").RECEIVE_REQUEST,
              "upload.client.failed_sending_receive_request",
            ],
            [
              c("MediaUploadFBStage").BYTES_UPLOAD,
              "upload.client.failed_sending_bytes",
            ],
            [
              c("MediaUploadFBStage").METADATA_VALIDATION,
              "upload.client.invalidated_uploading",
            ],
          ]),
        ],
        [
          c("MediaUploadStageEvent").STAGE_CANCELED,
          new Map([
            [
              c("MediaUploadFBStage").START_REQUEST,
              "upload.client.canceled_sending_start_request",
            ],
            [
              c("MediaUploadFBStage").BYTES_UPLOAD,
              "upload.client.canceled_sending_bytes",
            ],
            [
              c("MediaUploadFBStage").RECEIVE_REQUEST,
              "upload.client.canceled_sending_receive_request",
            ],
          ]),
        ],
      ]);
    a = (function () {
      function a(a, b) {
        (this.$1 = a), (this.$2 = b);
      }
      var b = a.prototype;
      b.subscribe = function (a, b) {
        var d = this;
        h.forEach(function (c, e) {
          a.addClientEventListener(e, function (a) {
            return d.$3(b, c, a);
          });
        });
        i.forEach(function (c, e) {
          a.addSessionEventListener(e, function (a) {
            return d.$4(b, c, a);
          });
        });
        j.forEach(function (e, f) {
          a.addSessionEventListener(
            c("MediaUploadSessionEvent").SESSION_FINISHED,
            function (a) {
              a.terminalStatus === f &&
                a.timing.confirmedAtMs != null &&
                d.$4(b, e, a);
            }
          );
        });
        k.forEach(function (c, e) {
          a.addAssetEventListener(e, function (a, e) {
            return d.$5(b, c, a, e);
          });
        });
        l.forEach(function (c, e) {
          c.forEach(function (c, f) {
            a.addStageEventListener(e, f, function (a, e) {
              d.$5(b, c, a, e);
            });
          });
        });
      };
      b.$6 = function (a) {
        return a == null
          ? null
          : d("MediaUploadTime").timeToMilliseconds(
              this.$1.currentTimeProvider()
            ) - a;
      };
      b.$7 = function (a, b) {
        return {
          event: a,
          application_state: "www_v2",
          is_chunked_upload: !0,
          file_can_read: this.$1.features.supportFileManipulation,
          network_status:
            (a = this.$2) == null
              ? void 0
              : (a = a.injectNetworkStatus) == null
              ? void 0
              : a.getNetworkStatus(),
          internet_status:
            (a = this.$2) == null
              ? void 0
              : (a = a.injectNetworkStatus) == null
              ? void 0
              : a.getInternetStatus(),
          trigger_time: this.$1.currentTimeProvider(),
          app_id: c("CurrentUser").getAppID(),
          source: b.sourceType,
          composer_entry_point_ref: b.entryPointRef,
        };
      };
      b.$8 = function (a) {
        var b =
            (a == null ? void 0 : a.rawErrorCode) != null &&
            typeof (a == null ? void 0 : a.rawErrorCode) === "string"
              ? a == null
                ? void 0
                : a.rawErrorCode
              : void 0,
          d =
            (a == null ? void 0 : a.rawErrorCode) != null &&
            typeof (a == null ? void 0 : a.rawErrorCode) === "number"
              ? a == null
                ? void 0
                : a.rawErrorCode
              : void 0;
        return {
          error:
            (b = b) != null
              ? b
              : a == null
              ? void 0
              : (b = a.displayError) == null
              ? void 0
              : b.summary,
          error_inner:
            (a == null ? void 0 : a.outcome) ===
            c("MediaUploadFBStageOutcome").SUCCESS
              ? void 0
              : a == null
              ? void 0
              : a.outcome,
          error_description:
            (b =
              a == null
                ? void 0
                : (b = a.errorObject) == null
                ? void 0
                : b.message) != null
              ? b
              : a == null
              ? void 0
              : (b = a.displayError) == null
              ? void 0
              : b.description,
          error_trace:
            a == null ? void 0 : (b = a.errorObject) == null ? void 0 : b.stack,
          error_code: d,
        };
      };
      b.$9 = function (a) {
        return {
          event_reason: a.cancelReason,
          elapsed_time: this.$6(a.timing.confirmedAtMs),
          waterfall_id: a.sessionID,
          retry_id: a.retryID,
        };
      };
      b.$10 = function (a) {
        var b;
        return {
          elapsed_time: this.$6(a.lastUploadStartedAtMs),
          asset_id: a.assetID,
          video_id: a.videoID,
          composer_session_id: a.request.attributes.composerSessionID,
          target_id: a.request.attributes.targetID,
          composer_dialog_version: a.request.attributes.composerDialogVersion,
          has_file_been_replaced: a.request.attributes.hasFileBeenReplaced,
          source_width: (b = a.metadata) == null ? void 0 : b.width,
          source_height: (b = a.metadata) == null ? void 0 : b.height,
          is_spherical: (b = a.metadata) == null ? void 0 : b.isSpherical,
          duration: (b = a.metadata) == null ? void 0 : b.durationMs,
          file_size: (b = a.asset.dataAsFile()) == null ? void 0 : b.size,
          video_original_file_path: a.asset.data.name,
          hash: (b = a.hash) == null ? void 0 : b.hashValue,
          hash_time: (b = a.hash) == null ? void 0 : b.calculationTimeCostMs,
          retries: a.retries.totalRetryAttempts,
          upload_domain: a.uploadServiceDomain,
          upload_speed: (b = a.uploadSummary) == null ? void 0 : b.speedBps,
          skip_upload: (b = a.uploadSummary) == null ? void 0 : b.skippedUpload,
        };
      };
      b.$11 = function (a) {
        var b;
        return ((b = this.$2) == null ? void 0 : b.injectExtraSessionFields) !=
          null
          ? (b = this.$2) == null
            ? void 0
            : b.injectExtraSessionFields(a)
          : null;
      };
      b.$12 = function (a, b) {
        var c;
        return ((c = this.$2) == null ? void 0 : c.injectExtraAssetFields) !=
          null
          ? (c = this.$2) == null
            ? void 0
            : c.injectExtraAssetFields(a, b)
          : null;
      };
      b.$13 = function () {
        for (var a = arguments.length, b = new Array(a), c = 0; c < a; c++)
          b[c] = arguments[c];
        var d = b.map(function (a) {
          return (a = a) != null ? a : {};
        });
        return Object.assign.apply(Object, [{}].concat(d));
      };
      b.$3 = function (a, b, c) {
        var d = c.assetSnapshot,
          e = c.sessionSnapshot;
        b = this.$13(
          e == null ? null : this.$11(e),
          e == null || d == null ? null : this.$12(e, d),
          this.$7(b, a),
          e == null ? null : this.$9(e),
          e == null || d == null ? null : this.$10(d),
          this.$8(c),
          { elapsed_time: this.$6(c.startedAtMs) }
        );
        this.$14(b);
      };
      b.$4 = function (a, b, c) {
        b = this.$13(
          this.$11(c),
          this.$7(b, a),
          this.$9(c),
          this.$8(c.lastError)
        );
        this.$14(b);
      };
      b.$5 = function (a, b, c, d) {
        b = this.$13(
          this.$11(c),
          this.$12(c, d),
          this.$7(b, a),
          this.$9(c),
          this.$10(d),
          this.$8(d.lastAction)
        );
        this.$14(b);
      };
      b.$14 = function (a) {
        c("logVideoUploadViaFalco")(a);
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadLinearProgressCalculator",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a(a) {
        (this.$1 = a),
          (this.$2 = this.$4()),
          (this.$3 =
            this.$1.sessionWeights.assets + this.$1.sessionWeights.publishing);
      }
      var b = a.prototype;
      b.$4 = function () {
        var a = this.$1.assetWeights.uploadBytes;
        this.$1.assetWeights.singleOperations.forEach(function (b) {
          return (a += b);
        });
        return a;
      };
      b.$5 = function (a, b) {
        a =
          Math.floor((a * 100) / this.$1.percentagePrecision) *
          this.$1.percentagePrecision;
        b = Math.abs(a - b) >= this.$1.percentagePrecision;
        return { percentageProgress: a, isDifferent: b };
      };
      b.calculateAssetProgress = function (a) {
        var b = this.$1.assetWeights,
          c = 0;
        if (a.isCompleted()) c = 1;
        else {
          for (
            var d = a.progress.completedStages.values(),
              e = Array.isArray(d),
              f = 0,
              d = e
                ? d
                : d[
                    typeof Symbol === "function"
                      ? Symbol.iterator
                      : "@@iterator"
                  ]();
            ;

          ) {
            var g;
            if (e) {
              if (f >= d.length) break;
              g = d[f++];
            } else {
              f = d.next();
              if (f.done) break;
              g = f.value;
            }
            g = g;
            g = b.singleOperations.get(g);
            g != null && (c += g);
          }
          g = a.uploadSummary.computeUploadedPortion();
          g != null && (c += b.uploadBytes * g);
          c /= this.$2;
        }
        f = this.$5(c, a.progress.calculated.percentageComplete);
        a.progress.calculated.rawValue = c;
        a.progress.calculated.percentageComplete = f.percentageProgress;
        a.progress.calculated.rawValue = c;
        return f.isDifferent;
      };
      b.calculateSessionProgress = function (a) {
        var b = this.$1.sessionWeights,
          c = 0;
        a.progress.publishingDone && (c += b.publishing);
        var d = a.getActiveAssets();
        if (d.length > 0) {
          var e = b.assets / d.length;
          a.getActiveAssets().forEach(function (a) {
            c += e * a.progress.calculated.rawValue;
          });
        } else c += b.assets;
        c /= this.$3;
        d = this.$5(c, a.progress.percentageComplete);
        a.progress.percentageComplete = d.percentageProgress;
        return d.isDifferent;
      };
      return a;
    })();
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadNetworkMonitor",
  [
    "MediaUploadAssetEvent",
    "MediaUploadClientEvent",
    "MediaUploadNetworkStatus",
    "MediaUploadRetryState",
    "Promise",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = {
        probe: function () {
          return c("MediaUploadNetworkStatus").UNKNOWN;
        },
      },
      j = {
        probe: function () {
          return (h || (h = b("Promise"))).resolve(
            c("MediaUploadNetworkStatus").UNKNOWN
          );
        },
      };
    a = (function () {
      function a(a, b) {
        (this.$1 = a),
          (this.$3 = i),
          (this.$2 = j),
          (this.$4 = c("MediaUploadNetworkStatus").UNKNOWN),
          (this.$5 = new Map()),
          (this.$6 = null),
          (this.$8 = null),
          (this.$9 = b.emitClientEvent);
      }
      var b = a.prototype;
      b.updateConfiguration = function (a) {
        var b;
        this.$3 = (b = a.networkProbe) != null ? b : i;
        this.$2 = (b = a.internetProbe) != null ? b : j;
        this.$7 =
          a.internetProbeBackoffPolicy == null
            ? null
            : new (c("MediaUploadRetryState"))(
                a.internetProbeBackoffPolicy,
                this.$1
              );
        this.$8 = a.stallDetectorTimeout;
        this.$10();
      };
      b.getNetworkStatus = function () {
        return this.$3.probe();
      };
      b.getInternetStatus = function () {
        return this.$4;
      };
      b.$11 = function (a, b) {
        return a.sessionContext.sessionID + "/" + a.assetID + "/" + String(b);
      };
      b.$12 = function (a, b, d) {
        var e;
        this.$13(c("MediaUploadNetworkStatus").CONNECTED);
        (e = this.$7) == null ? void 0 : e.resetBackoff();
        (e = this.$6) == null ? void 0 : e.cancel();
        this.$6 = null;
        e = this.$11(a, b);
        d && this.$5.set(e, { assetContext: a });
        this.$10();
        this.$14(e);
      };
      b.$15 = function (a, b) {
        a = this.$11(a, b);
        b = this.$5.get(a);
        if (b != null) {
          var c;
          (c = b.stallDetector) == null ? void 0 : c.cancel();
          b.stallDetector = null;
        }
        this.$5["delete"](a);
      };
      b.$14 = function (a) {
        var b = this.$8;
        if (b == null) return;
        var d = this.$5.get(a);
        if (d == null) return;
        (a = d.stallDetector) == null ? void 0 : a.cancel();
        d.stallDetector = this.$1.delayedExecutor(b, function () {
          d.assetContext.emitAssetEvent(c("MediaUploadAssetEvent").ASSET_STALL),
            (d.stallDetector = null);
        });
      };
      b.$10 = function () {
        var a = this,
          b = this.$7;
        if (b == null) return;
        if (this.$5.size === 0) return;
        if (this.$6 != null) return;
        this.$6 = this.$1.delayedExecutor(
          b.calculateBackoffDelay(),
          function () {
            var b = a.$2
              .probe()
              .then(function (b) {
                return a.$13(b);
              })
              ["finally"](function () {
                (a.$6 = null), a.$10();
              });
            a.$1.promiseTerminator(b);
          }
        );
        b.increaseRetryAttemptCounter();
      };
      b.$13 = function (a) {
        if (this.$4 === a) return;
        this.$4 = a;
        switch (this.$4) {
          case c("MediaUploadNetworkStatus").CONNECTED:
            this.$9(c("MediaUploadClientEvent").CLIENT_INTERNET_ONLINE);
            break;
          case c("MediaUploadNetworkStatus").DISCONNECTED:
            this.$9(c("MediaUploadClientEvent").CLIENT_INTERNET_OFFLINE);
            break;
          case c("MediaUploadNetworkStatus").TIMEOUT:
            this.$9(c("MediaUploadClientEvent").CLIENT_INTERNET_UNKNOWN);
            break;
          case c("MediaUploadNetworkStatus").UNKNOWN:
        }
      };
      b.notifyOnNewRequest = function (a, b) {
        this.$12(a, b, !0);
      };
      b.notifyOnProgress = function (a, b) {
        this.$12(a, b, !1);
      };
      b.notifyOnAbandon = function (a, b) {
        this.$15(a, b);
      };
      b.notifyOnTransportError = function (a, b) {
        this.$15(a, b);
      };
      b.notifyOnResponse = function (a, b) {
        this.$15(a, b), this.$12(a, b, !1);
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "mediaUploadLogStackTrace",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    function a(a) {}
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadFBDefaultClientContext",
  [
    "MediaUploadClientContext",
    "MediaUploadClientEvent",
    "MediaUploadEventEmitterAdapter",
    "MediaUploadExecutor",
    "MediaUploadFBAssetContext",
    "MediaUploadFBAssetRequest",
    "MediaUploadFBClient",
    "MediaUploadFBClientEventContext",
    "MediaUploadFBDefaultServerConfigurationRetriever",
    "MediaUploadFBFileHasher",
    "MediaUploadFBInternetProbe",
    "MediaUploadFBLocalAssetStrategy",
    "MediaUploadFBMetadataParser",
    "MediaUploadFBMetadataValidator",
    "MediaUploadFBNetworkAssetStrategy",
    "MediaUploadFBNetworkProbe",
    "MediaUploadFBReceiveRequest",
    "MediaUploadFBSessionContext",
    "MediaUploadFBStage",
    "MediaUploadFBStartRequest",
    "MediaUploadFBUploadServiceRequest",
    "MediaUploadFalcoLogger",
    "MediaUploadLinearProgressCalculator",
    "MediaUploadNetworkMonitor",
    "cr:1856704",
    "mediaUploadLogStackTrace",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(d, a);
      function d(b, d, e) {
        var f,
          g = new (c("MediaUploadEventEmitterAdapter"))(b);
        f =
          a.call(this, {
            sdk: b,
            emitter: g.emitter,
            executor: new (c("MediaUploadExecutor"))(),
            progressCalculator: new (c("MediaUploadLinearProgressCalculator"))({
              assetWeights: {
                uploadBytes: 0.9,
                singleOperations: new Map([
                  [c("MediaUploadFBStage").START_REQUEST, 0.05],
                  [c("MediaUploadFBStage").RECEIVE_REQUEST, 0.05],
                ]),
              },
              sessionWeights: { publishing: 0.1, assets: 0.9 },
              percentagePrecision: 1,
            }),
          }) || this;
        f.entryPoint = d;
        f.eventAdapter = g;
        f.configuration = e;
        f.networkMonitor = new (c("MediaUploadNetworkMonitor"))(f.sdk, {
          emitClientEvent: function (a) {
            return g.emitter.emitClientEvent(
              a,
              new (c("MediaUploadFBClientEventContext"))({
                entryPoint: d,
                envParams: b,
              })
            );
          },
        });
        f.localAssetStategy = f.$MediaUploadFBDefaultClientContext1();
        f.networkAssetStategy = f.$MediaUploadFBDefaultClientContext2();
        f.serverConfigurationRetriever = new (c(
          "MediaUploadFBDefaultServerConfigurationRetriever"
        ))({
          entryPoint: d,
          emitter: f.emitter,
          setters: {
            metadataValidation: function (a) {
              f.localAssetStategy.metadataValidator.configuration = a;
            },
            startRequest: function (a) {
              f.networkAssetStategy.startRequest.configuration = a;
            },
            receiveRequest: function (a) {
              f.networkAssetStategy.receiveRequest.configuration = a;
            },
            uploadService: function (a) {
              f.networkAssetStategy.uploadServiceRequest.configuration = a;
            },
            networkMonitor: function (a) {
              f.networkMonitor.updateConfiguration({
                networkProbe: a.networkProbe.enabled
                  ? new (c("MediaUploadFBNetworkProbe"))()
                  : null,
                internetProbe: a.internetProbe.enabled
                  ? new (c("MediaUploadFBInternetProbe"))(
                      { timeout: a.internetProbe.timeout },
                      f.sdk
                    )
                  : null,
                internetProbeBackoffPolicy: a.internetProbe.backoffPolicy,
                stallDetectorTimeout: a.stallDetector.enabled
                  ? a.stallDetector.timeout
                  : null,
              });
            },
          },
          envParams: f.sdk,
        });
        f.client = new (c("MediaUploadFBClient"))({
          implementation: babelHelpers.assertThisInitialized(f),
          sessionStrategy: f.sessionStrategy,
          envParams: f.sdk,
        });
        f.emitter.emitClientEvent(
          c("MediaUploadClientEvent").CLIENT_CREATED,
          new (c("MediaUploadFBClientEventContext"))({
            entryPoint: d,
            envParams: f.sdk,
          })
        );
        return f;
      }
      var e = d.prototype;
      e.$MediaUploadFBDefaultClientContext1 = function () {
        return new (c("MediaUploadFBLocalAssetStrategy"))({
          envParams: this.sdk,
          metadataParser: new (c("MediaUploadFBMetadataParser"))(),
          metadataValidator: new (c("MediaUploadFBMetadataValidator"))(
            this.sdk
          ),
          fileHasher: new (c("MediaUploadFBFileHasher"))({
            pseudoHasher:
              b("cr:1856704") == null
                ? void 0
                : new (b("cr:1856704"))(
                    {
                      maxChunkSize: 1024 * 1024,
                      takeFirstBytes: 100 * 1024,
                      hashingAlgorithm: "sha256",
                      outputEncoding: "base64",
                    },
                    this.sdk
                  ),
          }),
        });
      };
      e.$MediaUploadFBDefaultClientContext2 = function () {
        var a, b;
        a = new (c("MediaUploadFBStartRequest"))({
          entryPoint: this.entryPoint,
          payloadHook:
            (a = this.configuration.networkHooks) == null
              ? void 0
              : a.startRequestPayload,
          customHeadersHook:
            (a = this.configuration.networkHooks) == null
              ? void 0
              : a.startRequestCustomHeaders,
          envParams: this.sdk,
          networkNotifier: this.networkMonitor,
        });
        var d = new (c("MediaUploadFBUploadServiceRequest"))({
          envParams: this.sdk,
          networkNotifier: this.networkMonitor,
        });
        b = new (c("MediaUploadFBReceiveRequest"))({
          entryPoint: this.entryPoint,
          payloadHook:
            (b = this.configuration.networkHooks) == null
              ? void 0
              : b.receiveRequestPayload,
          customHeadersHook:
            (b = this.configuration.networkHooks) == null
              ? void 0
              : b.receiveRequestCustomHeaders,
          envParams: this.sdk,
          networkNotifier: this.networkMonitor,
        });
        return new (c("MediaUploadFBNetworkAssetStrategy"))(this.sdk, a, d, b);
      };
      e.runClientLazyLoading = function (a) {
        return this.serverConfigurationRetriever.run(
          c("MediaUploadFBAssetContext").castOrThrow(a, this.sdk)
        );
      };
      e.runLocalAssetStategy = function (a) {
        return this.localAssetStategy.run(
          c("MediaUploadFBAssetContext").castOrThrow(a, this.sdk)
        );
      };
      e.runNetworkAssetStategy = function (a) {
        return this.networkAssetStategy.run(
          c("MediaUploadFBAssetContext").castOrThrow(a, this.sdk)
        );
      };
      e.createSessionContext = function (a) {
        c("mediaUploadLogStackTrace")({
          waterfallID: a,
          sourceType: this.entryPoint.sourceType,
          composerEntryPointRef: this.entryPoint.entryPointRef,
          applicationState: "www_v2",
        });
        return new (c("MediaUploadFBSessionContext"))({
          sessionID: a,
          entryPoint: this.entryPoint,
          emitter: this.emitter,
          progressCalculator: this.progressCalculator,
          params: this.sdk,
        });
      };
      e.createAssetContext = function (a, b) {
        return new (c("MediaUploadFBAssetContext"))({
          sessionContext: c("MediaUploadFBSessionContext").castOrThrow(
            a,
            this.sdk
          ),
          assetRequest: c("MediaUploadFBAssetRequest").castOrThrow(b, this.sdk),
          emitter: this.emitter,
          progressCalculator: this.progressCalculator,
          retryState: this.createRetryState(),
          params: this.sdk,
        });
      };
      e.publish = function (a, b) {
        var d = this;
        a = c("MediaUploadFBSessionContext")
          .castOrThrow(a, this.sdk)
          .composeSnapshot();
        b = b.map(function (a) {
          return c("MediaUploadFBAssetContext")
            .castOrThrow(a, d.sdk)
            .composeSnapshot();
        });
        return this.configuration.eventHooks.publishCallback(a, b);
      };
      e.subscribeToHooks = function () {
        var a = this,
          b = new (c("MediaUploadFalcoLogger"))(this.sdk, {
            injectNetworkStatus: this.networkMonitor,
            injectExtraSessionFields: function () {
              return {
                composer_dialog_version: a.configuration.composerDialogVersion,
              };
            },
          });
        b.subscribe(this.eventAdapter.subscriber, this.entryPoint);
        this.configuration.eventHooks.eventSubscriber != null &&
          this.configuration.eventHooks.eventSubscriber(
            this.eventAdapter.subscriber
          );
      };
      return d;
    })(c("MediaUploadClientContext"));
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadSurface",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a(a, b) {
        (this.$1 = b), (this.sdk = a);
      }
      var b = a.prototype;
      b.isClientSupported = function (a) {
        a = this.$1.get(a.key);
        return a != null;
      };
      b.getClient = function (a) {
        var b = this.$1.get(a.key);
        if (b == null)
          throw this.sdk.createThrowableError(
            "Client configuration was not provided for the entry point " + a.key
          );
        else return b();
      };
      return a;
    })();
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadFBSurface",
  [
    "MediaUploadExtrasStorage",
    "MediaUploadFBAssetRequest",
    "MediaUploadSurface",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, c) {
        return a.call(this, b, c) || this;
      }
      var d = b.prototype;
      d.createAssetRequest = function (a, b, d, e) {
        a = a(this.sdk.factories.assets);
        var f;
        e != null &&
          ((f = new (c("MediaUploadExtrasStorage"))(this.sdk)), e(f));
        typeof d === "function" ? (e = d(a)) : (e = d);
        return new (c("MediaUploadFBAssetRequest"))({
          asset: a,
          assetID: b,
          attributes: e,
          extras: f,
        });
      };
      return b;
    })(c("MediaUploadSurface"));
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadSurfaceDefinition",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function () {
      function a(a) {
        (this.$1 = a), (this.$2 = new Map()), (this.$3 = new Map());
      }
      var b = a.prototype;
      b.$4 = function (a, b) {
        var c = this;
        return function () {
          var d = c.$3.get(a.key);
          d == null && ((d = c.$1.client(a, b)), c.$3.set(a.key, d));
          return d;
        };
      };
      b.registerClientConfiguration = function (a) {
        var b = this;
        a.entryPoints.forEach(function (c) {
          b.$2.set(c.key, b.$4(c, a));
        });
        return this;
      };
      b.createSurface = function () {
        return this.$1.surface(this.$2);
      };
      return a;
    })();
    f["default"] = a;
  },
  66
);
__d(
  "MediaUploadFBDefaultSurfaceDefinition",
  [
    "MediaUploadFBDefaultClientContext",
    "MediaUploadFBEntryPointID",
    "MediaUploadFBSurface",
    "MediaUploadSurfaceDefinition",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b) {
        return (
          a.call(this, {
            client: function (a, d) {
              a = new (c("MediaUploadFBDefaultClientContext"))(
                b,
                c("MediaUploadFBEntryPointID").castOrThrow(a, b),
                d
              );
              return a.client;
            },
            surface: function (a) {
              return new (c("MediaUploadFBSurface"))(b, a);
            },
          }) || this
        );
      }
      return b;
    })(c("MediaUploadSurfaceDefinition"));
    g["default"] = a;
  },
  98
);
__d(
  "MediaUploadVUShimSurface",
  [
    "MediaUploadFBDefaultSurfaceDefinition",
    "MediaUploadFBEntryPointID",
    "MediaUploadFBSDK",
    "MediaUploadVUShim",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = new (c("MediaUploadFBDefaultSurfaceDefinition"))(c("MediaUploadFBSDK"));
    a.registerClientConfiguration({
      entryPoints: [
        new (c("MediaUploadFBEntryPointID"))("composer", "pages_feed"),
        new (c("MediaUploadFBEntryPointID"))(
          "composer",
          "pages_feed_video_composer"
        ),
        new (c("MediaUploadFBEntryPointID"))("newsfeed_composer", "feed"),
        new (c("MediaUploadFBEntryPointID"))("composer", "timeline"),
      ],
      eventHooks: {
        publishCallback: function (a, b) {
          return c("MediaUploadVUShim").triggerPublish(a, b);
        },
        eventSubscriber: function (a) {
          c("MediaUploadVUShim").setupEventSubscription(a);
        },
      },
    });
    b = a.createSurface();
    d = b;
    g["default"] = d;
  },
  98
);
__d(
  "VideoUploadCrashMonitor",
  ["Bandicoot", "VideoUploadLogger"],
  function (a, b, c, d, e, f) {
    a = (function (a) {
      "use strict";
      babelHelpers.inheritsLoose(c, a);
      function c(b, c, d, e, f, g, h, i) {
        var j;
        j = a.call(this, "VideoUploadSession") || this;
        j.$VideoUploadCrashMonitor1 = {
          waterfallID: b,
          actorID: c,
          source: d,
          targetID: e,
          loggingDelay: f,
          supportsChunking: g,
          composerEntryPointRef: h,
          flowStarted: i,
        };
        return j;
      }
      var d = c.prototype;
      d.flowStarted = function () {
        this.$VideoUploadCrashMonitor1.flowStarted = !0;
      };
      d.getCrashTimeData = function () {
        return this.$VideoUploadCrashMonitor1;
      };
      d.logCrash = function (a, c, d) {
        if (!c.waterfallID) return;
        a = new (b("VideoUploadLogger"))({
          actor_id: c.actorID,
          source: c.source,
          waterfall_id: c.waterfallID,
          target_id: c.targetID,
          delay: c.loggingDelay,
          is_chunked_upload: c.supportsChunking,
          composer_entry_point_ref: c.composerEntryPointRef,
        });
        d = {
          error: "Crash Detected",
          error_description:
            "Detected video upload did not complete due to a crash",
        };
        a.logEvent(b("VideoUploadLogger").EVENT_FAILED_UPLOADING, d);
        c.flowStarted &&
          a.logEvent(b("VideoUploadLogger").EVENT_RESIGNED_FLOW, {});
      };
      return c;
    })(b("Bandicoot"));
    e.exports = a;
  },
  null
);
__d(
  "GraphQLVideoPublishUtils",
  ["immutable"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a, b) {
      var d = c("immutable").List([
        "cs_ab_testing_video_upload",
        "cs_content_library",
        "cs_content_library_bulk_upload",
        "cs_content_library_upload_videos",
        "cs_content_show_episode_upload",
        "cs_global_basic_post",
        "cs_global_bulk_upload",
        "cs_global_multipost",
        "cs_global_upload_video",
        "cs_home_basic_post",
        "cs_home_bulk_video",
        "cs_home_upload_video",
        "cs_home_multipost",
        "cs_instagram_content_library",
        "media_manager",
        "pages_feed_video_composer",
        "pages_composer_bulk_upload_upsell",
        "page_content_tab_drafts",
        "page_content_tab_published_posts_opted_out",
        "page_content_tab_scheduled_posts_opted_out",
        "page_content_tab_video_library",
        "page_content_tab_video_library_premiere",
        "pages_posts",
        "pages_video_tab",
        "timeline",
        "video_page_video_list",
        "cs_unified_composer_optout",
        "cs_content_show_trailer_upload",
      ]);
      d = d.push("feed_story");
      d = d.contains(b);
      return (
        (a === "composer" ||
          a === "media_manager_instagram_video_composer" ||
          a === "comment") &&
        d
      );
    }
    g.isGraphQLPublish = a;
  },
  98
);
__d(
  "ResumableUploadAsyncService",
  [
    "AsyncRequest",
    "EventEmitter",
    "Promise",
    "ResumableUploadServiceState.enum",
    "URI",
    "asyncToGeneratorRuntime",
    "gkx",
    "uuidv4",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = "rupload",
      j = "facebook.com";
    a = (function (a) {
      babelHelpers.inheritsLoose(d, a);
      function d(b, d, e, f, g, h, k, l, m) {
        var n;
        n = a.call(this) || this;
        n.consumer = b;
        n.accessToken = d;
        n.sessionKey = e || c("uuidv4")();
        n.contentKey = f || "";
        n.contentValue = g || "";
        n.serviceName = h && h != "" ? h : i;
        n.serviceDomain = k && k != "" ? k : j;
        n.receiveParameters = l;
        n.tracingHeaderValue = m;
        return n;
      }
      d.create = function (a) {
        return new d(
          a.consumer,
          a.accessToken,
          a.sessionKey || "",
          a.contentKey,
          a.contentValue,
          a.serviceName,
          a.serviceDomain,
          a.receiveParameters,
          a.tracingHeaderValue
        );
      };
      var e = d.prototype;
      e.$ResumableUploadService1 = function (a) {
        if (c("gkx")("1765373")) {
          var b;
          if (
            ((b = this.receiveParameters) == null ? void 0 : b.target_id) !=
            null
          ) {
            a.setRequestHeader(
              "target_id",
              String(
                (b = this.receiveParameters) == null ? void 0 : b.target_id
              )
            );
          }
          if (
            ((b = this.receiveParameters) == null
              ? void 0
              : b.video_waterfall_id) != null
          ) {
            a.setRequestHeader(
              "x_fb_video_waterfall_id",
              String(
                (b = this.receiveParameters) == null
                  ? void 0
                  : b.video_waterfall_id
              )
            );
          }
        }
      };
      e.resume = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* (a) {
          try {
            var b = yield this.sendOffsetRequest();
            this.emit(c("ResumableUploadServiceState.enum").START, {
              offset: b.offset,
            });
            a = yield this.sendUploadRequest(a, b);
            this.emit(c("ResumableUploadServiceState.enum").SUCCESS, a.h);
          } catch (a) {
            this.emit(c("ResumableUploadServiceState.enum").FAIL, a);
          }
          this.abortUpload = void 0;
        });
        function d(b) {
          return a.apply(this, arguments);
        }
        return d;
      })();
      e.cancel = function () {
        this.abortUpload && this.abortUpload(),
          this.emit(c("ResumableUploadServiceState.enum").CANCEL);
      };
      e.sendOffsetRequest = function () {
        var a = this;
        return new (h || (h = b("Promise")))(function (b, d) {
          var e = new (c("AsyncRequest"))()
            .setAllowCrossOrigin(!0)
            .setAllowCredentials(!0)
            .setMethod("GET")
            .setURI(a.getUploadUri())
            .setReadOnly(!0)
            .setRequestHeader("Authorization", "OAuth " + a.accessToken)
            .setHandler(function (a) {
              return b(JSON.parse(a.payload.response));
            })
            .setErrorHandler(d)
            .setOption("suppressEvaluation", !0)
            .setTransportErrorHandler(function (b) {
              a.emit(
                c("ResumableUploadServiceState.enum").TRANSPORT_FAILURE,
                b
              );
            });
          a.$ResumableUploadService1(e);
          a.abortUpload = function () {
            return e.abort();
          };
          e.send();
        });
      };
      e.sendUploadRequest = function (a, d) {
        var e = this;
        d = d || {};
        var f = d.offset;
        d = d.duplicate;
        var g = d ? "" : a.slice(f);
        return new (h || (h = b("Promise")))(function (b, d) {
          var h = new (c("AsyncRequest"))()
            .setAllowCrossOrigin(!0)
            .setAllowCredentials(!0)
            .setURI(e.getUploadUri())
            .setRawData(g)
            .setHandler(function (a) {
              return b(JSON.parse(a.payload.response));
            })
            .setErrorHandler(d)
            .setRequestHeader("Authorization", "OAuth " + e.accessToken)
            .setRequestHeader("X-Entity-Name", encodeURIComponent(a.name))
            .setRequestHeader("X-Entity-Type", a.type)
            .setRequestHeader("X-Entity-Length", String(a.size))
            .setRequestHeader("Offset", String(f))
            .setOption("suppressEvaluation", !0)
            .setUploadProgressHandler(function (b) {
              b = new ProgressEvent("upload-service", {
                total: a.size,
                loaded: b.loaded + Number(f),
              });
              e.emit(c("ResumableUploadServiceState.enum").PROGRESS, b);
            })
            .setTransportErrorHandler(function (a) {
              e.emit(
                c("ResumableUploadServiceState.enum").TRANSPORT_FAILURE,
                a
              );
            });
          e.$ResumableUploadService1(h);
          e.abortUpload = function () {
            return h.abort();
          };
          d = e.receiveParameters;
          d &&
            (h
              .setRequestHeader("start_offset", String(d.start_offset))
              .setRequestHeader("end_offset", String(d.end_offset))
              .setRequestHeader(
                "composer_session_id",
                String(d.composer_session_id)
              )
              .setRequestHeader("id", String(d.upload_session_id)),
            d.fb_region &&
              h.setRequestHeader("X-FB-Region", String(d.fb_region)));
          e.tracingHeaderValue &&
            h.setRequestHeader("x-fb-product-log", e.tracingHeaderValue);
          h.send();
        });
      };
      e.getUploadUri = function () {
        var a = this.getServiceName();
        a = new (c("URI"))(
          "https://" + a + "/" + this.consumer + "/" + this.sessionKey
        );
        this.contentKey &&
          this.contentValue &&
          (a = a.addQueryData(this.contentKey, this.contentValue));
        return a;
      };
      e.getServiceName = function () {
        return this.serviceName + "." + this.serviceDomain;
      };
      return d;
    })(c("EventEmitter"));
    g["default"] = a;
  },
  98
);
__d(
  "VideoUploadConnectionMonitor",
  [
    "Network",
    "VideoUploadFeatureDetector",
    "cr:909282",
    "debounce",
    "mixin",
    "setTimeout",
  ],
  function (a, b, c, d, e, f) {
    a = (function (a) {
      "use strict";
      babelHelpers.inheritsLoose(c, a);
      function c() {
        var c;
        c = a.call(this) || this;
        c.$VideoUploadConnectionMonitor1 = !1;
        c.$VideoUploadConnectionMonitor2 = [];
        c.$VideoUploadConnectionMonitor3 = !1;
        c.$VideoUploadConnectionMonitor4 = !0;
        c.$VideoUploadConnectionMonitor5 = b("debounce")(function () {
          c.$VideoUploadConnectionMonitor6(!1);
        }, 2e3);
        return c;
      }
      var d = c.prototype;
      d.notifyStart = function () {
        var a = this;
        if (this.$VideoUploadConnectionMonitor3) return;
        this.$VideoUploadConnectionMonitor2.length === 0 &&
          (this.$VideoUploadConnectionMonitor2.push(
            b("Network").addListener("online", function () {
              a.$VideoUploadConnectionMonitor6(!0);
            })
          ),
          this.$VideoUploadConnectionMonitor2.push(
            b("Network").addListener("offline", function () {
              a.$VideoUploadConnectionMonitor1
                ? a.$VideoUploadConnectionMonitor5()
                : (a.$VideoUploadConnectionMonitor5.reset(),
                  b("setTimeout")(a.$VideoUploadConnectionMonitor5, 2e3));
            })
          ));
        this.$VideoUploadConnectionMonitor3 = !0;
      };
      d.notifyProgress = function (a) {
        if (!this.$VideoUploadConnectionMonitor3) return;
        if (!a) return;
        b("VideoUploadFeatureDetector").supportsFullProgress() &&
          ((this.$VideoUploadConnectionMonitor1 = !0),
          a.total && a.loaded === a.total
            ? this.$VideoUploadConnectionMonitor5.reset()
            : this.$VideoUploadConnectionMonitor5());
      };
      d.notifySuccess = function () {
        if (!this.$VideoUploadConnectionMonitor3) return;
        this.reset();
        this.$VideoUploadConnectionMonitor6(!0);
      };
      d.notifyTransportError = function () {
        if (!this.$VideoUploadConnectionMonitor3) return;
        this.$VideoUploadConnectionMonitor3 = !1;
        this.$VideoUploadConnectionMonitor6(!1);
      };
      d.notifyError = function () {
        if (!this.$VideoUploadConnectionMonitor3) return;
        this.reset();
        this.$VideoUploadConnectionMonitor6(!0);
      };
      d.isOnline = function () {
        return this.$VideoUploadConnectionMonitor4;
      };
      d.reset = function () {
        while (this.$VideoUploadConnectionMonitor2.length)
          this.$VideoUploadConnectionMonitor2.pop().remove();
        this.$VideoUploadConnectionMonitor5.reset();
        this.$VideoUploadConnectionMonitor3 = !1;
      };
      d.$VideoUploadConnectionMonitor6 = function (a) {
        this.$VideoUploadConnectionMonitor5.reset(),
          this.$VideoUploadConnectionMonitor4 !== a &&
            ((this.$VideoUploadConnectionMonitor4 = a),
            this.$VideoUploadConnectionMonitor4
              ? this.inform("online")
              : this.inform("offline"));
      };
      return c;
    })(b("mixin")(b("cr:909282")));
    e.exports = a;
  },
  null
);
__d(
  "VideoUploadReceiveRequestManager",
  [
    "fbt",
    "ODS",
    "ResumableUploadAsyncService",
    "ResumableUploadService",
    "ResumableUploadServiceState.enum",
    "VideoUploadConnectionMonitor",
    "VideoUploadRequest",
    "clearTimeout",
    "cr:909282",
    "gkx",
    "md5",
    "mixin",
    "setTimeout",
    "uuidv4",
  ],
  function (a, b, c, d, e, f, g, h) {
    var i = 1363037,
      j = {
        INITIAL: "initial",
        NEXT_CHUNK: "next chunk",
        INVALID_OFFSET_RETRY: "invalid offset retry",
        SERVER_FAILURE_RETRY: "server failure retry",
        TRANSPORT_FAILURE_RETRY: "transport failure retry",
        TIMEOUT_RETRY: "timeout retry",
        BACK_ONLINE: "back online",
      };
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(
        b,
        d,
        e,
        f,
        g,
        h,
        i,
        j,
        k,
        l,
        m,
        n,
        o,
        p,
        q,
        r,
        s,
        t,
        u,
        v,
        w,
        x,
        y
      ) {
        var z;
        m === void 0 && (m = "");
        n === void 0 && (n = !1);
        o === void 0 && (o = !1);
        p === void 0 && (p = null);
        q === void 0 && (q = null);
        r === void 0 && (r = null);
        s === void 0 && (s = 0);
        t === void 0 && (t = !1);
        u === void 0 && (u = !1);
        v === void 0 && (v = !1);
        w === void 0 && (w = !1);
        x === void 0 && (x = !1);
        y === void 0 && (y = 0);
        z = a.call(this) || this;
        z.$VideoUploadReceiveRequestManager1 = b;
        z.$VideoUploadReceiveRequestManager2 = d;
        z.$VideoUploadReceiveRequestManager3 = e != null ? e : 0;
        z.$VideoUploadReceiveRequestManager4 = f;
        z.$VideoUploadReceiveRequestManager5 = g;
        z.$VideoUploadReceiveRequestManager6 = h;
        z.$VideoUploadReceiveRequestManager7 = i;
        z.$VideoUploadReceiveRequestManager8 = j;
        z.$VideoUploadReceiveRequestManager9 = k;
        z.$VideoUploadReceiveRequestManager10 = l;
        z.$VideoUploadReceiveRequestManager11 = 0;
        z.$VideoUploadReceiveRequestManager14 = 0;
        z.$VideoUploadReceiveRequestManager15 = 0;
        z.$VideoUploadReceiveRequestManager16 = null;
        z.$VideoUploadReceiveRequestManager17 = null;
        z.$VideoUploadReceiveRequestManager18 = 0;
        z.$VideoUploadReceiveRequestManager19 = "constructed";
        z.$VideoUploadReceiveRequestManager13 = null;
        z.$VideoUploadReceiveRequestManager20 = null;
        z.$VideoUploadReceiveRequestManager21 = null;
        z.$VideoUploadReceiveRequestManager22 = m;
        z.$VideoUploadReceiveRequestManager24 = o;
        z.$VideoUploadReceiveRequestManager23 = n;
        z.$VideoUploadReceiveRequestManager25 = p;
        z.$VideoUploadReceiveRequestManager26 = !1;
        z.$VideoUploadReceiveRequestManager27 = q;
        z.$VideoUploadReceiveRequestManager30 = t;
        z.$VideoUploadReceiveRequestManager31 = u;
        z.$VideoUploadReceiveRequestManager32 = v;
        z.$VideoUploadReceiveRequestManager29 = s;
        z.$VideoUploadReceiveRequestManager33 = w;
        z.$VideoUploadReceiveRequestManager28 = r;
        z.$VideoUploadReceiveRequestManager12 = c("uuidv4")();
        z.$VideoUploadReceiveRequestManager34 = x;
        z.$VideoUploadReceiveRequestManager35 = y;
        z.$VideoUploadReceiveRequestManager40 = null;
        z.$VideoUploadReceiveRequestManager41 = null;
        z.$VideoUploadReceiveRequestManager39 = !1;
        z.$VideoUploadReceiveRequestManager38 = null;
        z.$VideoUploadReceiveRequestManager36 = new (c(
          "VideoUploadConnectionMonitor"
        ))();
        z.$VideoUploadReceiveRequestManager36.subscribe(
          "online",
          z.$VideoUploadReceiveRequestManager49.bind(
            babelHelpers.assertThisInitialized(z)
          )
        );
        z.$VideoUploadReceiveRequestManager36.subscribe(
          "offline",
          z.$VideoUploadReceiveRequestManager50.bind(
            babelHelpers.assertThisInitialized(z)
          )
        );
        return z;
      }
      var e = b.prototype;
      e.updateVideoID = function (a) {
        if (this.$VideoUploadReceiveRequestManager37.getVideoID()) return;
        this.$VideoUploadReceiveRequestManager37.setVideoID(a);
        this.$VideoUploadReceiveRequestManager44 &&
          this.$VideoUploadReceiveRequestManager44.setData(
            this.__createRequestData(this.$VideoUploadReceiveRequestManager37)
          );
        this.$VideoUploadReceiveRequestManager51();
      };
      e.isResumabilityEnabled = function () {
        return this.$VideoUploadReceiveRequestManager23;
      };
      e.isResumableServiceProxyReceiveEnabled = function () {
        return this.$VideoUploadReceiveRequestManager30;
      };
      e.sendRequest = function (a) {
        this.$VideoUploadReceiveRequestManager19 = "sending request";
        if (this.$VideoUploadReceiveRequestManager44) {
          this.$VideoUploadReceiveRequestManager19 =
            "request already in progress";
          return;
        }
        this.$VideoUploadReceiveRequestManager18 =
          a.getEndOffset() - a.getStartOffset();
        this.$VideoUploadReceiveRequestManager37 = a;
        this.$VideoUploadReceiveRequestManager52(j.INITIAL);
      };
      e.cancelRequest = function () {
        if (!this.$VideoUploadReceiveRequestManager44) return;
        this.$VideoUploadReceiveRequestManager44.abort();
        this.$VideoUploadReceiveRequestManager21 != null &&
          this.$VideoUploadReceiveRequestManager21.cancel();
        this.$VideoUploadReceiveRequestManager53();
        this.inform("request-canceled");
      };
      e.appendStateLogData = function (a, b) {
        (a[b + "request_manager_state"] =
          this.$VideoUploadReceiveRequestManager19),
          (a[b + "upload_speed"] = this.$VideoUploadReceiveRequestManager17),
          (a[b + "transport_retries"] =
            this.$VideoUploadReceiveRequestManager11),
          (a[b + "server_retries"] = this.$VideoUploadReceiveRequestManager14),
          (a[b + "timeout_retries"] = this.$VideoUploadReceiveRequestManager15),
          (a[b + "last_timeout_value"] =
            this.$VideoUploadReceiveRequestManager42),
          (a[b + "last_request_start_time"] =
            this.$VideoUploadReceiveRequestManager16),
          (a[b + "pending_request"] =
            this.$VideoUploadReceiveRequestManager44 != null),
          (a[b + "pending_timer"] =
            this.$VideoUploadReceiveRequestManager45 != null),
          (a[b + "cached_chunk"] =
            this.$VideoUploadReceiveRequestManager43 != null),
          (a[b + "early_receive_start"] =
            this.$VideoUploadReceiveRequestManager39),
          this.$VideoUploadReceiveRequestManager37 != null &&
            ((a[b + "start_offset"] =
              this.$VideoUploadReceiveRequestManager37.getStartOffset()),
            (a[b + "end_offset"] =
              this.$VideoUploadReceiveRequestManager37.getEndOffset()),
            (a[b + "partition_start_offset"] =
              this.$VideoUploadReceiveRequestManager37.getPartitionStartOffset()),
            (a[b + "partition_end_offset"] =
              this.$VideoUploadReceiveRequestManager37.getPartitionEndOffset())),
          this.$VideoUploadReceiveRequestManager36 != null &&
            (a[b + "connection_monitor_online"] =
              this.$VideoUploadReceiveRequestManager36.isOnline());
      };
      e.getHostName = function (a) {
        try {
          return new URL(a).hostname;
        } catch (a) {
          return null;
        }
      };
      e.$VideoUploadReceiveRequestManager53 = function () {
        (this.$VideoUploadReceiveRequestManager44 = null),
          (this.$VideoUploadReceiveRequestManager43 = null),
          (this.$VideoUploadReceiveRequestManager11 = 0),
          (this.$VideoUploadReceiveRequestManager14 = 0),
          (this.$VideoUploadReceiveRequestManager12 = c("uuidv4")()),
          (this.$VideoUploadReceiveRequestManager15 = 0),
          (this.$VideoUploadReceiveRequestManager16 = null),
          (this.$VideoUploadReceiveRequestManager17 = null),
          (this.$VideoUploadReceiveRequestManager18 = 0),
          (this.$VideoUploadReceiveRequestManager40 = null),
          (this.$VideoUploadReceiveRequestManager41 = null),
          (this.$VideoUploadReceiveRequestManager39 = !1),
          (this.$VideoUploadReceiveRequestManager26 = !1),
          (this.$VideoUploadReceiveRequestManager38 = null),
          this.$VideoUploadReceiveRequestManager37.reset(),
          this.$VideoUploadReceiveRequestManager36.reset(),
          c("clearTimeout")(this.$VideoUploadReceiveRequestManager45),
          (this.$VideoUploadReceiveRequestManager45 = null);
      };
      e.$VideoUploadReceiveRequestManager52 = function (a, b) {
        c("clearTimeout")(this.$VideoUploadReceiveRequestManager45);
        this.$VideoUploadReceiveRequestManager45 = null;
        this.$VideoUploadReceiveRequestManager20 = a;
        this.$VideoUploadReceiveRequestManager13 = c("uuidv4")();
        if (
          this.$VideoUploadReceiveRequestManager37.getSupportsChunking() &&
          this.$VideoUploadReceiveRequestManager37.getStartOffset() >=
            this.$VideoUploadReceiveRequestManager37.getPartitionEndOffset()
        ) {
          !b
            ? (this.inform("request-finished", {
                start_offset:
                  this.$VideoUploadReceiveRequestManager37.getEndOffset() - 1,
                end_offset:
                  this.$VideoUploadReceiveRequestManager37.getEndOffset(),
                transport_retries: this.$VideoUploadReceiveRequestManager11,
                server_retries: this.$VideoUploadReceiveRequestManager14,
                upload_speed: this.$VideoUploadReceiveRequestManager17,
                request_manager_state: this.$VideoUploadReceiveRequestManager19,
                upload_domain: this.$VideoUploadReceiveRequestManager38,
                debug: {
                  request_reason: this.$VideoUploadReceiveRequestManager20,
                  single_request_id: this.$VideoUploadReceiveRequestManager13,
                },
              }),
              (this.$VideoUploadReceiveRequestManager19 =
                "request finished - notified"))
            : (this.$VideoUploadReceiveRequestManager19 =
                "request finished - not notified");
          return;
        }
        this.$VideoUploadReceiveRequestManager44 = this.__getVideoUploadRequest(
          this.$VideoUploadReceiveRequestManager1
        )
          .setAllowCrossOrigin(!0)
          .setData(
            this.__createRequestData(this.$VideoUploadReceiveRequestManager37)
          )
          .setWaterfallID(
            this.$VideoUploadReceiveRequestManager37.getWaterfallID()
          )
          .setSuccessHandler(this.__handleSuccessResponse.bind(this))
          .setErrorHandler(this.__handleServerFailureResponse.bind(this))
          .setTransportErrorHandler(
            this.$VideoUploadReceiveRequestManager54.bind(this)
          );
        this.$VideoUploadReceiveRequestManager23 ||
          this.$VideoUploadReceiveRequestManager44.setUploadProgressHandler(
            this.$VideoUploadReceiveRequestManager55.bind(this)
          );
        this.$VideoUploadReceiveRequestManager16 = Date.now();
        this.$VideoUploadReceiveRequestManager38 = this.getHostName(
          this.$VideoUploadReceiveRequestManager1
        );
        a = !1;
        if (this.$VideoUploadReceiveRequestManager37.getSupportsChunking()) {
          if (this.$VideoUploadReceiveRequestManager5) {
            b = this.$VideoUploadReceiveRequestManager56(
              this.$VideoUploadReceiveRequestManager37.getEndOffset() -
                this.$VideoUploadReceiveRequestManager37.getStartOffset(),
              this.$VideoUploadReceiveRequestManager17
            );
            this.$VideoUploadReceiveRequestManager44.setTimeoutHandler(
              b,
              this.__handleResponseTimeout.bind(this)
            );
            this.$VideoUploadReceiveRequestManager19 =
              "sending chunk with timeout = " + b;
            this.$VideoUploadReceiveRequestManager42 = b;
          } else
            this.$VideoUploadReceiveRequestManager19 =
              "sending chunk without timeout";
          b = this.$VideoUploadReceiveRequestManager57();
          if (b == null) {
            this.$VideoUploadReceiveRequestManager58({
              error_description: "Provided chunk is null.",
              error_is_transient: !1,
            });
            return;
          } else
            this.$VideoUploadReceiveRequestManager23 &&
            this.$VideoUploadReceiveRequestManager29 <
              this.$VideoUploadReceiveRequestManager37.getFile().getSize()
              ? ((a = !0), this.$VideoUploadReceiveRequestManager59(b))
              : this.$VideoUploadReceiveRequestManager44.sendChunk(b);
        } else
          (this.$VideoUploadReceiveRequestManager19 = "sending file"),
            this.$VideoUploadReceiveRequestManager44.sendFile(
              this.$VideoUploadReceiveRequestManager37.getFile().getFileInput()
            );
        this.$VideoUploadReceiveRequestManager60(a);
        this.$VideoUploadReceiveRequestManager36.notifyStart();
        this.inform("request-started", {
          start_offset:
            this.$VideoUploadReceiveRequestManager37.getStartOffset(),
          end_offset: this.$VideoUploadReceiveRequestManager37.getEndOffset(),
          transport_retries: this.$VideoUploadReceiveRequestManager11,
          server_retries: this.$VideoUploadReceiveRequestManager14,
          upload_speed: this.$VideoUploadReceiveRequestManager17,
          request_manager_state: this.$VideoUploadReceiveRequestManager19,
          upload_domain: this.$VideoUploadReceiveRequestManager38,
          debug: {
            request_reason: this.$VideoUploadReceiveRequestManager20,
            single_request_id: this.$VideoUploadReceiveRequestManager13,
          },
        });
      };
      e.$VideoUploadReceiveRequestManager60 = function (a) {
        (this.$VideoUploadReceiveRequestManager37.getSource() ===
          "create_flow" ||
          this.$VideoUploadReceiveRequestManager37.getSource() ===
            "ads_interfaces") &&
          d("ODS").bumpEntityKey(
            2966,
            "video_ads_upload",
            a ? "upload_service" : "graph_api"
          );
      };
      e.$VideoUploadReceiveRequestManager61 = function (a, b, c) {
        !this.$VideoUploadReceiveRequestManager37.getVideoID()
          ? ((this.$VideoUploadReceiveRequestManager40 = a),
            (this.$VideoUploadReceiveRequestManager41 = b))
          : a(b, c);
      };
      e.$VideoUploadReceiveRequestManager51 = function () {
        this.$VideoUploadReceiveRequestManager40 &&
          (this.$VideoUploadReceiveRequestManager40(
            this.$VideoUploadReceiveRequestManager41
          ),
          (this.$VideoUploadReceiveRequestManager40 = null),
          (this.$VideoUploadReceiveRequestManager41 = null));
      };
      e.$VideoUploadReceiveRequestManager59 = function (a) {
        var b,
          d = this.$VideoUploadReceiveRequestManager37.getFile(),
          e =
            d.getFile().lastModified +
            d.getFile().name +
            d.getFile().type +
            this.$VideoUploadReceiveRequestManager62();
        e =
          String(c("md5")(e)) +
          "-" +
          this.$VideoUploadReceiveRequestManager37.getStartOffset() +
          "-" +
          this.$VideoUploadReceiveRequestManager37.getEndOffset();
        b =
          ((b = this.$VideoUploadReceiveRequestManager37) == null
            ? void 0
            : b.getRetryState()) == null
            ? this.$VideoUploadReceiveRequestManager14 +
              this.$VideoUploadReceiveRequestManager11 +
              this.$VideoUploadReceiveRequestManager15
            : this.$VideoUploadReceiveRequestManager37
                .getRetryState()
                .getTotalRetryCount();
        d =
          this.$VideoUploadReceiveRequestManager34 &&
          this.$VideoUploadReceiveRequestManager35 < d.getSize()
            ? [
                "video_upload_www",
                [this.$VideoUploadReceiveRequestManager12, String(b)].join("_"),
                [
                  String(
                    this.$VideoUploadReceiveRequestManager37.getWaterfallID()
                  ),
                  String(this.$VideoUploadReceiveRequestManager37.getVideoID()),
                ].join("_"),
              ].join(":")
            : null;
        this.isResumabilityEnabled() &&
          this.$VideoUploadReceiveRequestManager25 &&
          this.$VideoUploadReceiveRequestManager11 >
            this.$VideoUploadReceiveRequestManager2 / 3 &&
          (this.$VideoUploadReceiveRequestManager26 = !0);
        b = "fb_video";
        this.$VideoUploadReceiveRequestManager30 && (b = "fb_video2");
        var f = null;
        if (
          this.$VideoUploadReceiveRequestManager30 ||
          this.$VideoUploadReceiveRequestManager31
        ) {
          var g = {};
          g.start_offset =
            this.$VideoUploadReceiveRequestManager37.getStartOffset();
          g.end_offset =
            this.$VideoUploadReceiveRequestManager37.getEndOffset();
          g.composer_session_id =
            this.$VideoUploadReceiveRequestManager37.getWaterfallID();
          g.upload_session_id =
            this.$VideoUploadReceiveRequestManager37.getUploadSessionID();
          g.product_media_id =
            this.$VideoUploadReceiveRequestManager37.getVideoID();
          g.xpv_asset_id =
            this.$VideoUploadReceiveRequestManager37.getXPVAssetID();
          g.is_xpv_single_prod =
            this.$VideoUploadReceiveRequestManager37.getIsXPVSingleProd();
          g.fb_region = this.$VideoUploadReceiveRequestManager37.getFbRegion();
          this.$VideoUploadReceiveRequestManager32 &&
            (g.total_file_size = this.$VideoUploadReceiveRequestManager37
              .getFile()
              .getSize());
          c("gkx")("1765373") &&
            ((g.video_waterfall_id =
              this.$VideoUploadReceiveRequestManager37.getWaterfallID()),
            (g.target_id =
              this.$VideoUploadReceiveRequestManager37.getTargetID()));
          f = g;
        }
        g = {};
        g.consumer = b;
        g.sessionKey = e;
        g.serviceName = this.$VideoUploadReceiveRequestManager26
          ? null
          : this.$VideoUploadReceiveRequestManager25;
        g.serviceDomain = this.$VideoUploadReceiveRequestManager27;
        g.receiveParameters = f;
        g.tracingHeaderValue = d;
        this.$VideoUploadReceiveRequestManager24
          ? (b = c("ResumableUploadAsyncService").create(g))
          : (b = c("ResumableUploadService").create(g));
        this.$VideoUploadReceiveRequestManager21 = b;
        this.$VideoUploadReceiveRequestManager38 = b.getServiceName();
        this.$VideoUploadReceiveRequestManager63();
        b.resume(a);
        this.inform("resumable-called", {
          debug: {
            single_request_id: this.$VideoUploadReceiveRequestManager13,
            authority: this.$VideoUploadReceiveRequestManager38,
          },
        });
      };
      e.$VideoUploadReceiveRequestManager63 = function () {
        var a = this;
        this.$VideoUploadReceiveRequestManager37.getVideoID() ||
          (this.$VideoUploadReceiveRequestManager39 = !0);
        var b = this.$VideoUploadReceiveRequestManager21;
        if (b == null) return;
        b.addListener(
          c("ResumableUploadServiceState.enum").START,
          function (b) {
            a.inform("resumable-started", {
              resume_from_offset: b.offset,
              debug: {
                single_request_id: a.$VideoUploadReceiveRequestManager13,
                partition:
                  a.$VideoUploadReceiveRequestManager37.getPartitionNo(),
                authority: a.$VideoUploadReceiveRequestManager38,
              },
            });
          }
        );
        this.$VideoUploadReceiveRequestManager46 = function (b) {
          a.inform("resumable-failed", {
            error_code: b.getError(),
            error_description: b.getErrorDescription(),
            error_summary: b.getErrorSummary(),
            error_is_transient: b.isTransient(),
            debug: {
              error_source: "service",
              single_request_id: a.$VideoUploadReceiveRequestManager13,
              partition: a.$VideoUploadReceiveRequestManager37.getPartitionNo(),
              authority: a.$VideoUploadReceiveRequestManager38,
            },
          }),
            a.__handleServerFailureResponse(b);
        };
        b.addListener(c("ResumableUploadServiceState.enum").FAIL, function (b) {
          a.$VideoUploadReceiveRequestManager61(
            a.$VideoUploadReceiveRequestManager46,
            b
          );
        });
        this.$VideoUploadReceiveRequestManager47 = function (b) {
          !a.$VideoUploadReceiveRequestManager30
            ? (a.$VideoUploadReceiveRequestManager44.setHandle(b),
              a.$VideoUploadReceiveRequestManager44.sendChunk(null))
            : a.__handleSuccessResponsePayload({
                start_offset:
                  a.$VideoUploadReceiveRequestManager37.getEndOffset(),
                end_offset:
                  a.$VideoUploadReceiveRequestManager37.getPartitionEndOffset(),
              }),
            a.inform("resumable-success", {
              everstore_handle: b,
              debug: {
                single_request_id: a.$VideoUploadReceiveRequestManager13,
                partition:
                  a.$VideoUploadReceiveRequestManager37.getPartitionNo(),
                authority: a.$VideoUploadReceiveRequestManager38,
              },
            });
        };
        b.addListener(
          c("ResumableUploadServiceState.enum").SUCCESS,
          function (b) {
            a.$VideoUploadReceiveRequestManager61(
              a.$VideoUploadReceiveRequestManager47,
              b
            );
          }
        );
        this.$VideoUploadReceiveRequestManager48 = function (b, c) {
          a.inform("resumable-failed", {
            error_code: b.getError(),
            error_description: b.getErrorDescription(),
            error_summary: b.getErrorSummary(),
            error_is_transient: b.isTransient(),
            resume_from_offset: c.offset,
            debug: {
              error_source: "transport",
              single_request_id: a.$VideoUploadReceiveRequestManager13,
              partition: a.$VideoUploadReceiveRequestManager37.getPartitionNo(),
              method: c.method,
              authority: a.$VideoUploadReceiveRequestManager38,
            },
          }),
            a.$VideoUploadReceiveRequestManager54(b);
        };
        b.addListener(
          c("ResumableUploadServiceState.enum").TRANSPORT_FAILURE,
          function (b, c) {
            a.$VideoUploadReceiveRequestManager61(
              a.$VideoUploadReceiveRequestManager48,
              b,
              c
            );
          }
        );
        b.addListener(
          c("ResumableUploadServiceState.enum").PROGRESS,
          function (b) {
            a.$VideoUploadReceiveRequestManager33 &&
              (a.$VideoUploadReceiveRequestManager11 = 0),
              a.$VideoUploadReceiveRequestManager55(b);
          }
        );
      };
      e.__getVideoUploadRequest = function (a) {
        return new (c("VideoUploadRequest"))(a);
      };
      e.$VideoUploadReceiveRequestManager64 = function (a, b) {
        (this.$VideoUploadReceiveRequestManager19 =
          "setting request to send after" + b),
          c("clearTimeout")(this.$VideoUploadReceiveRequestManager45),
          (this.$VideoUploadReceiveRequestManager45 = c("setTimeout")(
            this.$VideoUploadReceiveRequestManager52.bind(this, a),
            b
          ));
      };
      e.$VideoUploadReceiveRequestManager57 = function () {
        if (this.$VideoUploadReceiveRequestManager43)
          return this.$VideoUploadReceiveRequestManager43;
        var a = this.$VideoUploadReceiveRequestManager37.getFile();
        if (this.$VideoUploadReceiveRequestManager23) {
          var b = a.getFile();
          this.$VideoUploadReceiveRequestManager43 = b
            ? b.slice(
                this.$VideoUploadReceiveRequestManager37.getStartOffset(),
                this.$VideoUploadReceiveRequestManager37.getEndOffset(),
                "application/octet-stream"
              )
            : null;
        } else
          this.$VideoUploadReceiveRequestManager43 = a.getChunk(
            this.$VideoUploadReceiveRequestManager37.getStartOffset(),
            this.$VideoUploadReceiveRequestManager37.getEndOffset()
          );
        return this.$VideoUploadReceiveRequestManager43;
      };
      e.__createRequestData = function (a) {
        return {
          composer_session_id: a.getComposerSessionID(),
          video_id: a.getVideoID(),
          start_offset: a.getStartOffset(),
          end_offset: a.getEndOffset(),
          source: a.getSource(),
          target_id: a.getTargetID(),
          waterfall_id: a.getWaterfallID(),
          composer_entry_point_ref:
            a.getComposerEntryPointRef && a.getComposerEntryPointRef(),
          composer_work_shared_draft_mode: a.getComposerWorkSharedDraftMode(),
          composer_dialog_version: a.getComposerDialogVersion(),
          has_file_been_replaced: a.getHasFileBeenReplaced(),
          supports_chunking: a.getSupportsChunking(),
          upload_speed: this.$VideoUploadReceiveRequestManager17,
          partition_start_offset: a.getPartitionStartOffset(),
          partition_end_offset: a.getPartitionEndOffset(),
        };
      };
      e.__handleSuccessResponse = function (a) {
        a = a.getPayload();
        this.__handleSuccessResponsePayload(a);
      };
      e.__handleSuccessResponsePayload = function (a) {
        this.$VideoUploadReceiveRequestManager19 = "success response received";
        var b = Date.now() - (this.$VideoUploadReceiveRequestManager16 || 0);
        b = b === 0 ? 1 : b;
        if (
          a.start_offset ===
          this.$VideoUploadReceiveRequestManager37.getEndOffset()
        ) {
          var d =
            this.$VideoUploadReceiveRequestManager37.getEndOffset() -
            this.$VideoUploadReceiveRequestManager37.getStartOffset();
          this.$VideoUploadReceiveRequestManager17 = Math.floor(d / b);
        } else this.$VideoUploadReceiveRequestManager17 = null;
        this.$VideoUploadReceiveRequestManager36.notifySuccess();
        this.inform("request-finished", {
          start_offset:
            this.$VideoUploadReceiveRequestManager37.getStartOffset(),
          end_offset: this.$VideoUploadReceiveRequestManager37.getEndOffset(),
          transport_retries: this.$VideoUploadReceiveRequestManager11,
          server_retries: this.$VideoUploadReceiveRequestManager14,
          upload_speed: this.$VideoUploadReceiveRequestManager17,
          request_manager_state: this.$VideoUploadReceiveRequestManager19,
          upload_domain: this.$VideoUploadReceiveRequestManager38,
          debug: {
            request_reason: this.$VideoUploadReceiveRequestManager20,
            single_request_id: this.$VideoUploadReceiveRequestManager13,
          },
        });
        this.$VideoUploadReceiveRequestManager37.setStartOffset(a.start_offset);
        d = a.end_offset;
        this.$VideoUploadReceiveRequestManager37.getClientChunkSize() &&
          (d =
            a.start_offset +
            Math.min(
              this.$VideoUploadReceiveRequestManager37.getPartitionEndOffset() -
                a.start_offset,
              this.$VideoUploadReceiveRequestManager37.getClientChunkSize()
            ));
        this.$VideoUploadReceiveRequestManager37.setEndOffset(d);
        this.$VideoUploadReceiveRequestManager37.setLastKnownUploadSpeed(
          this.$VideoUploadReceiveRequestManager17
        );
        this.$VideoUploadReceiveRequestManager44 = null;
        this.$VideoUploadReceiveRequestManager43 = null;
        this.$VideoUploadReceiveRequestManager11 = 0;
        this.$VideoUploadReceiveRequestManager14 = 0;
        this.$VideoUploadReceiveRequestManager12 = c("uuidv4")();
        this.$VideoUploadReceiveRequestManager15 = 0;
        this.$VideoUploadReceiveRequestManager37.getSupportsChunking() &&
          this.$VideoUploadReceiveRequestManager52(j.NEXT_CHUNK, !0);
      };
      e.$VideoUploadReceiveRequestManager65 = function (a) {
        var b = this,
          c = a.getPayload();
        this.$VideoUploadReceiveRequestManager19 =
          "invalid offset response received start=" +
          c.start_offset +
          " end=" +
          c.end_offset;
        (this.$VideoUploadReceiveRequestManager37.getStartOffset() !=
          c.start_offset ||
          this.$VideoUploadReceiveRequestManager37.getEndOffset() !=
            c.end_offset) &&
          (this.$VideoUploadReceiveRequestManager37.setStartOffset(
            c.start_offset
          ),
          this.$VideoUploadReceiveRequestManager37.setEndOffset(c.end_offset),
          (this.$VideoUploadReceiveRequestManager43 = null));
        ((c = this.$VideoUploadReceiveRequestManager37) == null
          ? void 0
          : c.getRetryState()) == null
          ? (this.$VideoUploadReceiveRequestManager14++,
            this.$VideoUploadReceiveRequestManager52(j.INVALID_OFFSET_RETRY))
          : this.$VideoUploadReceiveRequestManager37
              .getRetryState()
              .handleRetry({
                context: { location: "receive-invalid_offset" },
                retryHandler: function (a) {
                  return b.$VideoUploadReceiveRequestManager64(
                    j.INVALID_OFFSET_RETRY,
                    a
                  );
                },
                failureHandler: function () {
                  return b.$VideoUploadReceiveRequestManager66(a);
                },
              });
      };
      e.__handleServerFailureResponse = function (a) {
        var b = this;
        this.$VideoUploadReceiveRequestManager19 = "failure response received";
        this.$VideoUploadReceiveRequestManager44 = null;
        this.$VideoUploadReceiveRequestManager11 = 0;
        this.$VideoUploadReceiveRequestManager17 = null;
        this.$VideoUploadReceiveRequestManager15 = 0;
        this.$VideoUploadReceiveRequestManager36.notifyError();
        if (this.__hasInvalidStartOffsetAndHasRetries(a.getError()))
          this.$VideoUploadReceiveRequestManager65(a);
        else {
          var c;
          ((c = this.$VideoUploadReceiveRequestManager37) == null
            ? void 0
            : c.getRetryState()) == null
            ? (a.isTransient() || this.$VideoUploadReceiveRequestManager10) &&
              this.$VideoUploadReceiveRequestManager14 <
                this.$VideoUploadReceiveRequestManager4
              ? ((this.$VideoUploadReceiveRequestManager19 =
                  "transient server error"),
                this.$VideoUploadReceiveRequestManager14++,
                this.$VideoUploadReceiveRequestManager64(
                  j.SERVER_FAILURE_RETRY,
                  this.$VideoUploadReceiveRequestManager67(
                    this.$VideoUploadReceiveRequestManager9,
                    this.$VideoUploadReceiveRequestManager14,
                    0
                  )
                ))
              : this.$VideoUploadReceiveRequestManager66(a)
            : this.$VideoUploadReceiveRequestManager37
                .getRetryState()
                .handleRetry({
                  context: {
                    location: "receive-server_issue",
                    error_code: a.getError(),
                  },
                  predicate: function () {
                    return a.isTransient();
                  },
                  retryHandler: function (a) {
                    (b.$VideoUploadReceiveRequestManager19 =
                      "transient server error"),
                      b.$VideoUploadReceiveRequestManager64(
                        j.SERVER_FAILURE_RETRY,
                        a
                      );
                  },
                  failureHandler: function () {
                    return b.$VideoUploadReceiveRequestManager66(a);
                  },
                });
        }
      };
      e.__handleResponseTimeout = function (a) {
        var b = this;
        this.inform("request-timeout", {
          start_offset:
            this.$VideoUploadReceiveRequestManager37.getStartOffset(),
          end_offset: this.$VideoUploadReceiveRequestManager37.getEndOffset(),
          transport_retries: this.$VideoUploadReceiveRequestManager11,
          server_retries: this.$VideoUploadReceiveRequestManager14,
          timeout_retries: this.$VideoUploadReceiveRequestManager15,
          upload_speed: this.$VideoUploadReceiveRequestManager17,
          request_manager_state: this.$VideoUploadReceiveRequestManager19,
          debug: {
            upload_domain: this.$VideoUploadReceiveRequestManager38,
            single_request_id: this.$VideoUploadReceiveRequestManager13,
          },
        });
        this.$VideoUploadReceiveRequestManager44.abort();
        this.$VideoUploadReceiveRequestManager44 = null;
        this.$VideoUploadReceiveRequestManager17 = null;
        this.$VideoUploadReceiveRequestManager36.notifyTransportError();
        var c = function () {
            var a =
              b.$VideoUploadReceiveRequestManager37.getEndOffset() -
              b.$VideoUploadReceiveRequestManager37.getStartOffset();
            a = Math.floor(a / 2);
            a = Math.max(a, b.$VideoUploadReceiveRequestManager18);
            var c = b.$VideoUploadReceiveRequestManager37.getEndOffset();
            c = Math.min(
              c,
              b.$VideoUploadReceiveRequestManager37.getStartOffset() + a
            );
            b.$VideoUploadReceiveRequestManager37.setEndOffset(c);
            b.$VideoUploadReceiveRequestManager43 = null;
            b.$VideoUploadReceiveRequestManager19 =
              "resending after timeout with chunksize=" + a;
            b.$VideoUploadReceiveRequestManager52(j.TIMEOUT_RETRY);
          },
          d = function () {
            b.$VideoUploadReceiveRequestManager58({
              error_code: 1006,
              error_description: h._(
                "Your browser appears to be offline. Please check your internet connection and try again."
              ),
              error_summary: h._("No network connection"),
              error_is_transient: !0,
            });
          };
        ((a = this.$VideoUploadReceiveRequestManager37) == null
          ? void 0
          : a.getRetryState()) == null
          ? ++this.$VideoUploadReceiveRequestManager15 <=
            this.$VideoUploadReceiveRequestManager6
            ? c()
            : d()
          : this.$VideoUploadReceiveRequestManager37
              .getRetryState()
              .handleRetry({
                context: { location: "receive-timeout", error_code: 1006 },
                retryHandler: function (a) {
                  return c();
                },
                failureHandler: function () {
                  return d();
                },
              });
      };
      e.__hasInvalidStartOffsetAndHasRetries = function (a) {
        return (
          a === i &&
          this.$VideoUploadReceiveRequestManager14 <
            this.$VideoUploadReceiveRequestManager4
        );
      };
      e.$VideoUploadReceiveRequestManager54 = function (a) {
        var b,
          c = this;
        this.$VideoUploadReceiveRequestManager36.notifyTransportError();
        this.$VideoUploadReceiveRequestManager17 = null;
        ((b = this.$VideoUploadReceiveRequestManager37) == null
          ? void 0
          : b.getRetryState()) == null
          ? ((this.$VideoUploadReceiveRequestManager15 = 0),
            this.$VideoUploadReceiveRequestManager11 <
            this.$VideoUploadReceiveRequestManager2
              ? ((this.$VideoUploadReceiveRequestManager19 =
                  "resending after transport failure"),
                this.$VideoUploadReceiveRequestManager11++,
                (this.$VideoUploadReceiveRequestManager44 = null),
                this.$VideoUploadReceiveRequestManager64(
                  j.TRANSPORT_FAILURE_RETRY,
                  this.$VideoUploadReceiveRequestManager67(
                    this.$VideoUploadReceiveRequestManager8,
                    this.$VideoUploadReceiveRequestManager11,
                    this.$VideoUploadReceiveRequestManager3
                  )
                ))
              : this.$VideoUploadReceiveRequestManager66(a))
          : this.$VideoUploadReceiveRequestManager37
              .getRetryState()
              .handleRetry({
                context: {
                  location: "receive-transport_issue",
                  error_code: a.getError(),
                },
                retryHandler: function (a) {
                  (c.$VideoUploadReceiveRequestManager44 = null),
                    (c.$VideoUploadReceiveRequestManager19 =
                      "resending after transport failure"),
                    c.$VideoUploadReceiveRequestManager64(
                      j.TRANSPORT_FAILURE_RETRY,
                      a
                    );
                },
                failureHandler: function () {
                  return c.$VideoUploadReceiveRequestManager66(a);
                },
              });
      };
      e.$VideoUploadReceiveRequestManager66 = function (a) {
        this.$VideoUploadReceiveRequestManager58({
          error_code: a.getError(),
          error_description: a.getErrorDescription(),
          error_summary: a.getErrorSummary(),
          error_is_transient: a.isTransient(),
          upload_domain: this.uploadDomain,
          www_request_id:
            (a = a.getPayload()) == null ? void 0 : a.__www_request_id__,
        });
      };
      e.$VideoUploadReceiveRequestManager58 = function (a) {
        (this.$VideoUploadReceiveRequestManager19 = "handling failure error"),
          (a.debug = babelHelpers["extends"]({}, a.debug, {
            single_request_id: this.$VideoUploadReceiveRequestManager13,
          })),
          this.inform("request-failed", a),
          this.$VideoUploadReceiveRequestManager53();
      };
      e.$VideoUploadReceiveRequestManager55 = function (a) {
        this.$VideoUploadReceiveRequestManager36.notifyProgress(a),
          this.$VideoUploadReceiveRequestManager37 &&
            this.$VideoUploadReceiveRequestManager37.getFile() &&
            this.inform("request-progressed", {
              file_size: this.$VideoUploadReceiveRequestManager37
                .getFile()
                .getSize(),
              start_offset:
                this.$VideoUploadReceiveRequestManager37.getStartOffset(),
              sent_bytes: a.loaded,
              transport_retries: this.$VideoUploadReceiveRequestManager11,
              upload_domain: this.$VideoUploadReceiveRequestManager38,
              debug: {
                single_request_id: this.$VideoUploadReceiveRequestManager13,
              },
            });
      };
      e.$VideoUploadReceiveRequestManager49 = function () {
        var a;
        this.inform("online");
        this.$VideoUploadReceiveRequestManager11 = 0;
        this.$VideoUploadReceiveRequestManager15 = 0;
        (a = this.$VideoUploadReceiveRequestManager37) == null
          ? void 0
          : (a = a.getRetryState()) == null
          ? void 0
          : a.resetDelay();
        this.$VideoUploadReceiveRequestManager45 &&
          this.$VideoUploadReceiveRequestManager52(j.BACK_ONLINE);
      };
      e.$VideoUploadReceiveRequestManager50 = function () {
        this.inform("offline");
      };
      e.$VideoUploadReceiveRequestManager67 = function (a, b, c) {
        var d;
        this.$VideoUploadReceiveRequestManager23
          ? (d = Math.min(Math.pow(a, b), 8) * 1e3)
          : (d = Math.pow(a, b) * 1e3);
        c > 0 && (d = Math.min(d, c));
        return d;
      };
      e.$VideoUploadReceiveRequestManager56 = function (a, b) {
        b != null && b > 0 ? (b = b) : (b = 10);
        a = Math.floor(
          ((a / b) * this.$VideoUploadReceiveRequestManager7) / 100
        );
        return Math.max(a, 3e4);
      };
      e.$VideoUploadReceiveRequestManager62 = function () {
        return this.$VideoUploadReceiveRequestManager28
          ? this.$VideoUploadReceiveRequestManager28
          : this.$VideoUploadReceiveRequestManager37.getWaterfallID();
      };
      return b;
    })(c("mixin")(b("cr:909282")));
    g["default"] = a;
  },
  98
);
__d(
  "FileHasher",
  ["FileHashWorkerResource", "WebWorker", "emptyFunction", "fileSliceName"],
  function (a, b, c, d, e, f) {
    a = (function () {
      "use strict";
      a.isSupported = function () {
        return b("WebWorker").isSupported();
      };
      function a() {
        var a = this,
          c = b("FileHashWorkerResource");
        b("WebWorker").prepareResource(c);
        this.$1 = new (b("WebWorker"))(c)
          .setMessageHandler(function (b) {
            a.$2(b);
          })
          .execute();
      }
      var c = a.prototype;
      c.hash = function (a, c) {
        this.$2 = c;
        this.$1.postMessage({ file: a, fileSliceName: b("fileSliceName") });
        return this;
      };
      c.destroy = function () {
        (this.$2 = b("emptyFunction")), this.$1.terminate();
      };
      return a;
    })();
    e.exports = a;
  },
  null
);
__d(
  "VideoUploadStartRequestManager",
  [
    "Assert",
    "FileHasher",
    "VideoUploadRequest",
    "clearTimeout",
    "cr:909282",
    "mixin",
    "performanceNow",
    "setTimeout",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, c, d, e, f, g, h, i) {
        var j;
        j = a.call(this) || this;
        j.$VideoUploadStartRequestManager1 = b;
        j.$VideoUploadStartRequestManager2 = c;
        j.$VideoUploadStartRequestManager3 = d;
        j.$VideoUploadStartRequestManager4 = e;
        j.$VideoUploadStartRequestManager5 = 0;
        j.$VideoUploadStartRequestManager6 = f;
        j.$VideoUploadStartRequestManager7 = g;
        j.$VideoUploadStartRequestManager8 = h;
        j.$VideoUploadStartRequestManager9 = i;
        j.$VideoUploadStartRequestManager10 = 0;
        return j;
      }
      var d = b.prototype;
      d.getRequest = function () {
        return this.$VideoUploadStartRequestManager11;
      };
      d.sendRequest = function (a) {
        var b = this;
        if (
          this.$VideoUploadStartRequestManager12 ||
          this.$VideoUploadStartRequestManager11
        )
          return;
        this.$VideoUploadStartRequestManager13 = a;
        this.$VideoUploadStartRequestManager6 &&
        this.$VideoUploadStartRequestManager13.getFile().getFile() &&
        this.$VideoUploadStartRequestManager13.getFile().getFile().size <
          this.$VideoUploadStartRequestManager7 &&
        c("FileHasher").isSupported()
          ? ((this.$VideoUploadStartRequestManager14 = c("performanceNow")()),
            (this.$VideoUploadStartRequestManager12 = new (c("FileHasher"))()),
            this.$VideoUploadStartRequestManager12.hash(
              this.$VideoUploadStartRequestManager13.getFile().getFile(),
              function (a) {
                (b.$VideoUploadStartRequestManager14 =
                  c("performanceNow")() - b.$VideoUploadStartRequestManager14),
                  (b.$VideoUploadStartRequestManager15 = a.hash),
                  b.$VideoUploadStartRequestManager12.destroy(),
                  (b.$VideoUploadStartRequestManager12 = null),
                  a.hash || (b.$VideoUploadStartRequestManager16 = a.exception),
                  b.$VideoUploadStartRequestManager17();
              }
            ))
          : this.$VideoUploadStartRequestManager17();
      };
      d.$VideoUploadStartRequestManager17 = function () {
        this.$VideoUploadStartRequestManager18(),
          this.inform("request-started", {
            hash_time: this.$VideoUploadStartRequestManager14,
            hash_exception: this.$VideoUploadStartRequestManager16,
          });
      };
      d.$VideoUploadStartRequestManager18 = function () {
        c("clearTimeout")(this.$VideoUploadStartRequestManager19),
          (this.$VideoUploadStartRequestManager19 = null),
          (this.$VideoUploadStartRequestManager11 =
            this.__getVideoUploadRequest(this.$VideoUploadStartRequestManager1)
              .setAllowCrossOrigin(!0)
              .setData(
                this.__getDataToSend(
                  this.$VideoUploadStartRequestManager13,
                  this.$VideoUploadStartRequestManager15
                )
              )
              .setWaterfallID(
                this.$VideoUploadStartRequestManager13.getWaterfallID()
              )
              .setSuccessHandler(
                this.$VideoUploadStartRequestManager20.bind(this)
              )
              .setErrorHandler(
                this.$VideoUploadStartRequestManager21.bind(this)
              )
              .setTransportErrorHandler(
                this.$VideoUploadStartRequestManager22.bind(this)
              )),
          this.$VideoUploadStartRequestManager11.send();
      };
      d.__getVideoUploadRequest = function (a) {
        return new (c("VideoUploadRequest"))(a);
      };
      d.__getDataToSend = function (a, b) {
        b = {
          file_size: a.getFile().getSize(),
          file_extension: a.getFile().getExtension(),
          target_id: a.getTargetID(),
          source: a.getSource(),
          composer_dialog_version: a.getComposerDialogVersion(),
          waterfall_id: a.getWaterfallID(),
          composer_session_id: a.getComposerSessionID(),
          composer_entry_point_ref:
            a.getComposerEntryPointRef && a.getComposerEntryPointRef(),
          composer_work_shared_draft_mode: a.getComposerWorkSharedDraftMode(),
          has_file_been_replaced: a.getHasFileBeenReplaced(),
          supports_chunking: a.getSupportsChunking(),
          supports_file_api: a.getSupportsFileAPI(),
          partition_start_offset: a.getPartitionStartOffset(),
          partition_end_offset: a.getPartitionEndOffset(),
          creator_product: a.getCreatorProduct(),
          original_file_hash: b,
          spherical: a.getIsSphericalVideo(),
          spherical_metadata: a.getSphericalMetadata(),
          video_publisher_action_source: a.getVideoPublisherActionSource(),
        };
        a.getCreativeTools() != null &&
          (b.creative_tools = a.getCreativeTools());
        return b;
      };
      d.cancelRequest = function () {
        this.$VideoUploadStartRequestManager23(),
          this.inform("request-canceled");
      };
      d.$VideoUploadStartRequestManager24 = function (a) {
        c("clearTimeout")(this.$VideoUploadStartRequestManager19),
          (this.$VideoUploadStartRequestManager19 = c("setTimeout")(
            this.$VideoUploadStartRequestManager18.bind(this),
            a
          ));
      };
      d.$VideoUploadStartRequestManager23 = function () {
        this.$VideoUploadStartRequestManager12 &&
          (this.$VideoUploadStartRequestManager12.destroy(),
          (this.$VideoUploadStartRequestManager12 = null)),
          this.$VideoUploadStartRequestManager11 &&
            (this.$VideoUploadStartRequestManager11.abort(),
            (this.$VideoUploadStartRequestManager11 = null)),
          (this.$VideoUploadStartRequestManager10 = 0),
          (this.$VideoUploadStartRequestManager5 = 0),
          (this.$VideoUploadStartRequestManager13 = null),
          c("clearTimeout")(this.$VideoUploadStartRequestManager19),
          (this.$VideoUploadStartRequestManager19 = null);
      };
      d.$VideoUploadStartRequestManager25 = function (a, b, c) {
        a = Math.pow(a, b) * 1e3;
        c > 0 && (a = Math.min(a, c));
        return a;
      };
      d.$VideoUploadStartRequestManager20 = function (a) {
        var b;
        (b = this.$VideoUploadStartRequestManager13) == null
          ? void 0
          : (b = b.getRetryState()) == null
          ? void 0
          : b.resetDelay();
        b = a.getPayload();
        this.inform("request-finished", this.__getSuccessInformData(b));
        this.$VideoUploadStartRequestManager11 = null;
        c("Assert").isTrue(
          this.$VideoUploadStartRequestManager12 == null,
          "Unexpected: if file hasher is not null, clean up is required."
        );
      };
      d.__getSuccessInformData = function (a) {
        return {
          video_id: a.video_id,
          xpv_asset_id: a.xpv_asset_id,
          is_xpv_single_prod: a.is_xpv_single_prod,
          upload_session_id: a.upload_session_id,
          fb_region: a.region_hint,
          start_offset: a.start_offset,
          end_offset: a.end_offset,
          transport_retries: this.$VideoUploadStartRequestManager5,
          server_retries: this.$VideoUploadStartRequestManager10,
          skip_upload: a.skip_upload,
          hash_time: this.$VideoUploadStartRequestManager14,
        };
      };
      d.$VideoUploadStartRequestManager26 = function (a) {
        this.inform(
          "request-failed",
          this.$VideoUploadStartRequestManager27(a)
        ),
          (this.$VideoUploadStartRequestManager11 = null),
          c("Assert").isTrue(
            this.$VideoUploadStartRequestManager12 == null,
            "Unexpected: if file hasher is not null, clean up is required."
          );
      };
      d.$VideoUploadStartRequestManager21 = function (a) {
        var b,
          c = this;
        this.$VideoUploadStartRequestManager11 = null;
        var d =
          (b = this.$VideoUploadStartRequestManager13) == null
            ? void 0
            : b.getRetryState();
        d == null
          ? ((this.$VideoUploadStartRequestManager5 = 0),
            a.isTransient() &&
            this.$VideoUploadStartRequestManager10 <
              this.$VideoUploadStartRequestManager8
              ? (this.$VideoUploadStartRequestManager10++,
                this.$VideoUploadStartRequestManager24(
                  this.$VideoUploadStartRequestManager25(
                    this.$VideoUploadStartRequestManager9,
                    this.$VideoUploadStartRequestManager10
                  )
                ))
              : this.$VideoUploadStartRequestManager26(a))
          : d.handleRetry({
              context: {
                location: "start-server_issue",
                error_code: a.getError(),
              },
              predicate: function () {
                return a.isTransient();
              },
              retryHandler: function (a) {
                (c.$VideoUploadStartRequestManager10 = d.getTotalRetryCount()),
                  c.$VideoUploadStartRequestManager24(a);
              },
              failureHandler: function () {
                return c.$VideoUploadStartRequestManager26(a);
              },
            });
      };
      d.$VideoUploadStartRequestManager22 = function (a) {
        var b,
          c = this;
        ((b = this.$VideoUploadStartRequestManager13) == null
          ? void 0
          : b.getRetryState()) == null
          ? this.$VideoUploadStartRequestManager2 === 0 ||
            this.$VideoUploadStartRequestManager5 >=
              this.$VideoUploadStartRequestManager2
            ? this.$VideoUploadStartRequestManager26(a)
            : (this.$VideoUploadStartRequestManager5++,
              (this.$VideoUploadStartRequestManager11 = null),
              this.$VideoUploadStartRequestManager24(
                this.$VideoUploadStartRequestManager25(
                  this.$VideoUploadStartRequestManager3,
                  this.$VideoUploadStartRequestManager5,
                  this.$VideoUploadStartRequestManager4
                )
              ))
          : this.$VideoUploadStartRequestManager13.getRetryState().handleRetry({
              context: {
                location: "start-transport_issue",
                error_code: a.getError(),
              },
              retryHandler: function (a) {
                (c.$VideoUploadStartRequestManager11 = null),
                  c.$VideoUploadStartRequestManager24(a);
              },
              failureHandler: function () {
                return c.$VideoUploadStartRequestManager26(a);
              },
            });
      };
      d.$VideoUploadStartRequestManager27 = function (a) {
        return {
          error_code: a.getError(),
          error_description: a.getErrorDescription(),
          error_summary: a.getErrorSummary(),
          transport_retries: this.$VideoUploadStartRequestManager5,
          server_retries: this.$VideoUploadStartRequestManager10,
          error_is_transient: a.isTransient(),
          www_request_id:
            (a = a.getPayload()) == null ? void 0 : a.__www_request_id__,
        };
      };
      return b;
    })(c("mixin")(b("cr:909282")));
    d = a;
    g["default"] = d;
  },
  98
);
__d(
  "VideoUploadSession",
  [
    "AsyncRequest",
    "GraphQLVideoPublishUtils",
    "SubscriptionsHandler",
    "VideoUploadCrashMonitor",
    "VideoUploadFeatureDetector",
    "VideoUploadFileValidator",
    "VideoUploadGraphQLPostRequestManager",
    "VideoUploadLogger",
    "VideoUploadMetadataParser",
    "VideoUploadPostRequestManager",
    "VideoUploadReceiveRequestManager",
    "VideoUploadRequestContext",
    "VideoUploadStartRequestManager",
    "WaterfallIDGenerator",
    "cr:1661398",
    "cr:909282",
    "getByPath",
    "mediaUploadLogStackTrace",
    "mixin",
  ],
  function (a, b, c, d, e, f) {
    var g = {
      CANCELED: "canceled",
      ABANDONED: "abandoned",
      SHUTDOWN: "shutdown",
    };
    a = (function (a) {
      "use strict";
      babelHelpers.inheritsLoose(c, a);
      function c(c) {
        var d;
        d = a.call(this) || this;
        d.$VideoUploadSession1 = c.source;
        d.$VideoUploadSession2 = c.composer_dialog_version;
        d.$VideoUploadSession3 = c.target_id;
        d.$VideoUploadSession4 = c.logging_delay;
        d.$VideoUploadSession5 = c.silent_file_validation;
        d.$VideoUploadSession6 = c.background_upload;
        d.$VideoUploadSession7 = c.actor_id;
        d.$VideoUploadSession8 = c.composer_entry_point_ref;
        d.$VideoUploadSession9 = c.composer_work_shared_draft_mode;
        d.$VideoUploadSession10 = c.video_publisher_action_source;
        d.$VideoUploadSession11 = c.monitor_crashes;
        d.$VideoUploadSession12 = c.isMultiMediaPost;
        d.$VideoUploadSession13 = c.container_type;
        d.$VideoUploadSession14 = c.number_of_partitions;
        d.$VideoUploadSession15 = c.multi_partitioning_enabled;
        d.$VideoUploadSession16 = c.change_default_chunk_size;
        d.$VideoUploadSession17 = c.has_file_been_replaced
          ? c.has_file_been_replaced
          : !1;
        d.$VideoUploadSession16 &&
          (d.$VideoUploadSession18 = c.client_chunk_size);
        d.$VideoUploadSession19 = c.early_receive;
        d.$VideoUploadSession20 = !1;
        d.$VideoUploadSession21 = c.accept_dimensions_from_player;
        d.$VideoUploadSession22 = c.ad_account_id;
        d.$VideoUploadSession23 = c.waterfall_id;
        d.$VideoUploadSession24 = null;
        d.$VideoUploadSession25 = new (b("VideoUploadFileValidator"))({
          minSize: c.min_size,
          maxSize: c.max_size,
          minLength: c.min_length,
          maxLength: c.max_length,
          minWidth: c.min_width,
          minHeight: c.min_height,
          extensions: c.extensions,
          source: c.source,
          require16to9AspectRatio: c.require_16to9_aspect_ratio,
          minAspectRatio: c.min_aspect_ratio,
          maxAspectRatio: c.max_aspect_ratio,
          acceptDimensionsFromPlayer: c.accept_dimensions_from_player,
        });
        d.$VideoUploadSession26 = b(
          "VideoUploadFeatureDetector"
        ).supportsChunking();
        d.$VideoUploadSession27 = b(
          "VideoUploadFeatureDetector"
        ).supportsFileAPI();
        d.$VideoUploadSession26
          ? ((d.$VideoUploadSession28 = c.parallel_chunk_uploads),
            d.$VideoUploadSession28 &&
              ((d.$VideoUploadSession29 = c.parallel_chunk_upload_filesize),
              (d.$VideoUploadSession30 = c.default_chunk_size)))
          : (d.$VideoUploadSession28 = !1);
        d.$VideoUploadSession31 = c.shutdown_logging_enabled;
        d.$VideoUploadSession32 = d.$VideoUploadSession33(c);
        d.$VideoUploadSession34 = d.$VideoUploadSession35(c);
        if (d.$VideoUploadSession28)
          if (d.$VideoUploadSession15) {
            var e = 0;
            d.$VideoUploadSession36 = [];
            for (e = 0; e < d.$VideoUploadSession14 - 1; e++)
              d.$VideoUploadSession36[e] = d.$VideoUploadSession35(c);
          } else d.$VideoUploadSession36 = d.$VideoUploadSession35(c);
        d.$VideoUploadSession37 = d.$VideoUploadSession38(c);
        d.$VideoUploadSession39 = d.$VideoUploadSession40(c);
        d.$VideoUploadSession41 = c.log_free_local_storage;
        d.$VideoUploadSession42 = null;
        return d;
      }
      var d = c.prototype;
      d.$VideoUploadSession43 = function () {
        this.$VideoUploadSession44 = [];
        this.$VideoUploadSession45 = [];
        this.$VideoUploadSession46 = [];
        this.$VideoUploadSession47 = [];
        this.$VideoUploadSession48 = [];
        var a = 0;
        for (a = 0; a < this.$VideoUploadSession49 - 1; a++)
          this.$VideoUploadSession44.push(!1);
      };
      d.$VideoUploadSession50 = function () {
        var a;
        this.$VideoUploadSession23 == null &&
          (this.$VideoUploadSession23 = b("WaterfallIDGenerator").generate());
        this.$VideoUploadSession51 = new (b("VideoUploadLogger"))({
          actor_id: this.$VideoUploadSession7,
          ad_account_id: this.$VideoUploadSession22,
          source: this.$VideoUploadSession1,
          composer_dialog_version: this.$VideoUploadSession2,
          waterfall_id: this.$VideoUploadSession23,
          target_id: this.$VideoUploadSession3,
          delay: this.$VideoUploadSession4,
          is_chunked_upload: this.$VideoUploadSession26,
          composer_entry_point_ref: this.$VideoUploadSession8,
          composer_work_shared_draft_mode: this.$VideoUploadSession9,
          container_type: this.$VideoUploadSession13,
          has_file_been_replaced: this.$VideoUploadSession17,
          composer_session_id: this.$VideoUploadSession52,
          asset_id:
            (a = this.$VideoUploadSession53) == null
              ? void 0
              : a.getStableAssetID(),
          creative_tools: this.$VideoUploadSession54,
        });
        this.inform("set-waterfall-id", {
          waterfallID: this.$VideoUploadSession23,
        });
      };
      d.createTestLogger = function () {
        this.$VideoUploadSession50();
      };
      d.$VideoUploadSession55 = function () {
        this.$VideoUploadSession51 || this.$VideoUploadSession50();
        return this.$VideoUploadSession51;
      };
      d.getLogger = function () {
        return !this.$VideoUploadSession51 ? null : this.$VideoUploadSession51;
      };
      d.$VideoUploadSession56 = function () {
        var a,
          c = this;
        a =
          b("cr:1661398") == null
            ? void 0
            : (a = b("cr:1661398").VideoUploadRetries) == null
            ? void 0
            : a.createState();
        a != null &&
          (a.addListener("retry-attempted", function (a) {
            var d = a.delay_retry_count,
              e = a.total_retry_count,
              f = a.since_started_ms,
              g = a.retry_context;
            a = a.backoff_ms;
            c.__logEvent(b("VideoUploadLogger").EVENT_RETRY_ATTEMPT, {
              retries: e,
              elapsed_time: f,
              error_trace: g == null ? void 0 : g.location,
              error_code: g == null ? void 0 : g.error_code,
              debug: { delay_retry_count: d, backoff_ms: a },
            });
          }),
          a.addListener("retries-abandoned", function (a) {
            var d = a.delay_retry_count,
              e = a.total_retry_count,
              f = a.since_started_ms,
              g = a.retry_context;
            a = a.abandon_reason;
            c.__logEvent(b("VideoUploadLogger").EVENT_RETRY_ATTEMPT, {
              retries: e,
              elapsed_time: f,
              error: a,
              error_trace: g == null ? void 0 : g.location,
              error_code: g == null ? void 0 : g.error_code,
              debug: { delay_retry_count: d },
            });
          }));
        return a;
      };
      d.start = function (a) {
        var c = this;
        this.$VideoUploadSession57 = null;
        this.$VideoUploadSession58 = null;
        this.$VideoUploadSession59 = null;
        this.$VideoUploadSession60 = !1;
        this.$VideoUploadSession61 = !1;
        this.$VideoUploadSession62 = null;
        this.$VideoUploadSession53 = a;
        this.$VideoUploadSession63 = 0;
        this.$VideoUploadSession64 = !1;
        this.$VideoUploadSession65 = {
          sphericalMetadataXml: null,
          fbSpatialAudioMetadataXml: null,
          ytSa3dMetadataJson: null,
        };
        this.$VideoUploadSession66 = !1;
        this.$VideoUploadSession42 = this.$VideoUploadSession56();
        this.$VideoUploadSession50();
        b("mediaUploadLogStackTrace")({
          waterfallID: this.$VideoUploadSession23,
          sourceType: this.$VideoUploadSession1,
          composerEntryPointRef: this.$VideoUploadSession8,
        });
        this.$VideoUploadSession15 &&
          (this.$VideoUploadSession49 = Math.min(
            this.$VideoUploadSession14,
            Math.ceil(
              this.$VideoUploadSession53.getSize() / this.$VideoUploadSession29
            )
          ));
        this.__logEvent(b("VideoUploadLogger").EVENT_REQUESTED_UPLOADING);
        this.inform("upload-requested");
        a = new (b("VideoUploadMetadataParser"))(
          this.$VideoUploadSession53,
          this.$VideoUploadSession67.bind(this),
          this.$VideoUploadSession21
        );
        a.parse();
        this.$VideoUploadSession41 &&
          navigator.webkitTemporaryStorage &&
          navigator.webkitTemporaryStorage.queryUsageAndQuota(function (a, d) {
            c.__logEvent(
              b("VideoUploadLogger").EVENT_MEASURE_FREE_LOCAL_STORAGE,
              { free_space_in_device: d }
            );
          });
      };
      d.setTargetID = function (a) {
        this.$VideoUploadSession3 = a;
      };
      d.setComposerSessionID = function (a) {
        this.$VideoUploadSession52 = a;
      };
      d.setCreativeTools = function (a) {
        this.$VideoUploadSession54 = a;
      };
      d.post = function (a) {
        this.__logEvent(
          b("VideoUploadLogger").EVENT_STARTED_POST_REQUEST,
          this.$VideoUploadSession24
        );
        this.inform("post-started", a);
        var c = this.__createPostRequestContext(a);
        if (
          b("GraphQLVideoPublishUtils").isGraphQLPublish(
            this.$VideoUploadSession1,
            this.$VideoUploadSession8
          ) &&
          this.$VideoUploadSession39.hasAPISupport(a)
        ) {
          this.$VideoUploadSession39.sendRequest(c);
          this.$VideoUploadSession68 = a;
          return;
        }
        this.$VideoUploadSession37.sendRequest(c);
        this.$VideoUploadSession68 = a;
      };
      d.__createPostRequestContext = function (a) {
        var c = new (b("VideoUploadRequestContext"))();
        this.__setupPostRequestContext(c, a);
        return c;
      };
      d.__setupPostRequestContext = function (a, b) {
        a
          .setMetadata(b)
          .setVideoID(this.$VideoUploadSession57)
          .setTargetID(this.$VideoUploadSession3)
          .setSource(this.$VideoUploadSession1)
          .setComposerDialogVersion(this.$VideoUploadSession2)
          .setComposerWorkSharedDraftMode(this.$VideoUploadSession9)
          .setWaterfallID(this.$VideoUploadSession23)
          .setComposerSessionID(this.$VideoUploadSession52)
          .setSupportsChunking(this.$VideoUploadSession26)
          .setCreatorProduct(this.$VideoUploadSession53.getCreatorProduct())
          .setFile(this.$VideoUploadSession53)
          .setHasFileBeenReplaced(this.$VideoUploadSession17),
          b &&
            (b.spherical &&
              ((this.$VideoUploadSession64 = !0),
              a.setIsSphericalVideo(this.$VideoUploadSession64)),
            b.enable_omnistab &&
              ((this.$VideoUploadSession66 = !0),
              a.setEnableOmnistab(this.$VideoUploadSession66))),
          a.setComposerEntryPointRef &&
            a.setComposerEntryPointRef(this.$VideoUploadSession8);
      };
      d.$VideoUploadSession69 = function (a, d) {
        if (this.$VideoUploadSession60) {
          var e = {
            event_reason: d,
            debug: babelHelpers["extends"](
              {},
              this.__fetchReceiveRequestManagerStateLogData(),
              { is_background_upload: this.$VideoUploadSession6 }
            ),
          };
          d =
            d === g.CANCELED
              ? b("VideoUploadLogger").EVENT_CANCELED_UPLOADING
              : b("VideoUploadLogger").EVENT_ABANDONED_UPLOADING;
          this.$VideoUploadSession70();
          this.$VideoUploadSession6
            ? (this.$VideoUploadSession61 || this.__logEvent(d),
              this.$VideoUploadSession71 &&
                (this.__logEvent(b("VideoUploadLogger").EVENT_CANCELED_FLOW, e),
                (this.$VideoUploadSession71 = !1)))
            : (this.__logEvent(d),
              this.__logEvent(b("VideoUploadLogger").EVENT_CANCELED_FLOW, e));
          this.inform("upload-canceled");
        } else
          a &&
            this.$VideoUploadSession57 &&
            c.deleteVideo(this.$VideoUploadSession57);
      };
      d.cancel = function (a) {
        a === void 0 && (a = !1), this.$VideoUploadSession69(a, g.CANCELED);
      };
      d.abandon = function (a) {
        a === void 0 && (a = !1), this.$VideoUploadSession69(a, g.ABANDONED);
      };
      d.isPostInProgress = function () {
        return this.$VideoUploadSession37.isInProgress();
      };
      d.isInProgress = function () {
        return this.$VideoUploadSession60;
      };
      d.getHasUploadFinished = function () {
        return this.$VideoUploadSession61;
      };
      d.getVideoID = function () {
        return this.$VideoUploadSession57;
      };
      d.getUploadTime = function () {
        return this.$VideoUploadSession72;
      };
      d.getExPartitionNumber = function (a) {
        var b;
        for (b = 0; b < this.$VideoUploadSession49 - 1; b++)
          if (
            a >= this.$VideoUploadSession45[b] &&
            a < this.$VideoUploadSession46[b]
          )
            break;
        return b === this.$VideoUploadSession49 ? -1 : b;
      };
      d.getIsSphericalVideo = function () {
        return this.$VideoUploadSession64 || !1;
      };
      d.getVideoMetadata = function () {
        return this.$VideoUploadSession24 || null;
      };
      d.startFlow = function () {
        if (!this.$VideoUploadSession6 || this.$VideoUploadSession71) return;
        this.__logEvent(b("VideoUploadLogger").EVENT_STARTED_FLOW, {
          is_spherical: this.getIsSphericalVideo() ? "true" : null,
        });
        this.$VideoUploadSession71 = !0;
        this.$VideoUploadSession73 && this.$VideoUploadSession73.flowStarted();
      };
      d.__extractVideoMetadata = function (a) {
        var c;
        a = (c = b("getByPath"))(a, ["streams", "primaryVideo"]);
        c = {
          source_height: c(a, ["height"]),
          source_width: c(a, ["width"]),
          duration: c(a, ["duration"]) * 1e3,
        };
        c.original_video_duration = c.duration;
        return c;
      };
      d.$VideoUploadSession67 = function (a) {
        var c;
        if (this.$VideoUploadSession5) {
          var d = this.$VideoUploadSession25.getValidationErrorMessage(
            this.$VideoUploadSession53,
            a
          );
          d
            ? ((c = {
                error_summary: d.summary,
                error_description: d.description,
              }),
              (d = !1))
            : (d = !0);
        } else
          d = this.$VideoUploadSession25.validate(
            this.$VideoUploadSession53,
            a
          );
        if (!d) {
          this.__logEvent(b("VideoUploadLogger").EVENT_INVALIDATED_UPLOADING);
          this.inform("upload-failed", c);
          return;
        }
        this.$VideoUploadSession24 = this.__extractVideoMetadata(a);
        a &&
          a.format &&
          ((this.$VideoUploadSession64 = a.format.isSpherical),
          a.metadata &&
            ((this.$VideoUploadSession65.sphericalMetadataXml =
              a.metadata.sphericalMetadataXml),
            (this.$VideoUploadSession65.fbSpatialAudioMetadataXml =
              a.metadata.fbSpatialAudioMetadataXml),
            (this.$VideoUploadSession65.ytSa3dMetadataJson =
              a.metadata.ytSa3dMetadataJson)));
        this.$VideoUploadSession6 ||
          this.__logEvent(b("VideoUploadLogger").EVENT_STARTED_FLOW, {
            is_spherical: this.getIsSphericalVideo() ? "true" : null,
          });
        this.$VideoUploadSession74 =
          this.$VideoUploadSession28 &&
          this.$VideoUploadSession53.getSize() >= this.$VideoUploadSession29;
        this.$VideoUploadSession75 = !1;
        this.$VideoUploadSession76 = 0;
        this.$VideoUploadSession77 = this.$VideoUploadSession76;
        this.$VideoUploadSession78 = 0;
        this.$VideoUploadSession15
          ? this.$VideoUploadSession43()
          : (this.$VideoUploadSession44 = !1);
        if (this.$VideoUploadSession74)
          if (this.$VideoUploadSession15) {
            d = 0;
            this.$VideoUploadSession79 = Math.ceil(
              this.$VideoUploadSession53.getSize() / this.$VideoUploadSession49
            );
            var e = this.$VideoUploadSession79,
              f = this.$VideoUploadSession79;
            for (d = 0; d < this.$VideoUploadSession49 - 1; d++)
              (this.$VideoUploadSession45[d] = e),
                (e = Math.min(
                  this.$VideoUploadSession45[d] + f,
                  this.$VideoUploadSession53.getSize()
                )),
                (this.$VideoUploadSession46[d] = e),
                (this.$VideoUploadSession47[d] = this.$VideoUploadSession45[d]),
                (this.$VideoUploadSession48[d] = 0);
          } else
            (this.$VideoUploadSession79 = Math.floor(
              this.$VideoUploadSession53.getSize() / 2
            )),
              (this.$VideoUploadSession45 = this.$VideoUploadSession79),
              (this.$VideoUploadSession47 = this.$VideoUploadSession45),
              (this.$VideoUploadSession48 = 0),
              (this.$VideoUploadSession46 =
                this.$VideoUploadSession53.getSize());
        else this.$VideoUploadSession79 = this.$VideoUploadSession53.getSize();
        d = new (b("VideoUploadRequestContext"))()
          .setFile(this.$VideoUploadSession53)
          .setTargetID(this.$VideoUploadSession3)
          .setSource(this.$VideoUploadSession1)
          .setComposerDialogVersion(this.$VideoUploadSession2)
          .setComposerWorkSharedDraftMode(this.$VideoUploadSession9)
          .setWaterfallID(this.$VideoUploadSession23)
          .setComposerSessionID(this.$VideoUploadSession52)
          .setHasFileBeenReplaced(this.$VideoUploadSession17)
          .setSupportsChunking(this.$VideoUploadSession26)
          .setSupportsFileAPI(this.$VideoUploadSession27)
          .setCreatorProduct(this.$VideoUploadSession53.getCreatorProduct())
          .setPartitionStartOffset(this.$VideoUploadSession76)
          .setPartitionEndOffset(this.$VideoUploadSession79)
          .setRetryState(this.$VideoUploadSession42)
          .setCreativeTools(this.$VideoUploadSession54);
        this.$VideoUploadSession28 &&
          d.setUseParallelChunks(this.$VideoUploadSession28);
        this.$VideoUploadSession64 &&
          (d.setIsSphericalVideo(this.$VideoUploadSession64),
          d.setSphericalMetadata(this.$VideoUploadSession65));
        d.setComposerEntryPointRef &&
          d.setComposerEntryPointRef(this.$VideoUploadSession8);
        d.setVideoPublisherActionSource(this.$VideoUploadSession10);
        this.$VideoUploadSession80();
        this.$VideoUploadSession32.sendRequest(d);
        this.$VideoUploadSession19 &&
          this.$VideoUploadSession16 &&
          this.$VideoUploadSession34.isResumabilityEnabled() &&
          !this.$VideoUploadSession34.isResumableServiceProxyReceiveEnabled() &&
          this.$VideoUploadSession81();
        this.inform("metadata-parsed", a);
      };
      d.$VideoUploadSession33 = function (a) {
        var b = this.$VideoUploadSession26 ? a.chunk_start_uri : a.start_uri;
        b = this.__getVideoUploadStartRequestManager(
          b,
          a.start_max_transport_retries,
          a.start_transport_retry_interval_base,
          a.start_max_transport_retry_timeout,
          a.skip_upload_enabled,
          a.skip_upload_file_size_limit,
          a.start_max_server_retries,
          a.start_server_retry_interval_base
        );
        b.subscribe("request-started", this.$VideoUploadSession82.bind(this));
        b.subscribe("request-finished", this.$VideoUploadSession83.bind(this));
        b.subscribe("request-failed", this.$VideoUploadSession84.bind(this));
        b.subscribe("request-canceled", this.$VideoUploadSession85.bind(this));
        return b;
      };
      d.$VideoUploadSession35 = function (a) {
        var b = this.$VideoUploadSession26
          ? a.chunk_receive_uri
          : a.receive_uri;
        b = this.__getVideoUploadReceiveRequestManager(b, a);
        b.subscribe("request-started", this.$VideoUploadSession86.bind(this));
        b.subscribe(
          "request-progressed",
          this.$VideoUploadSession87.bind(this)
        );
        b.subscribe("request-finished", this.$VideoUploadSession88.bind(this));
        b.subscribe("request-failed", this.$VideoUploadSession89.bind(this));
        b.subscribe("request-canceled", this.$VideoUploadSession90.bind(this));
        b.subscribe("request-timeout", this.$VideoUploadSession91.bind(this));
        b.subscribe("online", this.$VideoUploadSession92.bind(this));
        b.subscribe("offline", this.$VideoUploadSession93.bind(this));
        b.subscribe("resumable-called", this.$VideoUploadSession94.bind(this));
        b.subscribe("resumable-started", this.$VideoUploadSession95.bind(this));
        b.subscribe("resumable-success", this.$VideoUploadSession96.bind(this));
        b.subscribe("resumable-failed", this.$VideoUploadSession97.bind(this));
        return b;
      };
      d.$VideoUploadSession38 = function (a) {
        var b = this.$VideoUploadSession26 ? a.chunk_post_uri : a.post_uri;
        b = this.__getVideoUploadPostRequestManager(b, a);
        b.subscribe(
          "request-finished",
          this.__handlePostRequestFinished.bind(this)
        );
        b.subscribe("request-failed", this.$VideoUploadSession98.bind(this));
        return b;
      };
      d.$VideoUploadSession40 = function (a) {
        a = new (b("VideoUploadGraphQLPostRequestManager"))(
          isNaN(a.post_max_transport_retries)
            ? 0
            : a.post_max_transport_retries,
          isNaN(a.post_transport_retry_interval_base)
            ? 0
            : a.post_transport_retry_interval_base,
          isNaN(a.post_max_server_retries) ? 0 : a.post_max_server_retries,
          isNaN(a.post_server_retry_interval_base)
            ? 0
            : a.post_server_retry_interval_base
        );
        a.subscribe(
          "request-finished",
          this.__handlePostRequestFinished.bind(this)
        );
        a.subscribe("request-failed", this.$VideoUploadSession98.bind(this));
        return a;
      };
      d.$VideoUploadSession82 = function (a, c) {
        this.__logEvent(
          b("VideoUploadLogger").EVENT_STARTED_UPLOADING,
          babelHelpers["extends"](
            { hash_time: c.hash_time, hash_exception: c.hash_exception },
            this.$VideoUploadSession24
          )
        ),
          this.__logEvent(
            b("VideoUploadLogger").EVENT_STARTED_START_REQUEST,
            this.$VideoUploadSession24
          ),
          (this.$VideoUploadSession99 = Date.now()),
          this.inform("upload-started");
      };
      d.$VideoUploadSession81 = function (a) {
        if (!this.$VideoUploadSession20) {
          this.$VideoUploadSession20 = !0;
          a || (a = { video_id: null });
          var b;
          b = this.__createReceiveRequestContext(a, !1);
          this.$VideoUploadSession34.sendRequest(b);
          if (this.$VideoUploadSession74)
            if (this.$VideoUploadSession15) {
              var c = 0;
              for (c = 0; c < this.$VideoUploadSession49 - 1; c++)
                (b = this.__createReceiveRequestContext(a, !0, c)),
                  this.$VideoUploadSession36[c].sendRequest(b);
            } else
              (b = this.__createReceiveRequestContext(a, !0)),
                this.$VideoUploadSession36.sendRequest(b);
        } else this.$VideoUploadSession100();
      };
      d.$VideoUploadSession100 = function () {
        this.$VideoUploadSession34.updateVideoID(this.$VideoUploadSession57);
        if (this.$VideoUploadSession74)
          if (this.$VideoUploadSession15) {
            var a = 0;
            for (a = 0; a < this.$VideoUploadSession49 - 1; a++)
              this.$VideoUploadSession36[a].updateVideoID(
                this.$VideoUploadSession57
              );
          } else
            this.$VideoUploadSession36.updateVideoID(
              this.$VideoUploadSession57
            );
      };
      d.$VideoUploadSession101 = function (a) {
        if (this.$VideoUploadSession42 == null)
          return (
            ((a == null ? void 0 : a.transport_retries) || 0) +
            ((a == null ? void 0 : a.server_retries) || 0) +
            ((a == null ? void 0 : a.timeout_retries) || 0)
          );
        else return this.$VideoUploadSession42.getTotalRetryCount();
      };
      d.$VideoUploadSession83 = function (a, c) {
        this.__logEvent(
          b("VideoUploadLogger").EVENT_PROGRESS_UPLOADING_START_REQUEST,
          {
            retries: this.$VideoUploadSession101(c),
            transport_retries: c.transport_retries,
            hash_time: c.hash_time,
            skip_upload: c.skip_upload ? 1 : null,
          }
        ),
          this.__logEvent(
            b("VideoUploadLogger").EVENT_FINISHED_START_REQUEST,
            babelHelpers["extends"](
              { video_id: c.video_id },
              this.$VideoUploadSession24
            )
          ),
          (this.$VideoUploadSession57 = c.video_id),
          (this.$VideoUploadSession58 = c.upload_session_id),
          (this.$VideoUploadSession59 = c.fb_region),
          (this.$VideoUploadSession102 = c.skip_upload),
          !c.skip_upload
            ? this.$VideoUploadSession81(c)
            : (this.$VideoUploadSession103(),
              this.inform("upload-progressed", {
                start_offset: 0,
                end_offset: this.$VideoUploadSession53.getSize(),
                file_size: this.$VideoUploadSession53.getSize(),
                sent_bytes: this.$VideoUploadSession53.getSize(),
                video_id: c.video_id,
                skip_upload: c.skip_upload,
              }),
              this.$VideoUploadSession6 && this.__logFinishedUploading(),
              this.inform("upload-finished", {
                start_offset: 0,
                end_offset: this.$VideoUploadSession53.getSize(),
                video_id: c.video_id,
                is_spherical_video: this.$VideoUploadSession64,
              }));
      };
      d.__fetchReceiveRequestManagerStateLogData = function () {
        var a = {};
        this.$VideoUploadSession34 != null &&
          (this.$VideoUploadSession34.appendStateLogData(a, "requestManager_"),
          (a.request_manager_state = a.requestManager_last_log_state));
        if (this.$VideoUploadSession15) {
          var b = 0;
          for (b = 0; b < this.$VideoUploadSession49 - 1; b++)
            this.$VideoUploadSession36[b] != null &&
              this.$VideoUploadSession36[b].appendStateLogData(
                a,
                "requestManagerEx_" + b.toString()
              );
        } else
          this.$VideoUploadSession36 != null &&
            this.$VideoUploadSession36.appendStateLogData(
              a,
              "requestManagerEx_"
            );
        return a;
      };
      d.__createReceiveRequestContext = function (a, c, d) {
        c || (c = !1);
        var e = new (b("VideoUploadRequestContext"))();
        this.$VideoUploadSession15
          ? this.__setupReceiveRequestContext(e, a, c, d)
          : this.__setupReceiveRequestContext(e, a, c);
        return e;
      };
      d.__setupReceiveRequestContext = function (a, b, c, d) {
        var e, f, g;
        !c
          ? ((c = this.$VideoUploadSession76),
            (e = this.$VideoUploadSession79),
            this.$VideoUploadSession16
              ? ((f = this.$VideoUploadSession76),
                (g = this.$VideoUploadSession18
                  ? Math.min(
                      this.$VideoUploadSession18,
                      this.$VideoUploadSession79
                    )
                  : this.$VideoUploadSession79))
              : ((f = b.start_offset), (g = b.end_offset)))
          : this.$VideoUploadSession15
          ? (this.$VideoUploadSession16 &&
              ((this.$VideoUploadSession30 =
                this.$VideoUploadSession46[d] - this.$VideoUploadSession45[d]),
              (this.$VideoUploadSession30 = this.$VideoUploadSession18
                ? Math.min(
                    this.$VideoUploadSession18,
                    this.$VideoUploadSession30
                  )
                : this.$VideoUploadSession30)),
            (c = this.$VideoUploadSession45[d]),
            (e = this.$VideoUploadSession46[d]),
            (f = this.$VideoUploadSession45[d]),
            (g =
              this.$VideoUploadSession45[d] + this.$VideoUploadSession30 >=
              this.$VideoUploadSession46[d]
                ? this.$VideoUploadSession46[d]
                : this.$VideoUploadSession45[d] + this.$VideoUploadSession30))
          : (this.$VideoUploadSession16 &&
              ((this.$VideoUploadSession30 =
                this.$VideoUploadSession46 - this.$VideoUploadSession45),
              (this.$VideoUploadSession30 = this.$VideoUploadSession18
                ? Math.min(
                    this.$VideoUploadSession18,
                    this.$VideoUploadSession30
                  )
                : this.$VideoUploadSession30)),
            (c = this.$VideoUploadSession45),
            (e = this.$VideoUploadSession46),
            (f = this.$VideoUploadSession45),
            (g =
              this.$VideoUploadSession45 + this.$VideoUploadSession30 >=
              this.$VideoUploadSession46
                ? this.$VideoUploadSession46
                : this.$VideoUploadSession45 + this.$VideoUploadSession30));
        a.setFile(this.$VideoUploadSession53)
          .setVideoID(b.video_id)
          .setXPVAssetID(b.xpv_asset_id)
          .setIsXPVSingleProd(b.is_xpv_single_prod)
          .setUploadSessionID(b.upload_session_id)
          .setFbRegion(b.fb_region)
          .setStartOffset(f)
          .setEndOffset(g)
          .setPartitionStartOffset(c)
          .setPartitionEndOffset(e)
          .setPartitionNo(d)
          .setTargetID(this.$VideoUploadSession3)
          .setSource(this.$VideoUploadSession1)
          .setComposerDialogVersion(this.$VideoUploadSession2)
          .setComposerWorkSharedDraftMode(this.$VideoUploadSession9)
          .setWaterfallID(this.$VideoUploadSession23)
          .setComposerSessionID(this.$VideoUploadSession52)
          .setSupportsChunking(this.$VideoUploadSession26)
          .setHasFileBeenReplaced(this.$VideoUploadSession17)
          .setRetryState(this.$VideoUploadSession42);
        this.$VideoUploadSession28 &&
          a.setUseParallelChunks(this.$VideoUploadSession28);
        a.setComposerEntryPointRef &&
          a.setComposerEntryPointRef(this.$VideoUploadSession8);
        this.$VideoUploadSession18 &&
          a.setClientChunkSize(this.$VideoUploadSession18);
      };
      d.$VideoUploadSession84 = function (a, c) {
        a = this.__getLogErrorData(c);
        this.__logEvent(b("VideoUploadLogger").EVENT_FAILED_START_REQUEST, a);
        this.__logEvent(b("VideoUploadLogger").EVENT_FAILED_UPLOADING, a);
        a = c.error_is_transient
          ? b("VideoUploadLogger").EVENT_RESIGNED_FLOW
          : b("VideoUploadLogger").EVENT_FAILED_FLOW;
        this.$VideoUploadSession6
          ? this.$VideoUploadSession71 &&
            (this.__logEvent(a), (this.$VideoUploadSession71 = !1))
          : this.__logEvent(a);
        this.$VideoUploadSession103();
        this.$VideoUploadSession104();
        this.inform("upload-failed", c);
      };
      d.$VideoUploadSession85 = function (a) {
        this.__logEvent(b("VideoUploadLogger").EVENT_CANCELED_START_REQUEST);
      };
      d.$VideoUploadSession86 = function (a, c) {
        this.__logEvent(b("VideoUploadLogger").EVENT_STARTED_RECEIVE_REQUEST, {
          debug: c.debug,
        }),
          !c.start_offset &&
            !c.transport_retries &&
            !c.server_retries &&
            this.__logEvent(
              b("VideoUploadLogger").EVENT_STARTED_SENDING_BYTES,
              {
                total_bytes: this.$VideoUploadSession53.getSize(),
                upload_domain: c.upload_domain,
                debug: c.debug,
              }
            ),
          this.$VideoUploadSession26 &&
            this.__logEvent(
              b("VideoUploadLogger").EVENT_STARTED_SENDING_CHUNK_BYTES,
              {
                start_offset: c.start_offset,
                total_bytes: c.end_offset - c.start_offset,
                retries: this.$VideoUploadSession101(c),
                transport_retries: c.transport_retries,
                server_retries: c.server_retries,
                upload_speed: c.upload_speed,
                request_manager_state: c.request_manager_state,
                upload_domain: c.upload_domain,
                debug: c.debug,
              }
            );
      };
      d.$VideoUploadSession87 = function (a, b) {
        if (b.start_offset < this.$VideoUploadSession79)
          (this.$VideoUploadSession77 = b.start_offset),
            (this.$VideoUploadSession78 = b.sent_bytes);
        else if (this.$VideoUploadSession15) {
          a = this.getExPartitionNumber(b.start_offset);
          a > -1 &&
            ((this.$VideoUploadSession47[a] = b.start_offset),
            (this.$VideoUploadSession48[a] = b.sent_bytes));
        } else
          (this.$VideoUploadSession47 = b.start_offset),
            (this.$VideoUploadSession48 = b.sent_bytes);
        b.start_offset = this.$VideoUploadSession77;
        b.sent_bytes = this.$VideoUploadSession78;
        if (this.$VideoUploadSession74)
          if (this.$VideoUploadSession15)
            for (a = 0; a < this.$VideoUploadSession49 - 1; a++)
              (b.start_offset +=
                this.$VideoUploadSession47[a] - this.$VideoUploadSession45[a]),
                (b.sent_bytes += this.$VideoUploadSession48[a]);
          else
            (b.start_offset +=
              this.$VideoUploadSession47 - this.$VideoUploadSession45),
              (b.sent_bytes += this.$VideoUploadSession48);
        a = Math.min(b.start_offset + b.sent_bytes, b.file_size);
        a > this.$VideoUploadSession63 &&
          ((this.$VideoUploadSession63 = a),
          this.inform("upload-progressed", b));
      };
      d.$VideoUploadSession88 = function (a, c) {
        this.__logEvent(b("VideoUploadLogger").EVENT_FINISHED_RECEIVE_REQUEST, {
          debug: c.debug,
        });
        this.$VideoUploadSession26 &&
          this.__logEvent(
            b("VideoUploadLogger").EVENT_FINISHED_SENDING_CHUNK_BYTES,
            {
              start_offset: c.start_offset,
              sent_bytes: c.end_offset - c.start_offset,
              retries: this.$VideoUploadSession101(c),
              transport_retries: c.transport_retries,
              server_retries: c.server_retries,
              upload_speed: c.upload_speed,
              request_manager_state: c.request_manager_state,
              upload_domain: c.upload_domain,
              debug: c.debug,
            }
          );
        a = !1;
        if (c.start_offset < this.$VideoUploadSession79)
          this.$VideoUploadSession75 =
            c.end_offset >= this.$VideoUploadSession79;
        else if (this.$VideoUploadSession15) {
          var d;
          d = this.getExPartitionNumber(c.start_offset);
          if (d === -1) {
            var e = {
              error_summary: "Invalid offset",
              error_description:
                "Offset doesn't fall in any exPartition range.",
            };
            this.__logEvent(b("VideoUploadLogger").EVENT_FAILED_UPLOADING);
            this.inform("upload-failed", e);
            return;
          }
          this.$VideoUploadSession44[d] =
            c.end_offset >= this.$VideoUploadSession46[d];
        } else
          this.$VideoUploadSession44 =
            c.end_offset >= this.$VideoUploadSession46;
        if (this.$VideoUploadSession15)
          for (d = 0; d < this.$VideoUploadSession49 - 1; d++)
            if (this.$VideoUploadSession44[d] === !1) {
              a = !1;
              break;
            } else a = !0;
        else a = this.$VideoUploadSession44;
        (!this.$VideoUploadSession27 ||
          (this.$VideoUploadSession75 && (!this.$VideoUploadSession74 || a))) &&
          (this.__logEvent(
            b("VideoUploadLogger").EVENT_FINISHED_SENDING_BYTES,
            {
              sent_bytes: this.$VideoUploadSession53.getSize(),
              upload_domain: c.upload_domain,
              debug: c.debug,
            }
          ),
          (this.$VideoUploadSession72 =
            Date.now() - this.$VideoUploadSession99),
          this.$VideoUploadSession6 && this.__logFinishedUploading(),
          (c.video_id = this.$VideoUploadSession57),
          (c.is_spherical_video = this.$VideoUploadSession64),
          this.inform("upload-finished", c),
          this.$VideoUploadSession12 &&
            (this.$VideoUploadSession6 || this.__logFinishedUploading(),
            this.__logEvent(b("VideoUploadLogger").EVENT_FINISHED_FLOW, c),
            (this.$VideoUploadSession71 = !1),
            this.$VideoUploadSession104(),
            this.inform("multimedia-upload-finished", c)));
      };
      d.$VideoUploadSession89 = function (a, c) {
        a = this.__getLogErrorData(c);
        this.__logEvent(b("VideoUploadLogger").EVENT_FAILED_RECEIVE_REQUEST, a);
        this.$VideoUploadSession26 &&
          this.__logEvent(
            b("VideoUploadLogger").EVENT_FAILED_SENDING_CHUNK_BYTES,
            a
          );
        if (this.$VideoUploadSession60) {
          this.__logEvent(b("VideoUploadLogger").EVENT_FAILED_SENDING_BYTES, a);
          this.__logEvent(b("VideoUploadLogger").EVENT_FAILED_UPLOADING, a);
          var d = c.error_is_transient
            ? b("VideoUploadLogger").EVENT_RESIGNED_FLOW
            : b("VideoUploadLogger").EVENT_FAILED_FLOW;
          this.$VideoUploadSession6
            ? this.$VideoUploadSession71 &&
              (this.__logEvent(d, a), (this.$VideoUploadSession71 = !1))
            : this.__logEvent(d, a);
        }
        this.$VideoUploadSession104();
        this.inform("upload-failed", c);
      };
      d.$VideoUploadSession90 = function (a) {
        this.$VideoUploadSession26
          ? this.__logEvent(
              b("VideoUploadLogger").EVENT_CANCELED_SENDING_CHUNK_BYTES
            )
          : this.__logEvent(
              b("VideoUploadLogger").EVENT_CANCELED_SENDING_BYTES
            );
      };
      d.$VideoUploadSession91 = function (a, c) {
        a = {
          start_offset: c.start_offset,
          sent_bytes: c.end_offset - c.start_offset,
          retries: this.$VideoUploadSession101(c),
          transport_retries: c.transport_retries,
          server_retries: c.server_retries,
          timeout_retries: c.timeout_retries,
          upload_speed: c.upload_speed,
          request_manager_state: c.request_manager_state,
          debug: c.debug,
        };
        this.__logEvent(
          b("VideoUploadLogger").EVENT_TIMEOUT_SENDING_CHUNK_BYTES,
          a
        );
      };
      d.$VideoUploadSession92 = function (a, b) {
        this.inform("online", b);
      };
      d.$VideoUploadSession93 = function (a, b) {
        this.inform("offline", b);
      };
      d.$VideoUploadSession94 = function (a, c) {
        this.__logEvent(b("VideoUploadLogger").EVENT_RESUMABLE_CALLED, c);
      };
      d.$VideoUploadSession95 = function (a, c) {
        this.__logEvent(b("VideoUploadLogger").EVENT_RESUMABLE_STARTED, c);
      };
      d.$VideoUploadSession96 = function (a, c) {
        this.__logEvent(b("VideoUploadLogger").EVENT_RESUMABLE_SUCCESS, c);
      };
      d.$VideoUploadSession97 = function (a, c) {
        this.__logEvent(b("VideoUploadLogger").EVENT_RESUMABLE_FAILED, c);
      };
      d.__handlePostRequestFinished = function (a, c) {
        this.__logEvent(
          b("VideoUploadLogger").EVENT_FINISHED_POST_REQUEST,
          babelHelpers["extends"](
            { video_id: this.$VideoUploadSession57 },
            this.$VideoUploadSession24
          )
        );
        c.video_id || (c.video_id = this.$VideoUploadSession57);
        this.$VideoUploadSession6 || this.__logFinishedUploading();
        this.__logEvent(b("VideoUploadLogger").EVENT_FINISHED_FLOW);
        this.$VideoUploadSession71 = !1;
        this.$VideoUploadSession104();
        a = babelHelpers["extends"]({}, c, this.$VideoUploadSession68);
        this.inform("post-finished", a);
      };
      d.__logFinishedUploading = function () {
        this.__logEvent(
          b("VideoUploadLogger").EVENT_FINISHED_UPLOADING,
          babelHelpers["extends"](
            {
              elapsed_time: this.$VideoUploadSession72,
              skip_upload: this.$VideoUploadSession102 ? 1 : null,
              video_id: this.$VideoUploadSession57,
            },
            this.$VideoUploadSession24
          )
        ),
          (this.$VideoUploadSession61 = !0);
      };
      d.$VideoUploadSession98 = function (a, c) {
        a = this.__getLogErrorData(c);
        this.__logEvent(b("VideoUploadLogger").EVENT_FAILED_POST_REQUEST, a);
        if (this.$VideoUploadSession60) {
          this.__logEvent(b("VideoUploadLogger").EVENT_FAILED_UPLOADING, a);
          var d = c.error_is_transient
            ? b("VideoUploadLogger").EVENT_RESIGNED_FLOW
            : b("VideoUploadLogger").EVENT_FAILED_FLOW;
          this.__logEvent(d, a);
        }
        this.$VideoUploadSession104();
        this.inform("post-failed", c);
      };
      d.$VideoUploadSession103 = function () {
        this.$VideoUploadSession34.cancelRequest();
        if (this.$VideoUploadSession74)
          if (this.$VideoUploadSession15) {
            var a = 0;
            for (a = 0; a < this.$VideoUploadSession49 - 1; a++)
              this.$VideoUploadSession36[a].cancelRequest();
          } else this.$VideoUploadSession36.cancelRequest();
        this.$VideoUploadSession20 = !1;
      };
      d.$VideoUploadSession70 = function () {
        this.$VideoUploadSession32.cancelRequest(),
          this.$VideoUploadSession103(),
          this.$VideoUploadSession104(),
          this.$VideoUploadSession57 &&
            (c.deleteVideo(this.$VideoUploadSession57),
            (this.$VideoUploadSession57 = null),
            (this.$VideoUploadSession58 = null),
            (this.$VideoUploadSession59 = null));
      };
      d.$VideoUploadSession80 = function () {
        var a = this;
        this.$VideoUploadSession60 = !0;
        this.$VideoUploadSession31 &&
          ((this.$VideoUploadSession62 = new (b("SubscriptionsHandler"))()),
          this.$VideoUploadSession62.addSubscriptions(
            this.$VideoUploadSession55().postOnShutdown(function () {
              if (a.$VideoUploadSession60) {
                var c = {
                  event_reason: g.SHUTDOWN,
                  debug: babelHelpers["extends"](
                    {},
                    a.__fetchReceiveRequestManagerStateLogData(),
                    { is_background_upload: a.$VideoUploadSession6 }
                  ),
                };
                a.$VideoUploadSession6
                  ? a.$VideoUploadSession71 &&
                    a.__logEvent(b("VideoUploadLogger").EVENT_CANCELED_FLOW, c)
                  : a.__logEvent(b("VideoUploadLogger").EVENT_CANCELED_FLOW, c);
                a.inform("upload-canceled");
              }
            })
          ));
        this.$VideoUploadSession11 &&
          ((this.$VideoUploadSession73 = new (b("VideoUploadCrashMonitor"))(
            this.$VideoUploadSession23,
            this.$VideoUploadSession7,
            this.$VideoUploadSession1,
            this.$VideoUploadSession3,
            this.$VideoUploadSession4,
            this.$VideoUploadSession26,
            this.$VideoUploadSession8,
            !this.$VideoUploadSession6 || this.$VideoUploadSession71
          )),
          this.$VideoUploadSession73.startSession());
      };
      d.$VideoUploadSession104 = function () {
        (this.$VideoUploadSession60 = !1),
          this.$VideoUploadSession62 &&
            (this.$VideoUploadSession62.release(),
            (this.$VideoUploadSession62 = null)),
          this.$VideoUploadSession73 &&
            (this.$VideoUploadSession73.endSession(),
            (this.$VideoUploadSession73 = null));
      };
      d.__getLogErrorData = function (a) {
        return {
          error: a.error_summary,
          error_code: a.error_code,
          error_description: a.error_description,
          retries: this.$VideoUploadSession101(a),
          transport_retries: a.transport_retries,
          server_retries: a.server_retries,
          request_manager_state: a.request_manager_state,
          debug: a.debug,
        };
      };
      d.__logEvent = function (a, b) {
        (b = b || {}),
          this.$VideoUploadSession53 &&
            ((b.file_size = this.$VideoUploadSession53.getSize()),
            (b.file_extension = this.$VideoUploadSession53.getExtension()),
            (b.sent_bytes = this.$VideoUploadSession63)),
          this.$VideoUploadSession55().logEvent(a, b);
      };
      d.__getVideoUploadStartRequestManager = function (
        a,
        c,
        d,
        e,
        f,
        g,
        h,
        i
      ) {
        return new (b("VideoUploadStartRequestManager"))(
          a,
          c,
          d,
          e,
          f,
          g,
          h,
          i
        );
      };
      d.__getVideoUploadReceiveRequestManager = function (a, c) {
        return new (b("VideoUploadReceiveRequestManager"))(
          a,
          c.max_transport_retries,
          c.max_transport_retry_timeout,
          c.max_server_retries,
          c.response_timeout_enabled,
          c.max_response_timeout_retries,
          c.response_timeout_speed_variation_factor_ppt,
          c.transport_retry_interval_base,
          c.server_retry_interval_base,
          c.receive_errors_force_retry,
          c.access_token,
          c.resumability_enabled,
          c.resumability_async_enabled,
          c.resumable_service_name,
          c.resumable_service_domain,
          c.datr,
          c.resumability_min_file_size,
          c.resumable_service_proxy_receive,
          c.resumable_service_send_media_info,
          c.resumable_service_send_file_size,
          c.resumable_reset_transport_retries_on_progress,
          c.traffic_tracing_enabled,
          c.traffic_tracing_min_file_size
        );
      };
      d.__getVideoUploadPostRequestManager = function (a, c) {
        return new (b("VideoUploadPostRequestManager"))(
          a,
          c.post_max_transport_retries,
          c.post_transport_retry_interval_base,
          c.post_max_server_retries,
          c.post_server_retry_interval_base
        );
      };
      c.deleteVideo = function (a) {
        a = new (b("AsyncRequest"))("/ajax/video/actions/delete").setData({
          fbid: a,
          redirect: !1,
        });
        a.setErrorHandler(function () {});
        a.send();
      };
      return c;
    })(b("mixin")(b("cr:909282")));
    e.exports = a;
  },
  null
);
__d(
  "VideoUploader",
  [
    "FBLogger",
    "MediaUploadVUShim",
    "VideoUploadCrashMonitor",
    "VideoUploadSession",
    "cr:909282",
    "mixin",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b) {
        var d;
        d = a.call(this) || this;
        d.abandon = function (a) {
          a === void 0 && (a = !1);
          var b = d.getVideoID();
          d.$VideoUploader2
            ? d.$VideoUploader2.abandon(a)
            : a && b && c("VideoUploadSession").deleteVideo(b);
          d.reset();
        };
        d.$VideoUploader1 = b;
        d.$VideoUploader2 = null;
        d.$VideoUploader3 = null;
        d.$VideoUploader4 = b.waterfall_id == null ? null : b.waterfall_id;
        d.$VideoUploader5 = d.$VideoUploader1.ad_account_id;
        b.monitor_crashes &&
          ((d.$VideoUploader6 = new (c("VideoUploadCrashMonitor"))()),
          d.$VideoUploader6.logKnownCrashes());
        return d;
      }
      var d = b.prototype;
      d.setComposerSessionID = function (a) {
        (this.$VideoUploader7 = a),
          this.$VideoUploader2 && this.$VideoUploader2.setComposerSessionID(a);
      };
      d.getLogger = function () {
        if (!this.$VideoUploader2) return;
        if (this.$VideoUploader2.getLogger)
          return this.$VideoUploader2.getLogger();
      };
      d.upload = function (a, b) {
        var c = this;
        if (this.$VideoUploader2) return;
        var d = this.__getVideoUploadSession(this.$VideoUploader1);
        d.setComposerSessionID(this.$VideoUploader7);
        (b == null ? void 0 : b.creativeTools) != null &&
          d.setCreativeTools(
            JSON.stringify(b == null ? void 0 : b.creativeTools)
          );
        d.subscribe(
          this.__getEventsWhichShouldListenFromSession(),
          function (a, b) {
            return c.$VideoUploader8(a, b);
          }
        );
        this.$VideoUploader2 = d;
        d.start(a);
      };
      d.__getVideoUploadSession = function (a) {
        try {
          var b = c("MediaUploadVUShim").createSession(a);
          if (b == null) return new (c("VideoUploadSession"))(a);
          else return b;
        } catch (b) {
          c("FBLogger")("media_upload")
            .catching(b)
            .warn("Failed to create shim video upload session");
          return new (c("VideoUploadSession"))(a);
        }
      };
      d.__getEventsWhichShouldListenFromSession = function () {
        return [
          "upload-requested",
          "upload-started",
          "upload-progressed",
          "upload-finished",
          "upload-failed",
          "upload-canceled",
          "post-started",
          "post-finished",
          "post-failed",
          "online",
          "offline",
          "metadata-parsed",
          "set-waterfall-id",
        ];
      };
      d.postUserRequest = function () {
        if (!this.$VideoUploader2) return;
        this.$VideoUploader2.startFlow && this.$VideoUploader2.startFlow();
      };
      d.setTargetID = function (a) {
        if (this.$VideoUploader2 == null) return;
        this.$VideoUploader2.setTargetID(a);
      };
      d.setHasFileBeenReplaced = function (a) {
        this.$VideoUploader1.has_file_been_replaced = a;
      };
      d.post = function (a) {
        if (!this.$VideoUploader2) return;
        this.$VideoUploader2.post(a);
      };
      d.getVideoID = function () {
        this.$VideoUploader2 &&
          (this.$VideoUploader3 = this.$VideoUploader2.getVideoID());
        return this.$VideoUploader3;
      };
      d.getVideoMetadataFromSession = function () {
        if (this.$VideoUploader2)
          return this.$VideoUploader2.getVideoMetadata();
      };
      d.cancel = function (a) {
        a === void 0 && (a = !1);
        var b = this.getVideoID();
        this.$VideoUploader2
          ? this.$VideoUploader2.cancel(a)
          : a && b && c("VideoUploadSession").deleteVideo(b);
        this.reset();
      };
      d.reset = function () {
        this.$VideoUploader2 && (this.$VideoUploader3 = this.getVideoID()),
          (this.$VideoUploader2 = null);
      };
      d.getUploadSession = function () {
        return this.$VideoUploader2;
      };
      d.getLoggerData = function () {
        return {
          waterfall_id: this.$VideoUploader2
            ? this.$VideoUploader2.$VideoUploader4
            : null,
          actor_id: this.$VideoUploader1.actor_id,
          target_id: this.$VideoUploader1.target_id,
          target_type: this.$VideoUploader1.target_type,
          composer_entry_point_ref:
            this.$VideoUploader1.composer_entry_point_ref,
        };
      };
      d.isPostInProgress = function () {
        return (
          !!this.$VideoUploader2 && this.$VideoUploader2.isPostInProgress()
        );
      };
      d.isSessionInProgress = function () {
        return !!this.$VideoUploader2 && this.$VideoUploader2.isInProgress();
      };
      d.isSessionExist = function () {
        return !!this.$VideoUploader2;
      };
      d.getUploadParameters = function () {
        return this.$VideoUploader1;
      };
      d.__getSession = function () {
        return this.$VideoUploader2;
      };
      d.__getEventsForWhichSessionShouldBeSetToNull = function () {
        return ["upload-failed", "post-finished", "multimedia-upload-finished"];
      };
      d.$VideoUploader8 = function (a, b) {
        this.__getEventsForWhichSessionShouldBeSetToNull().includes(a) &&
          this.reset(),
          this.__delegateEvent(a, b);
      };
      d.__delegateEvent = function (a, b) {
        this.inform(a, b);
      };
      return b;
    })(c("mixin")(b("cr:909282")));
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerVideoXUploader",
  [
    "invariant",
    "Arbiter",
    "DOM",
    "MultimediaUploadProcessingDialog.react",
    "PagesComposerContextUtils",
    "PagesComposerUtils",
    "PhotosUploadID",
    "ReactComposerEvents",
    "ReactComposerMediaFilterUtils",
    "ReactComposerMediaUploadActionType",
    "ReactComposerMediaUploadActions",
    "ReactComposerMediaUploadStore",
    "ReactComposerMediaUploadType",
    "ReactComposerMediaUtils",
    "ReactLegacyShim_DEPRECATED",
    "Run",
    "StickyUploadBootloader",
    "SubscriptionsHandler",
    "VideoUploadFile",
    "VideoUploadFlowNotifier",
    "VideoUploadLogger",
    "VideoUploadProgressBar",
    "VideoUploader",
    "ifRequired",
    "react",
    "throttle",
  ],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react"),
      j = 250;
    a = (function () {
      function a(a) {
        var b = this;
        this.$14 = function () {
          var a = b.$4,
            e = a.actor_id;
          a = a.target_id;
          !!e &&
            !!a &&
            b.$5 > 0 &&
            d("PagesComposerContextUtils").isPageAdminPostingInPage(
              String(e),
              String(b.$1),
              String(a)
            ) &&
            d("PagesComposerUtils").logVideoUploadFunnelEvents(
              b.$1,
              "video_post_success"
            );
          b.$13.notifyOnPostAction({
            action: d("VideoUploadFlowNotifier").VideoPostActions
              .POST_SUCCESSFUL,
          });
          b.$26().logEvent(c("VideoUploadLogger").EVENT_FINISHED_FLOW_EXP1);
          e = c("DOM").create("div");
          c("DOM").appendContent(document.body, e);
          a = b.$5 > 0 && !b.$11;
          c("ifRequired")(
            "ReactComposerOptimisticPostingStore",
            function (c) {
              c.hadOptimisticallyPosted(b.$1) && (a = !1);
            },
            function () {}
          );
          a &&
            d("ReactLegacyShim_DEPRECATED").render(
              i.jsx(c("MultimediaUploadProcessingDialog.react"), {
                numOfVideos: b.$5,
                isWorkSharedDraft:
                  b.$3.uploaderParams.composer_work_shared_draft_mode ===
                  "drafter_creating",
                actor_id: b.$3.uploaderParams.actor_id,
              }),
              e
            );
        };
        this.$16 = function () {
          b.$13.notifyOnPostAction({
            action: d("VideoUploadFlowNotifier").VideoPostActions
              .POST_USER_REQUESTED,
          });
        };
        this.$17 = function () {
          b.$13.notifyOnPostAction({
            action: d("VideoUploadFlowNotifier").VideoPostActions.POST_FAILED,
          });
        };
        this.$15 = function () {
          b.$13.notifyOnPostAction({
            action: d("VideoUploadFlowNotifier").VideoPostActions
              .POST_USER_REQUESTED,
          }),
            b.$26().logEvent(c("VideoUploadLogger").EVENT_STARTED_FLOW_EXP1),
            (b.$5 = c(
              "ReactComposerMediaUploadStore"
            ).getNonPrefillVideoUploadsCount(b.$1));
        };
        this.$3 = a;
        this.$2 = new (c("SubscriptionsHandler"))();
        this.$5 = 0;
        this.$6 = new Map();
        this.$7 = new Set();
        this.$8 = !1;
        this.$11 = !1;
        a.composerID || h(0, 1443);
        a.uploaderParams || h(0, 1444);
        this.$2.addSubscriptions(
          c("Arbiter").subscribe(
            c("ReactComposerEvents").POST_SUCCEEDED + a.composerID,
            c("throttle")(this.$14, j, this)
          ),
          c("Arbiter").subscribe(
            c("ReactComposerEvents").POST_STARTED + a.composerID,
            c("throttle")(this.$15, j, this)
          ),
          c("Arbiter").subscribe(
            c("ReactComposerEvents").OPTIMISTIC_POST_STARTED + a.composerID,
            c("throttle")(this.$16, j, this)
          ),
          c("Arbiter").subscribe(
            c("ReactComposerEvents").POST_FAILED + a.composerID,
            c("throttle")(this.$17, j, this)
          )
        );
        this.$1 = a.composerID;
        this.$4 = a.uploaderParams;
        this.$12 = (a = a.isPageAdminVideoUpload) != null ? a : !1;
        this.$13 = d("VideoUploadFlowNotifier").createVideoUploadFlowNotifier({
          composer_entry_point_ref: this.$4.composer_entry_point_ref,
          source: this.$4.source,
          target_id: this.$4.target_id,
          target_type: this.$4.target_type,
          extended_flow_logging_enabled: this.$4.extended_flow_logging_enabled,
          cancel_on_leave: !0,
        });
        d("Run").onLeave(function () {
          return b.$18();
        });
        d("Run").onUnload(function () {
          return b.$18();
        });
      }
      var e = a.prototype;
      e.cancelUploads = function () {
        this.$18(),
          this.$13.notifyOnPostAction({
            action: d("VideoUploadFlowNotifier").VideoPostActions
              .POST_USER_CANCELED,
          });
      };
      e.$18 = function () {
        var a = this;
        this.$7.forEach(function (b) {
          var c = b.uploadID;
          a.$7["delete"](b);
          b = a.$6.get(c);
          b && b.abandon();
        });
        this.$8 = !1;
      };
      e.upload = function (a) {
        var b = this;
        a.forEach(function (a) {
          if (!d("ReactComposerMediaFilterUtils").hasVideos([a.name])) return;
          a.uploadID || (a.uploadID = d("PhotosUploadID").getNewID());
          b.$19(a);
        });
        a = a.find(function (a) {
          return d("ReactComposerMediaFilterUtils").hasVideos([a.name]);
        });
        !this.$8 && a && this.uploadVideo(a);
      };
      e.uploadVideo = function (a) {
        var b = this;
        if (!a) return;
        this.$8 = !0;
        var e = JSON.parse(JSON.stringify(this.$4));
        e.isMultiMediaPost = !0;
        var f = new (c("VideoUploader"))(e);
        this.$6.set(a.uploadID, f);
        e = c("VideoUploadFile").fromFile(a);
        e.getCreatorProduct() == 4 && (this.$11 = !0);
        this.$2.addSubscriptions(
          f.subscribe("metadata-parsed", this.$20.bind(this, a)),
          f.subscribe("upload-started", this.$21.bind(this, a)),
          f.subscribe("upload-progressed", this.$22.bind(this, a)),
          f.subscribe("upload-failed", this.$23.bind(this, a)),
          f.subscribe("upload-finished", this.$24.bind(this, a)),
          f.subscribe("set-waterfall-id", this.$25.bind(this, a))
        );
        this.$12 &&
          this.$2.addSubscriptions(
            f.subscribe(
              "upload-finished",
              d("PagesComposerUtils").logVideoUploadFunnelEvents.bind(
                this,
                this.$1,
                "video_upload_finished"
              )
            )
          );
        var g = a.uploadID;
        d("StickyUploadBootloader").loadAPI(function (a) {
          var d = c("ReactComposerMediaUploadStore").getMediaUpload(b.$1, g);
          d && d.stickyUploadItemID && a.setUploader(d.stickyUploadItemID, f);
        });
        try {
          this.$13.registerVideoUpload(f, g), f.upload(e);
        } catch (a) {
          throw a;
        }
      };
      e.cancelUpload = function (a) {
        var b = this.$6.get(a);
        if (b) {
          b.cancel();
          b.reset();
          this.$6["delete"](a);
          if (this.$7.size > 0) {
            b = this.$7.values().next().value;
            this.uploadVideo(b);
          } else this.$8 = !1;
        }
        this.deleteUpload(a);
      };
      e.deleteUpload = function (a) {
        var b = this;
        this.$7.forEach(function (c) {
          c.uploadID === a && b.$7["delete"](c);
        });
        this.$13.notifyOnUploadAction({
          trackingID: a,
          action: d("VideoUploadFlowNotifier").VideoUploadActions
            .UPLOAD_USER_REMOVED,
        });
      };
      e.$24 = function (a, e, f) {
        d("ReactComposerMediaUploadActions").doneUploading({
          composerID: this.$1,
          uploadID: a.uploadID,
          type: c("ReactComposerMediaUploadActionType").VIDEO_UPLOAD_DONE,
          fileUpload: a,
          timeToUpload: 0,
          photoID: f.video_id,
          sphericalPhotoID: "",
          thumbSrc: "",
          isSphericalVideo: f.is_spherical_video,
        });
        e = this.$6.get(a.uploadID);
        e && (e.reset(), this.$6["delete"](a.uploadID));
        b("ReactComposerMediaUtils").changeToPeopleTaggerAfterUpload(this.$1);
        this.$8 = !1;
        this.$7["delete"](a);
        if (this.$7.size > 0) {
          f = this.$7.values().next().value;
          this.uploadVideo(f);
        }
      };
      e.$19 = function (a) {
        this.$7.add(a),
          d("ReactComposerMediaUploadActions").enqueue(
            this.$1,
            a.uploadID,
            a.name,
            c("ReactComposerMediaUploadStore").getUploads(this.$1).size,
            c("ReactComposerMediaUploadActionType").VIDEO_UPLOAD_ENQUEUED,
            d("ReactComposerMediaUploadType").VIDEO,
            URL.createObjectURL(a)
          );
      };
      e.$20 = function (a, b, c) {
        d("ReactComposerMediaUploadActions").videoMetadataParsed(
          this.$1,
          a.uploadID,
          c
        );
      };
      e.$21 = function (a, b) {
        d("ReactComposerMediaUploadActions").startUploading(
          this.$1,
          a.uploadID,
          a,
          c("ReactComposerMediaUploadActionType").VIDEO_UPLOAD_UPLOADING
        );
      };
      e.$22 = function (a, b, e) {
        b = c("VideoUploadProgressBar").computeProgress(
          e.start_offset,
          e.sent_bytes,
          e.file_size,
          0,
          0
        );
        e = !1;
        var f = 0;
        this.$4 &&
          ((e = this.$4.use_real_progress_percentage),
          (f = this.$4.use_progress_transform_x));
        !e && !(f > 0) && (b = Math.round(b));
        d("ReactComposerMediaUploadActions").progressUploading(
          this.$1,
          a.uploadID,
          b,
          e,
          this.$4.use_progress_linearity,
          f
        );
      };
      e.$23 = function (a, b, e) {
        b = {
          code: e.error_code,
          description: e.error_description,
          summary: e.error_summary,
          transient:
            e.error_is_transient ||
            e.error_code == 1004 ||
            e.error_code == 1006,
        };
        d("ReactComposerMediaUploadActions").failUploading(
          this.$1,
          a.uploadID,
          a,
          0,
          b,
          c("ReactComposerMediaUploadActionType").VIDEO_UPLOAD_FAILED
        );
        this.$8 = !1;
      };
      e.$25 = function (a, b, c) {
        this.$9 || (this.$9 = c.waterfallID);
      };
      e.$27 = function () {
        this.$10 = new (c("VideoUploadLogger"))({
          actor_id: this.$4.actorID,
          source: this.$4.source,
          waterfall_id: this.$9,
          target_id: this.$4.targetID,
          composer_entry_point_ref: this.$4.composerEntryPointRef,
        });
      };
      e.$26 = function () {
        this.$10 || this.$27();
        return this.$10;
      };
      e.destroy = function () {
        this.$2.release();
      };
      e.getUploader = function (a) {
        return this.$6.get(a);
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "ExceptionDialog",
  [
    "cx",
    "fbt",
    "invariant",
    "DialogX",
    "FbtResultBase",
    "LayerDestroyOnHide",
    "LayerHideOnEscape",
    "ServerHTML.react",
    "XUIDialogBody.react",
    "XUIDialogCloseButton.react",
    "XUIDialogFooter.react",
    "XUIDialogTitle.react",
    "XUIGrayText.react",
    "getViewportDimensions",
    "joinClasses",
    "react",
  ],
  function (a, b, c, d, e, f, g, h, i, j) {
    "use strict";
    var k = d("react"),
      l = 900,
      m = 40,
      n = {},
      o = i._(
        "Something went wrong. We're working on getting this fixed as soon as we can. You may be able to try again."
      ),
      p = { width: "100%", height: window.innerHeight * 0.7 + "px" };
    function q(a) {
      a instanceof c("FbtResultBase") && (a = { __html: a });
      return a;
    }
    var r = {
      showAsyncError: function (a, b) {
        b === void 0 && (b = "dev");
        try {
          var c = a.getErrorSummary(),
            d = a.getErrorDescription();
          a.silentError && d === "" && (d = o);
          if (a.error) {
            this.errorCode = a.error;
            if (n[this.errorCode]) return;
            n[this.errorCode] = !0;
          }
          var e = ["always"],
            f = null;
          e.includes(b) &&
            a.payload instanceof XMLHttpRequest &&
            a.payload.responseText &&
            ((f = k.jsx("iframe", {
              style: p,
              srcDoc: a.payload.responseText,
            })),
            (d = null));
          return r.show(c, d, f);
        } catch (b) {
          alert(JSON.stringify(a));
        }
      },
      showError: function (a, b) {
        b === void 0 && (b = "dev");
        try {
          var c = JSON.parse(JSON.stringify(a));
          a = c.summary;
          var d = c.description;
          c.source.exception.is_silent && d === "" && (d = o);
          if (c.code) {
            this.errorCode = c.code;
            if (n[this.errorCode]) return;
            n[this.errorCode] = !0;
          }
          var e = ["always"],
            f = null;
          e.includes(b) &&
            c.source.exception.stack_trace &&
            ((f = k.jsx("iframe", {
              style: p,
              srcDoc: c.source.exception.stack_trace,
            })),
            (d = null));
          return r.show(a, d, f);
        } catch (a) {
          alert(JSON.stringify(c));
        }
      },
      show: function (a, b, d) {
        var e = this;
        b = q(b);
        !b || !d || j(0, 3624);
        var f = c("getViewportDimensions").withoutScrollbars().width;
        f = f > 0 ? Math.min(f - m, l) : l;
        f = new (c("DialogX"))(
          {
            width: f,
            addedBehaviors: [c("LayerDestroyOnHide"), c("LayerHideOnEscape")],
          },
          k.jsxs("div", {
            "data-testid": void 0,
            className: "_9l19",
            children: [
              k.jsx(c("XUIDialogTitle.react"), {
                showCloseButton: !0,
                children: a,
              }),
              k.jsx(c("XUIDialogBody.react"), {
                style: { maxHeight: "80vh", overflow: "auto" },
                children: k.jsxs(c("XUIGrayText.react"), {
                  shade: "medium",
                  size: "body1",
                  className: "_9l1a",
                  children: [
                    b != null && k.jsx(c("ServerHTML.react"), { blob: b }),
                    d,
                  ],
                }),
              }),
              k.jsx(c("XUIDialogFooter.react"), {
                children: k.jsx(c("XUIDialogCloseButton.react"), {
                  use: "confirm",
                  className: c("joinClasses")("autofocus", "_9l2h"),
                }),
              }),
            ],
          })
        );
        f.subscribe(["hide"], function (a) {
          e.errorCode && delete n[e.errorCode];
        });
        f.show();
        return f;
      },
    };
    f.exports = r;
  },
  34
);
__d(
  "PagesComposerCanvasVideoPostAttributes",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      CTA_LINK: "cta_link",
      CTA_TYPE: "cta_type",
      LINK_TITLE: "link_title",
      VIDEO_ID: "video_id",
    });
    f["default"] = a;
  },
  66
);
__d(
  "PagesComposerCarouselPostChildAttachmentAttributes",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      PICTURE: "picture",
      NAME: "name",
      DESCRIPTION: "description",
      LINK: "link",
      SELECTED: "selected",
      SCRAPED: "scraped",
      IMAGE_FBID: "image_fbid",
      IMAGE_SOURCE: "image_source",
      ORIGINAL_DIMENSION_HEIGHT: "original_dimensions_height",
      ORIGINAL_DIMENSION_WIDTH: "original_dimensions_width",
      CROPPING_START_POINT_X: "cropping_startPoint_x",
      CROPPING_START_POINT_Y: "cropping_startPoint_y",
      CROPPING_SOURCE_DIMENSION_HEIGHT: "cropping_source_dimension_height",
      CROPPING_SOURCE_DIMENSION_WIDTH: "cropping_source_dimension_width",
      VIDEO_ID: "video_id",
      CTA_TYPE: "cta_type",
    });
    f["default"] = a;
  },
  66
);
__d(
  "PagesComposerCarouselPostLogAttributes",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      USE_CAROUSEL_COMPOSER: "use_carousel_composer",
      CAROUSEL_INCOMPATIBLE: "carousel_incompatible",
      CAROUSEL_INCOMPATIBLE_TYPE: "carousel_incompatible_type",
      SCRAPED_IMAGE_NUM_OLD: "scraped_image_num_old",
      SCRAPED_URL: "scraped_url",
      SCRAPED_TIME: "scraped_time",
      COMPOSER_LOCATION: "composer_location",
      HIDE_END_CARD: "hide_end_card",
      SOURCE_ATTACHMENT: "source_attachment",
      PREFILL_SCRAPE_URL: "prefill_scrape_url",
    });
    f["default"] = a;
  },
  66
);
__d(
  "XReactComposerScrapedAttachmentController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/react_composer/scraper/", {
      privacy_mutation_token: { type: "String" },
      composer_id: { type: "String", required: !0 },
      target_id: { type: "String", required: !0 },
      scrape_url: { type: "String", required: !0 },
      carousel_params: { type: "String" },
      entry_point: { type: "String", required: !0 },
      source_attachment: { type: "String", defaultValue: "" },
      source_logging_name: {
        type: "Enum",
        defaultValue: "others",
        enumType: 1,
      },
      work_shared_draft_mode: { type: "Enum", enumType: 1 },
    });
  },
  null
);
__d(
  "ReactComposerScrapedAttachmentStore",
  [
    "fbt",
    "ActorURI",
    "AsyncRequest",
    "DOM",
    "ExceptionDialog",
    "FBLogger",
    "PagesComposerCanvasVideoPostAttributes",
    "PagesComposerCarouselPostChildAttachmentAttributes",
    "PagesComposerCarouselPostLogAttributes",
    "ReactComposerAttachmentActionType",
    "ReactComposerAttachmentStore",
    "ReactComposerScrapedAttachmentActionType",
    "ReactComposerStoreBase",
    "ReactComposerTaggerStore",
    "ReactComposerTaggerType",
    "XReactComposerScrapedAttachmentController",
  ],
  function (a, b, c, d, e, f, g, h) {
    var i = -1;
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                markup: null,
                attachmentConfig: {},
                enabled: !1,
                isScraping: !1,
                hasUploadedImage: !1,
                permissiveMatch: null,
                sourceAttachment: null,
                isFbPhotoShare: !1,
                clearedAttachments: new Set(),
              };
            },
            function (a) {
              c("FBLogger")("react_composer").info(
                "Scraped attachment usage %s",
                a.type
              );
              switch (a.type) {
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_SCRAPE_ENABLED:
                  d && d.$ReactComposerScrapedAttachmentStore1(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_PERMISSIVE_MATCH_SETTED:
                  d && d.$ReactComposerScrapedAttachmentStore2(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_SCRAPE_INTENDED:
                  d && d.$ReactComposerScrapedAttachmentStore3(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_SCRAPED:
                  d && d.$ReactComposerScrapedAttachmentStore4(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_SCRAPE_CLEARED:
                  d && d.$ReactComposerScrapedAttachmentStore5(a);
                  break;
                case c("ReactComposerAttachmentActionType").SELECT_ATTACHMENT:
                  d && d.$ReactComposerScrapedAttachmentStore6(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_CAROUSEL_UPLOAD:
                  d && d.$ReactComposerScrapedAttachmentStore7(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_TITLE_EDITED:
                  d && d.$ReactComposerScrapedAttachmentStore8(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_DESCRIPTION_EDITED:
                  d && d.$ReactComposerScrapedAttachmentStore9(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_IMAGE_DESELECTED:
                  d && d.$ReactComposerScrapedAttachmentStore10(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_CLEAR_SPINNER:
                  d && d.$ReactComposerScrapedAttachmentStore11(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_BREAKING_CONFIG_SET:
                  d && d.$ReactComposerScrapedAttachmentStore12(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.isEnabled = function (a) {
        var b = c("ReactComposerTaggerStore").getTaggerData(
            a,
            c("ReactComposerTaggerType").FUN_FACT
          ),
          d = c("ReactComposerTaggerStore").hasData(
            a,
            c("ReactComposerTaggerType").WORK_CHECKLIST
          );
        return (b && b.isAskPost) || d ? !1 : this.getComposerData(a).isEnabled;
      };
      e.hasAttachment = function (a) {
        return !!this.getMarkup(a);
      };
      e.hasUploadedImage = function (a) {
        return this.getComposerData(a).hasUploadedImage;
      };
      e.isScraping = function (a) {
        return this.getComposerData(a).isScraping;
      };
      e.getMarkup = function (a) {
        return this.getComposerData(a).markup;
      };
      e.isReadOnly = function (a) {
        a = this.getComposerData(a);
        return a.attachmentConfig && a.attachmentConfig.readOnly;
      };
      e.getAttachmentConfig = function (a) {
        a = this.getComposerData(a);
        if (!a.markup) return null;
        if (!a.attachmentConfig.readOnly) {
          var b = c("DOM")
              .scry(a.markup, 'input[name="attachment[params][images][0]"]')
              .pop(),
            d = c("DOM")
              .scry(a.markup, 'input[name="attachment[params][title]"]')
              .pop(),
            e = c("DOM")
              .scry(a.markup, 'input[name="attachment[params][summary]"]')
              .pop();
          b != null &&
            (a.attachmentConfig.params.images === void 0 &&
              (a.attachmentConfig.params.images = []),
            (a.attachmentConfig.params.images[0] = b.value));
          d != null && (a.attachmentConfig.params.title = d.value);
          e != null && (a.attachmentConfig.params.summary = e.value);
          b = c("DOM")
            .scry(
              a.markup,
              'input[name="attachment[carousel_log][' +
                c("PagesComposerCarouselPostLogAttributes")
                  .USE_CAROUSEL_COMPOSER +
                ']"]'
            )
            .pop();
          d = c("DOM")
            .scry(
              a.markup,
              'input[name="attachment[canvas_log][use_canvas_composer]"]'
            )
            .pop();
          b != null && b.value === "1"
            ? (this.$ReactComposerScrapedAttachmentStore13(a),
              this.$ReactComposerScrapedAttachmentStore14(a))
            : d != null &&
              d.value === "1" &&
              this.$ReactComposerScrapedAttachmentStore15(a);
          this.$ReactComposerScrapedAttachmentStore16(a);
        }
        return a.attachmentConfig;
      };
      e.getPostConfirmationDialog = function (a) {
        return this.getComposerData(a).postConfirmationDialog;
      };
      e.getHasDisputedWarning = function (a) {
        return this.getComposerData(a).hasDisputedWarning;
      };
      e.getBreakingNewsConfig = function (a) {
        return this.getComposerData(a).breakingNewsConfig;
      };
      e.$ReactComposerScrapedAttachmentStore15 = function (a) {
        var b = { publish: !0, cta_link_format: "VIDEO_LPP" },
          d = Object.values(c("PagesComposerCanvasVideoPostAttributes")),
          e = null;
        for (var f = 0; f < d.length; f++) {
          var g = d[f];
          e = c("DOM")
            .scry(
              a.markup,
              'input[name="attachment[params][canvas_video][' +
                String(g) +
                ']"]'
            )
            .pop();
          e && (b[String(g)] = e.value);
        }
        a.attachmentConfig.params.canvas_video = {};
        Object.assign(a.attachmentConfig.params.canvas_video, b);
      };
      e.$ReactComposerScrapedAttachmentStore16 = function (a) {
        var b = {},
          d = Object.keys(c("PagesComposerCarouselPostLogAttributes"));
        for (var e = 0; e < d.length; e++) {
          var f = c("PagesComposerCarouselPostLogAttributes")[d[e]],
            g = c("DOM")
              .scry(
                a.markup,
                'input[name="attachment[carousel_log][' + f + ']"]'
              )
              .pop();
          if (!g) continue;
          b[f] = g.value;
        }
        Object.keys(b).length !== 0 && (a.attachmentConfig.carousel_log = b);
      };
      e.$ReactComposerScrapedAttachmentStore13 = function (a) {
        a.attachmentConfig.params.child_attachments = {};
        var b = Object.keys(
            c("PagesComposerCarouselPostChildAttachmentAttributes")
          ),
          d = 0,
          e = {};
        while (!0) {
          var f = !1,
            g = 0;
          e = {};
          for (g = 0; g < b.length; g++) {
            var h = c("DOM")
              .scry(
                a.markup,
                'input[name="attachment[params][child_attachments][' +
                  d +
                  "][" +
                  c("PagesComposerCarouselPostChildAttachmentAttributes")[
                    b[g]
                  ] +
                  ']"]'
              )
              .pop();
            if (h == null) continue;
            e[c("PagesComposerCarouselPostChildAttachmentAttributes")[b[g]]] =
              h.value;
            f = !0;
          }
          if (!f) break;
          a.attachmentConfig.params.child_attachments[d] = e;
          d++;
        }
      };
      e.$ReactComposerScrapedAttachmentStore14 = function (a) {
        var b = a.attachmentConfig.params.child_attachments;
        if (!b) return;
        var c = null,
          d = 0;
        for (var e in b)
          if (
            Object.prototype.hasOwnProperty.call(b, e) &&
            b[e].selected === "1"
          ) {
            d += 1;
            if (d > 1) return;
            b[e].video_id && (c = b[e]);
          }
        c &&
          ((a.attachmentConfig.params.carousel_video_lpp = {}),
          Object.assign(a.attachmentConfig.params.carousel_video_lpp, {
            video_id: c.video_id,
            publish: !0,
            link_title: c.name,
            link_description: c.description,
            cta_type: c.cta_type ? c.cta_type : "NO_BUTTON",
            cta_link: c.link,
            cta_link_format: "VIDEO_LPP",
          }));
      };
      e.getPermissiveMatch = function (a) {
        return this.getComposerData(a).permissiveMatch;
      };
      e.getContentID = function (a) {
        return this.getComposerData(a).contentID;
      };
      e.getAttachmentAlreadyCleared = function (a, b) {
        b = this.getComposerData(a);
        return b.clearedAttachments.has(b.permissiveMatch);
      };
      e.$ReactComposerScrapedAttachmentStore8 = function (a) {
        a = this.validateAction(a, ["composerID", "index", "value"]);
        var b = a[0],
          c = a[1];
        a = a[2];
        b = this.getComposerData(b);
        b.attachmentConfig.params.edited_params == null &&
          (b.attachmentConfig.params.edited_params = {});
        b.attachmentConfig.params.edited_params[c] == null &&
          (b.attachmentConfig.params.edited_params[c] = {});
        b.attachmentConfig.params.edited_params[c].title = a;
      };
      e.$ReactComposerScrapedAttachmentStore9 = function (a) {
        a = this.validateAction(a, ["composerID", "index", "value"]);
        var b = a[0],
          c = a[1];
        a = a[2];
        b = this.getComposerData(b);
        b.attachmentConfig.params.edited_params == null &&
          (b.attachmentConfig.params.edited_params = {});
        b.attachmentConfig.params.edited_params[c] == null &&
          (b.attachmentConfig.params.edited_params[c] = {});
        b.attachmentConfig.params.edited_params[c].summary = a;
      };
      e.$ReactComposerScrapedAttachmentStore10 = function (a) {
        a = this.validateAction(a, ["composerID", "index"]);
        var b = a[0];
        a = a[1];
        b = this.getComposerData(b);
        b.attachmentConfig.params.edited_params != null &&
          b.attachmentConfig.params.edited_params[a] != null &&
          (b.attachmentConfig.params.edited_params[i] =
            b.attachmentConfig.params.edited_params[a]);
      };
      e.$ReactComposerScrapedAttachmentStore1 = function (a) {
        a = this.validateAction(a, ["composerID", "enabled"]);
        var b = a[0];
        a = a[1];
        b = this.getComposerData(b);
        b.isEnabled = a;
      };
      e.$ReactComposerScrapedAttachmentStore2 = function (a) {
        a = this.validateAction(a, ["composerID", "permissiveMatch"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.permissiveMatch = a;
        this.emitChange(b);
      };
      e.$ReactComposerScrapedAttachmentStore3 = function (a) {
        var b = this,
          e = this.validateAction(a, [
            "composerID",
            "targetID",
            "value",
            "entryPoint",
            "actorID",
            "sourceLoggingName",
            "isFilePicker",
            "workSharedDraftMode",
          ]),
          f = e[0],
          g = e[1],
          i = e[2],
          j = e[3],
          k = e[4],
          l = e[5],
          m = e[6];
        e = e[7];
        if (!this.isEnabled(f)) return;
        var n = this.getComposerData(a.composerID);
        n.isScraping = !0;
        n = c("ReactComposerAttachmentStore").getSelectedAttachmentID(f);
        g = c("XReactComposerScrapedAttachmentController")
          .getURIBuilder()
          .setString("composer_id", f)
          .setString("target_id", g)
          .setString("scrape_url", i)
          .setString("entry_point", j)
          .setString("source_attachment", n)
          .setEnum("source_logging_name", l)
          .setEnum("work_shared_draft_mode", e)
          .getURI();
        g = d("ActorURI").create(g, k);
        new (c("AsyncRequest"))(g)
          .setErrorHandler(function (e) {
            c("FBLogger")("attachment_preview")
              .catching(e.toError())
              .warn("failed to scrape attachment"),
              b.$ReactComposerScrapedAttachmentStore11(a),
              m &&
                d("ExceptionDialog").show(
                  h._("The file could not be attached"),
                  h._(
                    "This may be due to a network issue. Try attaching the file again later, or paste a link to the file."
                  )
                );
          })
          .send();
        this.emitChange(f);
      };
      e.$ReactComposerScrapedAttachmentStore5 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.clearedAttachments.add(b.permissiveMatch);
        b.attachmentConfig = {};
        b.markup = null;
        b.isScraping = !1;
        b.sourceAttachment = null;
        b.permissiveMatch = null;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerScrapedAttachmentStore4 = function (a) {
        var b = a.composerID;
        if (!this.isEnabled(b)) return;
        var d = this.getComposerData(a.composerID);
        d.markup = a.markup;
        d.attachmentConfig = a.attachmentConfig;
        d.isScraping = !1;
        d.sourceAttachment = c(
          "ReactComposerAttachmentStore"
        ).getSelectedAttachmentID(b);
        d.postConfirmationDialog = a.postConfirmationDialog;
        d.hasDisputedWarning = a.hasDisputedWarning;
        d.breakingNewsConfig = a.breakingNewsConfig;
        d.contentID =
          (a =
            (d = a.attachmentConfig.params) == null
              ? void 0
              : d.global_share_id) != null
            ? a
            : null;
        this.emitChange(b);
      };
      e.$ReactComposerScrapedAttachmentStore6 = function (a) {
        var b = this.getComposerData(a.composerID);
        if (
          a.id === b.sourceAttachment ||
          b.sourceAttachment === null ||
          a.proxiedAttachmentID === b.sourceAttachment
        )
          return;
        b.markup = null;
        b.attachmentConfig = {};
        b.isScraping = !1;
        b.sourceAttachment = null;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerScrapedAttachmentStore7 = function (a) {
        var b = this,
          e = this.validateAction(a, [
            "composerID",
            "targetID",
            "scrapeUrl",
            "carouselParams",
            "entryPoint",
            "actorID",
          ]),
          f = e[0],
          g = e[1],
          h = e[2],
          i = e[3],
          j = e[4];
        e = e[5];
        var k = this.getComposerData(a.composerID);
        k.isScraping = !0;
        k.hasUploadedImage = !0;
        k = c("ReactComposerAttachmentStore").getSelectedAttachmentID(f);
        f = c("XReactComposerScrapedAttachmentController")
          .getURIBuilder()
          .setString("composer_id", f == null ? null : f.toString())
          .setString("target_id", g == null ? null : g.toString())
          .setString("scrape_url", h)
          .setString("carousel_params", i)
          .setString("entry_point", j)
          .setString("source_attachment", k)
          .getURI();
        f = d("ActorURI").create(f, e == null ? "" : e.toString());
        new (c("AsyncRequest"))(f)
          .setErrorHandler(function (d) {
            c("FBLogger")("attachment_preview")
              .catching(d.toError())
              .warn("failed to upload carousel image"),
              b.$ReactComposerScrapedAttachmentStore11(a);
          })
          .send();
        this.emitChange(a.composerID);
      };
      e.$ReactComposerScrapedAttachmentStore12 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.breakingNewsConfig = a.breakingNewsConfig;
      };
      e.$ReactComposerScrapedAttachmentStore11 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.isScraping = !1;
        this.emitChange(a.composerID);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerPortableCTAAttachmentActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        FETCH_CTA_ATTACHMENT_PREVIEW: null,
        SET_ATTACHMENT_PREVIEW_MARKUP: null,
        SET_SELECTED_CTA: null,
        INITIALIZE_STICKY_CTA: null,
      },
      "ReactComposerPortableCTAAttachmentActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerPortableCTAAttachmentStore",
  [
    "ActorURI",
    "AsyncRequest",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "ReactComposerMediaUploadStore",
    "ReactComposerPortableCTAAttachmentActionType",
    "ReactComposerStoreBase",
    "XReactComposerCTAAttachmentBootstrapController",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                isFetching: !1,
                markup: null,
                selectedCta: null,
                portableCTAValues: null,
                isAutoUnselected: !1,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerPortableCTAAttachmentActionType")
                  .FETCH_CTA_ATTACHMENT_PREVIEW:
                  d && d.$ReactComposerPortableCTAAttachmentStore1(a);
                  break;
                case c("ReactComposerPortableCTAAttachmentActionType")
                  .SET_ATTACHMENT_PREVIEW_MARKUP:
                  d && d.$ReactComposerPortableCTAAttachmentStore2(a);
                  break;
                case c("ReactComposerPortableCTAAttachmentActionType")
                  .SET_SELECTED_CTA:
                  d && d.$ReactComposerPortableCTAAttachmentStore3(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.getMarkup = function (a) {
        return this.getComposerData(a).markup;
      };
      e.getCTAData = function (a) {
        var b = this.getComposerData(a).selectedCta,
          c = this.getComposerData(a).portableCTAValues;
        return !!b && !!c
          ? {
              type: this.getComposerData(a).selectedCta,
              value: this.getComposerData(a).portableCTAValues,
            }
          : null;
      };
      e.isFetching = function (a) {
        return this.getComposerData(a).isFetching;
      };
      e.getIsAutoUnselected = function (a) {
        return this.getComposerData(a).isAutoUnselected;
      };
      e.getSelectedCta = function (a) {
        return this.getComposerData(a).selectedCta;
      };
      e.isPortableCTAAttached = function (a) {
        if (
          c("ReactComposerAttachmentStore").getSelectedAttachmentID(a) ===
            c("ReactComposerAttachmentType").MEDIA &&
          c("ReactComposerMediaUploadStore").getPhotos(a).size === 1
        ) {
          a = this.getCTAData(a);
          return a !== null && a !== void 0;
        }
        return !1;
      };
      e.$ReactComposerPortableCTAAttachmentStore1 = function (a) {
        var b = this;
        a = this.validateAction(a, [
          "composerID",
          "selectedCta",
          "actorID",
          "targetID",
          "composerType",
          "attachmentID",
        ]);
        var e = a[0],
          f = a[1],
          g = a[2],
          h = a[3],
          i = a[4];
        a = a[5];
        var j = this.getComposerData(e);
        j.selectedCta = f;
        j.isFetching = !0;
        j.markup = null;
        i = c("XReactComposerCTAAttachmentBootstrapController")
          .getURIBuilder()
          .setString("composer_id", e)
          .setEnum("composer_type", i)
          .setInt("target_id", h)
          .setString("cta_type", f)
          .setString("attachment_id", a)
          .setEnum("preview_style", "portable_preview");
        h = d("ActorURI").create(i.getURI(), g);
        f = new (c("AsyncRequest"))(h).setErrorHandler(function () {
          (j.isFetching = !1), b.emitChange(e);
        });
        f.send();
        this.emitChange(e);
      };
      e.$ReactComposerPortableCTAAttachmentStore2 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "markup",
          "selectedCta",
          "ctaValues",
          "isAutoUnselected",
        ]);
        var b = a[0],
          c = a[1],
          d = a[2],
          e = a[3];
        a = a[4];
        var f = this.getComposerData(b);
        f.markup = c;
        f.isFetching = !1;
        f.selectedCta = d;
        f.portableCTAValues = e;
        d == null && a != null && (f.isAutoUnselected = a);
        d != null && (f.isAutoUnselected = !1);
        this.emitChange(b);
      };
      e.$ReactComposerPortableCTAAttachmentStore3 = function (a) {
        a = this.validateAction(a, ["composerID", "selectedCta"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.selectedCta = a;
        this.emitChange(b);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerTaggerActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        DESELECT_TAGGER: null,
        SET_SELECTED_TAGGER: null,
        UPDATE_TAGGERS_SOURCE: null,
        SET_TAGGER_SOURCE: null,
        SET_TAGGER_DATA: null,
        SET_SELECTED_DATETIME: null,
        SET_SELECTED_PEOPLE: null,
        SET_TAGGER_SHOW_NUX: null,
        SET_TAGGER_SHOW_TOOLTIP: null,
        SET_IS_BRANDED_CONTENT_VIDEO: null,
        SET_SHOULD_NAVIGATE_TO_PHOTO_EDITOR: null,
        SET_PRODUCT_TAGGING_PLATFORM: null,
        SET_COMPOSER_HAS_VIDEO_UPLOADS: null,
        SET_SHOULD_SHOW_PT_MEDIA_UPLOAD_MODAL: null,
        SET_PHOTO_EDITOR_OPENED: null,
        SET_TAGGER_CONFIG: null,
        LOG_WP_PICKER_ACTION: null,
        SET_PRODUCT_SUGGESTION_PHOTO_ID: null,
        SET_REFERRAL_SOURCE: null,
      },
      "ReactComposerTaggerActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerTaggerActions",
  [
    "ReactComposerDispatcher",
    "ReactComposerTaggerActionType",
    "ReactComposerTaggerStore",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function () {
      function a() {}
      var b = a.prototype;
      b.deselectCurrentTagger = function (a, b) {
        var d = c("ReactComposerTaggerStore").getSelectedTagger(a);
        if (d) {
          a = {
            composerID: a,
            sourceLoggingName: b,
            type: c("ReactComposerTaggerActionType").DESELECT_TAGGER,
            taggerID: d,
          };
          c("ReactComposerDispatcher").dispatch(a);
        }
      };
      b.selectTagger = function (a, b, d, e) {
        var f = c("ReactComposerTaggerStore").getSelectedTagger(a);
        d === f && e !== !0
          ? this.deselectCurrentTagger(a, b)
          : this.$1(a, d, !1, !0, b);
      };
      b.selectTaggerWithoutLogging = function (a, b) {
        this.$1(a, b, !0, !0);
      };
      b.selectTaggerWithoutAutofocus = function (a, b, c) {
        this.$1(a, c, !1, !1, b);
      };
      b.$1 = function (a, b, d, e, f) {
        a = {
          composerID: a,
          sourceLoggingName: f,
          type: c("ReactComposerTaggerActionType").SET_SELECTED_TAGGER,
          taggerID: b,
          autoFocus: e,
          suppressWaterfallLogging: d,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.updateTaggersSource = function (a, b) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType").UPDATE_TAGGERS_SOURCE,
          taggersSource: b,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.setTaggerSource = function (a, b, d) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType").SET_TAGGER_SOURCE,
          taggerID: b,
          taggerSource: d,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.setTaggerConfig = function (a, b, d) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType").SET_TAGGER_CONFIG,
          taggerConfig: d,
          taggerID: b,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.setTaggerData = function (a, b, c, d) {
        this.$2(a, c, d, !1, b);
      };
      b.setTaggerDataWithoutLogging = function (a, b, c) {
        this.$2(a, b, c, !0);
      };
      b.$2 = function (a, b, d, e, f) {
        a = {
          composerID: a,
          sourceLoggingName: f,
          type: c("ReactComposerTaggerActionType").SET_TAGGER_DATA,
          taggerID: b,
          taggerData: d,
          suppressWaterfallLogging: e,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.selectDateTime = function (a, b) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType").SET_SELECTED_DATETIME,
          selectedDateTime: b,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.selectPeople = function (a, b) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType").SET_SELECTED_PEOPLE,
          selectedPeople: b,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.handleSetTaggerShowNUX = function (a, b, d) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType").SET_TAGGER_SHOW_NUX,
          taggerID: b,
          showNUX: d,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.handleSetTaggerShowTooltip = function (a, b, d) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType").SET_TAGGER_SHOW_TOOLTIP,
          taggerID: b,
          showTooltip: d,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.setIsBrandedContentVideo = function (a, b) {
        a = {
          composerID: a,
          isBrandedContentVideo: b,
          type: c("ReactComposerTaggerActionType").SET_IS_BRANDED_CONTENT_VIDEO,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.logWPPickerAction = function (a, b, d) {
        var e = c("ReactComposerTaggerStore").getSelectedTagger(a);
        e = {
          composerID: a,
          taggerID: e,
          type: c("ReactComposerTaggerActionType").LOG_WP_PICKER_ACTION,
          event: b,
          extraData: (a = d) != null ? a : {},
        };
        c("ReactComposerDispatcher").dispatch(e);
      };
      b.setShouldNavigateToPhotoEditor = function (a, b) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType")
            .SET_SHOULD_NAVIGATE_TO_PHOTO_EDITOR,
          shouldNavigateToPhotoEditor: b,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.setProductTaggingPlatform = function (a, b) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType").SET_PRODUCT_TAGGING_PLATFORM,
          platform: b,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.setComposerHasVideoUploads = function (a, b) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType")
            .SET_COMPOSER_HAS_VIDEO_UPLOADS,
          composerHasVideoUploads: b,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.setPhotoEditorOpened = function (a, b) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType").SET_PHOTO_EDITOR_OPENED,
          photoEditorOpened: b,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.setProductSuggestionPhotoID = function (a, b) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType")
            .SET_PRODUCT_SUGGESTION_PHOTO_ID,
          productSuggestionPhotoID: b,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      b.setReferralSource = function (a, b) {
        a = {
          composerID: a,
          type: c("ReactComposerTaggerActionType").SET_REFERRAL_SOURCE,
          referralSource: b,
        };
        c("ReactComposerDispatcher").dispatch(a);
      };
      return a;
    })();
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerMinutiaeAttachmentActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        FETCH_ATTACHMENT: null,
        SET_EXPLICIT_LOCATION: null,
        SET_MARKUP: null,
        SET_HIDE_OBJECT_ATTACHMENT: null,
      },
      "ReactComposerMinutiaeAttachmentActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "XReactComposerMinutiaeAttachmentController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create(
      "/react_composer/minutiae/attachment/",
      {
        composer_id: { type: "String", required: !0 },
        action_id: { type: "String", required: !0 },
        object_id: { type: "String", required: !0 },
        target_id: { type: "String", required: !0 },
        is_timeline: { type: "Bool", defaultValue: !1 },
        explicit_place_tag_id: { type: "String" },
      }
    );
  },
  null
);
__d(
  "ReactComposerMinutiaeAttachmentStore",
  [
    "ActorURI",
    "AsyncRequest",
    "ReactComposerAttachmentActionType",
    "ReactComposerAttachmentType",
    "ReactComposerMinutiaeAttachmentActionType",
    "ReactComposerStoreBase",
    "XReactComposerMinutiaeAttachmentController",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                isFetching: !1,
                markup: null,
                pendingRequest: null,
                explicitLocation: null,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerMinutiaeAttachmentActionType")
                  .FETCH_ATTACHMENT:
                  d && d.$ReactComposerMinutiaeAttachmentStore1(a);
                  break;
                case c("ReactComposerMinutiaeAttachmentActionType").SET_MARKUP:
                  d && d.$ReactComposerMinutiaeAttachmentStore2(a);
                  break;
                case c("ReactComposerAttachmentActionType").SELECT_ATTACHMENT:
                  d && d.$ReactComposerMinutiaeAttachmentStore3(a);
                  break;
                case c("ReactComposerMinutiaeAttachmentActionType")
                  .SET_EXPLICIT_LOCATION:
                  d && d.$ReactComposerMinutiaeAttachmentStore4(a);
                  break;
                case c("ReactComposerMinutiaeAttachmentActionType")
                  .SET_HIDE_OBJECT_ATTACHMENT:
                  d && d.$ReactComposerMinutiaeAttachmentStore5(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.getMarkup = function (a) {
        return this.getComposerData(a).markup;
      };
      e.getHideObjectAttachment = function (a) {
        return this.getComposerData(a).hideObjectAttachment;
      };
      e.isFetching = function (a) {
        return this.getComposerData(a).isFetching;
      };
      e.$ReactComposerMinutiaeAttachmentStore4 = function (a) {
        a = this.validateAction(a, ["composerID", "explicitLocation"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.explicitLocation = a;
        this.emitChange(b);
      };
      e.$ReactComposerMinutiaeAttachmentStore1 = function (a) {
        var b = this;
        a = this.validateAction(a, [
          "composerID",
          "actionID",
          "objectID",
          "targetID",
          "actorID",
          "isTimeline",
        ]);
        var e = a[0],
          f = a[1],
          g = a[2],
          h = a[3],
          i = a[4];
        a = a[5];
        var j = this.getComposerData(e);
        j.isFetching = !0;
        f = c("XReactComposerMinutiaeAttachmentController")
          .getURIBuilder()
          .setString("composer_id", e)
          .setString("action_id", f)
          .setString("object_id", g)
          .setString("target_id", h)
          .setBool("is_timeline", a);
        j.explicitLocation &&
          f.setString("explicit_place_tag_id", j.explicitLocation);
        g = d("ActorURI").create(f.getURI(), i);
        j.pendingRequest = new (c("AsyncRequest"))(g).setFinallyHandler(
          function () {
            (j.isFetching = !1), (j.pendingRequest = null), b.emitChange(e);
          }
        );
        j.pendingRequest.send();
        this.emitChange(e);
      };
      e.$ReactComposerMinutiaeAttachmentStore2 = function (a) {
        a = this.validateAction(a, ["composerID", "markup"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.markup = a;
        c.hideObjectAttachment = !1;
        this.emitChange(b);
      };
      e.$ReactComposerMinutiaeAttachmentStore5 = function (a) {
        a = this.validateAction(a, ["composerID", "hideAttachment"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.hideObjectAttachment = a;
        this.emitChange(b);
      };
      e.$ReactComposerMinutiaeAttachmentStore3 = function (a) {
        a = this.validateAction(a, ["composerID", "id"]);
        var b = a[0];
        a = a[1];
        if (a === c("ReactComposerAttachmentType").STATUS) return;
        a = this.getComposerData(b);
        a.markup = null;
        a.isFetching = !1;
        a.pendingRequest && a.pendingRequest.abandon();
        this.emitChange(b);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerTaggerEligibilityUtils",
  [
    "CurrentUser",
    "DestinationPickerEligibilityConfig",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "ReactComposerAudienceStore",
    "ReactComposerMediaUploadStore",
    "ReactComposerMediaUploadType",
    "ReactComposerMinutiaeAttachmentStore",
    "ReactComposerPortableCTAAttachmentStore",
    "ReactComposerScrapedAttachmentStore",
    "ReactComposerStatusStore",
    "ReactComposerTaggerStore",
    "ReactComposerTaggerType",
    "URLScraper",
    "VideoComposerDispatchers",
    "ifRequired",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      var b = [
          c("ReactComposerTaggerType").GIF,
          c("ReactComposerTaggerType").BREAKING_NEWS,
          c("ReactComposerTaggerType").OG,
          c("ReactComposerTaggerType").ALBUM,
          c("ReactComposerTaggerType").SALES_PROMO,
          c("ReactComposerTaggerType").MESSAGING,
          c("ReactComposerTaggerType").RECOMMENDATION,
          c("ReactComposerTaggerType").LIST,
          c("ReactComposerTaggerType").VISUAL_POLL,
          c("ReactComposerTaggerType").FUN_FACT,
          c("ReactComposerTaggerType").STICKER,
          c("ReactComposerTaggerType").TAG_EVENT,
          c("ReactComposerTaggerType").PAGE_CTA,
          c("ReactComposerTaggerType").SHOP,
          c("ReactComposerTaggerType").PRODUCT,
          c("ReactComposerTaggerType").CHATROOM,
        ],
        e = [
          c("ReactComposerAttachmentType").ASSET_3D,
          c("ReactComposerAttachmentType").LIST,
          c("ReactComposerAttachmentType").PLACE_LIST,
          c("ReactComposerAttachmentType").VISUAL_POLL,
          c("ReactComposerAttachmentType").TODO_LIST,
          c("ReactComposerAttachmentType").CTA,
          c("ReactComposerAttachmentType").MESSAGE,
          c("ReactComposerAttachmentType").CALL,
          c("ReactComposerAttachmentType").GET_DIRECTIONS,
          c("ReactComposerAttachmentType").SHOP,
          c("ReactComposerAttachmentType").LIVING_ROOM,
        ];
      b = b.some(function (b) {
        return c("ReactComposerTaggerStore").hasData(a, b);
      });
      if (b) return !1;
      b = c("ReactComposerAttachmentStore").getSelectedAttachmentID(a);
      if (e.includes(b)) return !1;
      e = c("ReactComposerTaggerStore").hasLocationTag(a);
      var f = c("ReactComposerTaggerStore").hasMinutiae(a),
        g = c("ReactComposerTaggerStore").getNumberOfWithWhoTags(a) > 0,
        h = c("ReactComposerScrapedAttachmentStore").hasAttachment(a),
        i = c("ReactComposerScrapedAttachmentStore").getAttachmentConfig(a),
        j = !1;
      i && (j = Array.isArray(i.params));
      if (h && (j || !c("DestinationPickerEligibilityConfig").allowLinkStory))
        return !1;
      i = c("ReactComposerStatusStore").getMessageText(a).length > 0;
      j =
        b === c("ReactComposerAttachmentType").MEDIA
          ? c("ReactComposerMediaUploadStore").getUploadsCount(
              a,
              d("ReactComposerMediaUploadType").VIDEO
            ) > 0
          : !1;
      b =
        b === c("ReactComposerAttachmentType").MEDIA
          ? c("ReactComposerMediaUploadStore").getUploadsCount(
              a,
              d("ReactComposerMediaUploadType").PHOTO
            ) > 0
          : !1;
      var k = j
        ? c("ReactComposerMediaUploadStore")
            .getUploadsOfType(a, d("ReactComposerMediaUploadType").VIDEO)
            .every(function (a) {
              return (
                a &&
                a.videoMetadata &&
                a.videoMetadata.format &&
                (c("DestinationPickerEligibilityConfig").isVideoLengthLimited
                  ? a.videoMetadata.format.duration <=
                    c("DestinationPickerEligibilityConfig")
                      .maxVideoLengthInSeconds
                  : !0)
              );
            })
        : !0;
      if (!k) return !1;
      if (e || f || g)
        if (!b && !j && !i && !h && e)
          return c("DestinationPickerEligibilityConfig").allowLocationAsPrimary;
        else if (!b && !j && !h && !i && f)
          return c("DestinationPickerEligibilityConfig").allowMinutiaeAsPrimary;
        else if (!b && !j && !h && !i && g)
          return c("DestinationPickerEligibilityConfig").allowWithTagsAsPrimary;
      return !0;
    }
    function b(a) {
      return h(a) === "ELIGIBLE";
    }
    function h(a) {
      var b = [
          c("ReactComposerTaggerType").GIF,
          c("ReactComposerTaggerType").BREAKING_NEWS,
          c("ReactComposerTaggerType").ALBUM,
          c("ReactComposerTaggerType").SALES_PROMO,
          c("ReactComposerTaggerType").RECOMMENDATION,
          c("ReactComposerTaggerType").LIST,
          c("ReactComposerTaggerType").FUN_FACT,
          c("ReactComposerTaggerType").STICKER,
          c("ReactComposerTaggerType").TAG_EVENT,
          c("ReactComposerTaggerType").PAGE_CTA,
          c("ReactComposerTaggerType").SHOP,
        ],
        d = [
          c("ReactComposerAttachmentType").ASSET_3D,
          c("ReactComposerAttachmentType").LIST,
          c("ReactComposerAttachmentType").PLACE_LIST,
          c("ReactComposerAttachmentType").CALL,
          c("ReactComposerAttachmentType").GET_DIRECTIONS,
        ];
      b = b.some(function (b) {
        return c("ReactComposerTaggerStore").hasData(a, b);
      });
      if (b) return "UNSUPPORTED_SPROUT";
      b = c("ReactComposerAttachmentStore").getSelectedAttachmentID(a);
      return d.includes(b) ? "UNSUPPORTED_SPROUT" : "ELIGIBLE";
    }
    function e(a) {
      a = i(a);
      return a === "PHOTO_ELIGIBLE" || a === "VIDEO_ELIGIBLE";
    }
    function i(a) {
      if (!c("ReactComposerAudienceStore").getTimelineSelected(a))
        return "TIMELINE_UNSELECTED";
      if (
        !c("ReactComposerAttachmentStore").getIsAttachmentSelected(
          a,
          c("ReactComposerAttachmentType").MEDIA
        )
      )
        return "UNSUPPORTED_MEDIA_TYPE";
      if (c("ReactComposerPortableCTAAttachmentStore").isPortableCTAAttached(a))
        return "UNSUPPORTED_MEDIA_TYPE";
      var b = c("ReactComposerMediaUploadStore").getUploadsCount(
          a,
          d("ReactComposerMediaUploadType").VIDEO
        ),
        e = c("ReactComposerMediaUploadStore").getUploadsCount(
          a,
          d("ReactComposerMediaUploadType").PHOTO
        );
      if (b > 0 && e > 0) return "MULTI_MEDIA_UNSUPPORTED";
      else if (b == 0 && e == 0) return "UNSUPPORTED_MEDIA_TYPE";
      else if (e > 0) return j(c("ReactComposerMediaUploadStore").getPhotos(a));
      else return k(c("ReactComposerMediaUploadStore").getVideos(a));
    }
    function j(a) {
      if (a.size > 1) return "MULTI_PHOTO_UNSUPPORTED";
      a = a.get(0);
      if (a.fileSize > 8388608) return "FILE_TOO_BIG";
      var b = a.width / a.height;
      if (b < 0.8 || b > 1.91) return "INVALID_PHOTO_RATIO";
      b = a.filename;
      if (!b) return "UNSUPPORTED_PHOTO_FORMAT";
      a = [
        "bmp",
        "dib",
        "jpg",
        "jpeg",
        "jpe",
        "jif",
        "jfif",
        "jfi",
        "png",
        "gif",
      ];
      b = b.split(".").pop().toLowerCase();
      return !a.includes(b) ? "UNSUPPORTED_PHOTO_FORMAT" : "PHOTO_ELIGIBLE";
    }
    function k(a) {
      return a.size > 1 ? "MULTI_VIDEO_UNSUPPORTED" : "VIDEO_ELIGIBLE";
    }
    function f(a, b, d) {
      return !a.some(function (a) {
        return !d.includes(a) && c("ReactComposerTaggerStore").hasData(b, a);
      });
    }
    function l(a, b) {
      if (m(a, b)) return !1;
      b = [c("ReactComposerAttachmentType").STATUS];
      b = b.some(function (b) {
        return c(
          "ReactComposerAttachmentStore"
        ).getIsAttachmentSelectedOrProxied(a, b);
      });
      if (
        !(b && c("ReactComposerAttachmentStore").isSelectedAttachmentActive(a))
      )
        return !1;
      b = c("ifRequired")(
        "ReactComposerFocusStore",
        function (b) {
          return b.isComposerFocused(a);
        },
        function () {
          return !0;
        }
      );
      if (!b) return !1;
      if (c("ReactComposerScrapedAttachmentStore").hasAttachment(a)) return !1;
      if (c("ReactComposerMediaUploadStore").getUploadsCount(a) !== 0)
        return !1;
      if (c("ReactComposerTaggerStore").hasExplicitLocation(a)) return !1;
      if (c("ReactComposerMinutiaeAttachmentStore").getMarkup(a) != null)
        return !1;
      if (c("ReactComposerStatusStore").getRichTextBlocks(a) != null) return !1;
      b = c("ReactComposerTaggerStore").getTaggerData(
        a,
        c("ReactComposerTaggerType").STICKER
      );
      if (b && b.stickerID) return !1;
      b = c("ReactComposerTaggerStore").getTaggerData(
        a,
        c("ReactComposerTaggerType").FUNDRAISER
      );
      if (b && b.charityID) return !1;
      b = c("ReactComposerTaggerStore").getTaggerData(
        a,
        c("ReactComposerTaggerType").PLAY_WITH_FRIENDS
      );
      if (b && b.gameID) return !1;
      b = c("ReactComposerTaggerStore").getTaggerData(
        a,
        c("ReactComposerTaggerType").SUPPORT_NOW
      );
      if (b && b.hasSupportNowCTA) return !1;
      b = c("ReactComposerStatusStore").getMessageText(a);
      if (c("URLScraper").permissiveMatch(b) != null) return !1;
      b = !0;
      c("ifRequired")("ReactComposerPostToGroupStore", function (c) {
        b = !c.getIsTabSelected(a);
      });
      if (!b) return !1;
      var d = !0;
      c("ifRequired")("ReactComposerEventAttachmentStore", function (b) {
        d = !b.hasAttachment(a);
      });
      if (!d) return !1;
      return c("CurrentUser").isWorkUser()
        ? c("ReactComposerTaggerStore").isAMA(a)
        : !0;
    }
    function m(a, b) {
      var d = c("ReactComposerStatusStore").getMessageText(a).match(/\n/g);
      d = d ? d.length > b.maxNewlines : !1;
      return (
        c("ReactComposerStatusStore").getTextLength(a) > b.textLengthLimit || d
      );
    }
    function n(a) {
      var b = [
          c("ReactComposerAttachmentType").ASSET_3D,
          c("ReactComposerAttachmentType").LIST,
          c("ReactComposerAttachmentType").PLACE_LIST,
          c("ReactComposerAttachmentType").TODO_LIST,
          c("ReactComposerAttachmentType").VISUAL_POLL,
          c("ReactComposerAttachmentType").MEDIA,
          c("ReactComposerAttachmentType").LIVING_ROOM,
        ],
        d = c("ReactComposerAttachmentStore").getSelectedAttachmentID(a);
      if (b.includes(d)) return !1;
      b = c("ReactComposerTaggerStore").getTaggerData(
        a,
        c("ReactComposerTaggerType").FUN_FACT
      );
      if (b && b.isAskPost) return !1;
      d = [
        c("ReactComposerTaggerType").RECRUITING_CANDIDATE,
        c("ReactComposerTaggerType").WORK_CHECKLIST,
      ];
      return d.some(function (b) {
        return c("ReactComposerTaggerStore").hasData(a, b);
      })
        ? !1
        : c("ReactComposerScrapedAttachmentStore").isEnabled(a);
    }
    function o(a) {
      var b = [
          c("ReactComposerAttachmentType").LIST,
          c("ReactComposerAttachmentType").PLACE_LIST,
          c("ReactComposerAttachmentType").TODO_LIST,
          c("ReactComposerAttachmentType").VISUAL_POLL,
          c("ReactComposerAttachmentType").MEDIA,
          c("ReactComposerAttachmentType").LIVING_ROOM,
        ],
        d = [
          c("ReactComposerTaggerType").RECRUITING_CANDIDATE,
          c("ReactComposerTaggerType").WORK_CHECKLIST,
        ],
        e = c("ReactComposerAttachmentStore").getSelectedAttachmentID(a);
      d = d.some(function (b) {
        return c("ReactComposerTaggerStore").hasData(a, b);
      });
      return !(d || b.includes(e));
    }
    function p(a) {
      var b = c("ReactComposerTaggerStore").getTaggersConfig(
        a,
        c("ReactComposerTaggerType").BREAKING_NEWS
      );
      if (
        ((b = b) != null
          ? (b = b.initialStatus) != null
            ? b.enabled
            : b
          : b) === !1
      )
        return !1;
      b = !1;
      c("ifRequired")("LiveVideoBroadcastUIStore", function (c) {
        c = c.get("composerConfig");
        b = c && c.composerID === a;
      });
      if (b) return !0;
      var d = c("ReactComposerScrapedAttachmentStore").hasAttachment(a),
        e = c("ReactComposerScrapedAttachmentStore").getBreakingNewsConfig(a);
      return d && !!e && e.enabled;
    }
    function q(a) {
      var b = c("ReactComposerTaggerStore").hasData(
        a,
        c("ReactComposerTaggerType").ACTIVITY
      );
      a = c("ReactComposerTaggerStore").getTaggersConfig(
        a,
        c("ReactComposerTaggerType").LOCAL_ALERTS
      );
      return (
        !b &&
        ((b = a) != null
          ? (b = b.initialStatus) != null
            ? b.enabled
            : b
          : b) === !0
      );
    }
    function r(a, b, e) {
      b === void 0 && (b = !1);
      var f = c("ReactComposerMediaUploadStore").getUploadsOfType(
          a,
          d("ReactComposerMediaUploadType").PHOTO
        ),
        g = c("ReactComposerMediaUploadStore").getUploadsOfType(
          a,
          d("ReactComposerMediaUploadType").VIDEO
        );
      f = f != null ? f.size : 0;
      g = g != null ? g.size : 0;
      if (g && g > 1) return !1;
      var h = !1;
      c("ifRequired")("VideoComposerStores", function (a) {
        a = a
          .getUploadStore(
            d("VideoComposerDispatchers").DEFAULT_VIDEO_COMPOSER_ID
          )
          .getState();
        a = a.videoData;
        h = a !== null;
      });
      if (!f && !g && !h && !e) return !1;
      g = !1;
      c("ifRequired")("ReactComposerSlideshowStore", function (b) {
        g = b.isSlideshowSelected(a);
      });
      if (g) return !1;
      e = !1;
      c("ifRequired")("ReactComposerCanvasStore", function (b) {
        e = b.isCanvasSelected(a);
      });
      if (e) return !1;
      var i = !1;
      c("ifRequired")("ReactComposerCollectionStore", function (b) {
        i = b.isCollectionSelected(a);
      });
      if (i) return !1;
      var j = !1;
      c("ifRequired")("ReactComposerPhotoCarouselStore", function (b) {
        j = b.isPhotoCarouselSelected(a);
      });
      if (j) return !1;
      var k =
          c("ReactComposerTaggerStore").getTaggerData(
            a,
            c("ReactComposerTaggerType").PRODUCT
          ) || [],
        l = c("ReactComposerTaggerStore").getTaggersConfig(
          a,
          c("ReactComposerTaggerType").PRODUCT
        );
      l =
        ((l = l) != null ? l.shouldDisableMessagingCTAOnProductTagged : l) ||
        !1;
      if (l && k.length > 0) return !1;
      l = c("ReactComposerTaggerStore").hasSupportNowCTA(a);
      if (l) return !1;
      k = c("ReactComposerTaggerStore").getTaggerData(
        a,
        c("ReactComposerTaggerType").PAGES_INTERCEPTION
      );
      k = ((l = k) != null ? l.shouldShowInlineInterception : l) || !1;
      if (k) return !1;
      return !f || f == 1 ? !0 : b;
    }
    function s(a) {
      return (
        !c("ReactComposerTaggerStore").hasData(
          a,
          c("ReactComposerTaggerType").LIVING_ROOM
        ) &&
        c("ReactComposerAttachmentStore").getSelectedAttachmentID(a) !==
          c("ReactComposerAttachmentType").LIVING_ROOM
      );
    }
    function t(a) {
      var b = [
        c("ReactComposerTaggerType").GIF,
        c("ReactComposerTaggerType").BREAKING_NEWS,
        c("ReactComposerTaggerType").OG,
        c("ReactComposerTaggerType").ALBUM,
        c("ReactComposerTaggerType").SALES_PROMO,
        c("ReactComposerTaggerType").MESSAGING,
        c("ReactComposerTaggerType").RECOMMENDATION,
        c("ReactComposerTaggerType").LIST,
        c("ReactComposerTaggerType").VISUAL_POLL,
        c("ReactComposerTaggerType").FUN_FACT,
        c("ReactComposerTaggerType").STICKER,
        c("ReactComposerTaggerType").TAG_EVENT,
        c("ReactComposerTaggerType").SHOP,
        c("ReactComposerTaggerType").PRODUCT,
        c("ReactComposerTaggerType").PAGES_INTERCEPTION,
      ];
      b = b.some(function (b) {
        return c("ReactComposerTaggerStore").hasData(a, b);
      });
      return !b;
    }
    function u(a) {
      a = c("ReactComposerMediaUploadStore").getUploadsOfType(
        a,
        d("ReactComposerMediaUploadType").PHOTO
      );
      a = a != null ? a.size : 0;
      return a > 1;
    }
    function v() {
      return [
        c("ReactComposerTaggerType").WORK_FILE,
        c("ReactComposerTaggerType").APP_INTEGRATION_AODOCS,
        c("ReactComposerTaggerType").APP_INTEGRATION_BOX,
        c("ReactComposerTaggerType").APP_INTEGRATION_CORNERSTONE,
        c("ReactComposerTaggerType").APP_INTEGRATION_DROPBOX,
        c("ReactComposerTaggerType").APP_INTEGRATION_EGNYTE,
        c("ReactComposerTaggerType").APP_INTEGRATION_GDRIVE,
        c("ReactComposerTaggerType").APP_INTEGRATION_JIRA,
        c("ReactComposerTaggerType").APP_INTEGRATION_ONEDRIVE,
        c("ReactComposerTaggerType").APP_INTEGRATION_QUIP,
        c("ReactComposerTaggerType").APP_INTEGRATION_SHAREPOINT,
        c("ReactComposerTaggerType").APP_INTEGRATION_TASKS,
        c("ReactComposerTaggerType").APP_INTEGRATION_TRELLO,
      ];
    }
    function w(a) {
      var b = c("ReactComposerAttachmentStore").getIsAttachmentSelected(
          a,
          c("ReactComposerAttachmentType").MEDIA
        ),
        e = !1,
        f = !1;
      c("ifRequired")("VideoComposerStores", function (a) {
        var b = a
          .getUploadStore(
            d("VideoComposerDispatchers").DEFAULT_VIDEO_COMPOSER_ID
          )
          .getState();
        b = b.videoData;
        e = b !== null;
        b = a
          .getEditStore(d("VideoComposerDispatchers").DEFAULT_VIDEO_COMPOSER_ID)
          .getState();
        a = b.creationTime;
        f = a !== null && a !== 0;
      });
      return (
        (b &&
          (c("ReactComposerMediaUploadStore").getUploadsCount(
            a,
            d("ReactComposerMediaUploadType").PHOTO
          ) > 0 ||
            c("ReactComposerMediaUploadStore").getUploadsCount(
              a,
              d("ReactComposerMediaUploadType").VIDEO
            ) > 0)) ||
        e ||
        f
      );
    }
    function x(a) {
      var b = c("ReactComposerStatusStore").getMessageText(a);
      if (c("URLScraper").permissiveMatch(b) != null) return !1;
      return c("ReactComposerScrapedAttachmentStore").hasAttachment(a)
        ? !1
        : !0;
    }
    g.isStoryCreateEligible = a;
    g.isAdsPePostEligible = b;
    g.getAdsPePostSharingEligibility = h;
    g.isInstagramEligible = e;
    g.getInstagramSharingEligibility = i;
    g._getInstagramSharingEligibilityForPhoto = j;
    g._getInstagramSharingEligibilityForVideo = k;
    g._isValidTaggerID = f;
    g.isSATPEligible = l;
    g.exceedSATPCharacterCountOrExceedNewLinesCount = m;
    g.isGIFEligible = n;
    g.isAppIntegrationEligible = o;
    g.isBreakingNewsEligible = p;
    g.isLocalAlertsEligible = q;
    g.isMessagingEligible = r;
    g.isSponsorEligible = s;
    g.isGetShowtimesEligible = t;
    g.hasMultiPhoto = u;
    g.getWorkContentTaggerList = v;
    g.isProductTaggingEligible = w;
    g.isChatroomEligible = x;
  },
  98
);
__d(
  "getInitialTaggersData",
  ["ReactComposerTaggerType"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a() {
      var a = {};
      a[c("ReactComposerTaggerType").PEOPLE] = [];
      a[c("ReactComposerTaggerType").LOCATION] = {};
      a[c("ReactComposerTaggerType").BACKDATE] = {};
      a[c("ReactComposerTaggerType").ACTIVITY] = {};
      a[c("ReactComposerTaggerType").TARGETING] = {};
      a[c("ReactComposerTaggerType").PUBLISHER_ABTEST_HOLDOUT] = {};
      a[c("ReactComposerTaggerType").SPONSOR] = {
        canAddSponsorCTA: !1,
        directShareStatus: 0,
        sponsorRelationship: 0,
        sponsors: [],
        hasRestrictedAudience: !1,
        geo_age_gates: [],
      };
      a[c("ReactComposerTaggerType").BC_SUPPORT] = {
        directShareStatus: 1,
        sponsorRelationship: 4,
        sponsors: [],
      };
      a[c("ReactComposerTaggerType").PRODUCT] = [];
      a[c("ReactComposerTaggerType").XY_PRODUCT] = [];
      a[c("ReactComposerTaggerType").PRODUCT_SPROUT] = {};
      a[c("ReactComposerTaggerType").AMA] = {};
      a[c("ReactComposerTaggerType").CONTENT_WARNINGS] = [];
      a[c("ReactComposerTaggerType").MESSAGING] = [];
      a[c("ReactComposerTaggerType").GET_SHOWTIMES] = {};
      a[c("ReactComposerTaggerType").GROUP_JOIN_CTA] = {};
      a[c("ReactComposerTaggerType").POLITICAL_INFO] = {};
      a[c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE] = {};
      a[c("ReactComposerTaggerType").GIF] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_AODOCS] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_BOX] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_CORNERSTONE] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_DROPBOX] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_EGNYTE] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_GDRIVE] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_JIRA] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_ONEDRIVE] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_QUIP] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_SHAREPOINT] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_TASKS] = {};
      a[c("ReactComposerTaggerType").APP_INTEGRATION_TRELLO] = {};
      a[c("ReactComposerTaggerType").WORK_FILE] = {};
      a[c("ReactComposerTaggerType").FUNDRAISER] = {};
      a[c("ReactComposerTaggerType").PLAY_WITH_FRIENDS] = {};
      a[c("ReactComposerTaggerType").BREAKING_NEWS] = {
        isAttachmentBreaking: !1,
        expirationTime: 0,
      };
      a[c("ReactComposerTaggerType").LOCAL_ALERTS] = { expirationTime: 0 };
      a[c("ReactComposerTaggerType").TAG_EVENT] = {};
      a[c("ReactComposerTaggerType").VIDEO_SUGGESTIONS] = {};
      a[c("ReactComposerTaggerType").SUPPORT_NOW] = {};
      a[c("ReactComposerTaggerType").STARS] = {};
      a[c("ReactComposerTaggerType").PAGES_INTERCEPTION] = {
        shouldShowInlineInterception: !1,
        interceptionDecision: null,
      };
      a[c("ReactComposerTaggerType").SOTTO_CTA] = {};
      a[c("ReactComposerTaggerType").PAID_VIRTUAL_EVENT_GATED_POST] = {};
      a[c("ReactComposerTaggerType").CHATROOM] = { hasChatroom: !1 };
      a[c("ReactComposerTaggerType").COVID_BUSINESS_POST] = { isSelected: !1 };
      a[c("ReactComposerTaggerType").WORK_CHECKLIST] = { hasChecklist: !1 };
      return a;
    }
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerTaggerStore",
  [
    "ReactComposerAttachmentActionType",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "ReactComposerDispatcher",
    "ReactComposerMediaUploadActionType",
    "ReactComposerMediaUploadStore",
    "ReactComposerPhotoActionType",
    "ReactComposerPhotoStore",
    "ReactComposerScrapedAttachmentActionType",
    "ReactComposerStoreBase",
    "ReactComposerTaggerActionType",
    "ReactComposerTaggerEligibilityUtils",
    "ReactComposerTaggerType",
    "SearchableEntry",
    "first",
    "getInitialTaggersData",
    "immutable",
    "isEmpty",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              var a = {};
              a[c("ReactComposerTaggerType").FORMATTED_TEXT] = {
                maxNewLines: 3,
                textLengthLimit: 130,
              };
              var b = c("getInitialTaggersData")();
              return {
                $ReactComposerTaggerStore1: c("immutable").Set(),
                autoFocusOnSelectedTagger: !0,
                selectedTagger: null,
                taggersData: b,
                taggersSource: {},
                taggersShowNUX: {},
                taggersShowTooltip: {},
                sourceAttachment: null,
                taggersConfig: a,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerTaggerActionType").DESELECT_TAGGER:
                  d && d.$ReactComposerTaggerStore2(a);
                  break;
                case c("ReactComposerTaggerActionType").SET_SELECTED_TAGGER:
                  d && d.$ReactComposerTaggerStore3(a);
                  break;
                case c("ReactComposerTaggerActionType").UPDATE_TAGGERS_SOURCE:
                  d && d.$ReactComposerTaggerStore4(a);
                  break;
                case c("ReactComposerTaggerActionType").SET_TAGGER_SOURCE:
                  d && d.$ReactComposerTaggerStore5(a);
                  break;
                case c("ReactComposerTaggerActionType").SET_TAGGER_DATA:
                  d && d.$ReactComposerTaggerStore6(a);
                  break;
                case c("ReactComposerTaggerActionType").SET_TAGGER_SHOW_NUX:
                  d && d.$ReactComposerTaggerStore7(a);
                  break;
                case c("ReactComposerTaggerActionType").SET_TAGGER_SHOW_TOOLTIP:
                  d && d.$ReactComposerTaggerStore8(a);
                  break;
                case c("ReactComposerTaggerActionType").SET_TAGGER_CONFIG:
                  d && d.$ReactComposerTaggerStore9(a);
                  break;
                case c("ReactComposerTaggerActionType")
                  .SET_SHOULD_NAVIGATE_TO_PHOTO_EDITOR:
                  d && d.$ReactComposerTaggerStore10(a);
                  break;
                case c("ReactComposerTaggerActionType")
                  .SET_PRODUCT_TAGGING_PLATFORM:
                  d && d.$ReactComposerTaggerStore11(a);
                  break;
                case c("ReactComposerTaggerActionType")
                  .SET_COMPOSER_HAS_VIDEO_UPLOADS:
                  d && d.$ReactComposerTaggerStore12(a);
                  break;
                case c("ReactComposerTaggerActionType")
                  .SET_SHOULD_SHOW_PT_MEDIA_UPLOAD_MODAL:
                  d && d.$ReactComposerTaggerStore13(a);
                  break;
                case c("ReactComposerTaggerActionType").SET_PHOTO_EDITOR_OPENED:
                  d && d.$ReactComposerTaggerStore14(a);
                  break;
                case c("ReactComposerTaggerActionType")
                  .SET_PRODUCT_SUGGESTION_PHOTO_ID:
                  d && d.$ReactComposerTaggerStore15(a);
                  break;
                case c("ReactComposerTaggerActionType").SET_REFERRAL_SOURCE:
                  d && d.$ReactComposerTaggerStore16(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_ADD_FACEBOX:
                  d && d.$ReactComposerTaggerStore17(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_TAG_XY:
                  d && d.$ReactComposerTaggerStore18(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_TAG_XY_PRODUCT:
                  d && d.$ReactComposerTaggerStore19(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_TAG_FACEBOX:
                  d && d.$ReactComposerTaggerStore20(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_UNTAG_ALL:
                  d && d.$ReactComposerTaggerStore21(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_UNTAG_FACEBOX:
                  c("ReactComposerDispatcher").waitFor([
                    c("ReactComposerPhotoStore").getDispatchToken(),
                  ]);
                  d && d.$ReactComposerTaggerStore22(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_UPDATE_ALL_PHOTO_TAGS:
                  d && d.$ReactComposerTaggerStore23(a);
                  break;
                case c("ReactComposerPhotoActionType").PHOTO_REMOVE:
                  c("ReactComposerDispatcher").waitFor([
                    c("ReactComposerPhotoStore").getDispatchToken(),
                  ]);
                  d && d.$ReactComposerTaggerStore24(a);
                  break;
                case c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_DONE:
                  d && d.$ReactComposerTaggerStore25(a);
                  break;
                case c("ReactComposerAttachmentActionType").SELECT_ATTACHMENT:
                  d && d.$ReactComposerTaggerStore26(a);
                  break;
                case c("ReactComposerScrapedAttachmentActionType")
                  .ATTACHMENT_SCRAPED:
                  d && d.$ReactComposerTaggerStore27(a);
                  break;
                case c("ReactComposerPhotoActionType")
                  .PHOTO_UPDATE_ALL_PRODUCT_TAGS:
                  d && d.$ReactComposerTaggerStore28(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.isDisabled = function (a, b, e, f) {
        var g = this;
        e === void 0 && (e = !1);
        var h = [c("ReactComposerAttachmentType").STATUS],
          i = !1,
          j = [],
          k = [];
        switch (b) {
          case c("ReactComposerTaggerType").CONTENT_WARNINGS:
          case c("ReactComposerTaggerType").BACKDATE:
          case c("ReactComposerTaggerType").TARGETING:
          case c("ReactComposerTaggerType").PUBLISHER_ABTEST_HOLDOUT:
          case c("ReactComposerTaggerType").ALBUM:
          case c("ReactComposerTaggerType").VAULTPHOTO:
          case c("ReactComposerTaggerType").SALES_PROMO:
          case c("ReactComposerTaggerType").GROUP_JOIN_CTA:
          case c("ReactComposerTaggerType").PAGES_INTERCEPTION:
          case c("ReactComposerTaggerType").STARS:
          case c("ReactComposerTaggerType").PAID_VIRTUAL_EVENT_GATED_POST:
            return !1;
          case c("ReactComposerTaggerType").CHATROOM:
            return !d("ReactComposerTaggerEligibilityUtils").isChatroomEligible(
              a
            );
          case c("ReactComposerTaggerType").FORMATTED_TEXT:
            return !d("ReactComposerTaggerEligibilityUtils").isSATPEligible(
              a,
              this.getTaggersConfig(
                a,
                c("ReactComposerTaggerType").FORMATTED_TEXT
              )
            );
          case c("ReactComposerTaggerType").MESSENGER:
          case c("ReactComposerTaggerType").STORIES:
            return !d(
              "ReactComposerTaggerEligibilityUtils"
            ).isStoryCreateEligible(a);
          case c("ReactComposerTaggerType").ADS_PE_POST:
            return !d(
              "ReactComposerTaggerEligibilityUtils"
            ).isAdsPePostEligible(a);
          case c("ReactComposerTaggerType").INSTAGRAM:
            return !d(
              "ReactComposerTaggerEligibilityUtils"
            ).isInstagramEligible(a);
          case c("ReactComposerTaggerType").GIF:
            return !d("ReactComposerTaggerEligibilityUtils").isGIFEligible(a);
          case c("ReactComposerTaggerType").APP_INTEGRATION_AODOCS:
          case c("ReactComposerTaggerType").APP_INTEGRATION_BOX:
          case c("ReactComposerTaggerType").APP_INTEGRATION_CORNERSTONE:
          case c("ReactComposerTaggerType").APP_INTEGRATION_DROPBOX:
          case c("ReactComposerTaggerType").APP_INTEGRATION_EGNYTE:
          case c("ReactComposerTaggerType").APP_INTEGRATION_GDRIVE:
          case c("ReactComposerTaggerType").APP_INTEGRATION_JIRA:
          case c("ReactComposerTaggerType").APP_INTEGRATION_ONEDRIVE:
          case c("ReactComposerTaggerType").APP_INTEGRATION_QUIP:
          case c("ReactComposerTaggerType").APP_INTEGRATION_SHAREPOINT:
          case c("ReactComposerTaggerType").APP_INTEGRATION_TASKS:
          case c("ReactComposerTaggerType").APP_INTEGRATION_TRELLO:
          case c("ReactComposerTaggerType").WORK_FILE:
            return !d(
              "ReactComposerTaggerEligibilityUtils"
            ).isAppIntegrationEligible(a);
          case c("ReactComposerTaggerType").BREAKING_NEWS:
            return !d(
              "ReactComposerTaggerEligibilityUtils"
            ).isBreakingNewsEligible(a);
          case c("ReactComposerTaggerType").PEOPLE:
          case c("ReactComposerTaggerType").OG:
            j = [c("ReactComposerTaggerType").STORIES];
            k = [];
            break;
          case c("ReactComposerTaggerType").LOCATION:
            j = [
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").RECRUITING_CANDIDATE,
              c("ReactComposerTaggerType").WORK_CHECKLIST,
            ];
            k = [
              c("ReactComposerAttachmentType").CTA,
              c("ReactComposerAttachmentType").MESSAGE,
              c("ReactComposerAttachmentType").CALL,
            ];
            break;
          case c("ReactComposerTaggerType").LOCAL_ALERTS:
            return !d(
              "ReactComposerTaggerEligibilityUtils"
            ).isLocalAlertsEligible(a);
          case c("ReactComposerTaggerType").MESSAGING:
            return !d(
              "ReactComposerTaggerEligibilityUtils"
            ).isMessagingEligible(a, e, f);
          case c("ReactComposerTaggerType").GET_SHOWTIMES:
            return !d(
              "ReactComposerTaggerEligibilityUtils"
            ).isGetShowtimesEligible(a);
          case c("ReactComposerTaggerType").PRODUCT:
          case c("ReactComposerTaggerType").XY_PRODUCT:
            k = [
              c("ReactComposerAttachmentType").MESSAGE,
              c("ReactComposerAttachmentType").SHOP,
            ];
            break;
          case c("ReactComposerTaggerType").SPONSOR:
            e = this.getTaggerData(a, c("ReactComposerTaggerType").BC_SUPPORT);
            e = c("first")(
              (f = e == null ? void 0 : e.sponsors) != null ? f : []
            );
            f = d("ReactComposerTaggerEligibilityUtils").isSponsorEligible(a);
            e = e != null;
            return !f || e;
          case c("ReactComposerTaggerType").BC_SUPPORT:
            f = this.getTaggerData(a, c("ReactComposerTaggerType").SPONSOR);
            f = c("first")(
              (e = f == null ? void 0 : f.sponsors) != null ? e : []
            );
            e = d("ReactComposerTaggerEligibilityUtils").isSponsorEligible(a);
            f = f != null;
            return !e || f;
          case c("ReactComposerTaggerType").PAGE_CTA:
          case c("ReactComposerTaggerType").LOCAL_DEV_PLATFORM:
          case c("ReactComposerTaggerType").CALL:
          case c("ReactComposerTaggerType").SHOP:
            j = [
              c("ReactComposerTaggerType").ACTIVITY,
              c("ReactComposerTaggerType").LOCATION,
              c("ReactComposerTaggerType").PRODUCT,
              c("ReactComposerTaggerType").STORIES,
            ];
            k = [c("ReactComposerAttachmentType").LIVING_ROOM];
            break;
          case c("ReactComposerTaggerType").RECOMMENDATION:
            j = [
              c("ReactComposerTaggerType").POLITICAL_INFO,
              c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE,
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").ALBUM,
              c("ReactComposerTaggerType").FUNDRAISER,
              c("ReactComposerTaggerType").SUPPORT_NOW,
              c("ReactComposerTaggerType").CAMERA,
              c("ReactComposerTaggerType").GIF,
              c("ReactComposerTaggerType").TAG_EVENT,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").PLAY_WITH_FRIENDS,
              c("ReactComposerTaggerType").SOTTO_CTA,
            ];
            i = !0;
            break;
          case c("ReactComposerTaggerType").FIND_PLAYERS:
            j = [c("ReactComposerTaggerType").BC_SUPPORT];
            i = !0;
            break;
          case c("ReactComposerTaggerType").LIST:
            j = [
              c("ReactComposerTaggerType").VISUAL_POLL,
              c("ReactComposerTaggerType").POLITICAL_INFO,
              c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE,
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").ALBUM,
              c("ReactComposerTaggerType").FUNDRAISER,
              c("ReactComposerTaggerType").SUPPORT_NOW,
              c("ReactComposerTaggerType").CAMERA,
              c("ReactComposerTaggerType").GIF,
              c("ReactComposerTaggerType").TAG_EVENT,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").PLAY_WITH_FRIENDS,
              c("ReactComposerTaggerType").SOTTO_CTA,
            ];
            i = !0;
            break;
          case c("ReactComposerTaggerType").VISUAL_POLL:
            j = [
              c("ReactComposerTaggerType").LIST,
              c("ReactComposerTaggerType").POLITICAL_INFO,
              c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE,
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").ALBUM,
              c("ReactComposerTaggerType").FUNDRAISER,
              c("ReactComposerTaggerType").SUPPORT_NOW,
              c("ReactComposerTaggerType").CAMERA,
              c("ReactComposerTaggerType").GIF,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").PLAY_WITH_FRIENDS,
              c("ReactComposerTaggerType").RECRUITING_CANDIDATE,
              c("ReactComposerTaggerType").SOTTO_CTA,
              c("ReactComposerTaggerType").WORK_CHECKLIST,
            ].concat(
              d(
                "ReactComposerTaggerEligibilityUtils"
              ).getWorkContentTaggerList()
            );
            i = !0;
            break;
          case c("ReactComposerTaggerType").LIVING_ROOM:
            return !0;
          case c("ReactComposerTaggerType").TODO_LIST:
            j = [
              c("ReactComposerTaggerType").LIST,
              c("ReactComposerTaggerType").VISUAL_POLL,
              c("ReactComposerTaggerType").POLITICAL_INFO,
              c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE,
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").ALBUM,
              c("ReactComposerTaggerType").FUNDRAISER,
              c("ReactComposerTaggerType").SUPPORT_NOW,
              c("ReactComposerTaggerType").CAMERA,
              c("ReactComposerTaggerType").GIF,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").PLAY_WITH_FRIENDS,
              c("ReactComposerTaggerType").SOTTO_CTA,
            ];
            i = !0;
            break;
          case c("ReactComposerTaggerType").POLITICAL_INFO:
          case c("ReactComposerTaggerType").CAMERA:
            k = [
              c("ReactComposerAttachmentType").PLACE_LIST,
              c("ReactComposerAttachmentType").VISUAL_POLL,
              c("ReactComposerAttachmentType").TODO_LIST,
              c("ReactComposerAttachmentType").LIST,
              c("ReactComposerAttachmentType").ASSET_3D,
            ];
            break;
          case c("ReactComposerTaggerType").ACTIVITY:
            j = [
              c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE,
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").TAG_EVENT,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").LOCAL_ALERTS,
              c("ReactComposerTaggerType").RECRUITING_CANDIDATE,
              c("ReactComposerTaggerType").AMA,
              c("ReactComposerTaggerType").COVID_BUSINESS_POST,
            ];
            k = [
              c("ReactComposerAttachmentType").CTA,
              c("ReactComposerAttachmentType").MESSAGE,
              c("ReactComposerAttachmentType").CALL,
            ];
            break;
          case c("ReactComposerTaggerType").AMA:
            j = [
              c("ReactComposerTaggerType").ACTIVITY,
              c("ReactComposerTaggerType").WORK_CHECKLIST,
            ];
            break;
          case c("ReactComposerTaggerType").FUN_FACT:
            j = [
              c("ReactComposerTaggerType").ACTIVITY,
              c("ReactComposerTaggerType").FUNDRAISER,
              c("ReactComposerTaggerType").SUPPORT_NOW,
              c("ReactComposerTaggerType").LOCATION,
              c("ReactComposerTaggerType").STICKER,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").TAG_EVENT,
              c("ReactComposerTaggerType").PLAY_WITH_FRIENDS,
              c("ReactComposerTaggerType").SOTTO_CTA,
            ];
            k = [
              c("ReactComposerAttachmentType").PLACE_LIST,
              c("ReactComposerAttachmentType").LIST,
              c("ReactComposerAttachmentType").VISUAL_POLL,
              c("ReactComposerAttachmentType").SHARING_SPACES_SELECTOR,
            ];
            i = !0;
            break;
          case c("ReactComposerTaggerType").STICKER:
            j = [
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").RECRUITING_CANDIDATE,
            ].concat(
              d(
                "ReactComposerTaggerEligibilityUtils"
              ).getWorkContentTaggerList()
            );
            k = [
              c("ReactComposerAttachmentType").ASSET_3D,
              c("ReactComposerAttachmentType").VISUAL_POLL,
              c("ReactComposerAttachmentType").TODO_LIST,
            ];
            break;
          case c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE:
            j = [
              c("ReactComposerTaggerType").ACTIVITY,
              c("ReactComposerTaggerType").TAG_EVENT,
            ];
            k = [
              c("ReactComposerAttachmentType").LIST,
              c("ReactComposerAttachmentType").PLACE_LIST,
              c("ReactComposerAttachmentType").VISUAL_POLL,
              c("ReactComposerAttachmentType").TODO_LIST,
            ];
            break;
          case c("ReactComposerTaggerType").FUNDRAISER:
            j = [
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").PLAY_WITH_FRIENDS,
              c("ReactComposerTaggerType").SUPPORT_NOW,
              c("ReactComposerTaggerType").SOTTO_CTA,
            ];
            k = [
              c("ReactComposerAttachmentType").LIST,
              c("ReactComposerAttachmentType").PLACE_LIST,
              c("ReactComposerAttachmentType").VISUAL_POLL,
              c("ReactComposerAttachmentType").TODO_LIST,
              c("ReactComposerAttachmentType").LIVING_ROOM,
            ];
            break;
          case c("ReactComposerTaggerType").SUPPORT_NOW:
            j = [
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").PLAY_WITH_FRIENDS,
              c("ReactComposerTaggerType").FUNDRAISER,
              c("ReactComposerTaggerType").MESSAGING,
              c("ReactComposerTaggerType").SOTTO_CTA,
            ];
            k = [
              c("ReactComposerAttachmentType").ASSET_3D,
              c("ReactComposerAttachmentType").LIST,
              c("ReactComposerAttachmentType").PLACE_LIST,
              c("ReactComposerAttachmentType").VISUAL_POLL,
              c("ReactComposerAttachmentType").TODO_LIST,
              c("ReactComposerAttachmentType").LIVING_ROOM,
            ];
            break;
          case c("ReactComposerTaggerType").PLAY_WITH_FRIENDS:
            j = [
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").FUNDRAISER,
              c("ReactComposerTaggerType").SUPPORT_NOW,
              c("ReactComposerTaggerType").SOTTO_CTA,
            ];
            k = [
              c("ReactComposerAttachmentType").LIST,
              c("ReactComposerAttachmentType").PLACE_LIST,
              c("ReactComposerAttachmentType").VISUAL_POLL,
            ];
            i = !0;
            break;
          case c("ReactComposerTaggerType").TAG_EVENT:
            j = [
              c("ReactComposerTaggerType").ACTIVITY,
              c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE,
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").RECOMMENDATION,
              c("ReactComposerTaggerType").STORIES,
            ];
            k = [
              c("ReactComposerAttachmentType").LIST,
              c("ReactComposerAttachmentType").PLACE_LIST,
            ];
            break;
          case c("ReactComposerTaggerType").ASSET_3D:
            i = !0;
            break;
          case c("ReactComposerTaggerType").VIDEO_SUGGESTIONS:
            k = [
              c("ReactComposerAttachmentType").LIST,
              c("ReactComposerAttachmentType").PLACE_LIST,
              c("ReactComposerAttachmentType").VISUAL_POLL,
            ];
            i = !0;
            break;
          case c("ReactComposerTaggerType").RECRUITING_CANDIDATE:
            j = [
              c("ReactComposerTaggerType").GIF,
              c("ReactComposerTaggerType").OG,
              c("ReactComposerTaggerType").ALBUM,
              c("ReactComposerTaggerType").RECOMMENDATION,
              c("ReactComposerTaggerType").LIST,
              c("ReactComposerTaggerType").VISUAL_POLL,
              c("ReactComposerTaggerType").STICKER,
              c("ReactComposerTaggerType").TAG_EVENT,
              c("ReactComposerTaggerType").ACTIVITY,
              c("ReactComposerTaggerType").WORK_CHECKLIST,
            ].concat(
              d(
                "ReactComposerTaggerEligibilityUtils"
              ).getWorkContentTaggerList()
            );
            k = [
              c("ReactComposerAttachmentType").LIST,
              c("ReactComposerAttachmentType").PLACE_LIST,
              c("ReactComposerAttachmentType").TODO_LIST,
              c("ReactComposerAttachmentType").VISUAL_POLL,
              c("ReactComposerAttachmentType").MEDIA,
            ];
            i = !0;
            break;
          case c("ReactComposerTaggerType").SOTTO_CTA:
            j = [
              c("ReactComposerTaggerType").FUN_FACT,
              c("ReactComposerTaggerType").STORIES,
              c("ReactComposerTaggerType").PLAY_WITH_FRIENDS,
              c("ReactComposerTaggerType").FUNDRAISER,
              c("ReactComposerTaggerType").MESSAGING,
              c("ReactComposerTaggerType").SUPPORT_NOW,
            ];
            k = [
              c("ReactComposerAttachmentType").ASSET_3D,
              c("ReactComposerAttachmentType").LIST,
              c("ReactComposerAttachmentType").PLACE_LIST,
              c("ReactComposerAttachmentType").VISUAL_POLL,
              c("ReactComposerAttachmentType").TODO_LIST,
              c("ReactComposerAttachmentType").LIVING_ROOM,
            ];
            break;
          case c("ReactComposerTaggerType").WORK_CHECKLIST:
            j = [
              c("ReactComposerTaggerType").ALBUM,
              c("ReactComposerTaggerType").AMA,
              c("ReactComposerTaggerType").GIF,
              c("ReactComposerTaggerType").MEDIA,
              c("ReactComposerTaggerType").LOCATION,
              c("ReactComposerTaggerType").VISUAL_POLL,
            ].concat(
              d(
                "ReactComposerTaggerEligibilityUtils"
              ).getWorkContentTaggerList()
            );
            k = Object.values(c("ReactComposerAttachmentType")).filter(
              function (a) {
                return a !== c("ReactComposerAttachmentType").STATUS;
              }
            );
            break;
          case c("ReactComposerTaggerType").MEDIA:
            j = [c("ReactComposerTaggerType").WORK_CHECKLIST];
            break;
          case c("ReactComposerTaggerType").COVID_BUSINESS_POST:
            break;
          case c("ReactComposerTaggerType").VIDEO_MEETUP:
            j = [c("ReactComposerTaggerType").WORK_CHECKLIST];
            break;
          case c("ReactComposerTaggerType").JOB_SEARCH:
            break;
          case c("ReactComposerTaggerType").HASHTAG:
            break;
          default:
            throw new Error(
              b +
                " is an unhandled tagger type in ReactComposerTaggerStore.isDisabled"
            );
        }
        e = c("ReactComposerAttachmentStore").getSelectedAttachmentID(a);
        f = j.some(function (b) {
          return g.hasData(a, b);
        });
        if (f || k.includes(e)) return !0;
        if (e === this.$ReactComposerTaggerStore29(b)) return !1;
        j = h.some(function (b) {
          return c(
            "ReactComposerAttachmentStore"
          ).getIsAttachmentSelectedOrProxied(a, b);
        });
        return i && !j;
      };
      e.getInstagramSharingEligibility = function (a) {
        return d(
          "ReactComposerTaggerEligibilityUtils"
        ).getInstagramSharingEligibility(a);
      };
      e.getAdsPePostSharingEligibility = function (a) {
        return d(
          "ReactComposerTaggerEligibilityUtils"
        ).getAdsPePostSharingEligibility(a);
      };
      e.$ReactComposerTaggerStore29 = function (a) {
        switch (a) {
          case c("ReactComposerTaggerType").ASSET_3D:
            return c("ReactComposerAttachmentType").ASSET_3D;
          case c("ReactComposerTaggerType").CALL:
            return c("ReactComposerAttachmentType").CALL;
          case c("ReactComposerTaggerType").PAGE_CTA:
            return c("ReactComposerAttachmentType").CTA;
          case c("ReactComposerTaggerType").MESSAGING:
            return c("ReactComposerAttachmentType").MESSAGE;
          case c("ReactComposerTaggerType").RECOMMENDATION:
            return c("ReactComposerAttachmentType").PLACE_LIST;
          case c("ReactComposerTaggerType").FIND_PLAYERS:
            return c("ReactComposerAttachmentType").FIND_PLAYERS;
          case c("ReactComposerTaggerType").VISUAL_POLL:
            return c("ReactComposerAttachmentType").VISUAL_POLL;
          case c("ReactComposerTaggerType").LIST:
            return c("ReactComposerAttachmentType").LIST;
          case c("ReactComposerTaggerType").TODO_LIST:
            return c("ReactComposerAttachmentType").TODO_LIST;
          case c("ReactComposerTaggerType").LIVING_ROOM:
            return c("ReactComposerAttachmentType").LIVING_ROOM;
          case c("ReactComposerTaggerType").MEDIA:
            return c("ReactComposerAttachmentType").MEDIA;
          default:
            return null;
        }
      };
      e.getDisplayableSponsorPage = function (a) {
        a = this.getTaggerData(a, c("ReactComposerTaggerType").SPONSOR);
        a = (a.sponsors || [])[0];
        return !a ? null : { id: a.getUniqueID(), name: a.getTitle() };
      };
      e.getDisplayableBCSupportSponsorPage = function (a) {
        a = this.getTaggerData(a, c("ReactComposerTaggerType").BC_SUPPORT);
        a = (a.sponsors || [])[0];
        return !a ? null : { id: a.getUniqueID(), name: a.getTitle() };
      };
      e.hasData = function (a, b) {
        var d;
        a = this.getTaggerData(a, b);
        if (a == null) return !1;
        switch (b) {
          case c("ReactComposerTaggerType").PEOPLE:
          case c("ReactComposerTaggerType").PRODUCT:
          case c("ReactComposerTaggerType").XY_PRODUCT:
          case c("ReactComposerTaggerType").PRODUCT_SPROUT:
          case c("ReactComposerTaggerType").CONTENT_WARNINGS:
            return a.length > 0;
          case c("ReactComposerTaggerType").LOCATION:
            return !!a.place;
          case c("ReactComposerTaggerType").BACKDATE:
            return !!a.year;
          case c("ReactComposerTaggerType").ACTIVITY:
            return !!a.action && !!a.object;
          case c("ReactComposerTaggerType").AMA:
            return !!a.isAMA;
          case c("ReactComposerTaggerType").TARGETING:
            return (
              !c("isEmpty")(a) && (a.gating != null || a.targeting != null)
            );
          case c("ReactComposerTaggerType").PUBLISHER_ABTEST_HOLDOUT:
          case c("ReactComposerTaggerType").POLITICAL_INFO:
            return !c("isEmpty")(a);
          case c("ReactComposerTaggerType").LOCAL_ALERTS:
            return a.expirationTime > 0;
          case c("ReactComposerTaggerType").BREAKING_NEWS:
            return (
              !c("isEmpty")(a) && a.isAttachmentBreaking && a.expirationTime > 0
            );
          case c("ReactComposerTaggerType").FUN_FACT:
            return !!a.promptID || !!a.isAskPost;
          case c("ReactComposerTaggerType").SPONSOR:
            return a.sponsors && a.sponsors.length > 0;
          case c("ReactComposerTaggerType").BC_SUPPORT:
            return a.sponsors && a.sponsors.length > 0;
          case c("ReactComposerTaggerType").FORMATTED_TEXT:
            return !!a.formatActive;
          case c("ReactComposerTaggerType").STICKER:
            return !!a.stickerID;
          case c("ReactComposerTaggerType").GIF:
            return !!a.gifData;
          case c("ReactComposerTaggerType").APP_INTEGRATION_AODOCS:
          case c("ReactComposerTaggerType").APP_INTEGRATION_BOX:
          case c("ReactComposerTaggerType").APP_INTEGRATION_CORNERSTONE:
          case c("ReactComposerTaggerType").APP_INTEGRATION_DROPBOX:
          case c("ReactComposerTaggerType").APP_INTEGRATION_EGNYTE:
          case c("ReactComposerTaggerType").APP_INTEGRATION_GDRIVE:
          case c("ReactComposerTaggerType").APP_INTEGRATION_JIRA:
          case c("ReactComposerTaggerType").APP_INTEGRATION_ONEDRIVE:
          case c("ReactComposerTaggerType").APP_INTEGRATION_QUIP:
          case c("ReactComposerTaggerType").APP_INTEGRATION_SHAREPOINT:
          case c("ReactComposerTaggerType").APP_INTEGRATION_TASKS:
          case c("ReactComposerTaggerType").APP_INTEGRATION_TRELLO:
            return !!a.isAppAttachmentData;
          case c("ReactComposerTaggerType").WORK_FILE:
            return !!a.isWorkFileUpload;
          case c("ReactComposerTaggerType").MESSAGING:
            return a.hasCTA;
          case c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE:
            return !!a.politicalRepresentative;
          case c("ReactComposerTaggerType").FUNDRAISER:
            return !!a.charityID;
          case c("ReactComposerTaggerType").TAG_EVENT:
            return !!a.eventID;
          case c("ReactComposerTaggerType").VIDEO_SUGGESTIONS:
            return !!a.videoID;
          case c("ReactComposerTaggerType").PLAY_WITH_FRIENDS:
            return !!a.gameID;
          case c("ReactComposerTaggerType").GET_SHOWTIMES:
            return !!a.external_movie_id;
          case c("ReactComposerTaggerType").GROUP_JOIN_CTA:
            return !!a.groupID;
          case c("ReactComposerTaggerType").SUPPORT_NOW:
            return a.hasSupportNowCTA;
          case c("ReactComposerTaggerType").STARS:
            return a.isEnabled;
          case c("ReactComposerTaggerType").PAGES_INTERCEPTION:
            return a.shouldShowInlineInterception;
          case c("ReactComposerTaggerType").RECRUITING_CANDIDATE:
            return !c("isEmpty")(a);
          case c("ReactComposerTaggerType").SOTTO_CTA:
            return a.hasSottoCTA;
          case c("ReactComposerTaggerType").PAID_VIRTUAL_EVENT_GATED_POST:
            return (d = a.selected) != null ? d : !1;
          case c("ReactComposerTaggerType").CHATROOM:
            return a.hasChatroom;
          case c("ReactComposerTaggerType").COVID_BUSINESS_POST:
            return a.isSelected;
          case c("ReactComposerTaggerType").WORK_CHECKLIST:
            return a.hasChecklist;
          default:
            throw new Error(
              b +
                " is an unhandled tagger type in ReactComposerTaggerStore.hasData"
            );
        }
      };
      e.shouldShowNUX = function (a, b) {
        a = this.getComposerData(a);
        return !!a.taggersShowNUX[b];
      };
      e.shouldShowTooltip = function (a, b) {
        a = this.getComposerData(a);
        return !!a.taggersShowTooltip[b];
      };
      e.areAllTaggersEmpty = function (a) {
        return this.areAllTaggersEmptyExcluding(a, [
          c("ReactComposerTaggerType").AMA,
          c("ReactComposerTaggerType").TARGETING,
        ]);
      };
      e.areAllTaggersEmptyExcluding = function (a, b) {
        var c = this.getTaggersData(a);
        for (c in c) {
          if (b.indexOf(c) !== -1) continue;
          if (this.hasData(a, c)) return !1;
        }
        return !0;
      };
      e.getSelectedTagger = function (a) {
        return this.getComposerData(a).selectedTagger;
      };
      e.getAutoFocusOnSelectedTagger = function (a) {
        return this.getComposerData(a).autoFocusOnSelectedTagger;
      };
      e.getTaggerSource = function (a, b) {
        return this.getComposerData(a).taggersSource[b];
      };
      e.getTaggerData = function (a, b) {
        return this.getComposerData(a).taggersData[b];
      };
      e.getTaggersData = function (a) {
        return this.getComposerData(a).taggersData;
      };
      e.getTaggersConfig = function (a, b) {
        return this.getComposerData(a).taggersConfig[b];
      };
      e.getShouldNavigateToPhotoEditor = function (a) {
        return this.getComposerData(a).taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].shouldNavigateToPhotoEditor;
      };
      e.getProductTaggingPlatform = function (a) {
        return this.getComposerData(a).taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].platform;
      };
      e.getComposerHasVideoUploads = function (a) {
        return this.getComposerData(a).taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].composerHasVideoUploads;
      };
      e.getShouldShowPtMediaUploadModal = function (a) {
        return this.getComposerData(a).taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].shouldShowPtMediaUploadModal;
      };
      e.getPhotoEditorOpened = function (a) {
        return this.getComposerData(a).taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].photoEditorOpened;
      };
      e.getProductSuggestionPhotoID = function (a) {
        return this.getComposerData(a).taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].productSuggestionPhotoID;
      };
      e.getReferralSource = function (a) {
        return this.getComposerData(a).taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].referralSource;
      };
      e.hasMinutiae = function (a) {
        a = this.getTaggerData(a, c("ReactComposerTaggerType").ACTIVITY);
        return !!(a && a.action && a.object);
      };
      e.hasLocationTag = function (a) {
        a = this.getTaggerData(a, c("ReactComposerTaggerType").LOCATION);
        return !!(a && (a.place || a.implicitLocation));
      };
      e.hasExplicitLocation = function (a) {
        a = this.getTaggerData(a, c("ReactComposerTaggerType").LOCATION);
        return !!(a && a.place);
      };
      e.hasImplicitLocation = function (a) {
        a = this.getTaggerData(a, c("ReactComposerTaggerType").LOCATION);
        return !!(a && a.implicitLocation && !a.place);
      };
      e.hasBackdate = function (a) {
        a = this.getTaggerData(a, c("ReactComposerTaggerType").BACKDATE) || {};
        return !!a.year;
      };
      e.isAMA = function (a) {
        return !!this.getTaggerData(a, c("ReactComposerTaggerType").AMA).isAMA;
      };
      e.hasMessagingCTA = function (a) {
        return !!this.getTaggerData(a, c("ReactComposerTaggerType").MESSAGING)
          .hasCTA;
      };
      e.hasSupportNowCTA = function (a) {
        return !!this.getTaggerData(a, c("ReactComposerTaggerType").SUPPORT_NOW)
          .hasSupportNowCTA;
      };
      e.hasChatroom = function (a) {
        return !!this.getTaggerData(a, c("ReactComposerTaggerType").CHATROOM)
          .hasChatroom;
      };
      e.hasStarsEnabled = function (a) {
        return !!this.getTaggerData(a, c("ReactComposerTaggerType").STARS)
          .isEnabled;
      };
      e.getFanFundingPromotionPayload = function (a) {
        return this.getTaggerData(a, c("ReactComposerTaggerType").SUPPORT_NOW)
          .fanFundingPromotionPayload;
      };
      e.getUserFundingAttachmentType = function (a) {
        return this.getTaggerData(a, c("ReactComposerTaggerType").SUPPORT_NOW)
          .userFundingAttachmentType;
      };
      e.hasNonprofit = function (a) {
        return !!this.getTaggerData(a, c("ReactComposerTaggerType").FUNDRAISER)
          .charityID;
      };
      e.getPoliticalDistrictInfo = function (a) {
        return this.getTaggerData(
          a,
          c("ReactComposerTaggerType").POLITICAL_INFO
        );
      };
      e.getNumberOfWithWhoTags = function (a) {
        a = this.getTaggerData(a, c("ReactComposerTaggerType").PEOPLE) || [];
        return a.length;
      };
      e.hasSottoCTA = function (a) {
        return !!this.getTaggerData(a, c("ReactComposerTaggerType").SOTTO_CTA)
          .hasSottoCTA;
      };
      e.paidVirtualEventGatedPost = function (a) {
        return this.getTaggerData(
          a,
          c("ReactComposerTaggerType").PAID_VIRTUAL_EVENT_GATED_POST
        );
      };
      e.$ReactComposerTaggerStore2 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.selectedTagger = null;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore3 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.selectedTagger === a.taggerID && !a.disableToggle
          ? (b.selectedTagger = null)
          : (b.selectedTagger = a.taggerID);
        b.autoFocusOnSelectedTagger = a.autoFocus;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore9 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersConfig[a.taggerID] = a.taggerConfig;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore5 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersSource[a.taggerID] = a.taggerSource;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore4 = function (a) {
        a = this.validateAction(a, ["composerID", "taggersSource"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        for (var d in a) c.taggersSource[d] = a[d];
        this.emitChange(b);
      };
      e.$ReactComposerTaggerStore6 = function (a) {
        var b = this.getComposerData(a.composerID),
          c = Array.isArray(a.taggerData)
            ? a.taggerData.slice()
            : babelHelpers["extends"]({}, a.taggerData);
        b.taggersData[a.taggerID] = c;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore7 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersShowNUX[a.taggerID] = a.showNUX;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore8 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersShowTooltip[a.taggerID] = a.showTooltip;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore27 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.sourceAttachment = c(
          "ReactComposerAttachmentStore"
        ).getSelectedAttachmentID(a.composerID);
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore26 = function (a) {
        var b = this.getComposerData(a.composerID);
        a.id === c("ReactComposerAttachmentType").MEDIA &&
          (b.taggersData[c("ReactComposerTaggerType").FUN_FACT] = {});
        if (a.id === b.sourceAttachment || b.sourceAttachment === null) return;
        this.getTaggerData(
          a.composerID,
          c("ReactComposerTaggerType").GIF
        ).gifData = null;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore25 = function (a) {
        var b = this.getComposerData(a.composerID),
          d = babelHelpers["extends"](
            { mediaLocation: a.mediaLocation },
            b.taggersData[c("ReactComposerTaggerType").LOCATION]
          );
        b.taggersData[c("ReactComposerTaggerType").LOCATION] = d;
        d = babelHelpers["extends"](
          { mediaLocation: a.mediaLocation, mediaTakenTime: a.mediaTakenTime },
          b.taggersData[c("ReactComposerTaggerType").TAG_EVENT]
        );
        b.taggersData[c("ReactComposerTaggerType").TAG_EVENT] = d;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore17 = function (a) {
        a = this.validateAction(a, ["composerID", "facebox", "photoID"]);
        var b = a[0],
          c = a[1];
        a = a[2];
        c = c.bestRecognition;
        c && this.$ReactComposerTaggerStore30(b, c.subjectID, c.value, a);
      };
      e.$ReactComposerTaggerStore18 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "subject",
          "value",
          "photoID",
        ]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = a[3];
        this.$ReactComposerTaggerStore30(b, c, d, a);
      };
      e.$ReactComposerTaggerStore21 = function (a) {
        a = this.validateAction(a, ["composerID", "photoID"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerTaggerStore31(b, a);
        this.$ReactComposerTaggerStore32(b, a);
      };
      e.$ReactComposerTaggerStore19 = function (a) {
        var b = this.validateAction(a, [
            "composerID",
            "subject",
            "value",
            "photoID",
          ]),
          c = b[0],
          d = b[1],
          e = b[2];
        b = b[3];
        this.$ReactComposerTaggerStore33(
          c,
          d,
          e,
          a == null ? void 0 : a.parentProductID,
          b
        );
      };
      e.$ReactComposerTaggerStore10 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].shouldNavigateToPhotoEditor = a.shouldNavigateToPhotoEditor;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore11 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersData[c("ReactComposerTaggerType").PRODUCT_SPROUT].platform =
          a.platform;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore12 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].composerHasVideoUploads = a.composerHasVideoUploads;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore13 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].shouldShowPtMediaUploadModal = a.shouldShowPtMediaUploadModal;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore14 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].photoEditorOpened = a.photoEditorOpened;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore15 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].productSuggestionPhotoID = a.productSuggestionPhotoID;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore16 = function (a) {
        var b = this.getComposerData(a.composerID);
        b.taggersData[
          c("ReactComposerTaggerType").PRODUCT_SPROUT
        ].referralSource = a.referralSource;
        this.emitChange(a.composerID);
      };
      e.$ReactComposerTaggerStore20 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "subjectID",
          "value",
          "photoID",
        ]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = a[3];
        this.$ReactComposerTaggerStore30(b, c, d, a);
      };
      e.$ReactComposerTaggerStore22 = function (a) {
        a = this.validateAction(a, ["composerID", "subjectID"]);
        var b = a[0];
        a = a[1];
        c("ReactComposerPhotoStore").getIsSubjectTagged(b, a) ||
          this.$ReactComposerTaggerStore34(b, a);
      };
      e.$ReactComposerTaggerStore23 = function (a) {
        var b = this;
        a = this.validateAction(a, [
          "composerID",
          "photoID",
          "faceboxes",
          "xyTags",
        ]);
        var c = a[0],
          d = a[1],
          e = a[2];
        a = a[3];
        this.$ReactComposerTaggerStore31(c, d);
        e.forEach(function (a) {
          a &&
            a.taggedSubjectID &&
            b.$ReactComposerTaggerStore30(
              c,
              a.taggedSubjectID,
              a.taggedValue,
              d
            );
        });
        a.forEach(function (a) {
          a && b.$ReactComposerTaggerStore30(c, a.subject, a.name, d);
        });
      };
      e.$ReactComposerTaggerStore28 = function (a) {
        var b = this;
        a = this.validateAction(a, ["composerID", "photoID", "xyTags"]);
        var c = a[0],
          d = a[1];
        a = a[2];
        this.$ReactComposerTaggerStore32(c, d);
        a.forEach(function (a) {
          a &&
            b.$ReactComposerTaggerStore33(
              c,
              a.subject,
              a.name,
              a.parent_product_id,
              d
            );
        });
      };
      e.$ReactComposerTaggerStore24 = function (a) {
        var b = this,
          d = this.validateAction(a, "composerID");
        this.getComposerData(d).$ReactComposerTaggerStore1.forEach(function (
          a
        ) {
          c("ReactComposerPhotoStore").getIsSubjectTagged(d, a) ||
            b.$ReactComposerTaggerStore34(d, a);
        });
      };
      e.$ReactComposerTaggerStore30 = function (a, b, d, e) {
        var f = new (c("SearchableEntry"))({
          uniqueID: b,
          title: d,
          auxiliaryData: { isFacebox: !0, photos: new Set([e]) },
        });
        d = this.getComposerData(a);
        var g = d.taggersData[c("ReactComposerTaggerType").PEOPLE],
          h = g.find(function (a) {
            return a.getUniqueID() === f.getUniqueID();
          });
        d.$ReactComposerTaggerStore1 = d.$ReactComposerTaggerStore1.add(b);
        if (h) {
          b = h.getAuxiliaryData();
          this.$ReactComposerTaggerStore35(h) && b.photos.add(e);
        } else d.taggersData[c("ReactComposerTaggerType").PEOPLE] = g.concat(f);
        this.emitChange(a);
      };
      e.$ReactComposerTaggerStore33 = function (a, b, d, e, f) {
        var g = new (c("SearchableEntry"))({
          uniqueID: b,
          title: d,
          auxiliaryData: {
            isFacebox: !0,
            parentProductID: e,
            photos: new Set([f]),
          },
        });
        b = this.getComposerData(a);
        d = b.taggersData[c("ReactComposerTaggerType").PRODUCT];
        e = d.find(function (a) {
          return a.getUniqueID() === g.getUniqueID();
        });
        e
          ? this.$ReactComposerTaggerStore35(e) &&
            e.getAuxiliaryData().photos.add(f)
          : (b.taggersData[c("ReactComposerTaggerType").PRODUCT] = d.concat(g));
        this.emitChange(a);
      };
      e.$ReactComposerTaggerStore34 = function (a, b) {
        var d = this.getComposerData(a);
        d.taggersData[c("ReactComposerTaggerType").PEOPLE] = d.taggersData[
          c("ReactComposerTaggerType").PEOPLE
        ].filter(function (a) {
          return a.getUniqueID() !== b;
        });
        d.taggersData[c("ReactComposerTaggerType").PRODUCT] = d.taggersData[
          c("ReactComposerTaggerType").PRODUCT
        ].filter(function (a) {
          return a.getUniqueID() !== b;
        });
        d.$ReactComposerTaggerStore1 =
          d.$ReactComposerTaggerStore1["delete"](b);
        this.emitChange(a);
      };
      e.$ReactComposerTaggerStore31 = function (a, b) {
        var d = this.getComposerData(a);
        d = d.taggersData[c("ReactComposerTaggerType").PEOPLE];
        this.$ReactComposerTaggerStore36(a, d, b);
      };
      e.$ReactComposerTaggerStore32 = function (a, b) {
        var d = this.getComposerData(a);
        d = d.taggersData[c("ReactComposerTaggerType").PRODUCT];
        this.$ReactComposerTaggerStore36(a, d, b);
      };
      e.$ReactComposerTaggerStore36 = function (a, b, c) {
        var d = [];
        for (var e = 0; e < b.length; e++) {
          var f = b[e],
            g = f.getAuxiliaryData();
          this.$ReactComposerTaggerStore35(f) &&
            g.photos["delete"](c) &&
            g.photos.size == 0 &&
            d.push(f.getUniqueID());
        }
        for (g = 0; g < d.length; g++) {
          f = d[g];
          this.$ReactComposerTaggerStore34(a, f);
        }
      };
      e.$ReactComposerTaggerStore35 = function (a) {
        return a.getAuxiliaryData().photos;
      };
      e.isPostButtonDisabled = function (a) {
        var b = this.getTaggerData(a, c("ReactComposerTaggerType").PRODUCT);
        return (
          b !== null &&
          b.length > 0 &&
          c("ReactComposerMediaUploadStore").getUploadsCount(a) == 0 &&
          this.getComposerHasVideoUploads(a) !== !0
        );
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ComposerSharingSpacesEvent",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      COMPOSER_SPACES_SHARESHEET_NEXT: "COMPOSER_SPACES_SHARESHEET_NEXT",
      COMPOSER_SPACES_SHARESHEET_BACK: "COMPOSER_SPACES_SHARESHEET_BACK",
      COMPOSER_SPACES_SHARESHEET_POST: "COMPOSER_SPACES_SHARESHEET_POST",
      COMPOSER_SPACES_SPACE: "COMPOSER_SELECT_SPACE",
      COMPOSER_SELECT_SPACE_CHOOSE: "COMPOSER_SELECT_SPACE_CHOOSE",
      COMPOSER_SELECT_SPACE_NEW: "COMPOSER_SELECT_SPACE_NEW",
      COMPOSER_SELECT_SPACE_NEW_CLICK: "COMPOSER_SELECT_SPACE_NEW_CLICK",
      COMPOSER_SELECT_SPACE_LOADED: "COMPOSER_SELECT_SPACE_LOADED",
      COMPOSER_SELECT_TIMELINE_CHOOSE: "COMPOSER_SELECT_TIMELINE_CHOOSE",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ExtensibleSproutsItemType",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      AB_TEST: "AB_TEST",
      ACHIEVEMENT: "ACHIEVEMENT",
      ACTIVITY: "ACTIVITY",
      ADVERTISE: "ADVERTISE",
      AIRBENDER_AVATAR: "AIRBENDER_AVATAR",
      APP_INTEGRATION_AODOCS: "APP_INTEGRATION_AODOCS",
      APP_INTEGRATION_BOX: "APP_INTEGRATION_BOX",
      APP_INTEGRATION_CORNERSTONE: "APP_INTEGRATION_CORNERSTONE",
      APP_INTEGRATION_DROPBOX: "APP_INTEGRATION_DROPBOX",
      APP_INTEGRATION_EGNYTE: "APP_INTEGRATION_EGNYTE",
      APP_INTEGRATION_GDRIVE: "APP_INTEGRATION_GDRIVE",
      APP_INTEGRATION_GDRIVE_FOR_WORKROOMS:
        "APP_INTEGRATION_GDRIVE_FOR_WORKROOMS",
      APP_INTEGRATION_JIRA: "APP_INTEGRATION_JIRA",
      APP_INTEGRATION_ONEDRIVE: "APP_INTEGRATION_ONEDRIVE",
      APP_INTEGRATION_ONEDRIVE_FOR_WORKROOMS:
        "APP_INTEGRATION_ONEDRIVE_FOR_WORKROOMS",
      APP_INTEGRATION_QUIP: "APP_INTEGRATION_QUIP",
      APP_INTEGRATION_SHAREPOINT: "APP_INTEGRATION_SHAREPOINT",
      APP_INTEGRATION_TASKS: "APP_INTEGRATION_TASKS",
      APP_INTEGRATION_TRELLO: "APP_INTEGRATION_TRELLO",
      APP_INTEGRATIONS_MENU: "APP_INTEGRATIONS_MENU",
      ARTICLES: "ARTICLES",
      AUDIO: "AUDIO",
      BACKDATE: "BACKDATE",
      BC_SUPPORT: "BC_SUPPORT",
      BIRTHDAY_CAMERA: "BIRTHDAY_CAMERA",
      BIRTHDAY_STICKER: "BIRTHDAY_STICKER",
      BOOST_POST: "BOOST_POST",
      BREAKING_NEWS: "BREAKING_NEWS",
      CANDIDATE_INFO: "CANDIDATE_INFO",
      CALL_NOW: "CALL_NOW",
      CHATROOM: "CHATROOM",
      COMMENT_TO_MESSAGE: "COMMENT_TO_MESSAGE",
      COMMUNITY_GIVING: "COMMUNITY_GIVING",
      COMMUNITY_HELP: "COMMUNITY_HELP",
      COMMUNITY_HELP_DRIVE: "COMMUNITY_HELP_DRIVE",
      COMMUNITY_LIVE_CHAT: "COMMUNITY_LIVE_CHAT",
      COMPOSER_ASSISTANT: "COMPOSER_ASSISTANT",
      COVID_ALERTS: "COVID_ALERTS",
      COVID_BUSINESS_POST: "COVID_BUSINESS_POST",
      DOC: "DOC",
      DONATE_BUTTON: "DONATE_BUTTON",
      DRAFT_FOR: "DRAFT_FOR",
      DISCUSSION_POST: "DISCUSSION_POST",
      ELLIPSIS: "ELLIPSIS",
      EVENTS: "EVENTS",
      FACECAST: "FACECAST",
      FAN_SUBMISSION_REQUEST: "FAN_SUBMISSION_REQUEST",
      FB_COLLECTIBLE: "FB_COLLECTIBLE",
      FB_GROUPS_CHATS: "FB_GROUPS_CHATS",
      FEELING: "FEELING",
      FILE: "FILE",
      FUN_FACT: "FUN_FACT",
      FUNDRAISER: "FUNDRAISER",
      GEN_AI_CREATE: "GEN_AI_CREATE",
      GET_MESSAGES: "GET_MESSAGES",
      GIF: "GIF",
      GIFT_CARD_PURCHASE: "GIFT_CARD_PURCHASE",
      GROUP_EXCLUSIVES: "GROUP_EXCLUSIVES",
      GROUP_JOIN_CTA: "GROUP_JOIN_CTA",
      GROUP_VOTER_PLEDGE_DRIVE: "GROUP_VOTER_PLEDGE_DRIVE",
      GROUP_WELCOME_POST: "GROUP_WELCOME_POST",
      INSPIRATION_CAMERA: "INSPIRATION_CAMERA",
      JOB: "JOB",
      LIFE_EVENT: "LIFE_EVENT",
      LINK: "LINK",
      LIST: "LIST",
      LIVE_FORMAT: "LIVE_FORMAT",
      LIVING_ROOM: "LIVING_ROOM",
      LOCAL_ALERTS: "LOCAL_ALERTS",
      LOCAL_DEV_PLATFORM: "LOCAL_DEV_PLATFORM",
      LOCATION: "LOCATION",
      LOOKING_FOR_PLAYERS: "LOOKING_FOR_PLAYERS",
      MARKDOWN: "MARKDOWN",
      MEDIA: "MEDIA",
      MEMETRON: "MEMETRON",
      MILESTONE: "MILESTONE",
      MINUTIAE: "MINUTIAE",
      MOVIES: "MOVIES",
      MORE_FEATURES: "MORE_FEATURES",
      MULTIMEDIA: "MULTIMEDIA",
      MUSIC: "MUSIC",
      NEON: "NEON",
      NOMINATIONS: "NOMINATIONS",
      NOTE: "NOTE",
      PAGE_SELL: "PAGE_SELL",
      PAID_VIRTUAL_EVENT_GATED_POST: "PAID_VIRTUAL_EVENT_GATED_POST",
      PHOTO: "PHOTO",
      PUBLISH_JOB_POST: "PUBLISH_JOB_POST",
      Q_AND_A: "Q_AND_A",
      RECOMMENDATION: "RECOMMENDATION",
      RECRUITING_CANDIDATE: "RECRUITING_CANDIDATE",
      REELS: "REELS",
      SELL: "SELL",
      SCHEDULE_POST: "SCHEDULE_POST",
      SEND_GIFT: "SEND_GIFT",
      SEND_UPDATES: "SEND_UPDATES",
      SHARE: "SHARE",
      SHIFT_SWAP: "SHIFT_SWAP",
      SHIFT_MANAGEMENT_COVER: "SHIFT_MANAGEMENT_COVER",
      SPONSOR_TAG: "SPONSOR_TAG",
      STICKER: "STICKER",
      SUGGESTED_PHOTO: "SUGGESTED_PHOTO",
      SUPPORT_NOW: "SUPPORT_NOW",
      SUMMARY: "SUMMARY",
      TAG_EVENT: "TAG_EVENT",
      TAG_EVENT_TICKET: "TAG_EVENT_TICKET",
      TAG_PRODUCT: "TAG_PRODUCT",
      TEXT_BACKGROUND: "TEXT_BACKGROUND",
      THIRD_PARTY: "THIRD_PARTY",
      THREE_D_PHOTO: "THREE_D_PHOTO",
      THREESIXTY_CAPTURE: "THREESIXTY_CAPTURE",
      TODO_LIST: "TODO_LIST",
      VIDEO: "VIDEO",
      VIDEO_MEETUP: "VIDEO_MEETUP",
      VISUAL_POLLS: "VISUAL_POLLS",
      WITH_TAG: "WITH_TAG",
      WOODHENGE_SUPPORT: "WOODHENGE_SUPPORT",
      WORK_CHECKLIST: "WORK_CHECKLIST",
      WORK_FILE: "WORK_FILE",
      WORK_MULTI_ATTACHMENTS: "WORK_MULTI_ATTACHMENTS",
      WORK_SCHEDULE_LIVE: "WORK_SCHEDULE_LIVE",
      WORK_HASHTAG_SUGGESTIONS: "WORK_HASHTAG_SUGGESTIONS",
      BLOOD_DONATION: "BLOOD_DONATION",
      AMA: "AMA",
      VIDEO_EDITOR: "VIDEO_EDITOR",
      SOTTO_CTA: "SOTTO_CTA",
      COLLABORATIVE_FORMAT: "COLLABORATIVE_FORMAT",
      INCENTIVES_AMA: "INCENTIVES_AMA",
      COMMUNITY_QNA: "COMMUNITY_QNA",
      WORK_AMA: "WORK_AMA",
      MARKETPLACE_VEHICLE: "MARKETPLACE_VEHICLE",
      MULTILINGUAL: "MULTILINGUAL",
      VOTE_ALERT: "VOTE_ALERT",
      TEMPLATES: "TEMPLATES",
      WORK_QA: "WORK_QA",
      FB_NOTE: "FB_NOTE",
      FISHBOWL: "FISHBOWL",
      QA_SIMILAR_QUESTIONS: "QA_SIMILAR_QUESTIONS",
      WORK_OPEN_ROLE: "WORK_OPEN_ROLE",
      READY_MADE_FEED: "READY_MADE_FEED",
      WRITE_POST: "WRITE_POST",
      DISCUSSION: "DISCUSSION",
      MORE: "MORE",
      POST_AS_ANONYMOUS_AUTHOR: "POST_AS_ANONYMOUS_AUTHOR",
      VOICE_SELECTOR: "VOICE_SELECTOR",
      STORY_TEXT_BACKGROUND: "STORY_TEXT_BACKGROUND",
      STORY_SELFIE: "STORY_SELFIE",
      STORY_BOOMERANG: "STORY_BOOMERANG",
      STORY_POLL: "STORY_POLL",
      STORY_MUSIC: "STORY_MUSIC",
      STORY_LOCATION: "STORY_LOCATION",
      STORY_DARKROOM: "STORY_DARKROOM",
      STORY_PHOTOBOOTH: "STORY_PHOTOBOOTH",
      STORY_MOOD: "STORY_MOOD",
      STORY_OFFER_HELP: "STORY_OFFER_HELP",
      STORY_ARCHIVE: "STORY_ARCHIVE",
      STORY_PHOTO_COLLAGE: "STORY_PHOTO_COLLAGE",
      STORY_TOP_FAN_RECOGNITION: "STORY_TOP_FAN_RECOGNITION",
      ANIMATED_EFFECTS: "ANIMATED_EFFECTS",
      CIVIC_CTA: "CIVIC_CTA",
      CONTACT_YOUR_REPRESENTATIVE: "CONTACT_YOUR_REPRESENTATIVE",
      FIND_PLAYERS: "FIND_PLAYERS",
      GET_BOOKINGS: "GET_BOOKINGS",
      GET_QUOTE: "GET_QUOTE",
      GET_DIRECTIONS: "GET_DIRECTIONS",
      GET_TICKET: "GET_TICKET",
      GET_PHONE_CALLS: "GET_PHONE_CALLS",
      GET_SHOPS: "GET_SHOPS",
      GET_WHATSAPP_MESSAGES: "GET_WHATSAPP_MESSAGES",
      GROUP_MEET_UP: "GROUP_MEET_UP",
      JOB_SEARCH: "JOB_SEARCH",
      LIVING_ROOM_PAGE: "LIVING_ROOM_PAGE",
      LIVING_ROOM_PROFILE: "LIVING_ROOM_PROFILE",
      ORDER_FOOD: "ORDER_FOOD",
      PAGE_OFFER: "PAGE_OFFER",
      PAGE_RECOMMENDATIONS_ADD_TAGS: "PAGE_RECOMMENDATIONS_ADD_TAGS",
      PLAY_WITH_FRIENDS: "PLAY_WITH_FRIENDS",
      PLANETARIUM: "PLANETARIUM",
      QUILT: "QUILT",
      RECIPE: "RECIPE",
      SELL_SOMETHING: "SELL_SOMETHING",
      SELL_MULTIPLE_ITEMS: "SELL_MULTIPLE_ITEMS",
      SALES_PROMO: "SALES_PROMO",
      SPOTIFY_SHARE: "SPOTIFY_SHARE",
      SUGGESTED_PHOTO_CAPTION: "SUGGESTED_PHOTO_CAPTION",
      TRANSLITERATION: "TRANSLITERATION",
      VIDEO_SUGGESTIONS: "VIDEO_SUGGESTIONS",
    });
    f["default"] = a;
  },
  66
);
__d(
  "PagesComposerActionTypes",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("keyMirrorRecursive")(
      {
        PAGES_COMPOSER_HELP_CENTER_CLICK: null,
        PAGES_COMPOSER_VOICE_SWITCHER_ACTOR_CHANGE: null,
        PAGES_COMPOSER_VOICE_SWITCHER_CLICK: null,
      },
      "PagesComposerActionTypes"
    );
    b = a;
    g["default"] = b;
  },
  98
);
__d(
  "PagesComposerInstagramAudienceActionTypes",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f) {
    "use strict";
    a = b("keyMirrorRecursive")(
      {
        CLOSE_INSTAGRAM_AUTH_DIALOG: null,
        INSTAGRAM_AUTH_FAIL: null,
        INSTAGRAM_AUTH_SUCCEED: null,
        OPEN_INSTAGRAM_AUTH_DIALOG: null,
        SET_PAGE_TO_INSTAGRAM_LINKING_STATUS: null,
      },
      "PagesComposerInstagramAudienceActionTypes"
    );
    e.exports = a;
  },
  null
);
__d(
  "PhotosUploadWaterfallXMixin",
  [
    "invariant",
    "AsyncSignal",
    "Banzai",
    "PhotosUploadWaterfallXConfig",
    "randomInt",
  ],
  function (a, b, c, d, e, f, g) {
    var h = new Map();
    function i(a, c) {
      var d = {};
      a.client_time = Math.round(Date.now() / 1e3);
      b("PhotosUploadWaterfallXConfig").retryBanzai &&
        ((d.retry = !0), (a.nonce = b("randomInt")(4294967296)));
      b("Banzai").post(b("PhotosUploadWaterfallXConfig").banzaiRoute, a, d);
      c && setTimeout(c, 0);
    }
    function j(a, c) {
      if (b("PhotosUploadWaterfallXConfig").useBanzai) i(a, c);
      else {
        a = new (b("AsyncSignal"))(
          b("PhotosUploadWaterfallXConfig").loggingEndpoint,
          { data: JSON.stringify(a) }
        ).setHandler(c);
        b("PhotosUploadWaterfallXConfig").timeout && a.setTimeout(10 * 1e3);
        a.send();
      }
    }
    e.exports = {
      logStep: function (a, b, c) {
        var d = this.getWaterfallID && this.getWaterfallID(),
          e = this.getWaterfallAppName && this.getWaterfallAppName();
        if (!d || !e) return;
        j(
          babelHelpers["extends"](
            {
              step: a,
              qn: d,
              uploader: e,
              ref: this.getWaterfallSource && this.getWaterfallSource(),
            },
            b
          ),
          c
        );
      },
      logPUWStep: function (a, b, c, d, e, f, g) {
        if (f && f.logOncePerSession) {
          h.has(b) || h.set(b, new Set());
          if (h.get(b).has(a)) return;
          h.get(b).add(a);
        }
        j(
          babelHelpers["extends"]({ step: a, qn: b, uploader: c, ref: d }, e),
          g
        );
      },
    };
  },
  null
);
__d(
  "ComposerAsset3dDataRecord",
  ["immutable"],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return a.apply(this, arguments) || this;
      }
      return b;
    })(
      c("immutable").Record({
        asset3dID: null,
        photoEncoding3dID: null,
        glbURI: null,
        aspectRatio: null,
        compressor: null,
        compressionLevel: null,
        version: null,
      })
    );
    g["default"] = a;
  },
  98
);
__d(
  "ComposerAsset3dInputRecord",
  ["immutable"],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return a.apply(this, arguments) || this;
      }
      return b;
    })(
      c("immutable").Record({
        type: "glb",
        glbFile: null,
        colorImageIDs: null,
        depthImageIDs: null,
        placeholderImage: null,
      })
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerAsset3dAttachmentActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        CREATE_ASSET3D: null,
        REMOVE_ASSET3D: null,
        PREFILL_ASSET3D: null,
        SELECT_BACKGROUND: null,
        UPDATE_LOADING_PROGRESS: null,
        SET_ASSET3D_INPUT: null,
        SHOW_ERROR: null,
      },
      "ReactComposerAsset3dAttachmentActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerAsset3dAttachmentActions",
  [
    "ComposerAsset3dDataRecord",
    "ComposerAsset3dInputRecord",
    "ReactComposerAsset3dAttachmentActionType",
    "ReactComposerAsset3dAttachmentStore",
    "ReactComposerDispatcher",
  ],
  function (a, b, c, d, e, f, g) {
    b("ReactComposerAsset3dAttachmentStore");
    a = (function () {
      function a() {}
      var b = a.prototype;
      b.createAsset3D = function (a, b) {
        c("ReactComposerDispatcher").dispatch({
          composerID: a,
          actorID: b,
          type: c("ReactComposerAsset3dAttachmentActionType").CREATE_ASSET3D,
        });
      };
      b.removeAsset3D = function (a) {
        c("ReactComposerDispatcher").dispatch({
          composerID: a,
          type: c("ReactComposerAsset3dAttachmentActionType").REMOVE_ASSET3D,
        });
      };
      b.prefill = function (a, b) {
        c("ReactComposerDispatcher").dispatch({
          composerID: a,
          type: c("ReactComposerAsset3dAttachmentActionType").PREFILL_ASSET3D,
          asset3dInput: new (c("ComposerAsset3dInputRecord"))({
            type: b.inputType,
            glbFile: null,
            colorImageIDs: null,
            depthImageIDs: null,
            placeholderImage: {
              src: b.placeholderImageSrc,
              width: b.placeholderImageWidth,
              height: b.placeholderImageHeight,
            },
          }),
          asset3dData: new (c("ComposerAsset3dDataRecord"))({
            asset3dID: b.asset3dID,
            glbURI: b.glbURI,
            aspectRatio: b.aspectRatio,
            compressor: b.compressor,
            compressionLevel: b.compressionLevel,
            version: b.version,
          }),
          background: b.background,
        });
      };
      b.selectBackground = function (a, b) {
        c("ReactComposerDispatcher").dispatch({
          composerID: a,
          type: c("ReactComposerAsset3dAttachmentActionType").SELECT_BACKGROUND,
          background: b,
        });
      };
      b.selectColorDepthInput = function (a, b, d, e, f, g) {
        c("ReactComposerDispatcher").dispatch({
          composerID: a,
          type: c("ReactComposerAsset3dAttachmentActionType").SET_ASSET3D_INPUT,
          asset3dInput: new (c("ComposerAsset3dInputRecord"))({
            type: "color_depth_pair",
            glbFile: null,
            colorImageIDs: b,
            depthImageIDs: d,
            placeholderImage: { src: e, width: f, height: g },
          }),
        });
      };
      b.selectGlbFileInput = function (a, b) {
        c("ReactComposerDispatcher").dispatch({
          composerID: a,
          type: c("ReactComposerAsset3dAttachmentActionType").SET_ASSET3D_INPUT,
          asset3dInput: new (c("ComposerAsset3dInputRecord"))({
            type: "glb",
            glbFile: b,
            colorImageIDs: null,
            depthImageIDs: null,
            placeholderImage: null,
          }),
        });
      };
      b.updateLoadingProgress = function (a, b) {
        c("ReactComposerDispatcher").dispatch({
          composerID: a,
          type: c("ReactComposerAsset3dAttachmentActionType")
            .UPDATE_LOADING_PROGRESS,
          progress: b,
        });
      };
      b.showCreationError = function (a) {
        c("ReactComposerDispatcher").dispatch({
          composerID: a,
          type: c("ReactComposerAsset3dAttachmentActionType").SHOW_ERROR,
        });
      };
      return a;
    })();
    d = new a();
    g["default"] = d;
  },
  98
);
__d(
  "ReactComposerAsset3dAttachmentStore",
  [
    "invariant",
    "ActorURI",
    "AsyncRequest",
    "ComposerAsset3dDataRecord",
    "ReactComposerActionTypes",
    "ReactComposerAsset3dAttachmentActionType",
    "ReactComposerAsset3dAttachmentActions",
    "ReactComposerStoreBase",
    "ThisControllerNoLongerExists",
    "asyncToGeneratorRuntime",
  ],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(e, a);
      function e() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                asset3dData: null,
                asset3dInput: null,
                background: null,
                progress: 0,
                pendingRequest: null,
                creationFailed: !1,
                sessionKey: null,
                usePhotoEncoding3D: !0,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerAsset3dAttachmentActionType")
                  .CREATE_ASSET3D:
                  d && d.$ReactComposerAsset3DAttachmentStore1(a);
                  break;
                case c("ReactComposerAsset3dAttachmentActionType")
                  .REMOVE_ASSET3D:
                  d && d.$ReactComposerAsset3DAttachmentStore2(a);
                  break;
                case c("ReactComposerAsset3dAttachmentActionType")
                  .PREFILL_ASSET3D:
                  d && d.$ReactComposerAsset3DAttachmentStore3(a);
                  break;
                case c("ReactComposerAsset3dAttachmentActionType")
                  .SELECT_BACKGROUND:
                  d && d.$ReactComposerAsset3DAttachmentStore4(a);
                  break;
                case c("ReactComposerAsset3dAttachmentActionType")
                  .SET_ASSET3D_INPUT:
                  d && d.$ReactComposerAsset3DAttachmentStore5(a);
                  break;
                case c("ReactComposerAsset3dAttachmentActionType")
                  .UPDATE_LOADING_PROGRESS:
                  d && d.$ReactComposerAsset3DAttachmentStore6(a);
                  break;
                case c("ReactComposerAsset3dAttachmentActionType").SHOW_ERROR:
                  d && d.$ReactComposerAsset3DAttachmentStore7(a);
                  break;
                case c("ReactComposerActionTypes").POST_STARTED:
                  d && d.$ReactComposerAsset3DAttachmentStore8(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var f = e.prototype;
      f.getAsset3DData = function (a) {
        return this.getComposerData(a).asset3dData;
      };
      f.getAsset3DInput = function (a) {
        return this.getComposerData(a).asset3dInput;
      };
      f.getBackground = function (a) {
        return this.getComposerData(a).background;
      };
      f.getProgress = function (a) {
        return this.getComposerData(a).progress;
      };
      f.getCreationFailed = function (a) {
        return this.getComposerData(a).creationFailed;
      };
      f.isCreating = function (a) {
        var b = this.getComposerData(a).asset3dInput;
        a = this.getComposerData(a).asset3dData;
        return b && !a;
      };
      f.isUsingPhotoEncoding3D = function (a) {
        return this.getComposerData(a).usePhotoEncoding3D;
      };
      f.$ReactComposerAsset3DAttachmentStore5 = function (a) {
        a = this.validateAction(a, ["composerID", "asset3dInput"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.asset3dInput = a;
        this.emitChange(b);
      };
      f.$ReactComposerAsset3DAttachmentStore4 = function (a) {
        a = this.validateAction(a, ["composerID", "background"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.background = a;
        this.emitChange(b);
      };
      f.$ReactComposerAsset3DAttachmentStore9 = function (a) {
        var b = this.validateAction(a, ["composerID"]);
        a = this.validateAction(a, ["actorID"]);
        var e = this.getAsset3DData(b);
        if (e && e.asset3dID) {
          this.getComposerData(b);
          e = d("ActorURI").create(
            d("ThisControllerNoLongerExists").__DEADURI__("pu4hzor"),
            a
          );
          new (c("AsyncRequest"))()
            .setURI(e)
            .setMethod("POST")
            .setErrorHandler(function (a) {})
            .send();
        }
      };
      f.$ReactComposerAsset3DAttachmentStore6 = function (a) {
        a = this.validateAction(a, ["composerID", "progress"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.progress = a;
        this.emitChange(b);
      };
      f.$ReactComposerAsset3DAttachmentStore1 = function (a) {
        var b = this;
        a = this.validateAction(a, ["composerID", "actorID"]);
        var e = a[0];
        a = a[1];
        var f = this.getComposerData(e);
        f.asset3dData = null;
        f.background = null;
        f.progress = 0;
        f.creationFailed = !1;
        var g = f.asset3dInput;
        g !== null || h(0, 14194);
        var i = null,
          j = new FormData();
        g.type === "glb"
          ? ((i = d("ActorURI").create(
              d("ThisControllerNoLongerExists").__DEADURI__("9ccoj76d"),
              a
            )),
            g.glbFile !== null || h(0, 14195),
            j.append("asset3d_file", g.glbFile))
          : g.type === "color_depth_pair" &&
            (g.colorImageIDs !== null || h(0, 17397),
            g.depthImageIDs !== null || h(0, 17398),
            f.usePhotoEncoding3D
              ? (i = d("ActorURI").create(
                  d("ThisControllerNoLongerExists").__DEADURI__("qszmufeh"),
                  a
                ))
              : (i = d("ActorURI").create(
                  d("ThisControllerNoLongerExists").__DEADURI__("ahm6tzpy"),
                  a
                )),
            j.append("color_image_id", g.colorImageIDs[0]),
            j.append("depth_image_id", g.depthImageIDs[0]));
        i != null || h(0, 13561);
        f.pendingRequest = new (c("AsyncRequest"))()
          .setURI(i)
          .setMethod("POST")
          .setRawData(j)
          .setUploadProgressHandler(function (a) {
            var b = a.loaded;
            a = a.total;
            c("ReactComposerAsset3dAttachmentActions").updateLoadingProgress(
              e,
              (b / a) * 0.8
            );
          })
          .setHandler(function (a) {
            b.$ReactComposerAsset3DAttachmentStore10(a, e);
          })
          .setErrorHandler(function (a) {
            c("ReactComposerAsset3dAttachmentActions").showCreationError(e);
          })
          .setFinallyHandler(function () {
            (f.pendingRequest = null), b.emitChange(e);
          });
        f.pendingRequest.send();
        this.emitChange(e);
      };
      f.$ReactComposerAsset3DAttachmentStore7 = function (a) {
        a = this.validateAction(a, ["composerID"]);
        var b = this.getComposerData(a);
        b.creationFailed = !0;
        this.emitChange(a);
      };
      f.$ReactComposerAsset3DAttachmentStore8 = function (a) {
        this.$ReactComposerAsset3DAttachmentStore9(a);
      };
      f.$ReactComposerAsset3DAttachmentStore2 = function (a) {
        a = this.validateAction(a, ["composerID"]);
        var b = this.getComposerData(a);
        b.asset3dData = null;
        b.asset3dInput = null;
        b.background = null;
        b.progress = 0;
        b.pendingRequest &&
          (b.pendingRequest.abandon(), (b.pendingRequest = null));
        this.emitChange(a);
      };
      f.$ReactComposerAsset3DAttachmentStore3 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "asset3dInput",
          "asset3dData",
          "background",
        ]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = a[3];
        var e = this.getComposerData(b);
        e.asset3dInput = c;
        e.asset3dData = d;
        e.background = a;
        e.progress = 0;
        e.pendingRequest = null;
        this.emitChange(b);
      };
      f.$ReactComposerAsset3DAttachmentStore10 = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* (a, b) {
          var d = this.getComposerData(b);
          a = a.payload;
          a || h(0, 14228);
          d.usePhotoEncoding3D
            ? (d.asset3dData = new (c("ComposerAsset3dDataRecord"))({
                photoEncoding3dID: a.id,
                glbURI: a.glbURI,
                aspectRatio: a.aspectRatio,
                compressor: a.compressor,
                compressionLevel: a.compressionLevel,
                version: a.version,
              }))
            : (d.asset3dData = new (c("ComposerAsset3dDataRecord"))({
                asset3dID: a.id,
                glbURI: a.glbURI,
                aspectRatio: a.aspectRatio,
                compressor: a.compressor,
                compressionLevel: a.compressionLevel,
                version: a.version,
              }));
          c("ReactComposerAsset3dAttachmentActions").updateLoadingProgress(
            b,
            1
          );
        });
        function d(b, c) {
          return a.apply(this, arguments);
        }
        return d;
      })();
      return e;
    })(c("ReactComposerStoreBase"));
    e = new a();
    g["default"] = e;
  },
  98
);
__d(
  "ReactComposerCollectionsActionTypes",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        SHOW_COLLECTION_SELECTOR: null,
        HIDE_COLLECTION_SELECTOR: null,
        SHOW_CREATION_LAYER: null,
        HIDE_CREATION_LAYER: null,
      },
      "ReactComposerCollectionsActionTypes"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerFeatureType",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      EVENT: "event",
      FILE: "file",
      LINK: "link",
      MENTION_TAG: "mention_tag",
      MILESTONE: "milestone",
      PAGE_CTA: "page_cta",
      PHOTO_TAG: "photo_tag",
      PRIVACY: "privacy",
      TEXT: "text",
      COLLECTIONS: "collections",
      COLLECTION_CREATION: "collection_creation",
      MESSAGING: "messaging",
      ALBUM: "album",
      BREAKING_NEWS: "breaking_news",
      ASSET_3D: "ASSET_3D",
      LOCAL_ALERTS: "local_alerts",
      GET_SHOWTIMES: "get_showtimes",
      PAGES_INTERCEPTION: "pages_interception",
      COVID_BUSINESS_POST: "covid_business_post",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerPerfLogger",
  ["ComposerXSessionIDs", "MarauderLogger"],
  function (a, b, c, d, e, f, g) {
    var h = {},
      i = "status";
    function a(a, b, c) {
      c === void 0 && (c = {});
      var e = h[b];
      b = d("ComposerXSessionIDs").getSessionID(b);
      if (!e || !b) return;
      if (c.logOncePerSession) {
        e.loggedEventTypes[b] || (e.loggedEventTypes[b] = {});
        if (e.loggedEventTypes[b][a]) return;
        e.loggedEventTypes[b][a] = !0;
      }
      c = babelHelpers["extends"]({}, c.extraData, {
        composer_type: i,
        target_type: e.targetType,
        target_id: e.targetID,
        ref: e.entryPointRef,
      });
      d("MarauderLogger").log(a, "composer", c, void 0, void 0, b);
    }
    function b(a, b, c, d) {
      h[a.id] = {
        targetID: d,
        targetType: b,
        entryPointRef: c,
        loggedEventTypes: {},
      };
    }
    function c(a) {
      return h[a];
    }
    g.logEvent = a;
    g.registerComposer = b;
    g.getInstance = c;
  },
  98
);
__d(
  "ReactComposerVideoUploadActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        VIDEO_SET_UPLOADER: null,
        VIDEO_UPLOAD_ADD: null,
        VIDEO_UPLOAD_REMOVE: null,
      },
      "ReactComposerVideoUploadActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerLoggingStore",
  [
    "invariant",
    "Bootloader",
    "ComposerSharingSpacesEvent",
    "ComposerStructuredLoggerUtil",
    "ComposerXMarauderLogger",
    "ComposerXSessionIDs",
    "ExtensibleSproutsItemType",
    "PagesComposerActionTypes",
    "PagesComposerInstagramAudienceActionTypes",
    "PhotoUploadFacerecWaterfallTypedLogger",
    "PhotosUploadWaterfallXMixin",
    "QuickPerformanceLogger",
    "ReactComposerActionTypes",
    "ReactComposerAsset3dAttachmentStore",
    "ReactComposerAttachmentActionType",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "ReactComposerAudienceActionTypes",
    "ReactComposerAudienceStore",
    "ReactComposerCollectionsActionTypes",
    "ReactComposerDispatcher",
    "ReactComposerFeatureType",
    "ReactComposerFocusActionTypes",
    "ReactComposerLoggingQueue",
    "ReactComposerMediaUploadActionType",
    "ReactComposerMediaUploadStore",
    "ReactComposerMediaUploadType",
    "ReactComposerPerfLogger",
    "ReactComposerPhotoActionType",
    "ReactComposerPhotoStore",
    "ReactComposerScrapedAttachmentActionType",
    "ReactComposerScrapedAttachmentStore",
    "ReactComposerSproutsDisplayState",
    "ReactComposerStatusStore",
    "ReactComposerStore",
    "ReactComposerStoreBase",
    "ReactComposerTaggerActionType",
    "ReactComposerTaggerStore",
    "ReactComposerTaggerType",
    "ReactComposerVideoUploadActionType",
    "ReactPagesComposerLoggingUtils",
    "classWithMixins",
    "ifRequired",
    "immutable",
    "mixin",
    "nullthrows",
    "performanceAbsoluteNow",
    "qpl",
  ],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                activated: !1,
                perfTimes: {},
                sessionID: null,
                uniqueEvents: c("immutable").Map([
                  ["client_publish_success", !1],
                  ["client_flow_success", !1],
                ]),
              };
            },
            function (a) {
              d && d.handler(a);
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var e = b.prototype;
      e.handler = function (a) {
        if (a.suppressWaterfallLogging) return;
        var b = this.getComposerData(a.composerID);
        if (!b.activated) return;
        switch (a.type) {
          case c("ReactComposerAttachmentActionType")
            .SELECT_ATTACHMENT_LOGGING_ONLY_DO_NOT_USE:
            this.$ReactComposerLoggingStore1(a);
            break;
          case c("ReactComposerAttachmentActionType").SELECT_ATTACHMENT:
            this.$ReactComposerLoggingStore2(a);
            break;
          case c("ReactComposerActionTypes").COMPOSER_ENTRY:
            this.$ReactComposerLoggingStore3(a);
            break;
          case c("ReactComposerAttachmentActionType").SET_BOOTLOADED:
            c("ReactComposerDispatcher").isDispatching() &&
              c("ReactComposerDispatcher").waitFor([
                c("ReactComposerAttachmentStore").getDispatchToken(),
              ]);
            this.$ReactComposerLoggingStore4(a);
            break;
          case c("ReactComposerAttachmentActionType").SET_BOOTSTRAPPED:
            c("ReactComposerDispatcher").isDispatching() &&
              c("ReactComposerDispatcher").waitFor([
                c("ReactComposerAttachmentStore").getDispatchToken(),
              ]);
            this.$ReactComposerLoggingStore5(a);
            break;
          case c("ReactComposerMediaUploadActionType")
            .MEDIA_UPLOAD_INPUT_CLICKED:
            this.$ReactComposerLoggingStore6(a);
            break;
          case c("ReactComposerMediaUploadActionType").MEDIA_UPLOAD_INPUT_DONE:
            this.$ReactComposerLoggingStore7(a);
            break;
          case c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_ENQUEUED:
            this.$ReactComposerLoggingStore8(a);
            break;
          case c("ReactComposerMediaUploadActionType")
            .PHOTO_UPLOAD_RESIZE_STARTED:
            this.$ReactComposerLoggingStore9(a);
            break;
          case c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_RESIZE_DONE:
            this.$ReactComposerLoggingStore10(a);
            break;
          case c("ReactComposerMediaUploadActionType")
            .PHOTO_UPLOAD_RESIZE_FAILED:
            this.$ReactComposerLoggingStore11(a);
            break;
          case c("ReactComposerMediaUploadActionType")
            .SPHERICAL_PHOTO_CHECK_DONE:
            this.$ReactComposerLoggingStore12(a);
            break;
          case c("ReactComposerMediaUploadActionType")
            .SPHERICAL_PHOTO_CHECK_FAILED:
            this.$ReactComposerLoggingStore13(a);
            break;
          case c("ReactComposerMediaUploadActionType")
            .PHOTO_UPLOAD_RESIZER_UNAVAILABLE:
            this.$ReactComposerLoggingStore14(a);
            break;
          case c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_UPLOADING:
            this.$ReactComposerLoggingStore15(a);
            break;
          case c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_DONE:
            this.$ReactComposerLoggingStore16(a);
            break;
          case c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_FAILED:
            this.$ReactComposerLoggingStore17(a);
            break;
          case c("ReactComposerMediaUploadActionType").MEDIA_UPLOAD_REMOVE:
            this.$ReactComposerLoggingStore18(a);
            break;
          case c("ReactComposerPhotoActionType").PHOTO_REMOVE:
            this.$ReactComposerLoggingStore19(a);
            break;
          case c("ReactComposerMediaUploadActionType").VIDEO_UPLOAD_ENQUEUED:
            this.$ReactComposerLoggingStore20(a);
            break;
          case c("ReactComposerVideoUploadActionType").VIDEO_UPLOAD_ADD:
            this.$ReactComposerLoggingStore21(a);
            break;
          case c("ReactComposerVideoUploadActionType").VIDEO_UPLOAD_REMOVE:
            this.$ReactComposerLoggingStore22(a);
            break;
          case c("ReactComposerTaggerActionType").DESELECT_TAGGER:
            this.$ReactComposerLoggingStore23(a);
            break;
          case c("ReactComposerTaggerActionType").SET_SELECTED_TAGGER:
            c("ReactComposerDispatcher").isDispatching() &&
              c("ReactComposerDispatcher").waitFor([
                c("ReactComposerTaggerStore").getDispatchToken(),
              ]);
            this.$ReactComposerLoggingStore24(a);
            break;
          case c("ReactComposerTaggerActionType").SET_TAGGER_DATA:
            c("ReactComposerDispatcher").isDispatching() &&
              c("ReactComposerDispatcher").waitFor([
                c("ReactComposerTaggerStore").getDispatchToken(),
              ]);
            this.$ReactComposerLoggingStore25(a);
            break;
          case c("ReactComposerTaggerActionType").LOG_WP_PICKER_ACTION:
            this.$ReactComposerLoggingStore26(a);
            break;
          case c("ReactComposerActionTypes")
            .POST_STARTED_LOGGING_ONLY_DO_NOT_USE:
            this.$ReactComposerLoggingStore27(a);
            break;
          case c("ReactComposerActionTypes").POST_STARTED:
            this.$ReactComposerLoggingStore28(a);
            break;
          case c("ReactComposerActionTypes").POST_SUCCEEDED:
            this.$ReactComposerLoggingStore29(a);
            break;
          case c("ReactComposerActionTypes").POST_ERROR:
            this.$ReactComposerLoggingStore30(a);
            break;
          case c("ReactComposerMediaUploadActionType").PHOTOS_SELECT:
            this.$ReactComposerLoggingStore31(a);
            break;
          case c("ReactComposerPhotoActionType").PHOTO_EDIT_STARTED:
            this.$ReactComposerLoggingStore32(a);
            break;
          case c("ReactComposerPhotoActionType").PHOTO_EDIT_FINISHED:
            this.$ReactComposerLoggingStore33(a);
            break;
          case c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_RETRY:
            this.$ReactComposerLoggingStore34(a);
            break;
          case c("ReactComposerPhotoActionType").PHOTO_ADD_FACEBOX:
            this.$ReactComposerLoggingStore35(a);
            break;
          case c("ReactComposerPhotoActionType").PHOTO_RECOGNITION_ALL_FINISHED:
            this.$ReactComposerLoggingStore36(a);
            break;
          case c("ReactComposerActionTypes").FEATURE_INTENT:
            this.$ReactComposerLoggingStore37(a);
            break;
          case c("ReactComposerActionTypes").FEATURE_DONE:
            this.$ReactComposerLoggingStore38(a);
            break;
          case c("ReactComposerActionTypes").FEATURE_CANCEL:
            this.$ReactComposerLoggingStore39(a);
            break;
          case c("ReactComposerActionTypes").SPROUT_VIEW_UPDATE:
            this.$ReactComposerLoggingStore40(a);
            break;
          case c("ReactComposerScrapedAttachmentActionType").ATTACHMENT_SCRAPED:
            c("ReactComposerDispatcher").isDispatching() &&
              c("ReactComposerDispatcher").waitFor([
                c("ReactComposerScrapedAttachmentStore").getDispatchToken(),
              ]);
            this.$ReactComposerLoggingStore41(a);
            break;
          case c("ReactComposerAudienceActionTypes").SET_AUDIENCE:
            this.$ReactComposerLoggingStore42(a);
            break;
          case c("ReactComposerActionTypes").COMPOSER_CANCEL:
            this.$ReactComposerLoggingStore43(a);
            break;
          case c("ReactComposerActionTypes").COMPOSER_NAVIGATE_AWAY_ATTEMPT:
            this.$ReactComposerLoggingStore44(a);
            break;
          case c("ReactComposerCollectionsActionTypes")
            .SHOW_COLLECTION_SELECTOR:
            this.$ReactComposerLoggingStore45(a);
            break;
          case c("ReactComposerCollectionsActionTypes")
            .HIDE_COLLECTION_SELECTOR:
            this.$ReactComposerLoggingStore46(a);
            break;
          case c("ReactComposerAudienceActionTypes").SET_COLLECTION:
            c("ReactComposerDispatcher").isDispatching() &&
              c("ReactComposerDispatcher").waitFor([
                c("ReactComposerAudienceStore").getDispatchToken(),
              ]);
            this.$ReactComposerLoggingStore47(a);
            break;
          case c("ReactComposerCollectionsActionTypes").SHOW_CREATION_LAYER:
          case c("ReactComposerCollectionsActionTypes")
            .SHOW_SHARING_SPACE_CREATION_LAYER:
            this.$ReactComposerLoggingStore48(a);
            break;
          case c("ReactComposerCollectionsActionTypes").HIDE_CREATION_LAYER:
          case c("ReactComposerCollectionsActionTypes")
            .HIDE_SHARING_SPACE_CREATION_LAYER:
            this.$ReactComposerLoggingStore49(a);
            break;
          case c("ReactComposerCollectionsActionTypes").SPACE_SELECTOR_LOADED:
            this.$ReactComposerLoggingStore50(a);
            break;
          case c("ReactComposerActionTypes").COMPOSER_SHARESHEET_POST_CLICKED:
            this.$ReactComposerLoggingStore51(a);
            break;
          case c("ReactComposerFocusActionTypes").FOCUS_ACQUIRED:
            this.$ReactComposerLoggingStore52(a);
            break;
          case c("ReactComposerFocusActionTypes").FOCUS_LOST:
            this.$ReactComposerLoggingStore53(a);
            break;
          case c("PagesComposerActionTypes")
            .PAGES_COMPOSER_VOICE_SWITCHER_CLICK:
          case c("PagesComposerActionTypes")
            .PAGES_COMPOSER_VOICE_SWITCHER_ACTOR_CHANGE:
            this.$ReactComposerLoggingStore54(a);
            break;
          case c("PagesComposerInstagramAudienceActionTypes")
            .CLOSE_INSTAGRAM_AUTH_DIALOG:
          case c("PagesComposerInstagramAudienceActionTypes")
            .INSTAGRAM_AUTH_FAIL:
          case c("PagesComposerInstagramAudienceActionTypes")
            .INSTAGRAM_AUTH_SUCCEED:
          case c("PagesComposerInstagramAudienceActionTypes")
            .OPEN_INSTAGRAM_AUTH_DIALOG:
          case c("PagesComposerInstagramAudienceActionTypes")
            .SET_PAGE_TO_INSTAGRAM_LINKING_STATUS:
            this.$ReactComposerLoggingStore55(a);
            break;
          case c("PagesComposerActionTypes").PAGES_COMPOSER_HELP_CENTER_CLICK:
            this.$ReactComposerLoggingStore56(a);
            break;
          default:
        }
      };
      e.getSessionID = function (a) {
        return d("ComposerXSessionIDs").getSessionID(a);
      };
      e.isActivated = function (a) {
        return this.getComposerData(a).activated;
      };
      e.activate = function (a) {
        a = this.getComposerData(a);
        a.activated = !0;
        d("ReactComposerLoggingQueue").getLength() > 0 &&
          this.$ReactComposerLoggingStore57();
      };
      e.$ReactComposerLoggingStore3 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = c("ReactComposerStore").getTargetType(a),
          d = c("ReactComposerStore").getComposerData(a),
          e = d.actorID;
        d = d.isActorAPage;
        var f = {};
        (b === "page" || d) && (f.posting_as_page_id = d ? e : null);
        b === "page"
          ? (f.composer_entry_point_name = c("ReactComposerStore").getRef(a))
          : b === "group" && (f.composer_entry_point_name = "inline_composer");
        this.$ReactComposerLoggingStore58(a, "composer_entry", {
          logOncePerSession: !0,
          extraData: f,
        });
      };
      e.$ReactComposerLoggingStore37 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "featureType",
          "uiElementName",
        ]);
        var b = a[0],
          c = a[1];
        a = a[2];
        this.$ReactComposerLoggingStore59(b, c, a);
      };
      e.$ReactComposerLoggingStore38 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "featureType",
          "uiElementName",
        ]);
        var b = a[0],
          c = a[1];
        a = a[2];
        this.$ReactComposerLoggingStore60(b, c, a);
      };
      e.$ReactComposerLoggingStore39 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "featureType",
          "uiElementName",
        ]);
        var b = a[0],
          c = a[1];
        a = a[2];
        this.$ReactComposerLoggingStore61(b, c, a);
      };
      e.$ReactComposerLoggingStore1 = function (a) {
        var b = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore3(a);
        if (
          a.featureType &&
          Object.prototype.hasOwnProperty.call(
            c("ExtensibleSproutsItemType"),
            a.featureType
          )
        ) {
          var d = this.validateAction(a, "sproutSurface");
          this.$ReactComposerLoggingStore59(b, a.featureType, a.source, d);
        }
      };
      e.$ReactComposerLoggingStore2 = function (a) {
        var b = this.validateAction(a, "composerID");
        c("ReactComposerAttachmentStore").isSelectedAttachmentActive(b) &&
          this.$ReactComposerLoggingStore3(a);
        if (
          a.loggingName &&
          Object.prototype.hasOwnProperty.call(
            c("ExtensibleSproutsItemType"),
            a.loggingName
          )
        ) {
          var d = this.validateAction(a, "sproutSurface");
          this.$ReactComposerLoggingStore59(b, a.loggingName, a.source, d);
        }
      };
      e.$ReactComposerLoggingStore4 = function (a) {
        a = this.validateAction(a, ["id", "composerID"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore62(a, "client_bootloaded", {
          extraData: {
            attachment_type: b,
            duration: c("ReactComposerAttachmentStore").getBootloadDuration(
              a,
              b
            ),
          },
        });
      };
      e.$ReactComposerLoggingStore5 = function (a) {
        a = this.validateAction(a, ["id", "composerID"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore62(a, "client_bootstrapped", {
          extraData: {
            attachment_type: b,
            duration: c("ReactComposerAttachmentStore").getBootstrapDuration(
              a,
              b
            ),
          },
        });
      };
      e.$ReactComposerLoggingStore6 = function (a) {
        a = this.validateAction(a, ["composerID", "sourceLoggingName"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore59(b, "MEDIA", a);
        this.$ReactComposerLoggingStore58(b, "intent_media");
        this.$ReactComposerLoggingStore63(b, "client_flow_begin", null, {
          logOncePerSession: !0,
        });
        this.$ReactComposerLoggingStore63(b, "client_select_begin");
      };
      e.$ReactComposerLoggingStore7 = function (a) {
        a = this.validateAction(a, ["composerID", "sourceLoggingName"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore60(b, "MEDIA", a);
      };
      e.$ReactComposerLoggingStore8 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore58(a, "add_photo");
        this.$ReactComposerLoggingStore64(a, "MEDIA");
      };
      e.$ReactComposerLoggingStore9 = function (a) {
        a = this.validateAction(a, ["composerID", "loggingData"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore63(b, "client_process_begin", a);
        this.$ReactComposerLoggingStore58(b, "media_upload_process_start", {
          extraData: {
            source_file_size: a.bytes,
            source_width: a.width,
            source_height: a.height,
          },
        });
      };
      e.$ReactComposerLoggingStore10 = function (a) {
        a = this.validateAction(a, ["composerID", "loggingData"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore63(b, "client_process_success", a);
        this.$ReactComposerLoggingStore58(b, "media_upload_process_success", {
          extraData: {
            source_file_size: a.media_data_size,
            source_width: a.width,
            source_height: a.height,
            transcode_file_size: a.bytes,
            upload_width: a.upload_width,
            upload_height: a.upload_height,
          },
        });
      };
      e.$ReactComposerLoggingStore11 = function (a) {
        a = this.validateAction(a, ["composerID", "loggingData"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore63(b, "client_process_fail", a);
      };
      e.$ReactComposerLoggingStore12 = function (a) {
        a = this.validateAction(a, ["composerID", "loggingData"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore63(
          b,
          "client_spherical_check_success",
          a
        );
      };
      e.$ReactComposerLoggingStore13 = function (a) {
        a = this.validateAction(a, ["composerID", "loggingData"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore63(b, "client_spherical_check_fail", a);
      };
      e.$ReactComposerLoggingStore14 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore63(a, "client_process_unavailable");
      };
      e.$ReactComposerLoggingStore15 = function (a) {
        a = this.validateAction(a, ["composerID", "fileUpload"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore63(b, "client_transfer_begin", {
          bytes: a.getFile().size,
        });
        this.$ReactComposerLoggingStore58(b, "media_upload_start", {
          extraData: {
            source_height: a.getAdditionalData().get("original_height"),
            source_width: a.getAdditionalData().get("original_width"),
            source_file_size: a.getAdditionalData().get("original_file_size"),
            upload_height: a.getAdditionalData().get("upload_height"),
            upload_width: a.getAdditionalData().get("upload_width"),
            transcode_file_size: a.getFile().size,
          },
        });
      };
      e.$ReactComposerLoggingStore16 = function (a) {
        var b = this.validateAction(a, [
            "composerID",
            "fileUpload",
            "timeToUpload",
          ]),
          d = b[0],
          e = b[1];
        b = b[2];
        var f = {};
        a.uploadID &&
          c("ReactComposerMediaUploadStore").getMediaUploadExists(
            d,
            a.uploadID
          ) &&
          (f = c("ReactComposerMediaUploadStore").getMediaUpload(
            d,
            a.uploadID
          ));
        e &&
          (this.$ReactComposerLoggingStore58(d, "add_photo_success"),
          this.$ReactComposerLoggingStore63(d, "client_transfer_success", {
            bytes: e.getFile().size,
            auto_retry_count: e.getRetryCount(),
            dt: b,
            custom_tags: { manual_retry: !!e.getFile().manuallyRetried },
            projection_type: f.projectionType,
            fbid: a.photoID,
            sheight: f.height,
            swidth: f.width,
            theight: a.height,
            twidth: a.width,
          }),
          this.$ReactComposerLoggingStore58(d, "media_upload_success", {
            extraData: {
              media_id: f.photoID,
              source_height: e.getAdditionalData().get("original_height"),
              source_width: e.getAdditionalData().get("original_width"),
              source_file_size: e.getAdditionalData().get("original_file_size"),
              upload_height: e.getAdditionalData().get("upload_height"),
              upload_width: e.getAdditionalData().get("upload_width"),
              transcode_file_size: a.fileUpload.getFile().size,
            },
          }));
      };
      e.$ReactComposerLoggingStore17 = function (a) {
        var b = this.validateAction(a, [
            "composerID",
            "fileUpload",
            "error",
            "timeToUpload",
          ]),
          d = b[0],
          e = b[1],
          f = b[2];
        b = b[3];
        var g = {};
        a.uploadID &&
          c("ReactComposerMediaUploadStore").getMediaUploadExists(
            d,
            a.uploadID
          ) &&
          (g = c("ReactComposerMediaUploadStore").getMediaUpload(
            d,
            a.uploadID
          ));
        this.$ReactComposerLoggingStore58(d, "add_photo_failure");
        this.$ReactComposerLoggingStore63(d, "client_transfer_fail", {
          bytes: e.getFile().size,
          error_code: f.code,
          error_info: f.description,
          auto_retry_count: e.getRetryCount(),
          dt: b,
          custom_tags: { manual_retry: !!e.getFile().manuallyRetried },
          projection_type: g.projectionType,
          sheight: g.height,
          swidth: g.width,
        });
      };
      e.$ReactComposerLoggingStore18 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore58(a, "remove_photo");
        this.$ReactComposerLoggingStore64(a, "MEDIA");
        this.$ReactComposerLoggingStore63(a, "client_transfer_cancel");
      };
      e.$ReactComposerLoggingStore19 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore58(a, "remove_photo");
        this.$ReactComposerLoggingStore64(a, "MEDIA");
      };
      e.$ReactComposerLoggingStore20 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore64(a, "MEDIA");
      };
      e.$ReactComposerLoggingStore21 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore58(a, "add_video");
      };
      e.$ReactComposerLoggingStore22 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore58(a, "remove_video");
        this.$ReactComposerLoggingStore64(a, "MEDIA");
      };
      e.$ReactComposerLoggingStore23 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "taggerID",
          "sourceLoggingName",
        ]);
        var b = a[0],
          c = a[1];
        a = a[2];
        var d = this.$ReactComposerLoggingStore65(c);
        d !== null || h(0, 4216, c);
        d && this.$ReactComposerLoggingStore60(b, d, a);
      };
      e.$ReactComposerLoggingStore24 = function (a) {
        a = this.validateAction(a, ["composerID", "sourceLoggingName"]);
        var b = a[0];
        a = a[1];
        var d = c("ReactComposerTaggerStore").getSelectedTagger(b),
          e = null;
        switch (d) {
          case c("ReactComposerTaggerType").PEOPLE:
            this.$ReactComposerLoggingStore59(b, "WITH_TAG", a);
            e = "intent_friend_tag";
            break;
          case c("ReactComposerTaggerType").LOCATION:
            this.$ReactComposerLoggingStore59(b, "LOCATION", a);
            e = "intent_location";
            break;
          case c("ReactComposerTaggerType").ACTIVITY:
            this.$ReactComposerLoggingStore59(b, "MINUTIAE", a);
            e = "intent_minutiae";
            break;
          case c("ReactComposerTaggerType").MESSAGING:
            this.$ReactComposerLoggingStore59(b, "GET_MESSAGES", a);
            break;
          case c("ReactComposerTaggerType").COVID_BUSINESS_POST:
            break;
          default:
            d = this.$ReactComposerLoggingStore65(d);
            d && this.$ReactComposerLoggingStore59(b, d, a);
            break;
        }
        if (e === null) return;
        this.$ReactComposerLoggingStore58(b, e);
      };
      e.$ReactComposerLoggingStore25 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "taggerID",
          "sourceLoggingName",
        ]);
        var b = a[0],
          c = a[1];
        a = a[2];
        var d = this.$ReactComposerLoggingStore65(c);
        d !== null || h(0, 4216, c);
        d && this.$ReactComposerLoggingStore64(b, d, a);
      };
      e.$ReactComposerLoggingStore27 = function (a) {
        a = this.validateAction(a, ["composerID", "sproutType"]);
        var b = a[0];
        a = a[1];
        var d = c("ReactComposerStore").getComposerData(b),
          e = d.actorID;
        d = d.isActorAPage;
        d
          ? this.$ReactComposerLoggingStore58(b, "composer_post", {
              extraData: {
                posting_as_page_id: e,
                selected_features: { selected_sprouts: [a] },
              },
            })
          : this.$ReactComposerLoggingStore58(b, "composer_post");
      };
      e.$ReactComposerLoggingStore28 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = this.getComposerData(a);
        b.perfTimes.postStartTime = c("performanceAbsoluteNow")();
        b = c("ReactComposerStore").getTargetType(a);
        var e = c("ReactComposerStore").getRef(a),
          f = c("ReactComposerStore").getComposerData(a),
          g = f.actorID;
        f = f.isActorAPage;
        c("QuickPerformanceLogger").markerStart(c("qpl")._(917556, "5174"));
        c("QuickPerformanceLogger").markerAnnotate(c("qpl")._(917556, "5174"), {
          string: { targetType: b },
        });
        c("QuickPerformanceLogger").markerAnnotate(c("qpl")._(917556, "5174"), {
          string: { ref: e },
        });
        e = d("ComposerStructuredLoggerUtil").getDestinationsData(a);
        if (b === "page" || f) {
          b = {
            selected_sprouts: d(
              "ReactPagesComposerLoggingUtils"
            ).getSelectedSprouts(a),
          };
          this.$ReactComposerLoggingStore58(a, "composer_post", {
            extraData: babelHelpers["extends"]({}, e, {
              posting_as_page_id: f ? g : null,
              selected_features: b,
            }),
          });
        } else
          this.$ReactComposerLoggingStore58(a, "composer_post", {
            extraData: babelHelpers["extends"]({}, e),
          });
        this.$ReactComposerLoggingStore66(a) &&
          (this.$ReactComposerLoggingStore63(
            a,
            "client_publish_begin",
            this.$ReactComposerLoggingStore67(a)
          ),
          c("ReactComposerPhotoStore")
            .getPhotos(a)
            .forEach(function (a) {
              a.faceboxes.forEach(function (b) {
                return new (c("PhotoUploadFacerecWaterfallTypedLogger"))()
                  .setEvent("client_photo_published")
                  .setPhotoFbid(a.id)
                  .setFaceBoxID(b.id)
                  .setRecognizedUser(b.recognizedSubjectID)
                  .setTaggedUser(b.taggedSubjectID)
                  .log();
              });
            }));
        this.$ReactComposerLoggingStore68(a, "post");
      };
      e.$ReactComposerLoggingStore29 = function (a) {
        var b = this.validateAction(a, "composerID"),
          d = this.getComposerData(b);
        this.$ReactComposerLoggingStore58(b, "composer_post_success", {
          extraData: { logging_ids: a.loggingToken },
        });
        c("QuickPerformanceLogger").markerEnd(c("qpl")._(917556, "5174"), 2);
        this.$ReactComposerLoggingStore62(b, "client_post_succeeded", {
          extraData: {
            attachment_type: c(
              "ReactComposerAttachmentStore"
            ).getSelectedAttachmentID(b),
            duration: c("performanceAbsoluteNow")() - d.perfTimes.postStartTime,
          },
        });
        if (this.$ReactComposerLoggingStore66(b)) {
          a = this.$ReactComposerLoggingStore67(b);
          this.$ReactComposerLoggingStore63(b, "client_publish_success", a);
          this.$ReactComposerLoggingStore63(b, "client_flow_success");
        }
      };
      e.$ReactComposerLoggingStore30 = function (a) {
        var b = this.validateAction(a, "composerID"),
          d = this.getComposerData(b);
        this.$ReactComposerLoggingStore58(b, "composer_post_failure");
        c("QuickPerformanceLogger").markerEnd(c("qpl")._(917556, "5174"), 87);
        this.$ReactComposerLoggingStore62(b, "client_post_failed", {
          extraData: {
            attachment_type: c(
              "ReactComposerAttachmentStore"
            ).getSelectedAttachmentID(b),
            duration: c("performanceAbsoluteNow")() - d.perfTimes.postStartTime,
          },
        });
        if (this.$ReactComposerLoggingStore66(b)) {
          d = a.response;
          a = Object.assign(this.$ReactComposerLoggingStore67(b), {
            error_code: d && d.getError && d.getError(),
            error_info: d && d.getErrorDescription && d.getErrorDescription(),
          });
          this.$ReactComposerLoggingStore63(b, "client_publish_fail", a);
        }
      };
      e.$ReactComposerLoggingStore31 = function (a) {
        a = this.validateAction(a, ["composerID", "numPhotos", "method"]);
        var b = a[0],
          c = a[1];
        a = a[2];
        c = { method: a, volume: c };
        this.$ReactComposerLoggingStore63(b, "client_flow_begin", null, {
          logOncePerSession: !0,
        });
        a !== "file_selector" &&
          this.$ReactComposerLoggingStore63(b, "client_select_begin");
        this.$ReactComposerLoggingStore63(b, "client_select_success", c);
      };
      e.$ReactComposerLoggingStore32 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore63(a, "client_photo_edit_begin");
      };
      e.$ReactComposerLoggingStore33 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore63(a, "client_photo_edit_success");
      };
      e.$ReactComposerLoggingStore34 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore63(a, "client_transfer_manual_retry");
      };
      e.$ReactComposerLoggingStore35 = function (a) {
        a = this.validateAction(a, ["photoID", "facebox"]);
        var b = a[0];
        a = a[1];
        var d = a.bestRecognition,
          e = null;
        d && (e = d.subjectID);
        new (c("PhotoUploadFacerecWaterfallTypedLogger"))()
          .setEvent("recognition_received_by_client")
          .setPhotoFbid(b)
          .setFaceBoxID(a.id)
          .setRecognizedUser(e)
          .log();
      };
      e.$ReactComposerLoggingStore36 = function (a) {
        a = this.validateAction(a, ["photos", "facerecWaterfallEvent"]);
        var b = a[0],
          d = a[1];
        b.forEach(function (a) {
          new (c("PhotoUploadFacerecWaterfallTypedLogger"))()
            .setEvent(c("nullthrows")(d))
            .setPhotoFbid(a)
            .log();
        });
      };
      e.$ReactComposerLoggingStore41 = function (a) {
        var b = this.validateAction(a, "composerID"),
          d = a.attachmentConfig;
        this.$ReactComposerLoggingStore58(b, "composer_feature_update", {
          extraData: {
            feature_type: c("ReactComposerFeatureType").LINK,
            source: a.sourceLoggingName,
            app_content_id:
              d == null
                ? void 0
                : (b = d.content_attachment_data) == null
                ? void 0
                : b.id,
          },
        });
      };
      e.$ReactComposerLoggingStore42 = function (a) {
        var b = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore64(
          b,
          c("ReactComposerFeatureType").PRIVACY,
          a.sourceLoggingName
        );
      };
      e.$ReactComposerLoggingStore43 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore58(a, "composer_cancel");
      };
      e.$ReactComposerLoggingStore44 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore68(a, "cancel");
        this.$ReactComposerLoggingStore58(a, "navigate_away");
      };
      e.$ReactComposerLoggingStore45 = function (a) {
        a = this.validateAction(a, ["composerID", "sourceLoggingName"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore59(
          b,
          c("ReactComposerFeatureType").COLLECTIONS,
          a
        );
      };
      e.$ReactComposerLoggingStore46 = function (a) {
        a = this.validateAction(a, ["composerID", "sourceLoggingName"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore60(
          b,
          c("ReactComposerFeatureType").COLLECTIONS,
          a
        );
      };
      e.$ReactComposerLoggingStore47 = function (a) {
        a = this.validateAction(a, ["composerID", "sourceLoggingName"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore64(
          b,
          c("ReactComposerFeatureType").COLLECTIONS,
          a
        );
        Object.prototype.hasOwnProperty.call(
          c("ComposerSharingSpacesEvent"),
          a
        ) &&
          this.$ReactComposerLoggingStore58(b, a.toLowerCase(), {
            extraData: {
              profile_channel_audience_type: c(
                "ReactComposerAudienceStore"
              ).getPrivacyLabel(b),
            },
          });
      };
      e.$ReactComposerLoggingStore48 = function (a) {
        a = this.validateAction(a, ["composerID", "sourceLoggingName"]);
        var b = a[0];
        a = a[1];
        this.$ReactComposerLoggingStore59(
          b,
          c("ReactComposerFeatureType").COLLECTION_CREATION,
          a
        );
        Object.prototype.hasOwnProperty.call(
          c("ComposerSharingSpacesEvent"),
          a
        ) && this.$ReactComposerLoggingStore58(b, a.toLowerCase());
      };
      e.$ReactComposerLoggingStore49 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "sourceLoggingName",
          "isCancel",
        ]);
        var b = a[0],
          d = a[1];
        a = a[2];
        a = a
          ? this.$ReactComposerLoggingStore61.bind(this)
          : this.$ReactComposerLoggingStore60.bind(this);
        a(b, c("ReactComposerFeatureType").COLLECTION_CREATION, d);
        Object.prototype.hasOwnProperty.call(
          c("ComposerSharingSpacesEvent"),
          d
        ) &&
          this.$ReactComposerLoggingStore58(b, d.toLowerCase(), {
            extraData: {
              profile_channel_audience_type: c(
                "ReactComposerAudienceStore"
              ).getPrivacyLabel(b),
            },
          });
      };
      e.$ReactComposerLoggingStore50 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "sourceLoggingName",
          "spaceCount",
        ]);
        var b = a[0],
          d = a[1];
        a = a[2];
        Object.prototype.hasOwnProperty.call(
          c("ComposerSharingSpacesEvent"),
          d
        ) &&
          this.$ReactComposerLoggingStore58(b, d.toLowerCase(), {
            extraData: { space_count: a },
          });
      };
      e.$ReactComposerLoggingStore51 = function (a) {
        a = this.validateAction(a, ["composerID", "sourceLoggingName"]);
        var b = a[0];
        a = a[1];
        Object.prototype.hasOwnProperty.call(
          c("ComposerSharingSpacesEvent"),
          a
        ) &&
          this.$ReactComposerLoggingStore58(b, a.toLowerCase(), {
            extraData: {
              profile_channel_audience_type: c(
                "ReactComposerAudienceStore"
              ).getPrivacyLabel(b),
            },
          });
      };
      e.$ReactComposerLoggingStore40 = function (a) {
        var b = this.validateAction(a, [
            "composerID",
            "visibilityMap",
            "event",
            "sproutsState",
          ]),
          d = b[0],
          e = b[1],
          f = b[2];
        b = b[3];
        this.$ReactComposerLoggingStore58(d, f, {
          extraData: {
            sprouts_visibilities: e,
            state:
              b === c("ReactComposerSproutsDisplayState").INLINE
                ? "collapsed"
                : "expanded_default",
            promoted_sprout_name: a.promotedSprout,
            promotion_id: a.promotionID,
          },
        });
      };
      e.$ReactComposerLoggingStore52 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore69(a);
      };
      e.$ReactComposerLoggingStore53 = function (a) {
        a = this.validateAction(a, "composerID");
        this.$ReactComposerLoggingStore70(a);
      };
      e.$ReactComposerLoggingStore54 = function (a) {
        var b = this.validateAction(a, "composerID"),
          d = c("ReactComposerStore").getComposerData(b);
        d = d.actorID;
        a =
          a.type ===
          c("PagesComposerActionTypes").PAGES_COMPOSER_VOICE_SWITCHER_CLICK
            ? "pages_composer_voice_switcher_click"
            : "pages_composer_voice_switcher_actor_change";
        this.$ReactComposerLoggingStore58(b, a, {
          extraData: { posting_as_page_id: d },
        });
      };
      e.$ReactComposerLoggingStore56 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = c("ReactComposerStore").getComposerData(a);
        b = b.actorID;
        this.$ReactComposerLoggingStore58(
          a,
          "pages_composer_help_center_click",
          { extraData: { posting_as_page_id: b } }
        );
      };
      e.$ReactComposerLoggingStore55 = function (a) {
        var b = this.validateAction(a, "composerID"),
          d = c("ReactComposerStore").getComposerData(b);
        d = d.actorID;
        var e = null;
        switch (a.type) {
          case c("PagesComposerInstagramAudienceActionTypes")
            .CLOSE_INSTAGRAM_AUTH_DIALOG:
            e = "pages_composer_instagram_auth_dialog_close";
            break;
          case c("PagesComposerInstagramAudienceActionTypes")
            .INSTAGRAM_AUTH_FAIL:
            e = "pages_composer_instagram_auth_failure";
            break;
          case c("PagesComposerInstagramAudienceActionTypes")
            .INSTAGRAM_AUTH_SUCCEED:
            e = "pages_composer_instagram_auth_success";
            break;
          case c("PagesComposerInstagramAudienceActionTypes")
            .OPEN_INSTAGRAM_AUTH_DIALOG:
            e = "pages_composer_instagram_auth_dialog_open";
            break;
          default:
            e = "pages_composer_instagram_auth_dialog_open";
            break;
        }
        this.$ReactComposerLoggingStore58(b, e, {
          extraData: { posting_as_page_id: d },
        });
      };
      e.$ReactComposerLoggingStore26 = function (a) {
        a = this.validateAction(a, [
          "composerID",
          "taggerID",
          "event",
          "extraData",
        ]);
        var b = a[0],
          c = a[1],
          d = a[2];
        a = a[3];
        c = this.$ReactComposerLoggingStore65(c);
        this.$ReactComposerLoggingStore58(b, d, {
          extraData: babelHelpers["extends"]({ feature_type: c }, a),
        });
      };
      e.$ReactComposerLoggingStore66 = function (a) {
        var b = c(
          "ReactComposerAttachmentStore"
        ).getIsAttachmentSelectedOrProxied(
          a,
          c("ReactComposerAttachmentType").MEDIA
        );
        a = c("ReactComposerMediaUploadStore").getUploadsOfType(
          a,
          d("ReactComposerMediaUploadType").PHOTO
        );
        return b && !!a.size;
      };
      e.$ReactComposerLoggingStore67 = function (a) {
        var b =
            c("ReactComposerTaggerStore").getTaggerData(
              a,
              c("ReactComposerTaggerType").PEOPLE
            ) || [],
          d = c(
            "ReactComposerMediaUploadStore"
          ).getTotalNumberOfStickersOnPhotos(a);
        return {
          volume: c("ReactComposerPhotoStore").getPhotos(a).size,
          with_tag_count: b.length,
          sticker_count: d,
        };
      };
      e.$ReactComposerLoggingStore59 = function (a, b, d, e) {
        var f = c("ReactComposerStore").getComposerData(a),
          g = f.actorID;
        f = f.isActorAPage;
        this.$ReactComposerLoggingStore58(a, "composer_feature_intent", {
          extraData: babelHelpers["extends"](
            { feature_type: b, source: d, posting_as_page_id: f ? g : null },
            e && { sprout_surface: e }
          ),
        });
      };
      e.$ReactComposerLoggingStore64 = function (a, b, c) {
        this.$ReactComposerLoggingStore58(a, "composer_feature_update", {
          extraData: { feature_type: b, source: c },
        });
      };
      e.$ReactComposerLoggingStore61 = function (a, b, c) {
        this.$ReactComposerLoggingStore58(a, "composer_feature_cancel", {
          extraData: { feature_type: b, source: c },
        });
      };
      e.$ReactComposerLoggingStore60 = function (a, b, c) {
        this.$ReactComposerLoggingStore58(a, "composer_feature_done", {
          extraData: { feature_type: b, source: c },
        });
      };
      e.$ReactComposerLoggingStore69 = function (a) {
        this.$ReactComposerLoggingStore58(a, "composer_focus_acquired");
      };
      e.$ReactComposerLoggingStore70 = function (a) {
        this.$ReactComposerLoggingStore58(a, "composer_focus_lost");
      };
      e.$ReactComposerLoggingStore58 = function (a, b, e) {
        var f = this;
        e === void 0 && (e = {});
        var g = this.getComposerData(a);
        if (g.uniqueEvents.has(b)) {
          if (g.uniqueEvents.get(b)) return;
          g.uniqueEvents = g.uniqueEvents.set(b, !0);
        }
        c("ReactComposerStore").getRef(a) === "timeline/recent_posts" &&
          c("Bootloader").loadModules(
            ["FeedbackDigestNotifTypedLogger"],
            function (d) {
              new d()
                .setComposerWaterfallEvent(b)
                .addToExtraData(
                  "payload",
                  JSON.stringify(f.$ReactComposerLoggingStore71(a))
                )
                .addToExtraData(
                  "message",
                  c("ReactComposerStatusStore").getMessageText(a)
                )
                .log();
            },
            "ReactComposerLoggingStore"
          );
        e.extraData = babelHelpers["extends"](
          {
            payload: this.$ReactComposerLoggingStore71(a),
            displayed_sprouts: c("ReactComposerStore").getDisplayedSprouts(a),
            ordered_sprouts: c("ReactComposerStore").getOrderedSprouts(a),
            ranker_request_id: c("ReactComposerStore").getRankerRequestID(a),
            sprout_surface: c("ReactComposerStore").getSproutSurface(a),
          },
          e.extraData
        );
        g = c("ReactComposerStore").getComposerData(a);
        var h = g.isActorAPage;
        g = g.pageComposerDestinationsConfig;
        h &&
          ((e.extraData = babelHelpers["extends"](
            {
              post_text: c("ReactComposerStatusStore").getMessageText(a),
              post_action_type: d(
                "ComposerStructuredLoggerUtil"
              ).getPostActionType(a),
            },
            e.extraData
          )),
          g &&
            (e.extraData = babelHelpers["extends"](
              {
                is_sharesheet_enabled: g.isSharesheetEnabled,
                show_story_section: g.showStorySection,
                show_instagram_section: g.showInstagramSection,
                show_group_section: g.showGroupSection,
                is_instagram_authenticated: g.isInstagramAuthenticated,
              },
              e.extraData
            )));
        d("ComposerXMarauderLogger").logEvent(b, a, e);
      };
      e.$ReactComposerLoggingStore62 = function (a, b, c) {
        c === void 0 && (c = {});
        var e = this.getComposerData(a);
        if (e.uniqueEvents.has(b)) {
          if (e.uniqueEvents.get(b)) return;
          e.uniqueEvents = e.uniqueEvents.set(b, !0);
        }
        d("ReactComposerPerfLogger").logEvent(b, a, c);
      };
      e.$ReactComposerLoggingStore63 = function (a, b, d, e, f) {
        var g = this.getComposerData(a);
        if (g.uniqueEvents.has(b)) {
          if (g.uniqueEvents.get(b)) return;
          g.uniqueEvents = g.uniqueEvents.set(b, !0);
        }
        this.logPUWStep(
          b,
          this.getSessionID(a),
          "web_react_composer",
          c("ReactComposerStore").getRef(a),
          d,
          e,
          f
        );
      };
      e.$ReactComposerLoggingStore57 = function () {
        while (d("ReactComposerLoggingQueue").getLength() > 0) {
          var a = d("ReactComposerLoggingQueue").pop();
          this.handler(a);
        }
      };
      e.$ReactComposerLoggingStore71 = function (a) {
        var b = {
          character: c("ReactComposerStatusStore").getTextLength(a),
          location_tag: c("ReactComposerTaggerStore").hasLocationTag(a) ? 1 : 0,
          implicit_location: c("ReactComposerTaggerStore").hasImplicitLocation(
            a
          )
            ? 1
            : 0,
          minutiae: c("ReactComposerTaggerStore").hasMinutiae(a) ? 1 : 0,
          with_who_tag: c("ReactComposerTaggerStore").getNumberOfWithWhoTags(a),
          photo: c("ReactComposerMediaUploadStore").getNonsphericalPhotoCount(
            a
          ),
          three_sixty_photo: c(
            "ReactComposerMediaUploadStore"
          ).getSphericalPhotoCount(a),
          asset_3d: c("ReactComposerAsset3dAttachmentStore").getAsset3DInput(a)
            ? 1
            : 0,
          video: c("ReactComposerMediaUploadStore").getUploadsCount(
            a,
            d("ReactComposerMediaUploadType").VIDEO
          ),
          shared_link: c("ReactComposerScrapedAttachmentStore").hasAttachment(a)
            ? 1
            : 0,
          backdated: c("ReactComposerTaggerStore").hasBackdate(a)
            ? c("ReactComposerTaggerStore").getTaggerData(
                a,
                c("ReactComposerTaggerType").BACKDATE
              )
            : null,
          audience: c("ReactComposerAudienceStore").getAudience(a),
          collection: c("ReactComposerAudienceStore").getCollectionID(a),
        };
        c("ifRequired")("ReactComposerCTAStore", function (c) {
          c = c.getCTAType(a);
          c && (b[c.toLowerCase()] = 1);
        });
        c("ReactComposerTaggerStore").hasNonprofit(a) &&
          (b = babelHelpers["extends"]({}, b, { fundraiser: 1 }));
        c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
          a,
          c("ReactComposerAttachmentType").LIST
        ) && (b = babelHelpers["extends"]({}, b, { list: 1 }));
        c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
          a,
          c("ReactComposerAttachmentType").VISUAL_POLL
        ) && (b = babelHelpers["extends"]({}, b, { poll: 1 }));
        c("ReactComposerTaggerStore").getTaggerData(
          a,
          c("ReactComposerTaggerType").PRODUCT
        ).length > 0 && (b = babelHelpers["extends"]({}, b, { product: 1 }));
        return b;
      };
      e.$ReactComposerLoggingStore65 = function (a) {
        switch (a) {
          case c("ReactComposerTaggerType").PEOPLE:
            return "WITH_TAG";
          case c("ReactComposerTaggerType").LOCATION:
            return "LOCATION";
          case c("ReactComposerTaggerType").ACTIVITY:
            return "MINUTIAE";
          case c("ReactComposerTaggerType").BACKDATE:
            return "BACKDATE";
          case c("ReactComposerTaggerType").SPONSOR:
            return "SPONSOR_TAG";
          case c("ReactComposerTaggerType").PRODUCT:
            return "TAG_PRODUCT";
          case c("ReactComposerTaggerType").PAGE_CTA:
            return c("ReactComposerFeatureType").PAGE_CTA;
          case c("ReactComposerTaggerType").FORMATTED_TEXT:
          case c("ReactComposerTaggerType").FORMATTED_TEXT_TRAY:
            return "TEXT_BACKGROUND";
          case c("ReactComposerTaggerType").STICKER:
            return "STICKER";
          case c("ReactComposerTaggerType").GIF:
            return "GIF";
          case c("ReactComposerTaggerType").VIDEO_SUGGESTIONS:
            return "VIDEO_SUGGESTIONS";
          case c("ReactComposerTaggerType").MESSAGING:
            return c("ReactComposerFeatureType").MESSAGING;
          case c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE:
            return "CONTACT_YOUR_REPRESENTATIVE";
          case c("ReactComposerTaggerType").FUN_FACT:
            return "FUN_FACT";
          case c("ReactComposerTaggerType").FUNDRAISER:
            return "FUNDRAISER";
          case c("ReactComposerTaggerType").ALBUM:
            return c("ReactComposerFeatureType").ALBUM;
          case c("ReactComposerTaggerType").VISUAL_POLL:
            return "VISUAL_POLLS";
          case c("ReactComposerTaggerType").TODO_LIST:
            return "TODO_LIST";
          case c("ReactComposerTaggerType").RECOMMENDATION:
            return "RECOMMENDATION";
          case c("ReactComposerTaggerType").SALES_PROMO:
            return "SALES_PROMO";
          case c("ReactComposerTaggerType").TAG_EVENT:
            return "TAG_EVENT";
          case c("ReactComposerTaggerType").BREAKING_NEWS:
            return c("ReactComposerFeatureType").BREAKING_NEWS;
          case c("ReactComposerTaggerType").PLAY_WITH_FRIENDS:
            return "PLAY_WITH_FRIENDS";
          case c("ReactComposerTaggerType").LOCAL_ALERTS:
            return c("ReactComposerFeatureType").LOCAL_ALERTS;
          case c("ReactComposerTaggerType").GET_SHOWTIMES:
            return c("ReactComposerFeatureType").GET_SHOWTIMES;
          case c("ReactComposerTaggerType").PAGES_INTERCEPTION:
            return c("ReactComposerFeatureType").PAGES_INTERCEPTION;
          case c("ReactComposerTaggerType").GROUP_JOIN_CTA:
            return "GROUP_JOIN_CTA";
          case c("ReactComposerTaggerType").WORK_FILE:
            return "WORK_FILE";
          case c("ReactComposerTaggerType").SUPPORT_NOW:
            return "SUPPORT_NOW";
          case c("ReactComposerTaggerType").AMA:
            return "AMA";
          case c("ReactComposerTaggerType").RECRUITING_CANDIDATE:
            return "RECRUITING_CANDIDATE";
          case c("ReactComposerTaggerType").CHATROOM:
            return "CHATROOM";
          case c("ReactComposerTaggerType").PAID_VIRTUAL_EVENT_GATED_POST:
            return "PAID_VIRTUAL_EVENT_GATED_POST";
          case c("ReactComposerTaggerType").BC_SUPPORT:
            return "BC_SUPPORT";
          case c("ReactComposerTaggerType").COVID_BUSINESS_POST:
            return "COVID_BUSINESS_POST";
          case c("ReactComposerTaggerType").VIDEO_MEETUP:
            return "VIDEO_MEETUP";
          case c("ReactComposerTaggerType").WORK_CHECKLIST:
            return "WORK_CHECKLIST";
          case c("ReactComposerTaggerType").JOB_SEARCH:
            return "JOB_SEARCH";
          default:
            return null;
        }
      };
      e.$ReactComposerLoggingStore68 = function (a, b) {
        c("ifRequired")("ReactComposerFormattedTextStore", function (d) {
          var e =
              d.getTextFormatPresetID(a) ||
              d.getPrevSelectedTextFormatPresetID(a),
            f = d.getTrackingString(a);
          e &&
            c("ifRequired")("SATPInteractionsTypedLogger", function (a) {
              new a()
                .setTrackingString(f)
                .setUserActionString(b)
                .setPresetID(e)
                .setRequestedCollection("COMPOSER_TOP")
                .log();
            });
        });
      };
      return b;
    })(
      c("classWithMixins")(
        c("ReactComposerStoreBase"),
        c("mixin")(d("PhotosUploadWaterfallXMixin"))
      )
    );
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "PUWMethods",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      DRAGDROP: "dragdrop",
      FILE_SELECTOR: "file_selector",
      VAULT: "vault",
      RECENT_PHOTOS: "recent_photos",
      PHOTOS_OF_YOU: "photos_of_you",
      METHOD_EDITOR: "editor",
      SUGGESTIONS: "suggestions",
      CAMERA: "camera",
      COPYPASTE: "copypaste",
      DISABLE_SPHERICAL: "disable_spherical",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerLoggingName",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      ADVERTISE_SPROUT: "advertise_sprout",
      ALBUM: "album",
      ALBUM_SPROUT: "album_sprout",
      ALBUM_TAB_SELECTOR: "album_tab_selector",
      ALBUM_TAGGER: "album_tagger",
      AMA_SPROUT: "ama_sprout",
      APP_INTEGARTION_TASKS: "app_integration_tasks",
      APP_INTEGRATION_AODOCS: "app_integration_aodocs",
      APP_INTEGRATION_BOX: "app_integration_box",
      APP_INTEGRATION_CORNERSTONE: "app_integration_cornerstone",
      APP_INTEGRATION_DROPBOX: "app_integration_dropbox",
      APP_INTEGRATION_EGNYTE: "app_integration_egnyte",
      APP_INTEGRATION_GDRIVE: "app_integration_gdrive",
      APP_INTEGRATION_GDRIVE_FOR_WORKROOMS:
        "app_integration_gdrive_for_workrooms",
      APP_INTEGRATION_JIRA: "app_integration_jira",
      APP_INTEGRATION_ONEDRIVE: "app_integration_onedrive",
      APP_INTEGRATION_ONEDRIVE_FOR_WORKROOMS:
        "app_integration_onedrive_for_workrooms",
      APP_INTEGRATION_QUIP: "app_integration_quip",
      APP_INTEGRATION_SHAREPOINT: "app_integration_sharepoint",
      APP_INTEGRATION_TRELLO: "app_integration_trello",
      ASSET_3D: "asset_3d",
      AUDIENCE_SELECTOR: "audience_selector",
      AYMT_CTA_UPSELL: "aymt_cta_upsell",
      BACKDATE_TAG_SPROUT: "backdate_tag_sprout",
      BACKDATE_TAGGER: "backdate_tagger",
      BC_SUPPORT: "bc_support",
      BLOOD_DONATION: "blood_donation",
      BREAKING_NEWS: "breaking_news",
      BREAKING_NEWS_SPROUT: "breaking_news_sprout",
      CALL_NOW_SPROUT: "call_now_sprout",
      CANVAS_EDITOR: "canvas_editor",
      CHATROOM: "chatroom",
      CHEVRON_MENU_EDIT_POST: "chevron_menu/edit_post",
      CIVIC_PROPOSAL: "civic_proposal",
      COLLECTION_CLEAR_BUTTON: "collection_clear_button",
      COLLECTION_SELECTED: "collection_selected",
      COLLECTIONS_CREATE_CANCEL_BUTTON: "collections_create_cancel_button",
      COLLECTIONS_CREATE_SHARING_SPACE_CANCEL_BUTTON:
        "collections_create_sharing_space_cancel_button",
      COLLECTIONS_CREATE_SHARING_SPACE_SUBMIT_BUTTON:
        "collections_create_sharing_space_submit_button",
      COLLECTIONS_CREATE_SUBMIT_BUTTON: "collections_create_submit_button",
      COLLECTIONS_SELECTOR_BUTTON: "collections_selector_button",
      COLLECTIONS_SELECTOR_CREATE_BUTTON: "collections_selector_create_button",
      COLLECTIONS_SELECTOR_CREATE_SHARING_SPACE_BUTTON:
        "collections_selector_create_sharing_space_button",
      COMMUNITY_GIVING: "community_giving",
      COMMUNITY_HELP_DRIVE_SPROUT: "community_help_drive_sprout",
      COMMUNITY_QA_SPROUT: "community_qa_sprout",
      CONTACT_YOUR_REPRESENTATIVE_SPROUT: "contact_your_representative_sprout",
      CONTACT_YOUR_REPRESENTATIVE_TAGGER: "contact_your_representative_tagger",
      CONTENT_WARNINGS_TAGGER: "content_warnings_tagger",
      COVID_BUSINESS_POST_SPROUT: "covid_business_post_sprout",
      CRISIS_BOOKMARK: "crisis_bookmark",
      CRISIS_PAGE: "crisis_page",
      CTA_UPSELL: "cta_upsell",
      DELETE_POST_EDIT_BUTTON: "delete_post_dialog/edit_post_button",
      DISCUSSION_POST_SPROUT: "discussion_post_sprout",
      DOC_SPROUT: "doc_sprout",
      DOC_TAB_SELECTOR: "doc_tab_selector",
      DRAFT_FOR_SPROUT: "draft_for_sprout",
      DRAFT_FOR_TAB_SELECTOR: "draft_for_tab_selector",
      ELLIPSIS_SPROUT: "ellipsis_sprout",
      ESCAPE_KEY: "escape_key",
      EVENT_IMPORT_BY_INTERCEPT: "event_import_by_intercept",
      EVENT_SPROUT: "event_sprout",
      EVENT_TAB_SELECTOR: "event_tab_selector",
      FB_COLLECTIBLE_SPROUT: "fb_collectible_sprout",
      FB_NOTE: "fb_note",
      FILE_DROPPED: "file_dropped",
      FILE_SPROUT: "file_sprout",
      FILE_TAB_SELECTOR: "file_tab_selector",
      FIND_PLAYERS_SPROUT: "find_players_sprout",
      FISHBOWL_SPROUT: "fishbowl_sprout",
      FORMATTED_TEXT_BUTTON: "formatted_text_button",
      FORMATTED_TEXT_SPROUT: "formatted_text_sprout",
      FORMATTED_TEXT_TAGGER: "formatted_text_tagger",
      FRIEND_TAG_SPROUT: "friend_tag_sprout",
      FUN_FACT: "fun_fact",
      FUN_FACT_SPROUT: "fun_fact_sprout",
      FUNDRAISER_SPROUT: "fundraiser_sprout",
      GAME_TAB_SELECTOR: "game_tab_selector",
      GET_BOOKINGS_SPROUT: "get_bookings_sprout",
      GET_DIRECTIONS_SPROUT: "get_directions_sprout",
      GET_MESSAGES_SPROUT: "get_messages_sprout",
      GET_PHONE_CALLS_SPROUT: "get_phone_calls_sprout",
      GET_QUOTE_SPROUT: "get_quote_sprout",
      GET_SHOPS_SPROUT: "get_shops_sprout",
      GET_SHOWTIMES_SPROUT: "get_showtimes_sprout",
      GET_SHOWTIMES_TAGGER: "get_showtimes_tagger",
      GET_TICKET_SPROUT: "get_ticket_sprout",
      GET_WHATSAPP_MESSAGES_SPROUT: "get_whatsapp_messages_sprout",
      GIF_SPROUT: "gif_sprout",
      GIFT_CARD_SPROUT: "gift_card_sprout",
      GROUP_ANONYMOUS_POST_INLINE_COMPOSER:
        "group_anonymous_post_inline_composer",
      GROUP_ANONYMOUS_POST_SELECTOR: "group_anonymous_post_selector",
      GROUP_JOIN_CTA: "group_join_cta",
      GROUP_MEET_UP: "group_meet_up",
      GROUP_MEET_UP_SELECTOR: "group_meet_up_selector",
      GROUP_MEETUP_EDIT_BUTTON: "group_meetup_edit_button",
      GROUP_POLL_SPROUT: "group_poll_sprout",
      GROUP_SELECTOR: "group_selector",
      GROUP_VOTER_PLEDGE_DRIVE_SPROUT: "group_voter_pledge_drive_sprout",
      GROUP_WELCOME_POST: "group_welcome_post",
      HASHTAG: "hashtag",
      INLINE_COMPOSER: "inline_composer",
      JOB_POST_ATTACHMENT: "job_post_attachment",
      JOBS_COMPOSER: "jobs_composer",
      JOBS_SPROUT: "jobs_sprout",
      JOBS_TAB_SELECTOR: "jobs_tab_selector",
      KNOWLEDGE_NOTES_SELECTOR: "knowledge_notes_selector",
      LEARNING_COURSE_TAB_SELECTOR: "learning_course_tab_selector",
      LEARNING_THIRD_PARTY_LINK_TAB_SELECTOR:
        "learning_third_party_link_tab_selector",
      LIFE_EVENT: "life_event",
      LINK_DROPPED: "link_dropped",
      LINK_PASTED: "link_pasted",
      LINK_REMOVE_BUTTON: "link_remove_button",
      LINK_SPROUT: "link_sprout",
      LIST_SPROUT: "list_sprout",
      LIVE_GROUP_ROOM_SPROUT: "live_group_room_sprout",
      LIVE_VIDEO_SPROUT: "live_video_sprout",
      LIVE_VIDEO_TAB_SELECTOR: "live_video_tab_selector",
      LIVING_ROOM_GROUPS_PILL: "living_room_groups_pill",
      LIVING_ROOM_SHARE_BUTTON: "living_room_share_button",
      LIVING_ROOM_SPROUT: "living_room_sprout",
      LOCAL_ALERTS: "local_alerts",
      LOCAL_ALERTS_SPROUT: "local_alerts_sprout",
      LOCAL_DEV_PLATFORM_SPROUT: "local_dev_platform_sprout",
      LOCATION_TAG_SPROUT: "location_tag_sprout",
      LOCATION_TAGGER: "location_tagger",
      LOOKING_FOR_PLAYERS: "looking_for_players",
      MARKDOWN_TAGGER: "markdown_tagger",
      MARKETPLACE: "marketplace",
      MEDIA_ATTACHMENT_UPLOAD_BUTTON: "media_attachment_upload_button",
      MEDIA_COLLAGE_PLUS_BUTTON: "media_collage_plus_button",
      MEDIA_COMPOSER_ON_INIT: "media_composer_on_init",
      MEDIA_FILE_DROPPED: "media_file_dropped",
      MEDIA_FILE_PASTED: "media_file_pasted",
      MEDIA_FOLDER_DROPPED: "media_folder_dropped",
      MEDIA_INLINE_ENTRY: "media_inline_entry",
      MEDIA_SPROUT: "media_sprout",
      MEDIA_TAB_SELECTOR: "media_tab_selector",
      MEDIA_TAGGER: "media_tagger",
      MEDIA_UPLOADS_PLUS_BUTTON: "media_uploads_plus_button",
      MEMETRON: "memetron",
      MENTIONS_INPUT_FOCUS: "mentions_input_focus",
      MESSAGING_TAGGER: "messaging_tagger",
      MESSENGER_PHOTO_VIEWER_SHARE: "messenger_photo_viewer_share",
      MILESTONE_SPROUT: "milestone_sprout",
      MINUTIAE_SPROUT: "minutiae_sprout",
      MINUTIAE_TAGGER: "minutiae_tagger",
      MLE_TAB_SELECTOR: "mle_tab_selector",
      MODAL_PAGE_INVITE_DASHBOARD: "modal_page_invite_dashboard",
      MULTILINGUAL_SPROUT: "multilingual_sprout",
      MUSIC_SPROUT: "music_sprout",
      NEON_SPROUT: "neon_sprout",
      NOTES_SPROUT: "notes_sprout",
      NOTES_TAB_SELECTOR: "notes_tab_selector",
      ORDER_FOOD_SPROUT: "order_food_sprout",
      OTHERS: "others",
      PAGES_ACTION_BAR_RECOMMEND: "pages_action_bar_recommend",
      PAGES_CTA_SELECTOR: "pages_cta_selector",
      PAGES_EXTRA_TAB_SELECTOR: "pages_extra_tab_selector",
      PAGES_INTERCEPTION_TAGGER: "pages_interception_tagger",
      PAID_VIRTUAL_EVENT_GATED_POST_TAGGER:
        "paid_virtual_event_gated_post_tagger",
      PEOPLE_TAGGER: "people_tagger",
      PEOPLE_TAGGER_SPROUT: "people_tagger_sprout",
      PHOTO_SPROUT: "photo_sprout",
      PHOTO_UPLOAD_DONE: "photo_upload_done",
      PLAY_WITH_FRIENDS_SPROUT: "play_with_friends_sprout",
      PREFILL_HOLIDAY_CARD_SHARE_BUTTON: "prefill_holiday_card_share_button",
      PRODUCT_TAG_SPROUT: "product_tag_sprout",
      PRODUCT_TAGGER: "product_tagger",
      PRODUCT_TAGGER_BANNER_UPSELL: "product_tagger_banner_upsell",
      PRODUCTS_TAG_SPROUT: "products_tag_sprout",
      PROMPT: "prompt",
      PUBLISHER_ABTEST_HOLDOUT_TAGGER: "publisher_abtest_holdout_tagger",
      QA_TAB_SELECTOR: "qa_tab_selector",
      QANDA_SPROUT: "qanda_sprout",
      QANDA_TAB_SELECTOR: "qanda_tab_selector",
      QUESTION_SPROUT: "question_sprout",
      QUESTION_TAB_SELECTOR: "question_tab_selector",
      QUICKSILVER_SHARE_SCORE_BUTTON: "quicksilver_share_score_button",
      QUILT_SPROUT: "quilt_sprout",
      QUIZ_TAB_SELECTOR: "quiz_tab_selector",
      RECOMMENDATIONS_DASHBOARD: "recommendations_dashboard",
      RECOMMENDATIONS_SPROUT: "recommendations_sprout",
      RECOMMENDATIONS_TAB_SELECTOR: "recommendations_tab_selector",
      RECRUITING_CANDIDATE: "recruiting_candidate",
      REP_TAGGING: "rep_tagging",
      SALES_PROMO_SPROUT: "sales_promo_sprout",
      SALES_PROMO_TAB_SELECTOR: "sales_promo_tab_selector",
      SCHEDULE_POST_SPROUT: "schedule_post_sprout",
      SELL_SOMETHING_SPROUT: "sell_something_sprout",
      SELL_TAB_SELECTOR: "sell_tab_selector",
      SEND_GIFT_TAB_SELECTOR: "send_gift_tab_selector",
      SHARE_NOW_MENU_ADD_TO_STORY: "share_now_menu/add_to_story",
      SHARE_NOW_MENU_POST_TO_GROUP: "share_now_menu/post_to_group",
      SHARE_NOW_MENU_SEND_MESSAGE: "share_now_menu/send_message",
      SHARE_NOW_MENU_SHARE_FRIEND_TIMELINE:
        "share_now_menu/share_friend_timeline",
      SHARE_NOW_MENU_SHARE_TO_PAGE: "share_now_menu/share_to_page",
      SHARE_NOW_MENU_WRITE_POST: "share_now_menu/write_post",
      SHARING_SPACES_CREATE_NEW_ALBUM: "sharing_spaces_create_new_album",
      SHARING_SPACES_NEXT_BUTTON: "sharing_spaces_next_button",
      SHIFT_MANAGEMENT_COVER_SPROUT: "shift_management_cover_sprout",
      SHIFT_SWAP_CREATION: "shift_swap_creation",
      SOTTO_CTA_SPROUT: "sotto_cta_sprout",
      SPONSOR_SPROUT: "sponsor_sprout",
      SPONSOR_TAGGER: "sponsor_tagger",
      STARS_TAGGER: "stars_tagger",
      STATUS_TAB_SELECTOR: "status_tab_selector",
      STICKER_SPROUT: "sticker_sprout",
      SUPPORT_NOW_SPROUT: "support_now_sprout",
      SUPPORT_NOW_TAGGER: "support_now_tagger",
      TAG_EVENT: "tag_event",
      TAGGER_SUMMARY_CONTACT_YOUR_REPRESENTATIVE:
        "tagger_summary_row/contact_your_representative",
      TAGGER_SUMMARY_LOCATION: "tagger_summary_row/location_tagger",
      TAGGER_SUMMARY_MINUTIAE: "tagger_summary_row/minutiae_tagger",
      TAGGER_SUMMARY_PEOPLE: "tagger_summary_row/people_tagger",
      TAGGER_SUMMARY_ROW: "tagger_summary_row",
      TAGGER_SUMMARY_TAG_EVENT: "tagger_summary_row/event_tagger",
      TARGETING_TAGGER: "targeting_tagger",
      TASK_TAB_SELECTOR: "task_tab_selector",
      TEENS_AUDIENCE_SELECTOR: "teens_audience_selector",
      THIRD_PARTY: "third_party",
      TODO_LIST: "todo_list",
      VIDEO_EDITOR: "video_editor",
      VIDEO_MEETUP_SPROUT: "video_meetup_sprout",
      VIDEO_SPROUT: "video_sprout",
      VIDEO_SUGGESTIONS: "video_suggestions",
      VISUAL_POLL_SPROUT: "visual_poll_sprout",
      WOODHENGE_SUPPORT_SPROUT: "woodhenge_support_sprout",
      WORK_ACHIEVEMENT_SELECTOR: "work_achievement_selector",
      WORK_AMA_SPROUT: "work_ama_sprout",
      WORK_CHECKLIST_SPROUT: "work_checklist_sprout",
      WORK_COLLABORATION: "work_collaboration",
      WORK_FILE: "work_file",
      WORK_HASHTAG_SUGGESTIONS: "work_hashtag_suggestions",
      WORK_MULTI_ATTACHMENTS_SPROUT: "work_multi_attachments_sprout",
      WORK_OPEN_ROLES_SPROUT: "work_open_roles_sprout",
      WORK_POST_SUMMARY: "work_post_summary",
      WORK_SCHEDULE_LIVE_SPROUT: "work_schedule_live_sprout",
      WORK_SHARE_CANDIDATE_SPROUT: "work_share_candidate_sprout",
      WORK_SHARE_WHATS_NEW: "work_share_whats_new",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerPhotoLegacyLimitExceededDialog",
  [
    "fbt",
    "DOM",
    "LayerDestroyOnHide",
    "ReactLegacyShim_DEPRECATED",
    "XUIDialog.react",
    "XUIDialogBody.react",
    "XUIDialogFooter.react",
    "XUIDialogOkayButton.react",
    "XUIDialogTitle.react",
    "react",
  ],
  function (a, b, c, d, e, f, g, h) {
    var i = d("react");
    function a(a) {
      var b = h._("Too many photos added");
      a = h._(
        "You can only add {maxselect} photos to a post. To add more photos, try creating an album.",
        [h._param("maxselect", a)]
      );
      var e = c("DOM").create("div");
      d("ReactLegacyShim_DEPRECATED").render(
        i.jsxs(c("XUIDialog.react"), {
          shown: !0,
          behaviors: { LayerDestroyOnHide: c("LayerDestroyOnHide") },
          width: 600,
          children: [
            i.jsx(c("XUIDialogTitle.react"), {
              children: i.jsx("span", { children: b }),
            }),
            i.jsx(c("XUIDialogBody.react"), { children: a }),
            i.jsx(c("XUIDialogFooter.react"), {
              children: i.jsx(c("XUIDialogOkayButton.react"), {
                use: "confirm",
                action: "cancel",
              }),
            }),
          ],
        }),
        e
      );
    }
    g.show = a;
  },
  98
);
__d(
  "Dialog",
  [
    "fbt",
    "Animation",
    "Arbiter",
    "AsyncRequest",
    "Button",
    "CSS",
    "ContextualThing",
    "DOM",
    "Env",
    "Event",
    "FBLogger",
    "Focus",
    "Form",
    "HTML",
    "Keys",
    "Locale",
    "PageTransitions",
    "Parent",
    "Run",
    "ServerJS",
    "Style",
    "URI",
    "Vector",
    "bind",
    "createArrayFromMixed",
    "emptyFunction",
    "getObjectValues",
    "getOverlayZIndex",
    "goURI",
    "removeFromArray",
    "shield",
  ],
  function $module_Dialog(
    global,
    require,
    importDefault,
    importNamespace,
    requireLazy,
    module,
    exports,
    fbt
  ) {
    var _supportsPositionFixed2 = function _supportsPositionFixed() {
        var body = document.body;
        if (!body) return !1;
        var test = document.createElement("div"),
          control = document.createElement("div");
        body.insertBefore(test, body.firstChild);
        body.insertBefore(control, body.firstChild);
        test.style.position = "fixed";
        test.style.top = "20px";
        var result = test.offsetTop !== control.offsetTop;
        body.removeChild(test);
        body.removeChild(control);
        _supportsPositionFixed2 =
          importDefault("emptyFunction").thatReturns(result);
        return result;
      },
      Dialog = (function () {
        function Dialog(model) {
          var _this = this;
          this._renderDialog = function () {
            _this._updateZIndex();
            _this._pushOntoStack();
            _this._obj.style.height = null;
            _this._obj && _this._obj.style.display
              ? ((_this._obj.style.visibility = "hidden"),
                (_this._obj.style.display = ""),
                _this.resetDialogPosition(),
                (_this._obj.style.visibility = ""),
                (_this._obj.dialog = _this))
              : _this.resetDialogPosition();
            clearInterval(_this.active_hiding);
            _this.active_hiding = setInterval(
              _this._activeResize.bind(_this),
              500
            );
            _this._submit_on_enter = !1;
            if (_this._auto_focus) {
              var input = importNamespace("Form").getFirstElement(
                _this._content,
                ['input[type="text"]', "textarea", 'input[type="password"]']
              );
              input
                ? setTimeout(
                    importNamespace("Form").focusFirst.bind(
                      _this,
                      _this._content
                    ),
                    0
                  )
                : (_this._submit_on_enter = !0);
            }
            var bottom =
              importDefault("Vector").getElementDimensions(_this._content).y +
              importDefault("Vector").getElementPosition(_this._content).y;
            Dialog._bottoms.push(bottom);
            _this._bottom = bottom;
            Dialog._updateMaxBottom();
            return _this;
          };
          this._activeResize = function () {
            _this.last_offset_height != _this._content.offsetHeight &&
              ((_this.last_offset_height = _this._content.offsetHeight),
              _this.resetDialogPosition());
          };
          this._hide = function (temporary) {
            _this._obj && (_this._obj.style.display = "none");
            var documentEl = document.documentElement;
            documentEl &&
              importNamespace("CSS").removeClass(
                documentEl,
                "generic_dialog_overflow_mode"
              );
            clearInterval(_this.active_hiding);
            if (_this._bottom) {
              var bs = Dialog._bottoms;
              bs.splice(bs.indexOf(_this._bottom), 1);
              Dialog._updateMaxBottom();
            }
            _this._previous_focus &&
              document.activeElement &&
              importDefault("DOM").contains(
                _this._obj,
                document.activeElement
              ) &&
              importNamespace("Focus").set(_this._previous_focus);
            if (temporary) return;
            _this.destroy();
          };
          this._handleButton = function (button) {
            typeof button === "string" &&
              (button = Dialog._findButton(_this._buttons, button));
            if (!button) return;
            button.href != null && importDefault("goURI")(button.href, !0);
            if (button.sjsp != null) {
              var json = button.sjsp;
              new (importDefault("ServerJS"))().handle(json);
            }
            var value = Dialog.call_or_eval(button, button.handler);
            if (value === !1) return;
            button.name == "cancel"
              ? _this.cancel()
              : _this._handler_sjsp != null
              ? (new (importDefault("ServerJS"))().handle(_this._handler_sjsp),
                _this.hide())
              : Dialog.call_or_eval(_this, _this._handler, {
                  button: button,
                }) !== !1 && _this.hide();
          };
          this._submitForm = function (method, uri, button) {
            var data = _this.getFormData();
            button && (data[button.name] = button.name);
            _this._extra_data && Object.assign(data, _this._extra_data);
            var async_request = new (importDefault("AsyncRequest"))()
              .setURI(uri)
              .setData(data)
              .setMethod(method)
              .setNectarModuleDataSafe(_this._causal_elem)
              .setReadOnly(method == "GET");
            _this.setAsync(async_request);
            return !1;
          };
          this._pushOntoStack = function () {
            var stack = Dialog._stack;
            stack.length ||
              importDefault("Arbiter").inform("layer_shown", {
                type: "Dialog",
              });
            importDefault("removeFromArray")(stack, _this);
            stack.push(_this);
            for (var i = stack.length - 2; i >= 0; i--) {
              var prev_dialog = stack[i];
              !prev_dialog._is_stackable && !prev_dialog._async_request
                ? prev_dialog._hide()
                : prev_dialog._shown_while_stacked || prev_dialog._hide(!0);
            }
          };
          this._show_loading = !0;
          this._auto_focus = !0;
          this._submit_on_enter = !1;
          this._fade_enabled = !0;
          this._onload_handlers = [];
          this._top = 125;
          this._uniqueID = "dialog_" + Dialog._globalCount++;
          this._content = null;
          this._obj = null;
          this._popup = null;
          this._overlay = null;
          this._causal_elem = null;
          this._previous_focus = null;
          this._buttons = [];
          this._buildDialog();
          model && this._setFromModel(model);
          Dialog._init();
        }
        var _proto = Dialog.prototype;
        _proto.show = function show() {
          this._showing = !0;
          this._async_request
            ? this._show_loading && this.showLoading()
            : this._update();
          return this;
        };
        _proto.showLoading = function showLoading() {
          this._loading = !0;
          importNamespace("CSS").addClass(this._frame, "dialog_loading_shown");
          this._renderDialog();
          return this;
        };
        _proto.hide = function hide() {
          if (!this._showing && !this._loading) return this;
          this._showing = !1;
          this._autohide_timeout &&
            (clearTimeout(this._autohide_timeout),
            (this._autohide_timeout = null));
          this._fade_enabled && Dialog._stack.length <= 1
            ? this._fadeOut()
            : this._hide();
          return this;
        };
        _proto.cancel = function cancel() {
          (!this._cancelHandler || this._cancelHandler() !== !1) && this.hide();
        };
        _proto.getRoot = function getRoot() {
          return this._obj;
        };
        _proto.getBody = function getBody() {
          return importDefault("DOM").scry(this._obj, "div.dialog_body")[0];
        };
        _proto.getButtonElement = function getButtonElement(button) {
          typeof button === "string" &&
            (button = Dialog._findButton(this._buttons, button));
          if (!button || !button.name) return null;
          var inputs = importDefault("DOM").scry(this._popup, "input"),
            name_filter = function name_filter(elem) {
              return elem.name == button.name;
            };
          return inputs.filter(name_filter)[0] || null;
        };
        _proto.getContentNode = function getContentNode() {
          return importDefault("DOM").find(this._content, "div.dialog_content");
        };
        _proto.getFormData = function getFormData() {
          return importNamespace("Form").serialize(this.getContentNode());
        };
        _proto.setAllowCrossPageTransition =
          function setAllowCrossPageTransition(allow) {
            this._cross_transition = allow;
            return this;
          };
        _proto.setAllowCrossQuicklingNavigation =
          function setAllowCrossQuicklingNavigation(allow) {
            this._cross_quickling = allow;
            return this;
          };
        _proto.setShowing = function setShowing() {
          this.show();
          return this;
        };
        _proto.setHiding = function setHiding() {
          this.hide();
          return this;
        };
        _proto.setTitle = function setTitle(title) {
          var node = this._nodes.title,
            inner_node = this._nodes.title_inner,
            content_node = this._nodes.content;
          importDefault("DOM").setContent(
            inner_node,
            this._format(title || "", !0)
          );
          importNamespace("CSS").conditionShow(node, !!title);
          importNamespace("CSS").conditionClass(
            content_node,
            "dialog_content_titleless",
            !title
          );
          return this;
        };
        _proto.setInvertTitleColor = function setInvertTitleColor(invert) {
          invert
            ? (this._nodes.title.className = "dialog_title_inverted")
            : (this._nodes.title.className = "dialog_title");
          return this;
        };
        _proto.setBody = function setBody(body) {
          importDefault("DOM").setContent(this._nodes.body, this._format(body));
          return this;
        };
        _proto.setHiddenFields = function setHiddenFields(hidden_fields) {
          importDefault("DOM").setContent(
            this._nodes.hidden_fields,
            this._format(hidden_fields)
          );
          return this;
        };
        _proto.setExtraData = function setExtraData(data) {
          this._extra_data = data;
          return this;
        };
        _proto.setReturnData = function setReturnData(data) {
          this._return_data = data;
          return this;
        };
        _proto.setShowLoading = function setShowLoading(show) {
          this._show_loading = show;
          return this;
        };
        _proto.setFullBleed = function setFullBleed(is_full_bleed) {
          this._full_bleed = is_full_bleed;
          this._updateWidth();
          importNamespace("CSS").conditionClass(
            this._obj,
            "full_bleed",
            is_full_bleed
          );
          return this;
        };
        _proto.setCausalElement = function setCausalElement(elem) {
          this._causal_elem = elem;
          return this;
        };
        _proto.setUserData = function setUserData(data) {
          this._user_data = data;
          return this;
        };
        _proto.getUserData = function getUserData() {
          return this._user_data;
        };
        _proto.setAutohide = function setAutohide(autohide) {
          autohide
            ? this._showing
              ? (this._autohide_timeout = setTimeout(
                  importDefault("shield")(this.hide, this),
                  autohide
                ))
              : (this._autohide = autohide)
            : ((this._autohide = null),
              this._autohide_timeout &&
                (clearTimeout(this._autohide_timeout),
                (this._autohide_timeout = null)));
          return this;
        };
        _proto.setSummary = function setSummary(summary) {
          var node = this._nodes.summary;
          importDefault("DOM").setContent(node, this._format(summary || ""));
          importNamespace("CSS").conditionShow(node, !!summary);
          return this;
        };
        _proto.setButtons = function setButtons(b) {
          var buttons, button;
          !Array.isArray(b) ? (buttons = Array.from(arguments)) : (buttons = b);
          for (var i = 0; i < buttons.length; ++i) {
            var currButton = buttons[i];
            typeof currButton === "string" &&
              ((button = Dialog._findButton(
                Dialog._STANDARD_BUTTONS,
                currButton
              )),
              (buttons[i] = button));
          }
          this._buttons = buttons;
          var button_content = [];
          if (buttons && buttons.length > 0)
            for (var ii = 0; ii < buttons.length; ii++) {
              button = buttons[ii];
              if (!button) continue;
              var button_input = importDefault("DOM").create("input", {
                  type: "button",
                  name: button.name || "",
                  value: button.label,
                }),
                button_node = importDefault("DOM").create(
                  "label",
                  { className: "uiButton uiButtonLarge uiButtonConfirm" },
                  button_input
                );
              button.className &&
                (button.className.split(/\s+/).forEach(function (e) {
                  importNamespace("CSS").addClass(button_node, e);
                }),
                importNamespace("CSS").hasClass(button_node, "inputaux") &&
                  (importNamespace("CSS").removeClass(button_node, "inputaux"),
                  importNamespace("CSS").removeClass(
                    button_node,
                    "uiButtonConfirm"
                  )),
                importNamespace("CSS").hasClass(
                  button_node,
                  "uiButtonSpecial"
                ) &&
                  importNamespace("CSS").removeClass(
                    button_node,
                    "uiButtonConfirm"
                  ));
              button.icon &&
                importDefault("DOM").prependContent(
                  button_node,
                  importDefault("DOM").create("img", {
                    src: button.icon,
                    className: "img mrs",
                  })
                );
              button.disabled &&
                importDefault("Button").setEnabled(button_node, !1);
              importDefault("Event").listen(
                button_input,
                "click",
                this._handleButton.bind(this, button.name)
              );
              for (var attr in button)
                attr.indexOf("data-") === 0 &&
                  attr.length > 5 &&
                  button_input.setAttribute(attr, button[attr]);
              button_content.push(button_node);
            }
          importDefault("DOM").setContent(this._nodes.buttons, button_content);
          this._updateButtonVisibility();
          return this;
        };
        _proto.setButtonsMessage = function setButtonsMessage(message) {
          importDefault("DOM").setContent(
            this._nodes.button_message,
            this._format(message || "")
          );
          this._has_button_message = !!message;
          this._updateButtonVisibility();
          return this;
        };
        _proto._updateButtonVisibility = function _updateButtonVisibility() {
          var show = this._buttons.length > 0 || this._has_button_message;
          importNamespace("CSS").conditionShow(
            this._nodes.button_wrapper,
            show
          );
          importNamespace("CSS").conditionClass(
            this._obj,
            "omitDialogFooter",
            !show
          );
        };
        _proto.setClickButtonOnEnter = function setClickButtonOnEnter(
          input_id,
          button
        ) {
          var _this2 = this;
          this._clickOnEnterTarget = input_id;
          this._clickOnEnterListener ||
            (this._clickOnEnterListener = importDefault("Event").listen(
              this._nodes.body,
              "keypress",
              function (event) {
                var target = event.getTarget();
                target &&
                  target.id === _this2._clickOnEnterTarget &&
                  importDefault("Event").getKeyCode(event) ===
                    importDefault("Keys").RETURN &&
                  (_this2._handleButton(button), event.kill());
                return !0;
              }
            ));
          return this;
        };
        _proto.setStackable = function setStackable(stackable, shown) {
          this._is_stackable = stackable;
          this._shown_while_stacked = stackable && shown;
          return this;
        };
        _proto.setHandler = function setHandler(handler) {
          this._handler = handler;
          return this;
        };
        _proto.setHandlerSJSP = function setHandlerSJSP(handler_sjsp) {
          this._handler_sjsp = handler_sjsp;
          return this;
        };
        _proto.setCancelHandler = function setCancelHandler(cancelHandler) {
          this._cancelHandler = Dialog.call_or_eval.bind(
            null,
            this,
            cancelHandler
          );
          return this;
        };
        _proto.setCloseHandler = function setCloseHandler(close_handler) {
          this._close_handler = Dialog.call_or_eval.bind(
            null,
            this,
            close_handler
          );
          return this;
        };
        _proto.setCloseHandlerSJSP = function setCloseHandlerSJSP(close_sjsp) {
          this._close_sjsp = close_sjsp;
          return this;
        };
        _proto.clearHandler = function clearHandler() {
          return this.setHandler(null);
        };
        _proto.setPostURI = function setPostURI(
          post_uri,
          asynchronous,
          useParent
        ) {
          var _this3 = this;
          asynchronous === void 0 && (asynchronous = !0);
          if (useParent && importDefault("Env").isCQuick) {
            importDefault("PageTransitions").go(post_uri);
            return this;
          }
          asynchronous
            ? this.setHandler(this._submitForm.bind(this, "POST", post_uri))
            : this.setHandler(function () {
                importNamespace("Form").post(post_uri, _this3.getFormData()),
                  _this3.hide();
              });
          return this;
        };
        _proto.setGetURI = function setGetURI(get_uri) {
          this.setHandler(this._submitForm.bind(this, "GET", get_uri));
          return this;
        };
        _proto.setModal = function setModal(modal) {
          this._modal = modal;
          importNamespace("CSS").conditionClass(
            this._obj,
            "generic_dialog_modal",
            modal
          );
          return this;
        };
        _proto.setSemiModal = function setSemiModal(clickout) {
          var _this4 = this;
          clickout
            ? (this.setModal(!0),
              (this._semiModalListener = importDefault("Event").listen(
                this._obj,
                "click",
                function (e) {
                  importDefault("DOM").contains(_this4._popup, e.getTarget()) ||
                    _this4.hide();
                }
              )))
            : this._semiModalListener && this._semiModalListener.remove();
          this._semi_modal = clickout;
          return this;
        };
        _proto.setWideDialog = function setWideDialog(is_wide) {
          this._wide_dialog = is_wide;
          this._updateWidth();
          return this;
        };
        _proto.setContentWidth = function setContentWidth(width) {
          this._content_width = width;
          this._updateWidth();
          return this;
        };
        _proto.setTitleLoading = function setTitleLoading(loading) {
          loading === void 0 && (loading = !0);
          var header = importDefault("DOM").find(
            this._popup,
            "h2.dialog_title"
          );
          header &&
            importNamespace("CSS").conditionClass(header, "loading", loading);
          return this;
        };
        _proto.setSecure = function setSecure(is_secure) {
          importNamespace("CSS").conditionClass(
            this._nodes.title,
            "secure",
            is_secure
          );
          return this;
        };
        _proto.setClassName = function setClassName(class_name) {
          class_name
            .split(/\s+/)
            .forEach(
              importNamespace("CSS").addClass.bind(
                importNamespace("CSS"),
                this._obj
              )
            );
          return this;
        };
        _proto.setFadeEnabled = function setFadeEnabled(enabled) {
          this._fade_enabled = enabled;
          return this;
        };
        _proto.setFooter = function setFooter(footer) {
          var node = this._nodes.footer;
          importDefault("DOM").setContent(node, this._format(footer || ""));
          importNamespace("CSS").conditionShow(node, !!footer);
          return this;
        };
        _proto.setAutoFocus = function setAutoFocus(focus) {
          this._auto_focus = focus;
          return this;
        };
        _proto.setTop = function setTop(top) {
          this._top = top;
          this._resetDialogObj();
          return this;
        };
        _proto.onloadRegister = function onloadRegister(handler) {
          var _this5 = this;
          importDefault("createArrayFromMixed")(handler).forEach(function (i) {
            typeof i === "string" &&
              (importDefault("FBLogger")("fb_desktop_web").warn(
                "Dialog.js Function usage: " + i
              ),
              (i = new Function(i))),
              _this5._onload_handlers.push(i.bind(_this5));
          });
          return this;
        };
        _proto.onloadRegisterSJSP = function onloadRegisterSJSP(sjsp) {
          this._onload_sjsp = sjsp;
          return this;
        };
        _proto.setAsyncURL = function setAsyncURL(url) {
          return this.setAsync(new (importDefault("AsyncRequest"))(url));
        };
        _proto.setAsync = function setAsync(async_request) {
          var _this6 = this,
            handler = function handler(response) {
              if (_this6._async_request != async_request) return;
              _this6._async_request = null;
              var payload = response.getPayload(),
                dialog = payload;
              _this6._loading && (_this6._showing = !0);
              typeof dialog === "string"
                ? _this6.setBody(dialog)
                : _this6._setFromModel(dialog);
              _this6._update();
            },
            data = async_request.getData();
          data.__d = 1;
          async_request.setData(data);
          var orig_handler =
            async_request.getHandler() || importDefault("emptyFunction");
          async_request.setHandler(function (response) {
            orig_handler(response), handler(response);
          });
          var request = async_request,
            orig_error_handler =
              request.getErrorHandler() || importDefault("emptyFunction"),
            orig_trans_error_handler =
              request.getTransportErrorHandler() ||
              importDefault("emptyFunction"),
            handle_error = function handle_error() {
              (_this6._async_request = null),
                (_this6._loading = !1),
                _this6._showing && _this6._shown_while_stacked
                  ? _this6._update()
                  : _this6._hide(_this6._is_stackable);
            },
            server_cancel_handler =
              request.getServerDialogCancelHandler() || handle_error;
          request
            .setAllowCrossPageTransition(this._cross_transition)
            .setErrorHandler(function (response) {
              handle_error(), orig_error_handler(response);
            })
            .setTransportErrorHandler(function (response) {
              handle_error(), orig_trans_error_handler(response);
            })
            .setServerDialogCancelHandler(server_cancel_handler);
          async_request.send();
          this._async_request = async_request;
          this._showing && this.show();
          return this;
        };
        _proto._format = function _format(content, sane) {
          sane === void 0 && (sane = !1);
          typeof content === "string"
            ? sane || (content = importDefault("HTML")(content))
            : (content = importDefault("HTML").replaceJSONWrapper(content));
          content instanceof importDefault("HTML") && content.setDeferred(!0);
          return content;
        };
        _proto._update = function _update() {
          if (!this._showing) return;
          this._autohide &&
            !this._async_request &&
            !this._autohide_timeout &&
            (this._autohide_timeout = setTimeout(
              importDefault("bind")(this, "hide"),
              this._autohide
            ));
          importNamespace("CSS").removeClass(
            this._frame,
            "dialog_loading_shown"
          );
          this._loading = !1;
          this._renderDialog();
          this._runOnloads();
          this._previous_focus = document.activeElement;
          importNamespace("Focus").set(this._frame);
        };
        _proto._runOnloads = function _runOnloads() {
          if (this._onload_sjsp != null) {
            var json = this._onload_sjsp;
            new (importDefault("ServerJS"))().handle(json);
            this._onload_sjsp = null;
          }
          if (this._onload_handlers != null) {
            for (var i = 0; i < this._onload_handlers.length; ++i)
              try {
                this._onload_handlers[i]();
              } catch (_unused) {}
            this._onload_handlers = [];
          }
        };
        _proto._updateWidth = function _updateWidth() {
          var dialog_width = 2 * (Dialog._BORDER_WIDTH + Dialog._HALO_WIDTH);
          this._content_width
            ? ((dialog_width += this._content_width),
              this._full_bleed || (dialog_width += 2 * Dialog._PADDING_WIDTH))
            : this._wide_dialog
            ? (dialog_width += Dialog.SIZE.WIDE)
            : (dialog_width += Dialog.SIZE.STANDARD);
          this._popup.style.width = dialog_width + "px";
        };
        _proto._updateZIndex = function _updateZIndex() {
          if (!this._hasSetZIndex && this._causal_elem) {
            var z_index = importDefault("getOverlayZIndex")(this._causal_elem),
              node = this._causal_elem;
            while (
              !z_index &&
              (node = importNamespace("ContextualThing").getContext(node))
            )
              z_index = importDefault("getOverlayZIndex")(node);
            this._hasSetZIndex = z_index > (this._modal ? 400 : 200);
            importDefault("Style").set(
              this._obj,
              "z-index",
              this._hasSetZIndex ? z_index : ""
            );
          }
        };
        _proto._buildDialog = function _buildDialog() {
          this._obj = importDefault("DOM").create("div", {
            className: "generic_dialog",
            id: this._uniqueID,
          });
          this._obj.style.display = "none";
          importDefault("DOM").appendContent(document.body, this._obj);
          this._popup ||
            (this._popup = importDefault("DOM").create("div", {
              className: "generic_dialog_popup",
            }));
          this._obj.appendChild(this._popup);
          importNamespace("CSS").addClass(this._obj, "pop_dialog");
          importNamespace("Locale").isRTL() &&
            importNamespace("CSS").addClass(this._obj, "pop_dialog_rtl");
          importDefault("DOM").setContent(
            this._popup,
            importDefault("DOM").create(
              "div",
              { className: "pop_container_advanced" },
              importDefault("DOM").create("div", {
                className: "pop_content",
                id: "pop_content",
              })
            )
          );
          var frame = importDefault("DOM").find(this._popup, "div.pop_content");
          frame.setAttribute("tabIndex", "0");
          frame.setAttribute("role", "alertdialog");
          this._frame = this._content = frame;
          var loading = importDefault("DOM").create(
              "div",
              { className: "dialog_loading" },
              fbt._("Loading...")
            ),
            title_inner = importDefault("DOM").create("span"),
            title = importDefault("DOM").create(
              "h2",
              {
                className: "dialog_title hidden_elem",
                id: "title_" + this._uniqueID,
              },
              title_inner
            ),
            summary = importDefault("DOM").create("div", {
              className: "dialog_summary hidden_elem",
            }),
            body = importDefault("DOM").create("div", {
              className: "dialog_body",
            }),
            buttons = importDefault("DOM").create("div", {
              className: "rfloat mlm",
            }),
            button_message = importDefault("DOM").create("div", {
              className: "dialog_buttons_msg",
            }),
            button_wrapper = importDefault("DOM").create(
              "div",
              { className: "dialog_buttons clearfix hidden_elem" },
              [buttons, button_message]
            ),
            footer = importDefault("DOM").create("div", {
              className: "dialog_footer hidden_elem",
            }),
            hidden_fields = importDefault("DOM").create("div", {
              className: "hidden_elem",
            }),
            content = importDefault("DOM").create(
              "div",
              { className: "dialog_content" },
              [summary, body, button_wrapper, footer, hidden_fields]
            );
          this._nodes = {
            summary: summary,
            body: body,
            buttons: buttons,
            button_message: button_message,
            button_wrapper: button_wrapper,
            footer: footer,
            hidden_fields: hidden_fields,
            content: content,
            title: title,
            title_inner: title_inner,
          };
          importDefault("DOM").setContent(this._frame, [
            title,
            content,
            loading,
          ]);
        };
        _proto.resetDialogPosition = function resetDialogPosition() {
          if (!this._popup) return;
          this._resetDialogObj();
        };
        _proto._resetDialogObj = function _resetDialogObj() {
          var total_margin = 2 * Dialog._PAGE_MARGIN,
            viewport_dimensions =
              importDefault("Vector").getViewportDimensions(),
            viewport_width = viewport_dimensions.x - total_margin,
            viewport_height = viewport_dimensions.y - total_margin,
            total_halo_width = 2 * Dialog._HALO_WIDTH,
            content_dimensions = importDefault("Vector").getElementDimensions(
              this._content
            ),
            content_width = content_dimensions.x + total_halo_width,
            content_height = content_dimensions.y + total_halo_width,
            top = this._top,
            empty_horiz_space = viewport_width - content_width,
            empty_vertical_space = viewport_height - content_height;
          empty_vertical_space < 0
            ? (top = Dialog._PAGE_MARGIN)
            : top > empty_vertical_space &&
              (top =
                Dialog._PAGE_MARGIN + Math.max(empty_vertical_space, 0) / 2);
          var is_fixed = _supportsPositionFixed2();
          is_fixed || (top += importDefault("Vector").getScrollPosition().y);
          importDefault("Style").set(this._popup, "marginTop", top + "px");
          var scroll =
            is_fixed && (empty_horiz_space < 0 || empty_vertical_space < 0);
          importNamespace("CSS").conditionClass(
            this._obj,
            "generic_dialog_fixed_overflow",
            scroll
          );
          var documentEl = document.documentElement;
          documentEl &&
            importNamespace("CSS").conditionClass(
              documentEl,
              "generic_dialog_overflow_mode",
              scroll
            );
        };
        _proto._fadeOut = function _fadeOut(temporary) {
          if (!this._popup) return;
          try {
            new (importDefault("Animation"))(this._obj)
              .duration(0)
              .checkpoint()
              .to("opacity", 0)
              .hide()
              .duration(250)
              .ondone(this._hide.bind(this, temporary))
              .go();
          } catch (_unused2) {
            this._hide(temporary);
          }
        };
        _proto.destroy = function destroy() {
          this._popFromStack();
          clearInterval(this.active_hiding);
          this._obj &&
            (importDefault("DOM").remove(this._obj), (this._obj = null));
          this._clickOnEnterListener && this._clickOnEnterListener.remove();
          this._close_handler &&
            this._close_handler({ return_data: this._return_data });
          if (this._close_sjsp != null) {
            var json = this._close_sjsp;
            new (importDefault("ServerJS"))().handle(json);
          }
        };
        _proto._setFromModel = function _setFromModel(original_model) {
          var model = {};
          Object.assign(model, original_model);
          for (var propertyName in model) {
            if (propertyName == "onloadRegister") {
              this.onloadRegister(model[propertyName]);
              continue;
            } else if (propertyName == "onloadRegisterSJSP") {
              this.onloadRegisterSJSP(model[propertyName]);
              continue;
            }
            var mutator =
              this[
                "set" +
                  propertyName.substr(0, 1).toUpperCase() +
                  propertyName.substr(1)
              ];
            mutator.apply(
              this,
              importDefault("createArrayFromMixed")(model[propertyName])
            );
          }
        };
        _proto._updateBottom = function _updateBottom() {
          var bottom =
            importDefault("Vector").getElementDimensions(this._content).y +
            importDefault("Vector").getElementPosition(this._content).y;
          Dialog._bottoms[Dialog._bottoms.length - 1] = bottom;
          Dialog._updateMaxBottom();
        };
        _proto._popFromStack = function _popFromStack() {
          var stack = Dialog._stack,
            was_top = stack[stack.length - 1] === this;
          importDefault("removeFromArray")(stack, this);
          stack.length
            ? was_top && stack[stack.length - 1].show()
            : importDefault("Arbiter").inform("layer_hidden", {
                type: "Dialog",
              });
        };
        Dialog._updateMaxBottom = function _updateMaxBottom() {
          Dialog.max_bottom = Math.max.apply(Math, Dialog._bottoms);
        };
        Dialog.newButton = function newButton(name, label, className, handler) {
          var button = {
            name: name,
            label: label,
            className: void 0,
            handler: void 0,
          };
          className && (button.className = className);
          handler && (button.handler = handler);
          return button;
        };
        Dialog.getCurrent = function getCurrent() {
          var stack = Dialog._stack;
          return stack.length ? stack[stack.length - 1] : null;
        };
        Dialog.hideCurrent = function hideCurrent() {
          var dialog = Dialog.getCurrent();
          dialog && dialog.hide();
        };
        Dialog.hideFirstDialogButton = function hideFirstDialogButton() {
          var dialog = Dialog.getCurrent();
          dialog &&
            importNamespace("CSS").addClass(
              importDefault("DOM").scry(
                dialog.getRoot(),
                "div.dialog_buttons"
              )[0],
              "hidden_elem"
            );
        };
        Dialog.bootstrap = function bootstrap(
          uri,
          data,
          read_only,
          method,
          model,
          elem
        ) {
          data = data || {};
          Object.assign(data, new (importDefault("URI"))(uri).getQueryData());
          method = method || (read_only ? "GET" : "POST");
          var status_elem =
            importNamespace("Parent").byClass(elem, "stat_elem") || elem;
          if (
            status_elem &&
            importNamespace("CSS").hasClass(status_elem, "async_saving")
          )
            return !1;
          if (!(status_elem instanceof HTMLElement)) return !1;
          var request = new (importDefault("AsyncRequest"))()
              .setReadOnly(!!read_only)
              .setMethod(method)
              .setRelativeTo(elem)
              .setStatusElement(status_elem)
              .setURI(uri)
              .setNectarModuleDataSafe(elem)
              .setData(data),
            dialog = new Dialog(model).setCausalElement(elem).setAsync(request);
          dialog.show();
          return !1;
        };
        Dialog.showFromModel = function showFromModel(model, causal_element) {
          var dialog = new Dialog(model)
            .setCausalElement(causal_element)
            .show();
          model.hiding && dialog.hide();
        };
        Dialog._init = function _init() {
          (this._init = importDefault("emptyFunction")),
            importNamespace("Run").onLeave(
              importDefault("shield")(Dialog._tearDown, null, !1)
            ),
            importDefault("Arbiter").subscribe(
              "page_transition",
              importDefault("shield")(Dialog._tearDown, null, !0)
            ),
            importDefault("Event").listen(
              document.documentElement,
              "keydown",
              function (event) {
                importDefault("Event").getKeyCode(event) ===
                  importDefault("Keys").ESC && !event.getModifiers().any
                  ? Dialog._escape() && event.kill()
                  : importDefault("Event").getKeyCode(event) ===
                      importDefault("Keys").RETURN &&
                    !event.getModifiers().any &&
                    Dialog._enter() &&
                    event.kill();
              }
            ),
            importDefault("Event").listen(window, "resize", function (event) {
              var dialog = Dialog.getCurrent();
              dialog && dialog._resetDialogObj();
            });
        };
        Dialog._findButton = function _findButton(buttons, name) {
          if (buttons)
            for (var i = 0; i < buttons.length; ++i)
              if (buttons[i].name == name) return buttons[i];
          return null;
        };
        Dialog._tearDown = function _tearDown(is_page_transition) {
          var stack = Dialog._stack.slice();
          for (var ii = stack.length - 1; ii >= 0; ii--)
            ((is_page_transition && !stack[ii]._cross_transition) ||
              (!is_page_transition && !stack[ii]._cross_quickling)) &&
              stack[ii].hide();
        };
        Dialog._escape = function _escape() {
          var dialog = Dialog.getCurrent();
          if (!dialog) return !1;
          var semi_modal = dialog._semi_modal,
            buttons = dialog._buttons;
          if (!buttons.length && !semi_modal) return !1;
          if (semi_modal && !buttons.length) {
            dialog.hide();
            return !0;
          }
          var button_to_simulate,
            cancel_button = Dialog._findButton(buttons, "cancel");
          if (dialog._cancelHandler) {
            dialog.cancel();
            return !0;
          } else if (cancel_button) button_to_simulate = cancel_button;
          else if (buttons.length == 1) button_to_simulate = buttons[0];
          else return !1;
          dialog._handleButton(button_to_simulate);
          return !0;
        };
        Dialog._enter = function _enter() {
          var dialog = Dialog.getCurrent();
          if (!dialog || !dialog._submit_on_enter) return !1;
          if (document.activeElement != dialog._frame) return !1;
          var buttons = dialog._buttons;
          if (!buttons) return !1;
          dialog._handleButton(buttons[0]);
          return !0;
        };
        Dialog.call_or_eval = function call_or_eval(obj, func, args) {
          if (!func) return void 0;
          args = args || {};
          if (typeof func === "string") {
            var params = Object.keys(args).join(", ");
            importDefault("FBLogger")("fb_desktop_web").warn(
              "Dialog.js call_or_eval usage: " + func
            );
            func = eval("({f: function(" + params + ") { " + func + "}})").f;
          }
          return func.apply(obj, importDefault("getObjectValues")(args));
        };
        return Dialog;
      })();
    Dialog.OK = { name: "ok", label: fbt._("OK") };
    Dialog.CANCEL = {
      name: "cancel",
      label: fbt._("Cancel"),
      className: "inputaux",
    };
    Dialog.CLOSE = { name: "close", label: fbt._("Close") };
    Dialog.NEXT = { name: "next", label: fbt._("Next") };
    Dialog.SAVE = { name: "save", label: fbt._("Save") };
    Dialog.SUBMIT = { name: "submit", label: fbt._("Submit") };
    Dialog.CONFIRM = { name: "confirm", label: fbt._("Confirm") };
    Dialog.DELETE = { name: "delete", label: fbt._("Delete") };
    Dialog._bottoms = [0];
    Dialog.max_bottom = 0;
    Dialog._globalCount = 0;
    Dialog.OK_AND_CANCEL = [Dialog.OK, Dialog.CANCEL];
    Dialog._STANDARD_BUTTONS = [
      Dialog.OK,
      Dialog.CANCEL,
      Dialog.CLOSE,
      Dialog.SAVE,
      Dialog.SUBMIT,
      Dialog.CONFIRM,
      Dialog.DELETE,
    ];
    Dialog.SIZE = { WIDE: 555, STANDARD: 445 };
    Dialog._HALO_WIDTH = 10;
    Dialog._BORDER_WIDTH = 1;
    Dialog._PADDING_WIDTH = 10;
    Dialog._PAGE_MARGIN = 40;
    Dialog._stack = [];
    global.Dialog = Dialog;
    exports["default"] = Dialog;
  },
  98
);
__d(
  "ErrorDialog",
  ["Dialog", "emptyFunction"],
  function (a, b, c, d, e, f) {
    var g = {
      showAsyncError: function (a) {
        try {
          return g.show(a.getErrorSummary(), a.getErrorDescription());
        } catch (b) {
          alert(a);
        }
      },
      show: function (a, c, d, e) {
        return new (b("Dialog"))()
          .setTitle(a)
          .setBody(c)
          .setButtons([b("Dialog").OK])
          .setStackable(!0)
          .setModal(!0)
          .setHandler(d || b("emptyFunction"))
          .setButtonsMessage(e || "")
          .show();
      },
    };
    e.exports = g;
  },
  null
);
__d(
  "ReactComposerVideoLegacyLimitExceededDialog",
  ["fbt", "ErrorDialog"],
  function (a, b, c, d, e, f, g, h) {
    function a() {
      d("ErrorDialog").show(
        h._("Too many files"),
        h._("Please select only one video file at a time.")
      );
    }
    g.show = a;
  },
  98
);
__d(
  "ReactComposerVideoUploadStore",
  ["ReactComposerStoreBase", "ReactComposerVideoUploadActionType", "immutable"],
  function (a, b, c, d, e, f, g) {
    var h = c("immutable").Record({ file: null });
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return { uploader: null, video: null };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerVideoUploadActionType").VIDEO_SET_UPLOADER:
                  d && d.$ReactComposerVideoUploadStore1(a);
                  break;
                case c("ReactComposerVideoUploadActionType").VIDEO_UPLOAD_ADD:
                  d && d.$ReactComposerVideoUploadStore2(a);
                  break;
                case c("ReactComposerVideoUploadActionType")
                  .VIDEO_UPLOAD_REMOVE:
                  d && d.$ReactComposerVideoUploadStore3(a);
                  break;
                default:
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var d = b.prototype;
      d.getUploader = function (a) {
        return this.getComposerData(a).uploader;
      };
      d.getVideo = function (a) {
        return this.getComposerData(a).video;
      };
      d.isUploading = function (a) {
        return this.getUploader(a).isUploading();
      };
      d.$ReactComposerVideoUploadStore1 = function (a) {
        a = this.validateAction(a, ["composerID", "uploader"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.uploader = a;
        this.emitChange(b);
      };
      d.$ReactComposerVideoUploadStore2 = function (a) {
        a = this.validateAction(a, ["composerID", "file"]);
        var b = a[0];
        a = a[1];
        var c = this.getComposerData(b);
        c.video = new h({ file: a });
        this.emitChange(b);
      };
      d.$ReactComposerVideoUploadStore3 = function (a) {
        a = this.validateAction(a, "composerID");
        var b = this.getComposerData(a);
        b.video = null;
        b.input && b.input.clear();
        this.emitChange(a);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerVideoUploadActions",
  [
    "ReactComposerDispatcher",
    "ReactComposerVideoUploadActionType",
    "ReactComposerVideoUploadStore",
  ],
  function (a, b, c, d, e, f, g) {
    b("ReactComposerVideoUploadStore");
    function a(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerVideoUploadActionType").VIDEO_SET_UPLOADER,
        uploader: b,
      });
    }
    function d(a, b) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerVideoUploadActionType").VIDEO_UPLOAD_ADD,
        file: b,
      });
    }
    function e(a) {
      c("ReactComposerDispatcher").dispatch({
        composerID: a,
        type: c("ReactComposerVideoUploadActionType").VIDEO_UPLOAD_REMOVE,
      });
    }
    g.setUploader = a;
    g.add = d;
    g.remove = e;
  },
  98
);
__d(
  "ReactComposerMediaUtils",
  [
    "invariant",
    "Arbiter",
    "Bootloader",
    "PagesComposerContextUtils",
    "PagesComposerUtils",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "ReactComposerLoggingName",
    "ReactComposerMediaFilterUtils",
    "ReactComposerMediaUploadActions",
    "ReactComposerMediaUploadStore",
    "ReactComposerMediaUploadType",
    "ReactComposerPagesStore",
    "ReactComposerPhotoActions",
    "ReactComposerPhotoLegacyLimitExceededDialog",
    "ReactComposerTaggerActions",
    "ReactComposerTaggerStore",
    "ReactComposerTaggerType",
    "ReactComposerVideoLegacyLimitExceededDialog",
    "ReactComposerVideoUploadActions",
    "ReactComposerVideoUploadStore",
    "VideoUploadFeatureDetector",
    "VideoUploadFile",
    "VideoUploader",
    "curry",
    "uniqueID",
  ],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    function a(a, b) {
      if (a.input !== null) {
        var c = j(a.getInput());
        (b || !l(c)) && a.clear();
      }
    }
    function i(a) {
      var b = [];
      for (var c = 0; c < a.length; c++) b.push(a[c].name);
      return b;
    }
    function j(a) {
      if (d("VideoUploadFeatureDetector").supportsFileAPI()) return i(a.files);
      else return [a.value.split("/").pop().split("\\").pop()];
    }
    function k(a) {
      return d("ReactComposerMediaFilterUtils").hasEditableVideos(a);
    }
    function l(a) {
      return d("ReactComposerMediaFilterUtils").hasVideos(a);
    }
    function m(a) {
      return d("ReactComposerMediaFilterUtils").hasAudioFiles(a);
    }
    function b(a) {
      return d("ReactComposerMediaFilterUtils").filterVideos(a);
    }
    function e(a) {
      return d("ReactComposerMediaFilterUtils").filterAudioFiles(a);
    }
    function f(a, b) {
      return d("ReactComposerMediaFilterUtils").filterFileOfSupportedType(a, b);
    }
    function n(a, b) {
      var e = c("ReactComposerMediaUploadStore").getUploadsOfType(
        a,
        d("ReactComposerMediaUploadType").PHOTO
      );
      e.size > 0 &&
        d("ReactComposerMediaUploadActions").removeAllPhotoUploads(a, e);
      d("ReactComposerVideoUploadActions").add(a, b);
    }
    function o(a, b, e, f, g, h) {
      var i = e.isUploadLimitExceeded(f, b);
      if (i) {
        d("ReactComposerPhotoLegacyLimitExceededDialog").show(
          e.getMaxSelectableFilesCount(f)
        );
        return;
      }
      i = b ? b.length : 1;
      if (i < 1) return;
      c("ReactComposerVideoUploadStore").getVideo(a) &&
        d("ReactComposerVideoUploadActions").remove(a);
      d("ReactComposerMediaUploadActions").photosSelect(a, i, g);
      h && h();
    }
    function p(a, b, e, f, g) {
      if (g) r(a, b, e, f, g);
      else {
        if (b.files && b.files.length > 1) {
          d("ReactComposerVideoLegacyLimitExceededDialog").show();
          return;
        }
        n(a, c("VideoUploadFile").fromFileInput(b));
      }
    }
    function q(a, b, e, f, g, h) {
      if (g) t(a, b, e, f, "file_selector", h);
      else {
        if (b && b.length > 1) {
          d("ReactComposerVideoLegacyLimitExceededDialog").show();
          return;
        }
        n(a, c("VideoUploadFile").fromFile(b[0]));
      }
    }
    function r(a, b, c, d, e) {
      var f = C(a);
      f.upload(Array.from(b.files));
      o(
        a,
        b.files,
        c,
        d,
        "file_selector",
        function () {
          c && c.upload(b);
        },
        e
      );
    }
    function s(a, b, c, d, e, f) {
      var g = j(b);
      l(g)
        ? p(a, b, c, d, e)
        : o(a, b.files, c, d, "file_selector", function () {
            c && c.upload(b, f);
          });
    }
    function t(a, b, d, e, f, g) {
      f === void 0 && (f = "file_selector");
      g = C(a, g);
      g.upload(b);
      var h = b.filter(function (a) {
        return !l([a.name]);
      });
      o(a, h, d, e, f, function () {
        h.forEach(function (a) {
          (a.uploadID = c("uniqueID")()), (a.filename = "");
        }),
          d.enqueueAsyncUploadRequest(a, h, {}, {}, !1);
      });
    }
    function u(a, b, d, e, f, g, h) {
      f === void 0 && (f = "file_selector");
      h === void 0 && (h = null);
      var j = i(b);
      l(j)
        ? q(a, b, d, e, g, h)
        : o(a, b, d, e, f, function () {
            b.forEach(function (a) {
              (a.uploadID = c("uniqueID")()), (a.filename = "");
            }),
              d.enqueueAsyncUploadRequest(a, b, {}, {}, !1);
          });
    }
    function v(a, b) {
      return c("Arbiter").subscribe(
        [
          "AttachmentsPhotoEditor/newImage" + a,
          "AttachmentsPhotoEditor/tagsUpdated" + a,
        ],
        c("curry")(w, a, b)
      );
    }
    function w(a, b, e, f) {
      if (e === "AttachmentsPhotoEditor/newImage" + a) {
        var g = c("ReactComposerMediaUploadStore").getUploadsOfType(
          a,
          d("ReactComposerMediaUploadType").PHOTO
        );
        g = g.find(function (a) {
          return a.photoID === f.fbid || a.originalPhotoID === f.fbid;
        });
        var h = c("ReactComposerMediaUploadStore").getUploadIndex(a, g.id),
          i = f.blob;
        i.uploadID = c("uniqueID")();
        i.name = g.filename || c("uniqueID")();
        h = new Map([[i.uploadID, h]]);
        b &&
          b.enqueueAsyncUploadRequest(
            a,
            [i],
            {
              data: {
                original_fbid: f.fbid,
                xy_tags: f.xyTags,
                stickers: f.stickers,
                text_overlays: f.textOverlays,
                has_crop: f.hasCrop,
                has_filter: f.hasFilter,
              },
              indexMap: h,
            },
            { xyTags: f.xyTags },
            !1
          );
        d("ReactComposerPhotoActions").removePhoto(a, g.photoID, g.id);
        d("ReactComposerMediaUploadActions").photosSelect(a, 1, "editor");
      } else
        e === "AttachmentsPhotoEditor/tagsUpdated" + a &&
          x(a, f.fbid, f.xyTags);
      d("ReactComposerPhotoActions").finishPhotoEdit(a);
    }
    function x(a, b, c) {
      d("ReactComposerPhotoActions").untagAllForPhoto(a, b),
        c.forEach(function (c) {
          if (c == null) return;
          c.from_facebox
            ? d("ReactComposerPhotoActions").tagFacebox(
                a,
                b,
                c.facebox,
                c.subject,
                c.name
              )
            : c.is_product_tag
            ? d("ReactComposerPhotoActions").tagXYProduct(
                a,
                b,
                c.name,
                c.parent_product_id,
                c.source,
                c.subject,
                c.x,
                c.y
              )
            : d("ReactComposerPhotoActions").tagXY(
                a,
                b,
                c.name,
                c.source,
                c.subject,
                c.x,
                c.y
              );
        });
    }
    function y(a, b, c) {
      c.forEach(function (c) {
        if (c == null) return;
        if (c.from_facebox) return;
        else
          c.is_product_tag
            ? d("ReactComposerPhotoActions").tagXYProduct(
                a,
                b,
                c.name,
                c.parent_product_id,
                c.source,
                c.subject,
                c.x,
                c.y
              )
            : d("ReactComposerPhotoActions").tagXY(
                a,
                b,
                c.name,
                c.source,
                c.subject,
                c.x,
                c.y
              );
      });
    }
    function z(a, b, d) {
      var e =
        c("ReactComposerMediaUploadStore").getUploadsCount(d.composerID) > 0;
      if (e) return !1;
      e = i(a);
      if (!e || e.length !== 1) return !1;
      e = l(e);
      if (e) {
        c("Bootloader").loadModules(
          ["ComposerXVideoUploadDialogController_DEPRECATED"],
          function (c) {
            return c.showDialog({
              targetID: d.targetID,
              files: a,
              composerEntryPointRef: d.composerType,
              canShowOptimisticPost: b.shouldShowOptimisticVideoPost,
            });
          },
          "ReactComposerMediaUtils"
        );
        return !0;
      }
      return !1;
    }
    function A(a, b, e, f) {
      var g =
        c("ReactComposerMediaUploadStore").getUploadsCount(f.composerID) > 0;
      if (g) return !1;
      g = a.target;
      if (!g || !g.files || g.files.length !== 1) return !1;
      a = j(g);
      var h = k(a);
      a = m(a);
      if (a && e.canUploadAudio) {
        c("Bootloader").loadModules(
          ["ComposerXAudioUploadDialogController"],
          function (a) {
            return a.showDialog({
              targetID: f.targetID,
              fileInput: b,
              originalComposerID: f.composerID,
            });
          },
          "ReactComposerMediaUtils"
        );
        return !0;
      } else if (h) {
        if (
          d("PagesComposerContextUtils").isPageAdminPostingInPage(
            f.actorID,
            f.composerID,
            f.targetID
          )
        ) {
          a = c("ReactComposerPagesStore").getPagesComposerConfig(f.composerID);
          if (
            !e.useVideoUploadDialog ||
            !!((h = a) != null
              ? (h = h.attachmentsConfig) != null
                ? (h = h[c("ReactComposerAttachmentType").VIDEO_EDITOR]) != null
                  ? h.useInlineVideoUpload
                  : h
                : h
              : h)
          ) {
            d("PagesComposerUtils").logVideoUploadFunnelEvents(
              f.composerID,
              "video_upload_requested"
            );
            a = C(f.composerID, null, !0);
            a.upload(Array.from(g.files));
            return !0;
          }
        } else if (!e.useVideoUploadDialog) return !1;
        c("Bootloader").loadModules(
          ["ComposerXVideoUploadDialogController_DEPRECATED"],
          function (a) {
            return a.showDialog({
              targetID: f.targetID,
              fileInput: b,
              composerEntryPointRef: f.composerType,
              canShowOptimisticPost: e.shouldShowOptimisticVideoPost,
              originalComposerID: f.composerID,
            });
          },
          "ReactComposerMediaUtils"
        );
        return !0;
      }
      return !1;
    }
    function B(a) {
      return (
        c("ReactComposerMediaUploadStore").getUploadsCount(
          a,
          d("ReactComposerMediaUploadType").VIDEO
        ) > 0 &&
        c("ReactComposerMediaUploadStore").getUploadsCount(
          a,
          d("ReactComposerMediaUploadType").PHOTO
        ) > 0
      );
    }
    function C(a, b, d) {
      b === void 0 && (b = null);
      d === void 0 && (d = !1);
      var e = null;
      b && b.videoUploadParams
        ? (e = b)
        : (e = c("ReactComposerAttachmentStore").getAttachmentsConfig(
            a,
            c("ReactComposerAttachmentType").MEDIA
          ));
      e || h(0, 590);
      return c("ReactComposerMediaUploadStore").getVideoUploader(
        a,
        e.videoUploadParams,
        d
      );
    }
    function D(a, b) {
      b === void 0 && (b = null);
      try {
        return C(a, b);
      } catch (a) {
        return null;
      }
    }
    function E(a) {
      a = c("ReactComposerAttachmentStore").getAttachmentsConfig(
        a,
        c("ReactComposerAttachmentType").MEDIA
      );
      a || h(0, 590);
      a = JSON.parse(JSON.stringify(a.videoUploadParams));
      return new (c("VideoUploader"))(a);
    }
    function F(a) {
      var b = c("ReactComposerTaggerStore").getSelectedTagger(a),
        d = c("ReactComposerAttachmentStore").getIsAttachmentSelected(
          a,
          c("ReactComposerAttachmentType").MEDIA
        );
      b === null &&
        d &&
        c("ReactComposerTaggerActions").selectTaggerWithoutAutofocus(
          a,
          c("ReactComposerLoggingName").PHOTO_UPLOAD_DONE,
          c("ReactComposerTaggerType").PEOPLE
        );
    }
    g.clearInput = a;
    g.getFileNames = i;
    g.getFileNamesFromFileInput = j;
    g.hasEditableVideos = k;
    g.hasVideos = l;
    g.hasAudioFiles = m;
    g.filterVideos = b;
    g.filterAudioFiles = e;
    g.filterFileOfSupportedType = f;
    g.uploadVideo = n;
    g.uploadPhotos = o;
    g.uploadVideosFromTarget = p;
    g.uploadVideos = q;
    g.uploadMultiMediaFromTarget = r;
    g.uploadPhotosOrVideoFromTarget = s;
    g.uploadMultiMedia = t;
    g.uploadPhotosOrVideo = u;
    g.subscribeToImageEdit = v;
    g.onImageEdited = w;
    g.handleFaceboxAndXYTags = x;
    g.handleXYTagsOnly = y;
    g.handleVideoUploadForDroppedFiles = z;
    g.handleSpecialMediaUpload = A;
    g.isMultimediaPost = B;
    g.getVideoXUploader = C;
    g.tryGetVideoXUploader = D;
    g.getVideoUploader = E;
    g.changeToPeopleTaggerAfterUpload = F;
  },
  98
);
__d(
  "ReactComposerBrandedContentCampaignUtil",
  ["SearchableEntry"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      try {
        return a instanceof Array
          ? (a = h(a[0])) == null
            ? void 0
            : (a = a.campaign) == null
            ? void 0
            : a.id
          : null;
      } catch (a) {
        return null;
      }
    }
    function b(a) {
      try {
        return a instanceof Array
          ? (a = h(a[0])) == null
            ? void 0
            : (a = a.campaign) == null
            ? void 0
            : a.brandPageID
          : null;
      } catch (a) {
        return null;
      }
    }
    function d(a) {
      try {
        return a instanceof Array
          ? (a = h(a[0])) == null
            ? void 0
            : (a = a.campaign) == null
            ? void 0
            : a.permission
          : null;
      } catch (a) {
        return null;
      }
    }
    function h(a) {
      return a instanceof c("SearchableEntry") ? a.getAuxiliaryData() : null;
    }
    g.getCampaignIDFromEntries = a;
    g.getBrandPageIDFromEntries = b;
    g.getPermissionFromEntries = d;
  },
  98
);
__d(
  "ReactComposerEventAttachmentActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      {
        EVENT_ATTACHMENT_ENABLED: null,
        FETCH_EVENT_ATTACHMENT: null,
        SET_EVENT_MARKUP: null,
      },
      "ReactComposerEventAttachmentActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "XReactComposerEventAttachmentController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/react_composer/event/attachment/", {
      composer_id: { type: "String", required: !0 },
      event_id: { type: "String", required: !0 },
    });
  },
  null
);
__d(
  "ReactComposerEventAttachmentStore",
  [
    "AsyncRequest",
    "ReactComposerAttachmentActionType",
    "ReactComposerAttachmentType",
    "ReactComposerEventAttachmentActionType",
    "ReactComposerStoreBase",
    "XReactComposerEventAttachmentController",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                eventID: null,
                isEnabled: !1,
                isFetching: !1,
                isTimeline: !1,
                markup: null,
                pendingRequest: null,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerEventAttachmentActionType")
                  .EVENT_ATTACHMENT_ENABLED:
                  d && d.$ReactComposerEventAttachmentStore1(a);
                  break;
                case c("ReactComposerEventAttachmentActionType")
                  .FETCH_EVENT_ATTACHMENT:
                  d && d.$ReactComposerEventAttachmentStore2(a);
                  break;
                case c("ReactComposerEventAttachmentActionType")
                  .SET_EVENT_MARKUP:
                  d && d.$ReactComposerEventAttachmentStore3(a);
                  break;
                case c("ReactComposerAttachmentActionType").SELECT_ATTACHMENT:
                  d && d.$ReactComposerEventAttachmentStore4(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var d = b.prototype;
      d.isEnabled = function (a) {
        return this.getComposerData(a).isEnabled;
      };
      d.getEventID = function (a) {
        return this.getComposerData(a).eventID;
      };
      d.getMarkup = function (a) {
        return this.getComposerData(a).markup;
      };
      d.getIsTimeline = function (a) {
        return this.getComposerData(a).isTimeline;
      };
      d.hasAttachment = function (a) {
        return this.getComposerData(a).markup != null;
      };
      d.isFetching = function (a) {
        return this.getComposerData(a).isFetching;
      };
      d.$ReactComposerEventAttachmentStore1 = function (a) {
        a = this.validateAction(a, ["composerID", "enabled"]);
        var b = a[0];
        a = a[1];
        b = this.getComposerData(b);
        b.isEnabled = a;
      };
      d.$ReactComposerEventAttachmentStore2 = function (a) {
        var b = this;
        a = this.validateAction(a, ["composerID", "eventID"]);
        var d = a[0];
        a = a[1];
        if (!this.isEnabled(d)) return;
        var e = this.getComposerData(d);
        e.isFetching = !0;
        a = c("XReactComposerEventAttachmentController")
          .getURIBuilder()
          .setString("composer_id", d)
          .setString("event_id", a)
          .getURI();
        e.pendingRequest = new (c("AsyncRequest"))(a).setFinallyHandler(
          function () {
            (e.isFetching = !1), (e.pendingRequest = null), b.emitChange(d);
          }
        );
        e.pendingRequest.send();
        this.emitChange(d);
      };
      d.$ReactComposerEventAttachmentStore3 = function (a) {
        a = this.validateAction(a, ["composerID", "eventID", "markup"]);
        var b = a[0],
          c = a[1];
        a = a[2];
        var d = this.getComposerData(b);
        d.markup = a;
        d.eventID = c;
        this.emitChange(b);
      };
      d.$ReactComposerEventAttachmentStore4 = function (a) {
        a = this.validateAction(a, ["composerID", "id"]);
        var b = a[0];
        a = a[1];
        if (a === c("ReactComposerAttachmentType").STATUS) return;
        a = this.getComposerData(b);
        a.markup = null;
        a.isFetching = !1;
        a.pendingRequest && a.pendingRequest.abandon();
        this.emitChange(b);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerSessionMetricsActionTypes",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      { KEYSTROKE: null, PASTE: null },
      "ReactComposerSessionMetricsActionTypes"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerSessionMetricsStore",
  [
    "NavigationMetrics",
    "ReactComposerAttachmentActionType",
    "ReactComposerSessionMetricsActionTypes",
    "ReactComposerStoreBase",
  ],
  function (a, b, c, d, e, f, g) {
    var h = -1;
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              c("NavigationMetrics").addRetroactiveListener(
                c("NavigationMetrics").Events.NAVIGATION_DONE,
                function (a, b) {
                  a = b.tti;
                  d.ttiTimestamp = a;
                }
              );
              return {
                composerStartTime: null,
                keystrokeCount: 0,
                pasteCount: 0,
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerAttachmentActionType").SELECT_ATTACHMENT:
                  d && d.$ReactComposerSessionMetricsStore1(a);
                  break;
                case c("ReactComposerSessionMetricsActionTypes").KEYSTROKE:
                  d && d.$ReactComposerSessionMetricsStore2(a);
                  break;
                case c("ReactComposerSessionMetricsActionTypes").PASTE:
                  d && d.$ReactComposerSessionMetricsStore3(a);
                  break;
              }
            }
          ) || this;
        b.ttiTimestamp = h;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var d = b.prototype;
      d.getComposerEntryTime = function (a) {
        if (this.ttiTimestamp == h) return 0;
        else
          return Math.round(
            (this.getComposerData(a).composerStartTime - this.ttiTimestamp) /
              1e3
          );
      };
      d.getComposerStartTime = function (a) {
        return this.getComposerData(a).composerStartTime;
      };
      d.getKeystrokeCount = function (a) {
        return this.getComposerData(a).keystrokeCount;
      };
      d.getPasteCount = function (a) {
        return this.getComposerData(a).pasteCount;
      };
      d.$ReactComposerSessionMetricsStore1 = function (a) {
        a = this.validateAction(a, "composerID");
        a = this.getComposerData(a);
        a.composerStartTime || (a.composerStartTime = Date.now());
      };
      d.$ReactComposerSessionMetricsStore2 = function (a) {
        a = this.validateAction(a, "composerID");
        a = this.getComposerData(a);
        a.keystrokeCount++;
      };
      d.$ReactComposerSessionMetricsStore3 = function (a) {
        a = this.validateAction(a, "composerID");
        a = this.getComposerData(a);
        a.pasteCount++;
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "isNumberLike",
  [],
  function (a, b, c, d, e, f) {
    function a(a) {
      return !isNaN(parseFloat(a)) && isFinite(a);
    }
    f["default"] = a;
  },
  66
);
__d(
  "slideshowGetDurationParam",
  ["DateConsts", "SlideshowConstants"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a, b, e) {
      a = Math.min(a, c("SlideshowConstants").max_photo_num);
      b = d("DateConsts").MS_PER_SEC * b;
      var f = e * (a - 1);
      b = Math.floor((b - f) / a);
      return { durationInMS: b, transitionInMS: e };
    }
    g["default"] = a;
  },
  98
);
__d(
  "slideshowGetTotalLengthInSec",
  ["DateConsts", "SlideshowConstants"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a, b) {
      b = Math.min(b, c("SlideshowConstants").max_photo_num);
      return Math.round((a * b) / d("DateConsts").MS_PER_SEC);
    }
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerPostDataUtils",
  [
    "ComposerXMarauderLogger",
    "ISOCountryCode",
    "PhotoEditorSaveStates",
    "ReactComposerAsset3dAttachmentStore",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "ReactComposerAudienceStore",
    "ReactComposerBrandedContentCampaignUtil",
    "ReactComposerEventAttachmentStore",
    "ReactComposerLoggingStore",
    "ReactComposerMediaUploadStore",
    "ReactComposerMediaUploadType",
    "ReactComposerMinutiaeAttachmentStore",
    "ReactComposerPhotoStore",
    "ReactComposerPostUtilsCore",
    "ReactComposerScrapedAttachmentStore",
    "ReactComposerSelectedImagesStore",
    "ReactComposerSessionMetricsStore",
    "ReactComposerSlideshowAudioStore",
    "ReactComposerSlideshowStore",
    "ReactComposerStatusStore",
    "ReactComposerStore",
    "ReactComposerTaggerStore",
    "ReactComposerTaggerType",
    "castToEnum",
    "cometComposerMentionsBlockToEntity",
    "filterNulls",
    "flattenPHPQueryData",
    "formatDate",
    "getMentionsTextForContentState",
    "ifRequired",
    "isNumberLike",
    "slideshowGetDurationParam",
    "slideshowGetTotalLengthInSec",
    "transformDraftEditorStateToTextWithEntities",
  ],
  function (a, b, c, d, e, f, g) {
    function h(a) {
      var b,
        e = a.composerID,
        f = a.targetID,
        g =
          c("ReactComposerTaggerStore").getTaggerData(
            e,
            c("ReactComposerTaggerType").PEOPLE
          ) || [],
        h = [];
      g.forEach(function (a) {
        h.push(a.getUniqueID());
      });
      g =
        c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").PRODUCT
        ) || [];
      g = g.filter(function (a) {
        return !a.getAuxiliaryData().isFacebox;
      });
      g = g.map(function (a) {
        return a.getUniqueID();
      });
      var i = c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").CONTACT_YOUR_REPRESENTATIVE
        ),
        j = c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").TAG_EVENT
        ),
        l = c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").ACTIVITY
        ),
        m = [],
        n = [],
        t = [],
        u;
      l && l.action && l.object
        ? (m.push(l.action.getUniqueID()),
          (u = l.actionIconID),
          c("isNumberLike")(l.object.getUniqueID()) &&
          l.object.getUniqueID() !== l.object.getTitle()
            ? (n.push(l.object.getUniqueID()), t.push(""))
            : t.push(l.object.getTitle()))
        : i.politicalRepresentative
        ? c("ifRequired")("ContactYourRepresentativeConsts", function (a) {
            m.push(a.composer_action_id),
              n.push(i.politicalRepresentative.getUniqueID()),
              t.push("");
          })
        : j &&
          j.eventID &&
          c("ifRequired")("TagEventSproutConsts", function (a) {
            m.push(a.composer_action_id), n.push(j.eventID), t.push("");
          });
      l = c("ReactComposerTaggerStore").getTaggerData(
        e,
        c("ReactComposerTaggerType").STICKER
      );
      l = l && l.stickerID ? l.stickerID : 0;
      var v = c("ReactComposerAsset3dAttachmentStore").getAsset3DData(e),
        w = c("ReactComposerTaggerStore").isDisabled(
          e,
          c("ReactComposerTaggerType").ASSET_3D
        );
      w = v && !w ? v.asset3dID : null;
      v = c("ReactComposerMinutiaeAttachmentStore").getHideObjectAttachment(e);
      var aa = c("ifRequired")(
          "ReactComposerLocationAttachmentStore",
          function (a) {
            return a.getMarkup(e) !== null ? 2 : 1;
          },
          function () {
            return 1;
          }
        ),
        x = [],
        y = [],
        z = "",
        A = [];
      c("ifRequired")("ReactComposerMultilingualStatusStore", function (a) {
        var b = a.getLanguageDialects(e);
        x = a.getMessages(e);
        y = b;
        z = a.getSpecifiedPostLanguage(e);
        A = r(b, a.getRichTextBlocks(e));
      });
      var B = c("ReactComposerTaggerStore").getTaggerData(
        e,
        c("ReactComposerTaggerType").FUNDRAISER
      );
      B = B ? B.charityID : null;
      var C = c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").GROUP_JOIN_CTA
        ),
        ba = C ? C.groupID : null;
      C = C ? C.remove : !1;
      var D = c("ReactComposerTaggerStore").getTaggerData(
        e,
        c("ReactComposerTaggerType").PLAY_WITH_FRIENDS
      );
      D = D ? D.gameID : null;
      var E = c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").LOCATION
        ),
        F = c("ReactComposerEventAttachmentStore").getEventID(e),
        G = null;
      F && (G = { event_id: F });
      F = E ? E.place : null;
      var H;
      if (c("ReactComposerTaggerStore").hasBackdate(e)) {
        var I = c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").BACKDATE
        );
        H = {
          year: k(I.year),
          month: k(I.month),
          day: k(I.day),
          hour: k(I.hour),
          minute: k(I.minute),
        };
      }
      I = E && E.implicitLocation ? E.implicitLocation.citypageid : null;
      var J =
          c("ReactComposerTaggerStore").getTaggerData(
            e,
            c("ReactComposerTaggerType").SPONSOR
          ) || {},
        K =
          c("ReactComposerTaggerStore").getTaggerData(
            e,
            c("ReactComposerTaggerType").BC_SUPPORT
          ) || {};
      b = (b = K.sponsor) != null ? b : [];
      b = b.length > 0;
      b = b ? K : J;
      b = {
        canAddSponsorCTA: b.canAddSponsorCTA,
        directShareStatus: b.directShareStatus,
        entrypoint: b.entrypoint,
        eventLocation: b.eventLocation,
        sponsorRelationship: b.sponsorRelationship,
        sponsors: b.sponsors,
        hasRestrictedAudience: b.hasRestrictedAudience,
      };
      K = d("ReactComposerBrandedContentCampaignUtil").getCampaignIDFromEntries(
        b.sponsors
      );
      var ca = d(
        "ReactComposerBrandedContentCampaignUtil"
      ).getBrandPageIDFromEntries(b.sponsors);
      b.sponsors = b.sponsors.map(function (a) {
        return ca != null ? ca : a.getUniqueID();
      });
      var L = c("ReactComposerAudienceStore").getCollectionID(e),
        da = null;
      if (!L) {
        var M = c("ReactComposerAudienceStore").getLegacyAudience(e);
        M && (da = [{ value: M }]);
      }
      M = a.useHints;
      var N = c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").TARGETING
        ),
        O = N && !L ? (M ? N.hints : N.targeting) : null;
      O != null &&
        (!M &&
          O.fan_of &&
          (O.fan_of = O.fan_of.map(function (a) {
            return a.id;
          })),
        c("ifRequired")("AdsAPITargetFields", function (a) {
          a &&
            O &&
            O[a.INTERESTS] &&
            (O[a.INTERESTS] = O[a.INTERESTS].map(function (a) {
              return a.id;
            }));
        }));
      M = N && !L ? N.gating : null;
      var P = {};
      J.bcmpDealID && (P.bcmp_deal_id = J.bcmpDealID);
      J.bcmpDealUpsell && (P.bcmp_create_deal = J.bcmpDealUpsell);
      J.composerInterceptEvent &&
        (P.composer_intercept_event = J.composerInterceptEvent);
      J.composerInterceptReason &&
        (P.composer_intercept_reason = J.composerInterceptReason);
      J.detectedBrandId && (P.detected_brand_id = J.detectedBrandId);
      if (b.sponsors.length > 0) {
        K = {
          bcmp_campaign_agreement_id: (K = K) != null ? K : void 0,
          sponsor_relationship: b.sponsorRelationship,
          shared_to_sponsor_status: b.directShareStatus,
          can_sponsor_add_cta: b.canAddSponsorCTA ? 1 : 0,
          sponsor_page_id: b.sponsors[0],
        };
        P.tagging_data = K;
      }
      if (b.hasRestrictedAudience) {
        var Q;
        K = c("filterNulls")(
          ((K =
            (K = M) == null
              ? void 0
              : (K = K.geo_locations) == null
              ? void 0
              : K.countries) != null
            ? K
            : []
          ).map(function (a) {
            return c("castToEnum")(a, c("ISOCountryCode"), void 0);
          })
        );
        Q = c("filterNulls")(
          ((Q =
            (Q = M) == null
              ? void 0
              : (Q = Q.geo_locations) == null
              ? void 0
              : Q.cities) != null
            ? Q
            : []
          )
            .map(function (a) {
              return Number(a.region_id);
            })
            .concat(
              ((Q =
                (Q = M) == null
                  ? void 0
                  : (Q = Q.geo_locations) == null
                  ? void 0
                  : Q.regions) != null
                ? Q
                : []
              ).map(function (a) {
                return Number(a.key);
              })
            )
        );
        K = {
          countries: K,
          min_age: (K = M) == null ? void 0 : K.age_min,
          region_ids: Q,
        };
        P.geo_age_gates = [K];
      }
      J.eventLocation && (P.event_location = J.eventLocation);
      J.entrypoint && (P.entrypoint = J.entrypoint);
      c("ifRequired")("PagesComposerUnpublishedPostsStore", function (a) {
        a = a.getStopFeedDistributionTime(e);
        a != null &&
          (O || (O = {}),
          (O["relevant-until-date"] = c("formatDate")(a, "m/d/Y", {
            skipPatternLocalization: !0,
          })),
          (O["relevant-until-time"] =
            60 * (60 * a.getHours() + a.getMinutes())));
      });
      Q = c("ReactComposerTaggerStore").getTaggerData(
        e,
        c("ReactComposerTaggerType").PUBLISHER_ABTEST_HOLDOUT
      );
      Q &&
        ((Q.showStart == 1 && Q.showEnd == 100) ||
        (Q.showStart == null && Q.showEnd == null)
          ? (Q = null)
          : (Q = { showStart: Q.showStart, showEnd: Q.showEnd }));
      J = !!((K = a) != null
        ? (K = K.composerConfig) != null
          ? (K = K.contextInfo) != null
            ? K.is_preview
            : K
          : K
        : K);
      K = J
        ? null
        : c("ifRequired")(
            "PagesComposerBoostedPostsStore",
            function (a) {
              return a.getConfig(e);
            },
            function () {
              return null;
            }
          );
      J = w
        ? null
        : c("ReactComposerScrapedAttachmentStore").getAttachmentConfig(e);
      var R = !1,
        S = null;
      c("ifRequired")("ReactComposerCTAAttachmentUtils", function (a) {
        R = a.isCTAAttachmentSelected(e);
      });
      J === null &&
        R &&
        (c("ifRequired")("ReactComposerCTAStore", function (a) {
          J = a.getAttachmentConfig(e);
        }),
        J === null &&
          c("ifRequired")("ReactComposerCollectionStore", function (a) {
            J = a.getAttachmentConfig(e);
          }));
      R &&
        c("ifRequired")("ReactComposerCTAStore", function (a) {
          S = a.getCTAData(e);
        });
      c("ReactComposerAttachmentStore").getSelectedAttachmentID(e) ===
        c("ReactComposerAttachmentType").MEDIA &&
        c("ifRequired")(
          "ReactComposerPortableCTAAttachmentStore",
          function (a) {
            var b = a.getSelectedCta(e),
              d = a.getCTAData(e);
            c("ifRequired")("CallToActionTypes", function (a) {
              (c("ReactComposerMediaUploadStore").getPhotos(e).size === 1 ||
                (c("ReactComposerMediaUploadStore").getPhotos(e).size > 1 &&
                  b === a.MESSAGE_PAGE)) &&
                (S = d != null ? d : S);
            });
          }
        );
      var T = c("ReactComposerTaggerStore").hasData(
          e,
          c("ReactComposerTaggerType").BREAKING_NEWS
        ),
        U = 0;
      T &&
        (U = c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").BREAKING_NEWS
        ).expirationTime);
      T &&
        U > 0 &&
        J &&
        J.params.url &&
        ((J.params.breaking_news_selected = T),
        (J.params.breaking_news_expiration = U));
      var ea = c("ifRequired")(
          "ReactComposerPostToGroupStore",
          function (a) {
            return a.getIsTabSelected(e);
          },
          function () {
            return !1;
          }
        ),
        fa = c("ReactComposerTaggerStore").getPoliticalDistrictInfo(e);
      N !== null &&
        !!N.woodhengeInfo &&
        (M || (M = {}), (M.woodhenge_info = N.woodhengeInfo));
      N !== null &&
        !!N.videoCreatorTopFanPageID &&
        (M || (M = {}),
        (M.top_fans_video_creator = N.videoCreatorTopFanPageID));
      N !== null &&
        !!N.newsSubscribersInfo &&
        (M || (M = {}), (M.news_subscribers_info = N.newsSubscribersInfo));
      N = c("ReactComposerTaggerStore").getTaggerData(
        e,
        c("ReactComposerTaggerType").CONTENT_WARNINGS
      );
      N != null &&
        (N = N.map(function (a) {
          return a.getUniqueID();
        }));
      var ga = null;
      c("ifRequired")("ReactComposerGroupPostTagsTaggerStore", function (a) {
        ga = a.getPostTagIDs(e);
      });
      var V = c("ReactComposerSessionMetricsStore").getComposerStartTime(e),
        ha = null;
      V && (ha = Math.round((Date.now() - V) / 1e3));
      V = !1;
      c("ifRequired")("ReactComposerProfileBadgeStore", function (a) {
        V = a.hasProfileBadge(e);
      });
      var W = d("ComposerXMarauderLogger").getInstance(e),
        ia = W && W.ref,
        ja = W && W.composerSourceSurface,
        X =
          a.composerConfig.attachmentsConfig &&
          a.composerConfig.attachmentsConfig[
            c("ReactComposerAttachmentType").STATUS
          ],
        Y = X && X.richTextEditor,
        ka = !1;
      X && X.isWelcomeToGroupPost && (ka = !0);
      X = L ? null : c("ReactComposerAudienceStore").getAudience(e);
      var la = null;
      c("ReactComposerStore").getRankerRequestID(e) &&
        (la = { RequestID: c("ReactComposerStore").getRankerRequestID(e) });
      var ma = null,
        Z = J && J.readOnly;
      Z && (ma = { xc_disable_link: Z });
      Z = null;
      c("ifRequired")("ReactComposerCivicEngagementStore", function (a) {
        Z = a.getCivicProductSource(e);
      });
      Y = c("ReactComposerStatusStore").getMessage(e, Y);
      var $ = c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").FUN_FACT
        ),
        na = null,
        oa = null;
      $ &&
        ($.promptID
          ? (na = $.promptID)
          : $.isAskPost && Y && ((oa = { prompt_title: Y }), (Y = null)));
      $ = c("ifRequired")(
        "ReactComposerCulturalMomentHolidayCardStore",
        function (a) {
          return a.getHolidayCardData(e);
        },
        function () {
          return null;
        }
      );
      var pa = c("ifRequired")(
          "ReactComposerAutoSavingStore",
          function (a) {
            return a.getDraftID(e);
          },
          function () {
            return null;
          }
        ),
        qa = c("ReactComposerAudienceStore").getStoriesSelected(e),
        ra = c("ReactComposerAudienceStore").getTimelineSelected(e),
        sa = c("ReactComposerTaggerStore").getTaggerData(
          e,
          c("ReactComposerTaggerType").GET_SHOWTIMES
        ),
        ta = c("ReactComposerTaggerStore").hasSupportNowCTA(e),
        ua = c("ReactComposerTaggerStore").getFanFundingPromotionPayload(e),
        va = c("ReactComposerTaggerStore").getUserFundingAttachmentType(e),
        wa = c("ReactComposerTaggerStore").paidVirtualEventGatedPost(e);
      return babelHelpers["extends"](
        {},
        c("ReactComposerStatusStore").getRichTextBlocks(e),
        {
          action_type_id: m,
          album_id: L,
          asset3d_id: w,
          asked_fun_fact_prompt_data: oa,
          attachment: J,
          audience: da,
          backdated_date: H,
          boosted_post_config: K,
          breaking_news_expiration: U,
          breaking_news_selected: T,
          cta_data: S,
          charity_id: B,
          composer_entry_point: ia,
          composer_entry_time: c(
            "ReactComposerSessionMetricsStore"
          ).getComposerEntryTime(e),
          composer_session_id: c("ReactComposerLoggingStore").getSessionID(e),
          composer_session_duration: ha,
          composer_source_surface: ja,
          composer_type: W && W.composerType,
          composertags_city: I,
          composertags_place: (F && F.getUniqueID()) || I,
          composertags_place_name: F && F.getTitle(),
          composertags_with: h,
          composertags_sponsors: b.sponsors,
          civic_product_source: Z,
          direct_share_status: b.directShareStatus,
          sponsor_relationship: b.sponsorRelationship,
          can_add_sponsor_cta: b.canAddSponsorCTA,
          branded_content_data: P,
          composertags_product_items: g,
          content_warnings: N,
          extensible_sprouts_ranker_request: la,
          external_movie_data: sa,
          feed_targeted_data: O,
          fun_fact_prompt_id: na,
          group_post_tag_ids: ga,
          group_join_target_id: ba,
          hide_object_attachment: v,
          has_support_now_cta: ta,
          fan_funding_promotion_payload: ua,
          remove_group_join_cta: C,
          icon_id: u,
          is_explicit_place: !!F,
          instant_game_entry_point_data:
            a.composerConfig.instantGameEntryPointData,
          is_ama: c("ReactComposerTaggerStore").isAMA(e),
          is_post_to_group: ea,
          is_welcome_to_group_post: ka,
          is_profile_badge_post: V,
          political_district_info: fa,
          story_list_attachment_data: p(e),
          multilingual_statuses: x,
          multilingual_status_langs: y,
          multilingual_rich_text: A,
          multilingual_specified_lang: z,
          num_keystrokes: c(
            "ReactComposerSessionMetricsStore"
          ).getKeystrokeCount(e),
          num_pastes: c("ReactComposerSessionMetricsStore").getPasteCount(e),
          object_id: n,
          object_str: t,
          paid_virtual_event_gated_post: wa,
          place_attachment_setting: aa,
          play_with_friends_game_id: D,
          poll_question_data: s(e),
          privacyx: X,
          publisher_abtest_holdout: Q,
          ref: c("ReactComposerStore").getRef(e),
          stories_selected: qa,
          timeline_selected: ra,
          user_funding_attachment_type: va,
          xc_sticker_id: l,
          event_tag: G,
          tagger_session_id: E && E.sessionID,
          target_type: c("ReactComposerStore").getTargetType(e),
          targeted_privacy_data: M,
          xhpc_message: Y,
          xhpc_message_text: c("ReactComposerStatusStore").getMessageText(e),
          is_forced_reshare_of_post: J && J.reshare_original_post,
          xc_disable_config: ma,
          delight_ranges: c("ReactComposerStatusStore").getDelightRanges(e),
          holiday_card: $,
          draft_id: pa,
          work_shared_draft_mode:
            a == null
              ? void 0
              : (L = a.composerConfig) == null
              ? void 0
              : (w = L.actorConfig) == null
              ? void 0
              : w.workSharedDraftMode,
          work_checklist_metadata: q(e),
        },
        o(J),
        d("ReactComposerPostUtilsCore").getCoreData(
          e,
          a.composerConfig.contextInfo,
          f
        )
      );
    }
    function i(a, b) {
      var e = c("ReactComposerPhotoStore")
        .getPhotos(a)
        .filter(function (a) {
          return !a.isDepthFile;
        });
      b = b.filter(function (a) {
        return a.mediaType !== d("ReactComposerMediaUploadType").PHOTO
          ? !0
          : e.some(function (b) {
              return b.id === a.photoID;
            });
      });
      return j(a, b);
    }
    function j(a, b) {
      var d = b
          .map(function (a) {
            return a.photoID;
          })
          .toArray(),
        e = b && b.size > 0 ? b.first().holidayCardID : null;
      e = e ? { holiday_card_id: e, source: "promo" } : null;
      var f = c("ReactComposerSlideshowStore").isSlideshowSelected(a),
        g = null;
      f && (g = l(a));
      return babelHelpers["extends"](
        {
          application: "composer",
          composer_unpublished_photo: d,
          qn: c("ReactComposerLoggingStore").getSessionID(a),
          slideshow_spec: g,
          waterfallxapp: "web_react_composer",
          xy_tags: m(a),
          holiday_card: e,
        },
        n(b)
      );
    }
    function k(a) {
      return !a || a === -1 || a === 0 ? null : a;
    }
    function l(a) {
      var b = c("ReactComposerSlideshowAudioStore").getSelectedStorylineMood(a),
        d = null;
      b != null && (d = b.moodID);
      b = c("ReactComposerSlideshowStore").getDurationInMS(a);
      var e = c("ReactComposerSlideshowStore").getTransitionInMS(a),
        f = c("ReactComposerSelectedImagesStore").getNumberOfImages(a);
      b = c("slideshowGetTotalLengthInSec")(b, f);
      f = c("slideshowGetDurationParam")(f, b, e);
      return {
        photo_ids: c("ReactComposerSelectedImagesStore").getPhotoIDs(a),
        images_crops: c("ReactComposerSelectedImagesStore").getImagesCrops(a),
        photo_duration: f.durationInMS,
        photo_transition_duration: f.transitionInMS,
        storyline_mood_id: d,
      };
    }
    function m(a) {
      var b = c("ReactComposerPhotoStore")
        .getAllTaggedFaceboxes(a)
        .map(function (a) {
          return {
            fbid: a.get("photoID"),
            x: a.get("x"),
            y: a.get("y"),
            name: a.get("taggedValue"),
            subject: a.get("taggedSubjectID"),
            from_facebox: !0,
            source: a.get("isMagicTag")
              ? "composerx_suggestions"
              : "composerx_flyout",
          };
        });
      a = c("ReactComposerPhotoStore")
        .getAllXYTags(a)
        .map(function (a) {
          return {
            fbid: a.get("photoID"),
            x: a.get("x"),
            y: a.get("y"),
            name: a.get("name"),
            subject: a.get("subject"),
            from_facebox: a.get("from_facebox"),
            source: a.get("source"),
          };
        });
      return b.concat(a);
    }
    function n(a) {
      var b = {},
        c = {},
        e = {},
        f = {},
        g = {};
      a.forEach(function (a) {
        var h = a.get("photoID");
        a = d("PhotoEditorSaveStates").getLoggingData(a.get("originalPhotoID"));
        a &&
          ((b[h] = a.hasFilter ? !0 : null),
          (c[h] = a.hasCrop ? !0 : null),
          (e[h] = a.textOverlays),
          (f[h] = a.stickers),
          a.customAccessibilityCaption &&
            (g[h] = a.customAccessibilityCaption));
      });
      a = {};
      a.composer_has_filter = b;
      a.composer_has_crop = c;
      a.composer_custom_accessibility_caption = g;
      a.composer_text_overlay = e;
      a.composer_sticker = f;
      return a;
    }
    function o(a) {
      return !a || !a.params || a.readOnly
        ? null
        : {
            xc_share_params: JSON.stringify(a.params),
            xc_share_target_type: a.type,
            xc_share_images: a.params.images,
            xc_share_title: a.params.title,
            xc_share_summary: a.params.summary,
            xc_link_url: a.params.url,
          };
    }
    function p(a) {
      var b = c(
          "ReactComposerAttachmentStore"
        ).getIsAttachmentSelectedOrProxied(
          a,
          c("ReactComposerAttachmentType").LIST
        ),
        d = null;
      b &&
        c("ifRequired")("ReactComposerListStore", function (b) {
          var e = b.getListTitle(a),
            f = b.getListItems(a),
            g = b.getSelectedListStyle(a),
            h = b.getSelectedListColor(a),
            i = b.getListColors(a),
            j = b.getListPrompts(a);
          b = b.getSelectedListPrompt(a);
          var k = b !== -1 ? j[b].prompt_id : null;
          j = b !== -1 ? j[b].is_fun_fact_prompt : !1;
          var l = [];
          f.forEach(function (a) {
            var b = a.getCurrentContent().getPlainText();
            b.trim().length > 0 &&
              l.push({
                description: c("getMentionsTextForContentState")(
                  a.getCurrentContent()
                ),
              });
          });
          d = {
            original_list_id: null,
            create_story_list_action_link: null,
            list_style: g,
            title: c("getMentionsTextForContentState")(e.getCurrentContent()),
            items: l,
            text_format_preset_id: i[h].preset_id,
            fun_fact_prompt_id: j ? k : null,
            prompt_id: j ? null : k,
          };
        });
      return d;
    }
    function q(a) {
      var b = c("ReactComposerTaggerStore").getTaggerData(
        a,
        c("ReactComposerTaggerType").WORK_CHECKLIST
      );
      b = b.hasChecklist;
      return !b
        ? null
        : c("ifRequired")(
            "ReactComposerWorkChecklistStore",
            function (b) {
              var d = b.getTitle(a).getCurrentContent();
              d = d.hasText() ? d.getPlainText() : void 0;
              b = b.getListItems(a);
              var e = [];
              b.forEach(function (a) {
                a = a.editorState;
                var b = a.getCurrentContent().getPlainText();
                b.trim().length > 0 &&
                  e.push({
                    text_with_entities: c(
                      "transformDraftEditorStateToTextWithEntities"
                    )(a, [c("cometComposerMentionsBlockToEntity")]),
                  });
              });
              return { title: d, items: e };
            },
            function () {
              return null;
            }
          );
    }
    function r(a, b) {
      if (!b) return [];
      var c = [];
      for (var d = 0; d < a.length; d++)
        b[d] && c.push({ dialect: a[d], composedTextParams: b[d] });
      return c;
    }
    function s(a) {
      var b = c(
          "ReactComposerAttachmentStore"
        ).getIsAttachmentSelectedOrProxied(
          a,
          c("ReactComposerAttachmentType").VISUAL_POLL
        ),
        d = null;
      b &&
        c("ifRequired")("ReactComposerQuestionStore", function (b) {
          var e = b.isRelativeEndTime(a),
            f = b.getVisualPollEndTimeInMillis(a),
            g = !0,
            h = 0,
            j = 0;
          e ? (j = Math.round(f / 1e3)) : (h = Math.round(f / 1e3));
          e = b.getIsResultsHidden(a);
          f = b.getVisualPollNumOptions(a);
          var k = b.getVisualPollOptionTexts(a),
            l = b.getVisualPollOptionGifUrls(a),
            m = c("ReactComposerMediaUploadStore").getUploads(a);
          m = i(a, m).composer_unpublished_photo;
          b = b.getVisualPollOptionImageIndices(a);
          var n = [],
            o = 0,
            p = 0;
          for (var q = 0; q < f; q++)
            n.push({}),
              q < k.length && k[q] ? (n[q].text = k[q]) : (g = !1),
              q < l.length && l[q]
                ? ((n[q].external_image_url = l[q]), (o += 1))
                : q < b.length &&
                  b[q] >= 0 &&
                  b[q] < m.length &&
                  ((n[q].associated_image_id = m[b[q]]), (p += 1));
          q = o + p === n.length ? 4 : 6;
          g &&
            (d = {
              text: c("ReactComposerStatusStore").getMessage(a),
              hidden_results: e ? !0 : null,
              question_type: q,
              poll_end_time: h,
              relative_poll_end_time: j,
              options: n,
            });
        });
      return d;
    }
    function a(a) {
      var b = {};
      Object.keys(a).forEach(function (c) {
        if (a[c] != null) {
          var d = a[c] instanceof Object;
          if (!d) b[c] = a[c];
          else {
            d = !Object.values(a[c]).every(function (a) {
              return a == null;
            });
            d && (b[c] = a[c]);
          }
        }
      });
      var d = new FormData(),
        e = c("flattenPHPQueryData")(b);
      Object.keys(e).forEach(function (a) {
        e[a] != null && d.append(a, e[a]);
      });
      return d;
    }
    function b(a, b) {
      var d = b.composerID,
        e = b.actorID;
      b = b.targetID;
      var f = c("ReactComposerAttachmentStore").getSelectedAttachmentID(d),
        g = c("ReactComposerTaggerStore").areAllTaggersEmptyExcluding(d, [
          c("ReactComposerTaggerType").BC_SUPPORT,
          c("ReactComposerTaggerType").FORMATTED_TEXT,
          c("ReactComposerTaggerType").TARGETING,
          c("ReactComposerTaggerType").SPONSOR,
          c("ReactComposerTaggerType").AMA,
        ]),
        i = c("ReactComposerStatusStore").getMessageText(d).trim();
      if (
        f === c("ReactComposerAttachmentType").STATUS ||
        f === c("ReactComposerAttachmentType").QUESTION
      ) {
        if (i || !g) return !1;
        g = h({ actorID: e, composerConfig: a, composerID: d, targetID: b });
        return !g.attachment;
      }
      if (f === c("ReactComposerAttachmentType").MEDIA) {
        if (i) return !1;
        if (c("ReactComposerScrapedAttachmentStore").hasAttachment(d))
          return !1;
        e = c("ReactComposerMediaUploadStore").getUploadsCount(d);
        return e === 0;
      }
      return !1;
    }
    g.getPostData = h;
    g.getMediaUploadsData = i;
    g.getMediaDataWithoutFiltering = j;
    g._sanitizeDateField = k;
    g._getSlideshowSpec = l;
    g._getXYTagData = m;
    g._getCreativeEditingToolsData = n;
    g._getScrapedAttachmentData = o;
    g._getListAttachmentData = p;
    g._getWorkChecklistAttachmentData = q;
    g._getMultilingualRichtext = r;
    g._getVisualPollAttachmentData = s;
    g.createFormData = a;
    g.isEmptyAttachment = b;
  },
  98
);
__d(
  "PagesCrosspostChannel",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({ GROUP: "group", INSTAGRAM: "instagram" });
    f["default"] = a;
  },
  66
);
__d(
  "PagesHeaderDispatcher",
  ["ExplicitRegistrationReactDispatcher"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = new (c("ExplicitRegistrationReactDispatcher"))({ strict: !0 });
    g["default"] = a;
  },
  98
);
__d(
  "PagesProfilePictureActions",
  ["PagesHeaderDispatcher", "immutable"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a() {
      c("PagesHeaderDispatcher").dispatch({
        data: { loading: !0 },
        type: "profile_picture_update",
      });
    }
    function b(a) {
      c("PagesHeaderDispatcher").dispatch({
        data: {
          profilePicStoryData: c("immutable").fromJS({
            storyCreationStatus: a,
          }),
        },
        type: "profile_picture_story_uploading",
      });
    }
    g.updateProfilePicture = a;
    g.updateProfilePictureStory = b;
  },
  98
);
__d(
  "PagesStoryCreationStatusTypes",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("keyMirrorRecursive")(
      {
        STORY_CREATION_STARTED: "",
        STORY_CREATION_SUCCESS: "",
        STORY_CREATION_FAILURE: "",
      },
      "PagesStoryCreationStatus"
    );
    b = a;
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerAsyncRequest",
  [
    "AsyncRequest",
    "AsyncResponse",
    "ReactComposerActions",
    "ReactComposerPostUtilsCore",
  ],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, c) {
        c = a.call(this, c) || this;
        c.$ReactComposerAsyncRequest1 = b;
        a.prototype.setHandler.call(
          babelHelpers.assertThisInitialized(c),
          c.$ReactComposerAsyncRequest5.bind(
            babelHelpers.assertThisInitialized(c)
          )
        );
        a.prototype.setErrorHandler.call(
          babelHelpers.assertThisInitialized(c),
          c.$ReactComposerAsyncRequest6.bind(
            babelHelpers.assertThisInitialized(c)
          )
        );
        a.prototype.setFinallyHandler.call(
          babelHelpers.assertThisInitialized(c),
          c.$ReactComposerAsyncRequest7.bind(
            babelHelpers.assertThisInitialized(c)
          )
        );
        return c;
      }
      var e = b.prototype;
      e.setHandler = function (a) {
        this.$ReactComposerAsyncRequest2 = a;
        return this;
      };
      e.setErrorHandler = function (a) {
        this.$ReactComposerAsyncRequest3 = a;
        return this;
      };
      e.setFinallyHandler = function (a) {
        this.$ReactComposerAsyncRequest4 = a;
        return this;
      };
      e.$ReactComposerAsyncRequest5 = function (a) {
        var b = this,
          c = this.$ReactComposerAsyncRequest8(a);
        if (c) {
          this.$ReactComposerAsyncRequest9(a);
          return;
        }
        setTimeout(function () {
          var c = a.payload && a.payload.isPostPending;
          c ||
            d("ReactComposerPostUtilsCore").handlePostSucceeded(
              b.$ReactComposerAsyncRequest1
            );
          b.$ReactComposerAsyncRequest2 && b.$ReactComposerAsyncRequest2(a);
        }, 0);
      };
      e.$ReactComposerAsyncRequest6 = function (a) {
        var b = this.$ReactComposerAsyncRequest8(a);
        if (b) {
          this.$ReactComposerAsyncRequest9(a);
          return;
        }
        this.$ReactComposerAsyncRequest10(a);
      };
      e.$ReactComposerAsyncRequest8 = function (a) {
        return a.payload && a.payload.errors && a.payload.errors[0];
      };
      e.$ReactComposerAsyncRequest9 = function (a) {
        var b = this.$ReactComposerAsyncRequest8(a);
        a = new (c("AsyncResponse"))(a.getRequest(), a);
        a.errorSummary = b ? b.summary : null;
        a.errorDescription = b ? b.description : null;
        a.silentError = b && b.is_silent;
        a.transientError = b && b.is_transient;
        this.$ReactComposerAsyncRequest10(a);
      };
      e.$ReactComposerAsyncRequest10 = function (a) {
        var b = this;
        setTimeout(function () {
          d("ReactComposerActions").postError(b.$ReactComposerAsyncRequest1, a),
            b.$ReactComposerAsyncRequest3 && b.$ReactComposerAsyncRequest3(a);
        }, 0);
      };
      e.$ReactComposerAsyncRequest7 = function (a) {
        var b = this;
        setTimeout(function () {
          d("ReactComposerActions").postFinally(
            b.$ReactComposerAsyncRequest1,
            a
          ),
            b.$ReactComposerAsyncRequest4 && b.$ReactComposerAsyncRequest4(a);
        }, 0);
      };
      return b;
    })(c("AsyncRequest"));
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerFileActionType",
  ["keyMirrorRecursive"],
  function (a, b, c, d, e, f, g) {
    a = c("keyMirrorRecursive")(
      { RESET: null, SAVE_FILE: null, SET_FILE_CONFIG: null },
      "ReactComposerFileActionType"
    );
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerFileStore",
  ["fbt", "ReactComposerFileActionType", "ReactComposerStoreBase"],
  function (a, b, c, d, e, f, g, h) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, d;
        b =
          a.call(
            this,
            function () {
              return {
                file: null,
                maxFileUploadString: null,
                selectedFileName: d && d.$ReactComposerFileStore1(),
              };
            },
            function (a) {
              switch (a.type) {
                case c("ReactComposerFileActionType").RESET:
                  d && d.$ReactComposerFileStore2(a);
                  break;
                case c("ReactComposerFileActionType").SAVE_FILE:
                  d && d.$ReactComposerFileStore3(a);
                  break;
                case c("ReactComposerFileActionType").SET_FILE_CONFIG:
                  d && d.$ReactComposerFileStore4(a);
                  break;
              }
            }
          ) || this;
        d = babelHelpers.assertThisInitialized(b);
        return b;
      }
      var d = b.prototype;
      d.getFile = function (a) {
        return this.getComposerData(a).file;
      };
      d.getMaxFileUploadSize = function (a) {
        return this.getComposerData(a).maxFileUploadSize;
      };
      d.getMaxFileUploadString = function (a) {
        return this.getComposerData(a).maxFileUploadString;
      };
      d.getSelectedFileName = function (a) {
        return this.getComposerData(a).selectedFileName;
      };
      d.getURI = function (a) {
        return "/ajax/groups/files/upload";
      };
      d.hasFile = function (a) {
        return !!this.getComposerData(a).file;
      };
      d.isFileSelected = function (a) {
        a = this.getComposerData(a);
        return !!a.file;
      };
      d.$ReactComposerFileStore1 = function () {
        return h._("No file chosen");
      };
      d.$ReactComposerFileStore2 = function (a) {
        var b = this.validateAction(a, "composerID");
        b = this.getComposerData(b);
        b.file = null;
        b.selectedFileName = this.$ReactComposerFileStore1();
        this.emitChange(a.composerID);
      };
      d.$ReactComposerFileStore3 = function (a) {
        var b = this.validateAction(a, ["composerID", "file", "name"]),
          c = b[0],
          d = b[1];
        b = b[2];
        c = this.getComposerData(c);
        c.file = d;
        c.selectedFileName = b;
        this.emitChange(a.composerID);
      };
      d.$ReactComposerFileStore4 = function (a) {
        var b = this.validateAction(a, ["composerID", "config"]),
          c = b[0];
        b = b[1];
        c = this.getComposerData(c);
        c.maxFileUploadSize = b.maxFileUploadSize;
        c.maxFileUploadString = b.maxFileUploadString;
        this.emitChange(a.composerID);
      };
      return b;
    })(c("ReactComposerStoreBase"));
    b = new a();
    g["default"] = b;
  },
  98
);
__d(
  "XVideoEditDialogSaveController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/video/edit/dialog/save/", {
      v: { type: "Int", required: !0 },
      feed_background_image_focus_x: { type: "Float" },
      feed_background_image_focus_y: { type: "Float" },
      mature_content_rating: { type: "Enum", enumType: 0 },
      funded_content_program: { type: "Enum", enumType: 0 },
      deal_id: { type: "FBID" },
      commentating_permission: { type: "Enum", enumType: 1 },
      enable_was_live_voting: { type: "Bool", defaultValue: !1 },
      composer_entry_point_ref: { type: "Enum", enumType: 1 },
      has_support_now_cta: { type: "Bool", defaultValue: !1 },
      work_shared_draft_mode: { type: "Enum", enumType: 1 },
    });
  },
  null
);
__d(
  "ReactComposerPostUtils",
  [
    "fbt",
    "invariant",
    "ActorURI",
    "Arbiter",
    "Bootloader",
    "ComposerPublisher",
    "DOM",
    "DateConsts",
    "HTML",
    "ODS",
    "PagesCrosspostChannel",
    "PagesProfilePictureActions",
    "PagesStoryCreationStatusTypes",
    "ReactComposerActions",
    "ReactComposerAsyncRequest",
    "ReactComposerAttachmentStore",
    "ReactComposerAttachmentType",
    "ReactComposerAudienceStore",
    "ReactComposerFileStore",
    "ReactComposerMediaUploadStore",
    "ReactComposerMediaUploadType",
    "ReactComposerPhotoStore",
    "ReactComposerPostDataUtils",
    "ReactComposerSlideshowStore",
    "ReactComposerStatusStore",
    "ReactComposerStore",
    "ReactComposerStoryArchiveIntroductionDialogGatedModule",
    "ReactComposerTaggerStore",
    "ReactComposerTaggerType",
    "ReactComposerVideoUploadStore",
    "ReactComposerWorkFileStore",
    "ReactLegacyShim_DEPRECATED",
    "SimpleXUIDialog",
    "StoriesConstants",
    "ThisControllerNoLongerExists",
    "URI",
    "XVideoEditDialogSaveController",
    "curry",
    "dotAccess",
    "formatDate",
    "getByPath",
    "ifRequired",
    "react",
    "uuidv4",
  ],
  function (a, b, c, d, e, f, g, h, i) {
    var j = d("react"),
      k = !!c("ReactComposerWorkFileStore").module,
      l = c("ReactComposerWorkFileStore").module || c("ReactComposerFileStore"),
      m = !0;
    function a(a, b) {
      d("ReactComposerActions").publishStarted(a),
        (b = b || {}),
        (b.composer_id = a),
        b.streamNode
          ? (b.streamStory = b.streamNode)
          : b.streamMarkup &&
            (b.streamStory = c("HTML")(b.streamMarkup).getRootNode()),
        b.contentID && (b.matchData = { content_id: b.contentID }),
        c("Arbiter").inform("composer/publish", b);
    }
    function b(a, b, d) {
      d === void 0 && (d = !1);
      b = c("ReactComposerPhotoStore").isLimitExceeded(a, b);
      var e = c("ReactComposerMediaUploadStore").isUploading(a),
        f = c("ReactComposerPhotoStore").isRecognizing(a),
        g =
          !!c("ReactComposerVideoUploadStore").getVideo(a) &&
          c("ReactComposerStore").isPosting(a);
      a = c("ReactComposerPhotoStore").isSphericalPhotoUpdating(a);
      return b || ((e || g) && !d) || f || a;
    }
    function n(a) {
      var b = c(
        "ReactComposerAttachmentStore"
      ).getIsAttachmentSelectedOrProxied(
        a,
        c("ReactComposerAttachmentType").MEDIA
      );
      a = c("ReactComposerAttachmentStore").getIsAttachmentSelected(
        a,
        c("ReactComposerAttachmentType").AUDIENCE_SELECTOR
      );
      return b || a;
    }
    function o(a, b, e, f) {
      c("ifRequired")("ReactComposerStatusDonateButtonStore", function (c) {
        c.getEnabled(b) &&
          Object.assign(a, {
            cta_data: {
              type: "DONATE",
              value: {
                fundraiser_campaign_id: c.getFundraiserCampaignID(b),
                link_title: c.getTitle(b),
                link_description: c.getDescription(b),
              },
            },
          });
      }),
        c("ifRequired")("ReactComposerCTAStore", function (e) {
          e = e.getCTAData(b);
          e &&
            e.type === "MESSAGE_PAGE" &&
            (c("ReactComposerMediaUploadStore").getUploadsCount(
              b,
              d("ReactComposerMediaUploadType").PHOTO
            ) > 1
              ? f && Object.assign(a, { cta_data: e })
              : Object.assign(a, { cta_data: e }));
        });
    }
    function p(a, b) {
      var d = c(
        "ReactComposerAttachmentStore"
      ).getIsAttachmentSelectedOrProxied(
        b,
        c("ReactComposerAttachmentType").PLACE_LIST
      );
      d &&
        c("ifRequired")("ReactComposerPlaceListStore.react", function (c) {
          Object.assign(a, {
            is_placelist_post: !0,
            placelist_within_page: c.getPageID(b),
            should_redirect_place_list_on_create:
              c.getShouldRedirectOnCreate(b),
          }),
            c.getGroupID(b) &&
              Object.assign(a, {
                target_id: c.getGroupID(b),
                xhpc_targetid: c.getGroupID(b),
              });
        });
    }
    function q(a, b) {
      c("ifRequired")("ReactComposerFormattedTextStore", function (c) {
        c = c.getTextFormatPresetID(b);
        c && Object.assign(a, { text_format_preset_id: c });
      });
    }
    function r(a, b, d) {
      a &&
        c("ifRequired")("ReactComposerCTAStore", function (a) {
          Object.assign(b, { cta_data: a.getCTAData(d) });
        });
    }
    function s(a, b) {
      var d = c(
        "ReactComposerAttachmentStore"
      ).getIsAttachmentSelectedOrProxied(
        b,
        c("ReactComposerAttachmentType").PAGE_RECOMMENDATION
      );
      d &&
        c("ifRequired")(
          "ReactComposerPageRecommendationStore.react",
          function (c) {
            if (c.getRecommendationType(b)) {
              var d = c.getTags(b),
                e = c.getTagEntryPoint(b),
                f = [];
              d.forEach(function (a) {
                a.selected === !0 && f.push({ id: a.value, entry_point: e });
              });
              Object.assign(a, {
                page_recommendation: {
                  page_id: c.getPageID(b),
                  rec_type: c.getRecommendationType(b),
                  attached_tags: f,
                },
              });
            } else
              Object.assign(a, { page_recommendation_ids: [c.getPageID(b)] });
          }
        );
    }
    function t(a, b) {
      a = a.composerConfig.pagePremadePostData;
      a && Object.assign(b, { page_premade_post: a });
    }
    function u(a, b) {
      a && Object.assign(b, { animated_image: a });
    }
    function v(a, b) {
      var d = c(
        "ReactComposerAttachmentStore"
      ).getIsAttachmentSelectedOrProxied(
        b,
        c("ReactComposerAttachmentType").LOCAL_DEV_PLATFORM
      );
      d &&
        c("ifRequired")("ReactComposerLocalDevPlatformStore", function (c) {
          var d = c.getAppConfigID(b),
            e = c.getFbeID(b),
            f = c.getPhotoID(b),
            g = c.getPageID(b),
            h = c.getCTATitle(b),
            i = c.getCTASubtitle(b),
            j = c.getCTAActionTitle(b);
          c = c.getCTAAction(b);
          Object.assign(a, {
            local_dev_platform_app_instance: {
              ldp_app_config_id: d,
              fbe_id: e,
              page_id: g,
              additional_data: {
                photo_id: f,
                title: h,
                subtitle: i,
                cta_button_text: j,
                cta_button_url: c,
              },
            },
          });
        });
    }
    function w(a) {
      if (a.attachment && a.attachment.params) {
        var b = String(c("uuidv4")());
        Object.assign(a, {
          detection_analytics_data: {
            detection_id: b,
            device_advertising_id: null,
            product_id: String(54),
          },
        });
      }
    }
    function x(a, b) {
      a =
        (a = a) != null
          ? (a = a.composerConfig) != null
            ? (a = a.contextInfo) != null
              ? a.is_dialog_composer
              : a
            : a
          : a;
      a && Object.assign(b, { is_dialog_composer: a });
    }
    function y(a, b) {
      c("Bootloader").loadModules(
        ["FantaTabActions"],
        function (b) {
          a.getThreadIDs().forEach(function (a) {
            return b.openTab(a);
          });
        },
        "ReactComposerPostUtils"
      );
    }
    function z(a) {
      m &&
        c("ReactComposerStoryArchiveIntroductionDialogGatedModule").module &&
        (d("ReactLegacyShim_DEPRECATED").render(
          j.jsx(
            c("ReactComposerStoryArchiveIntroductionDialogGatedModule").module,
            {}
          ),
          c("DOM").create("div")
        ),
        (m = !1));
      a = c("dotAccess")(a, "request.data.variables", "{}");
      var b = JSON.parse(a);
      if (
        b &&
        ((a = b) != null
          ? (a = a.input) != null
            ? a.composer_source_surface
            : a
          : a) === "page"
      ) {
        d("PagesProfilePictureActions").updateProfilePictureStory(
          c("PagesStoryCreationStatusTypes").STORY_CREATION_SUCCESS
        );
        c("Arbiter").inform("Pages/createStorySuccess");
        c("Bootloader").loadModules(
          ["FBStoriesDataHelper"],
          function (a) {
            a.loadPageBucketData(b.actor_id);
          },
          "ReactComposerPostUtils"
        );
        var e = (a = b) != null ? ((a = a.input) != null ? a.actor_id : a) : a;
        e &&
          c("Bootloader").loadModules(
            ["PagesStoryArchiveIntroductionDialogContainer.react"],
            function (a) {
              return d("ReactLegacyShim_DEPRECATED").render(
                j.jsx(a, { pageID: e }),
                c("DOM").create("div")
              );
            },
            "ReactComposerPostUtils"
          );
      } else
        c("Bootloader").loadModules(
          ["FBStoriesTrayInit", "FBStoriesProductionActions"],
          function (a, b) {
            b.setUserBucketUploadStatus(!1),
              a.reloadTray(
                d("StoriesConstants").TIMEOUT_FOR_SERVER_TO_FINISH_WORK
              );
          },
          "ReactComposerPostUtils"
        );
    }
    function e(a) {
      if (a.payload.success && !a.payload.media_link) return;
      c("Bootloader").loadModules(
        ["ReactCrossPostingConfirmationDialogContainer.react"],
        function (b) {
          d("ReactLegacyShim_DEPRECATED").render(
            j.jsx(b, {
              media_channel: c("PagesCrosspostChannel").INSTAGRAM,
              media_link: a.payload.media_link,
              success: a.payload.success,
            }),
            c("DOM").create("div")
          );
        },
        "ReactComposerPostUtils"
      );
    }
    function A(a, b) {
      return c("Bootloader").loadModules(
        ["XUIDialogButton.react"],
        function (c) {
          d("SimpleXUIDialog").showEx(
            b,
            a,
            j.jsx(c, { action: "cancel", use: "confirm", label: h._("Close") })
          );
        },
        "ReactComposerPostUtils"
      );
    }
    function f(a) {
      !a.actorID && i(0, 5899);
      !a.composerConfig && i(0, 5900);
      !a.composerConfig.contextInfo && i(0, 5901);
      !a.composerID && i(0, 5902);
      !a.targetID && i(0, 5903);
      var b = a.actorID,
        e = a.composerID,
        f = a.targetID,
        g = !1,
        j = c("ReactComposerAudienceStore").getNoDestinationSelected(e);
      if (j) {
        d("ODS").bumpEntityKey(
          2966,
          "composer.destination_picker",
          "error_no_destination"
        );
        A(
          h._("Oops"),
          h._(
            "Something's gone wrong. We're working to get it fixed as soon as we can."
          )
        );
        return;
      }
      j = c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
        e,
        c("ReactComposerAttachmentType").IG_PHOTO_REMINDER
      );
      var m = n(e),
        B = c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
          e,
          c("ReactComposerAttachmentType").FILE
        ),
        C = c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
          e,
          c("ReactComposerAttachmentType").QUESTION
        ),
        D = !1;
      c("ifRequired")("ReactComposerCTAAttachmentUtils", function (a) {
        D = a.isCTAAttachmentSelected(e);
      });
      var E = c("ReactComposerSlideshowStore").isSlideshowSelected(e),
        F = c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
          e,
          c("ReactComposerAttachmentType").PROFILE_PIC_FRAME
        ),
        G = c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
          e,
          c("ReactComposerAttachmentType").MEDIA_EFFECT_SHARE
        ),
        H = c("ReactComposerAttachmentStore").getIsAttachmentSelectedOrProxied(
          e,
          c("ReactComposerAttachmentType").SALES_PROMO
        ),
        I = d("ReactComposerPostDataUtils").getPostData(a),
        J = Boolean(
          c("getByPath")(a, [
            "composerConfig",
            "taggersConfig",
            c("ReactComposerTaggerType").MESSAGING,
            "enableSMCTAForMultiPhoto",
          ])
        );
      o(I, e, f, J);
      J = c("ReactComposerVideoUploadStore").getVideo(e);
      if (m && !!J) {
        var K = c("ReactComposerVideoUploadStore").getUploader(e);
        K && K.uploadFromFile(J.file, I);
        return;
      }
      K = k ? l.hasFile(e) : l.isFileSelected(e);
      J = c("ReactComposerTaggerStore").getTaggerData(
        e,
        c("ReactComposerTaggerType").GIF
      ).gifData;
      var L,
        M = c("ReactComposerMediaUploadStore").getUploads(e);
      q(I, e);
      r(D, I, e);
      p(I, e);
      s(I, e);
      t(a, I);
      u(J, I);
      v(I, e);
      w(I);
      x(a, I);
      J = M.size > 0;
      j = j || m;
      m = E || (j && J);
      j = !!((E = a) != null
        ? (E = E.composerConfig) != null
          ? (E = E.contextInfo) != null
            ? E.is_preview
            : E
          : E
        : E);
      a.composerConfig.attachmentsConfig &&
        a.composerConfig.attachmentsConfig[
          c("ReactComposerAttachmentType").STATUS
        ] &&
        (a.composerConfig.attachmentsConfig[
          c("ReactComposerAttachmentType").STATUS
        ].defaultMarkdownOn = I.is_markdown);
      var N = null;
      E = c("ReactComposerStore").getRef(e);
      if (C)
        switch (E) {
          case "group":
            N = "group";
            break;
          case "event":
          case "event_about":
            N = "event";
            break;
          case "pages_feed":
            N = "composer";
            break;
          default:
            N = E;
        }
      var O = c("ifRequired")(
        "PagesComposerUnpublishedPostsStore",
        function (a) {
          return a.getScheduledPublishTime(e);
        },
        function () {
          return null;
        }
      );
      O = O ? Math.round(O.getTime() / 1e3) : null;
      var P;
      if (m)
        (P = d("ReactComposerPostDataUtils").getMediaUploadsData(e, M)),
          Object.assign(I, P),
          (g = c("ComposerPublisher").getShouldUseGraphQLForMedia(b, I)),
          (L = new (c("URI"))("/media/upload/photos/composer/"));
      else if (B && K) L = new (c("URI"))(l.getURI(e));
      else if (C)
        N === "group" && !J
          ? ((g = !0),
            c("ifRequired")("ReactComposerQuestionStore", function (a) {
              var b = a.canChooseMultiplePollOptions(e)
                  ? "CHOOSE_MULTIPLE"
                  : "CHOOSE_ONE",
                c = a.canAnyoneAddPollOptions(e) ? "OPEN" : "LOCKED";
              a = a.getOptionStrings(e);
              var d = [];
              for (var f = 0; f < a.length; ++f)
                a[f].length > 0 && d.push({ option_text: a[f] });
              Object.assign(I, {
                attachment_poll_data: {
                  poll_type: b,
                  poll_answers_state: c,
                  options: d,
                },
              });
            }))
          : ((L = new (c("URI"))("/ajax/questions/save.php")),
            c("ifRequired")("ReactComposerQuestionStore", function (a) {
              var b = a.getOptionStrings(e),
                d = a.getOptionImageIndices(e);
              Object.assign(I, {
                composerAttachmentQuestion: c(
                  "ReactComposerStatusStore"
                ).getMessage(e),
                question_options: b,
                question_option_image_indices: d,
                source: N,
                create_eigenpoll: a.canChooseMultiplePollOptions(e),
                anyone_add_options: a.canAnyoneAddPollOptions(e),
              });
            }),
            Object.assign(
              I,
              d("ReactComposerPostDataUtils").getMediaUploadsData(e, M)
            ));
      else if (
        (D && I.attachment.params.allowMultiMedia) ||
        I.fan_funding_promotion_payload
      )
        g = !0;
      else if (F) {
        var Q, R;
        c("ifRequired")("ReactComposerProfilePictureFrameStore", function (a) {
          (Q = a.getSelectedOverlayID(e)),
            (R = a.getScheduledPostDate(e)),
            (P = d("ReactComposerPostDataUtils").getMediaDataWithoutFiltering(
              e,
              a.getCroppedPhotoForUpload(e)
            ));
        });
        var S, T, U;
        m = !1;
        if (R) {
          S = c("formatDate")(R, "m/d/Y", { skipPatternLocalization: !0 });
          K = R.getHours() * d("DateConsts").MIN_PER_HOUR + R.getMinutes();
          T = d("DateConsts").SEC_PER_MIN * K;
          U = R.getTime() / 1e3;
          m = !0;
        }
        L = new (c("URI"))("/media/upload/photos/composer/");
        Object.assign(
          I,
          babelHelpers["extends"]({}, P, {
            scheduled: m,
            sticker_id: Q,
            future_date: S,
            future_time: T,
            scheduled_publish_time: U,
          })
        );
      } else if (H)
        L = d("ThisControllerNoLongerExists").__DEADURI__("erdahazn6");
      else if (G) {
        var V,
          W = !0;
        c("ifRequired")("ReactComposerMediaEffectShareStore", function (a) {
          P = d("ReactComposerPostDataUtils").getMediaDataWithoutFiltering(
            e,
            a.getEffectPhotoForUpload(e)
          );
          var b = a.getComposerData(e).effectStatus;
          V = a.getEffectToApply(e);
          b === "active" && (W = !1);
          b = a.getUploadedVideoID(e);
          if (b) {
            Object.assign(I, { draft: W });
            a.postVideo(e, I);
            return;
          }
        });
        L = new (c("URI"))("/media/upload/photos/composer/");
        Object.assign(
          I,
          babelHelpers["extends"]({}, P, {
            scheduled: !1,
            sticker_id: V,
            draft: W,
          })
        );
      } else if (I.attachment && I.attachment.params.canvas_video) {
        L = c("XVideoEditDialogSaveController")
          .getURIBuilder()
          .setInt("v", I.attachment.params.canvas_video.video_id)
          .setEnum("composer_entry_point_ref", E)
          .getURI();
        C = O === null && !I.draft;
        Object.assign(I, I.attachment.params.canvas_video);
        Object.assign(I, {
          description: I.xhpc_message,
          is_canvas_video: !0,
          publish: C,
          scheduled_publish_time: O,
          source: "page_video_lpp_publish",
        });
        var X = {
          content_id: I.attachment.params.canvas_video.video_id,
          event: "publish",
          is_old_composer: !1,
          scraped_url: I.attachment.params.url,
          target_id: f,
        };
        c("ifRequired")("PagesComposerActionsLogger", function (a) {
          a.log(X);
        });
      } else if (I.attachment && I.attachment.params.carousel_video_lpp) {
        L = c("XVideoEditDialogSaveController")
          .getURIBuilder()
          .setInt("v", I.attachment.params.carousel_video_lpp.video_id)
          .setEnum("composer_entry_point_ref", E)
          .getURI();
        J = O === null && !I.draft;
        Object.assign(I, I.attachment.params.carousel_video_lpp);
        Object.assign(I, {
          description: I.xhpc_message,
          scheduled_publish_time: O,
          publish: J,
          source: "page_video_lpp_publish",
        });
        var Y = {
          child_attachments: I.attachment.params.child_attachments,
          event: "publish",
          target_id: f,
          content_id: I.attachment.params.carousel_video_lpp.video_id,
          is_old_composer: !1,
          scraped_url: I.attachment.params.url,
        };
        c("ifRequired")("PagesComposerActionsLogger", function (a) {
          a.log(Y);
        });
      } else
        (g = c("ComposerPublisher").getShouldUseGraphQLForStatus(b, I)),
          (L = new (c("URI"))("/ajax/updatestatus.php"));
      F = L;
      K = !1;
      c("ifRequired")("ReactComposerVideoXEditDialogStore", function (f) {
        K = f.hasSelectedCustomThumbnails(e);
        if (K) {
          var g = M.map(function (a) {
              return a.id;
            }),
            h = f.getThumbnailTypes(g.toArray(), e),
            i = {};
          M.forEach(function (a) {
            return (i[a.id] = a.photoID);
          });
          var j = {};
          for (
            var h = h,
              k = Array.isArray(h),
              m = 0,
              h = k
                ? h
                : h[
                    typeof Symbol === "function"
                      ? Symbol.iterator
                      : "@@iterator"
                  ]();
            ;

          ) {
            var n;
            if (k) {
              if (m >= h.length) break;
              n = h[m++];
            } else {
              m = h.next();
              if (m.done) break;
              n = m.value;
            }
            n = n;
            var o = n[0];
            n = n[1];
            j[i[o]] = n;
          }
          Object.assign(I, { thumb_types: j });
          o = f.getUploadsWithTextOnThumbnail(g.toArray(), e);
          n = [];
          for (
            m = o,
              k = Array.isArray(m),
              h = 0,
              m = k
                ? m
                : m[
                    typeof Symbol === "function"
                      ? Symbol.iterator
                      : "@@iterator"
                  ]();
            ;

          ) {
            if (k) {
              if (h >= m.length) break;
              j = m[h++];
            } else {
              h = m.next();
              if (h.done) break;
              j = h.value;
            }
            o = j;
            n = n.concat(i[o]);
          }
          Object.assign(I, { videos_with_text_thumbnails: n });
          var p = d("ReactComposerPostDataUtils").createFormData(I);
          f.getThumbnails(g.toArray(), e)
            .then(function (f) {
              f.forEach(function (a) {
                p.append("thumb" + i[a[0]], a[1]);
              });
              if (B && l.hasFile(e)) {
                f = l.getFile(e);
                p.append("file1", f);
              }
              f = d("ActorURI").create(L, b);
              f = new (c("ReactComposerAsyncRequest"))(e, f)
                .setRawData(p)
                .setHandler(a.onPostSuccess)
                .setErrorHandler(a.onPostFailure);
              f.send();
            })
            .done();
        }
      });
      L === F || i(0, 5904);
      if (c("ReactComposerAudienceStore").getStoriesSelected(e)) {
        m = c("ReactComposerMediaUploadStore").getVideos(e).size > 0;
        m &&
          (I.is_also_posting_video_to_feed = c(
            "ReactComposerAudienceStore"
          ).getTimelineSelected(e));
        j ||
          c("ComposerPublisher").publish(
            babelHelpers["extends"]({}, a, { onPostSuccess: z }),
            I,
            { type: "STORIES" }
          );
      }
      if (c("ReactComposerAudienceStore").getInstagramSelected(e)) {
        H = c("ReactComposerAudienceStore").getInstagramBusinessAccountID(e);
        H && (I.instagram_business_account_id = H);
      }
      c("ReactComposerAudienceStore").getSelectedGroupID(e) &&
        (I.crosspost_group_id = c(
          "ReactComposerAudienceStore"
        ).getSelectedGroupID(e));
      if (c("ReactComposerAudienceStore").getAdsPePostSelected(e)) {
        G = d("ActorURI").create(L, b);
        C = new (c("ReactComposerAsyncRequest"))(e, G)
          .setData(I)
          .setHandler(a.onPostSuccess)
          .setErrorHandler(a.onPostFailure);
        C.send();
        return;
      }
      c("ReactComposerAudienceStore")
        .getSelectedMessengerRecipientEntries(e)
        .isEmpty() ||
        c("ComposerPublisher").publish(
          babelHelpers["extends"]({}, a, {
            onPostSuccess: c("curry")(
              y,
              c(
                "ReactComposerAudienceStore"
              ).getSelectedMessengerRecipientEntries(e)
            ),
          }),
          I,
          {
            type: "MESSENGER",
            messenger_ids: c(
              "ReactComposerAudienceStore"
            ).getSelectedMessengerRecipientEntries(e),
          }
        );
      if (!c("ReactComposerAudienceStore").getTimelineSelected(e) && !j) return;
      if (g) {
        c("ComposerPublisher").publish(a, I, { type: "TIMELINE" });
        return;
      }
      I.delight_ranges &&
        Object.assign(I, { delight_ranges: JSON.stringify(I.delight_ranges) });
      if (!K) {
        E = d("ActorURI").create(L, b);
        a.isSaveDraft &&
          Object.assign(I, {
            composer_attachment_sell_draft_type: "commerce_sell_options",
            draft: !0,
          });
        O = new (c("ReactComposerAsyncRequest"))(e, E)
          .setData(I)
          .setHandler(a.onPostSuccess)
          .setErrorHandler(a.onPostFailure);
        if (B && l.hasFile(e)) {
          J = l.getFile(e);
          f = new FormData();
          f.append("file1", J);
          O.setRawData(f);
        }
        O.send();
      }
    }
    g.publish = a;
    g.isPostButtonDisabled = b;
    g._getIsOnMediaAttachment = n;
    g._setupGenericDataFromStore = o;
    g._setupDataForPlaceListAttachment = p;
    g._setupDataForFormattedText = q;
    g._setupDataForCTAAttachment = r;
    g._setupDataForPageRecommendationAttachment = s;
    g._setupDataForPremadePost = t;
    g._setupDataForGIFAttachment = u;
    g._setupDataForLocalDevPlatformAttachment = v;
    g._setupDataForDetectionAnalyticsData = w;
    g._setupDataForComposerStyle = x;
    g._onMessengerSuccess = y;
    g._onStorySuccess = z;
    g._onInstagramSuccess = e;
    g._getSomethingWentWrongDialog = A;
    g.post = f;
  },
  98
);
__d(
  "FileInputUploader",
  ["ArbiterMixin", "DOM", "DTSG", "FileForm", "Form", "mixin"],
  function (a, b, c, d, e, f) {
    a = (function (a) {
      "use strict";
      babelHelpers.inheritsLoose(c, a);
      function c(b) {
        var c;
        c = a.call(this) || this;
        c._inputElem = b;
        c._data = {};
        return c;
      }
      var d = c.prototype;
      d.setInput = function (a) {
        this._inputElem = a;
        return this;
      };
      d.setURI = function (a) {
        this._uri = a;
        return this;
      };
      d.setData = function (a) {
        this._data = a;
        return this;
      };
      d.setPreprocessHandler = function (a) {
        this._preprocessHandler = a;
        return this;
      };
      d.setNetworkErrorRetryLimit = function (a) {
        this._retryLimit = a;
        return this;
      };
      d.setFiles = function (a) {
        this._files = a;
        return this;
      };
      d.setAllowCrossOrigin = function (a) {
        this._allowCrossOrigin = !!a;
        return this;
      };
      d.setAllowCrossPageTransition = function (a) {
        this._allowCrossPageTransition = !!a;
        return this;
      };
      d.setUploadInParallel = function (a) {
        this._uploadInParallel = !!a;
        return this;
      };
      d.setConcurrentLimit = function (a) {
        this._concurrentLimit = a;
        return this;
      };
      d.abort = function () {
        this._fileForm && (this._fileForm.abort(), this._destroyFileForm());
      };
      d.send = function () {
        this._createForm();
        var a = this._inputElem && !this._inputElem.parentElement;
        if (!a && this._inputElem) {
          var c = this._inputElem.cloneNode(!1);
          b("DOM").replace(this._inputElem, c);
        }
        this._inputElem &&
          b("DOM").appendContent(this._formElem, this._inputElem);
        b("DOM").appendContent(document.body, this._formElem);
        this._fileForm.submit();
        !a && this._inputElem && b("DOM").replace(c, this._inputElem);
        this._removeFormEl();
      };
      d._onFileFormEvent = function (a, b) {
        (a === "success" || a === "failure") && this._destroyFileForm();
        return this.inform(a, b);
      };
      d._createForm = function () {
        var a;
        this._destroyFileForm();
        this._formElem = b("DOM").create("form", {
          action: this._uri,
          method: "post",
        });
        this._fileForm = new (b("FileForm"))(this._formElem, null, {
          allowCrossOrigin: !!this._allowCrossOrigin,
          allowCrossPageTransition: !!this._allowCrossPageTransition,
          uploadInParallel: !!this._uploadInParallel,
          concurrentLimit: (a = this._concurrentLimit) != null ? a : 0,
          preprocessHandler: (a = this._preprocessHandler) != null ? a : null,
          networkErrorRetryLimit: (a = this._retryLimit) != null ? a : 0,
        });
        this._files && this._fileForm.setFiles(this._files);
        this._fileForm.subscribe(
          b("FileForm").EVENTS,
          this._onFileFormEvent.bind(this)
        );
        b("Form").createHiddenInputs(
          babelHelpers["extends"](
            { fb_dtsg: b("DTSG").getToken() },
            this._data
          ),
          this._formElem
        );
      };
      d._removeFormEl = function () {
        b("DOM").remove(this._formElem), (this._formElem = null);
      };
      d._destroyFileForm = function () {
        this._fileForm && (this._fileForm.destroy(), (this._fileForm = null));
      };
      return c;
    })(b("mixin")(b("ArbiterMixin")));
    e.exports = a;
  },
  null
);
__d(
  "ProfilePhotosViewFalcoEvent",
  ["FalcoLoggerInternal", "getFalcoLogPolicy_DO_NOT_USE"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    a = c("getFalcoLogPolicy_DO_NOT_USE")("1845191");
    b = d("FalcoLoggerInternal").create("profile_photos_view", a);
    e = b;
    g["default"] = e;
  },
  98
);
__d(
  "PhotoLogger",
  ["Event", "ProfilePhotosViewFalcoEvent", "SubscriptionsHandler"],
  function (a, b, c, d, e, f, g) {
    a = (function () {
      function a(a) {
        (this.$1 = a), (this.$2 = {});
      }
      var b = a.prototype;
      b.log = function (a, b, d, e) {
        c("ProfilePhotosViewFalcoEvent").log(function () {
          return { photo_fbid: b, source: d, profile_id: e };
        }),
          this.$2[a] || (this.$3(a), (this.$2[a] = !0));
      };
      b.$3 = function (a) {
        var b = new (c("SubscriptionsHandler"))(),
          d = new Image();
        b.addSubscriptions(
          c("Event").listen(d, "load", function () {
            b.release();
          }),
          c("Event").listen(d, "error", function () {
            b.release();
          }),
          c("Event").listen(d, "abort", function () {
            b.release();
          })
        );
        d.src = a;
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "PhotoStoreCore",
  [],
  function (a, b, c, d, e, f) {
    var g = {
      actions: { UPDATE: "update" },
      _photoCache: {},
      _postCreateCallbacks: {},
      getPhotoCache: function (a) {
        if (!this._photoCache[a])
          throw new Error("Photo cache requested for unknown set ID");
        return this._photoCache[a];
      },
      hasBeenCreated: function (a) {
        return !!this._photoCache[a];
      },
      clearSetCache: function (a) {
        delete this._photoCache[a], delete this._postCreateCallbacks[a];
      },
      getByIndex: function (a, b, c) {
        this.getPhotoCache(a).getItemAtIndex(b, c);
      },
      getByIndexImmediate: function (a, b) {
        return this._photoCache[a]
          ? this._photoCache[a].getItemAtIndexImmediate(b)
          : void 0;
      },
      getItemsInAvailableRange: function (a) {
        var b = this.getAvailableRange(a),
          c = [];
        for (var d = b.offset; d < b.length; d++)
          c.push(this.getByIndexImmediate(a, d));
        return c;
      },
      getItemsAfterIndex: function (a, b, c, d) {
        b = this.getCursorByIndexImmediate(a, b);
        this.fetchForward(a, b, c, d);
      },
      getAllByIDImmediate: function (a) {
        var b = this,
          c = Object.keys(this._photoCache);
        return c
          .map(function (c) {
            return b.getByIndexImmediate(c, b.getIndexForID(c, a));
          })
          .filter(function (a) {
            return !!a;
          });
      },
      getIndexForID: function (a, b) {
        return this._photoCache[a]
          ? this._photoCache[a].getIndexForID(b)
          : void 0;
      },
      getEndIndex: function (a) {
        a = this.getAvailableRange(a);
        return a.offset + a.length - 1;
      },
      getCursorByIndexImmediate: function (a, b) {
        b = this.getByIndexImmediate(a, b);
        return b ? this._photoCache[a].getCursorForID(b.id) : void 0;
      },
      hasNextPage: function (a) {
        var b = this.getCursorByIndexImmediate(a, this.getEndIndex(a));
        return this.getPhotoCache(a).hasNextPage(b);
      },
      getAvailableRange: function (a) {
        return this.getPhotoCache(a).getAvailableRange();
      },
      hasLooped: function (a) {
        return this.getPhotoCache(a).hasLooped();
      },
      fetchForward: function (a, b, c, d) {
        this.getPhotoCache(a).getItemsAfterCursor(b, c, d);
      },
      fetchBackward: function (a, b, c, d) {
        this.getPhotoCache(a).getItemsBeforeCursor(b, c, d);
      },
      executePostCreate: function (a, b) {
        this._photoCache[a] ? b && b() : (this._postCreateCallbacks[a] = b);
      },
      runPostCreateCallback: function (a) {
        var b = this._postCreateCallbacks[a];
        b && (b(), delete this._postCreateCallbacks[a]);
      },
      setPreFetchCallback: function (a, b) {
        this.getPhotoCache(a).setPreFetchCallback(b);
      },
      updateData: function (a) {
        var b = a.set_id;
        !this._photoCache[b]
          ? ((this._photoCache[b] = new a.cache_class(a)),
            this.runPostCreateCallback(b))
          : a.query_metadata.action == g.actions.UPDATE
          ? this._photoCache[b].updateData(a)
          : this._photoCache[b].addData(a);
      },
      updateFeedbackData: function (a) {
        var b = Object.keys(a);
        b.forEach(function (b) {
          return g.getAllByIDImmediate(b).forEach(function (c) {
            c.feedback = a[b].feedback;
          });
        });
      },
      reset: function () {
        var a = this;
        Object.keys(this._photoCache).forEach(function (b) {
          return a.clearSetCache(b);
        });
      },
    };
    e.exports = g;
  },
  null
);
__d(
  "PhotoStore",
  ["Arbiter", "PhotoStoreCore"],
  function (a, b, c, d, e, f, g) {
    c("Arbiter").subscribe("update-photos", function (a, b) {
      d("PhotoStoreCore").updateData(b);
    }),
      (g["default"] = d("PhotoStoreCore"));
  },
  98
);
__d(
  "PhotoUtils",
  ["Event", "URI"],
  function (a, b, c, d, e, f) {
    var g,
      h = {
        getImagesFromData: function (a) {
          var b = [];
          for (var c in a) c.indexOf("image") === 0 && b.push(a[c]);
          return b;
        },
        getFBIDFromData: function (a) {
          return a && a.id;
        },
        getOriginalImageFromData: function (a) {
          return a.original || a.download_image;
        },
        getDownloadURLFromData: function (a) {
          a = this.getOriginalImageFromData(a);
          if (!a) return null;
          a = new (g || (g = b("URI")))(a.uri);
          a.addQueryData({ dl: 1 });
          return a;
        },
        getPermalinkFromData: function (a) {
          return a.permalink;
        },
        canViewerMakeCoverPhoto: function (a) {
          return !!a.can_viewer_make_cover_photo;
        },
        getCoverPhotoURLFromData: function (a) {
          return new (g || (g = b("URI")))("/profile.php").addQueryData({
            preview_cover: h.getFBIDFromData(a),
          });
        },
        preload: function (a, c, d) {
          var e = a.getDimensions();
          for (var f = 0; f < c.length; ++f) {
            var g = e.getBestFitImageFromPhoto(c[f], e.getMaxStageDimensions()),
              h = new Image();
            d && b("Event").listen(h, "load", d.bind(null, c[f]));
            a.getLogger().log(g.uri);
            h.src = g.uri;
          }
        },
      };
    e.exports = h;
  },
  null
);
__d(
  "PhotoViewState",
  ["ArbiterMixin", "PhotoStore", "PhotoUtils", "mixin"],
  function (a, b, c, d, e, f, g) {
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b, c, d) {
        var e;
        e = a.call(this) || this;
        d = d || {};
        e._viewer = b;
        e._setID = c;
        e._position = d.position || 0;
        e._preventPreload = d.preventPreload;
        e._reverse = d.reverse;
        e._updateCallback = d.updateCallback;
        e._preloaded = {};
        return e;
      }
      var e = b.prototype;
      e._fetchCallback = function (a) {
        if (!this._viewer.isOpen()) return;
        this._preload(a);
        this._log("data_fetch_complete");
      };
      e._preload = function (a) {
        var b = this;
        d("PhotoUtils").preload(this._viewer, a, function (a) {
          b._preloaded[d("PhotoUtils").getFBIDFromData(a)] = !0;
        });
      };
      e._preloadPhotosInRange = function (a, b) {
        var d = [];
        for (a = a; a <= b; ++a) {
          var e = c("PhotoStore").getByIndexImmediate(this._setID, a);
          e && !this._isPreloaded(e) && d.push(e);
        }
        this._preload(d);
      };
      e._isPreloaded = function (a) {
        return this._preloaded[d("PhotoUtils").getFBIDFromData(a)];
      };
      e.getPosition = function () {
        return this._position;
      };
      e.isValidMovement = function (a) {
        if (!c("PhotoStore").hasBeenCreated(this._setID)) return !1;
        if (c("PhotoStore").hasLooped(this._setID)) return !0;
        a = this._position + a;
        var b = c("PhotoStore").getAvailableRange(this._setID),
          d = b.offset + b.length - 1;
        return a >= b.offset - 1 && a <= d + 1;
      };
      e.getRelativeMovement = function (a) {
        return c("PhotoStore").getIndexForID(this._setID, a) - this._position;
      };
      e.moveCursor = function (a) {
        if (!this.isValidMovement(a)) return !1;
        this._position += a;
        return !0;
      };
      e._page = function (a) {
        if (!this.moveCursor(a)) return;
        this._log("page_begin");
        var d = c("PhotoStore").getByIndexImmediate(
          this._setID,
          this._position
        );
        !d
          ? (this.inform("photo_fetch"), this._log("photo_fetch"))
          : this._isPreloaded(d) || this._preload([d]);
        c("PhotoStore").getByIndex(
          this._setID,
          this._position,
          this._updateCallback
        );
        this._loadMoreIfNecessary(a > 0, b.BUFFER_SIZE);
        this._log("page_complete");
      };
      e.loadMoreForwardIfNecessary = function (a) {
        if (this._preventPreload) return;
        var b = c("PhotoStore").getAvailableRange(this._setID);
        b = b.offset + b.length - 1;
        var d = this._position + a;
        if (d > b && !c("PhotoStore").hasLooped(this._setID)) {
          b = c("PhotoStore").getCursorByIndexImmediate(this._setID, b);
          c("PhotoStore").fetchForward(
            this._setID,
            b,
            a,
            this._fetchCallback.bind(this)
          );
        } else this._preloadPhotosInRange(this._position + 1, d);
      };
      e.loadMoreBackwardIfNecessary = function (a) {
        if (this._preventPreload) return;
        var b = c("PhotoStore").getAvailableRange(this._setID),
          d = this._position - a;
        if (d < b.offset && !c("PhotoStore").hasLooped(this._setID)) {
          b = c("PhotoStore").getCursorByIndexImmediate(this._setID, b.offset);
          c("PhotoStore").fetchBackward(
            this._setID,
            b,
            a,
            this._fetchCallback.bind(this)
          );
        } else this._preloadPhotosInRange(d, this._position - 1);
      };
      e._loadMoreIfNecessary = function (a, b) {
        a
          ? this.loadMoreForwardIfNecessary(b)
          : this.loadMoreBackwardIfNecessary(b);
      };
      e.displayFirst = function () {
        var a = this;
        if (!this._viewer.isOpen()) return;
        c("PhotoStore").setPreFetchCallback(this._setID, function () {
          a._log("data_fetch_begin");
        });
        var d = function (b) {
          a._isPreloaded(b) || a._preload([b]),
            a._updateCallback && a._updateCallback(b);
        };
        c("PhotoStore").getByIndex(this._setID, this._position, d);
        this._reverse
          ? this.loadMoreBackwardIfNecessary(b.BUFFER_SIZE)
          : this.loadMoreForwardIfNecessary(b.BUFFER_SIZE);
      };
      e.backward = function () {
        this._page(this._reverse ? 1 : -1);
      };
      e.forward = function () {
        this._page(this._reverse ? -1 : 1);
      };
      e._log = function (a) {
        this._viewer.log(a);
      };
      return b;
    })(c("mixin")(c("ArbiterMixin")));
    Object.assign(a, { BUFFER_SIZE: 4 });
    g["default"] = a;
  },
  98
);
__d(
  "SpotlightViewer",
  ["cx", "Spotlight.react", "react"],
  function (a, b, c, d, e, f, g, h) {
    var i = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return a.apply(this, arguments) || this;
      }
      var d = b.prototype;
      d.render = function () {
        if (!this.props.open) return null;
        var a = "_n3";
        this.props.className != null && (a += " " + this.props.className);
        return i.jsx(
          c("Spotlight.react"),
          {
            onBeforeHide: this.props.onBeforeHide,
            onHide: this.props.onHide,
            rootClassName: this.props.rootClassName,
            shown: this.props.open,
            wash: this.props.wash,
            children: i.jsx("div", {
              className: a,
              onClick: this.props.onClick,
              role: "presentation",
              children: this.props.children,
            }),
          },
          "photoLayer"
        );
      };
      return b;
    })(i.Component);
    g["default"] = a;
  },
  98
);
__d(
  "SpotlightViewerClose",
  ["cx", "fbt", "TooltipLink.react", "emptyFunction", "joinClasses", "react"],
  function (a, b, c, d, e, f, g, h, i) {
    var j = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return a.apply(this, arguments) || this;
      }
      var d = b.prototype;
      d.render = function () {
        var a = this.props.position == "left" ? "_5wx3" : "_5wx4",
          b = j.jsx("span", { children: i._("Press Esc to close") });
        return j.jsx(c("TooltipLink.react"), {
          className: c("joinClasses")(
            "_4-o9 _50-m _51an",
            a,
            this.props.isFixed ? "_2chv" : ""
          ),
          onClick: this.props.onClick,
          onKeyPress: this.props.onKeyPress,
          tooltip: b,
          tabIndex: "0",
        });
      };
      return b;
    })(j.Component);
    a.defaultProps = {
      position: "right",
      isFixed: !1,
      onKeyPress: c("emptyFunction"),
    };
    g["default"] = a;
  },
  98
);
__d(
  "SpotlightViewerImage",
  ["cx", "Image.react", "XUISpinner.react", "react"],
  function (a, b, c, d, e, f, g, h) {
    var i = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b) {
        var c;
        c = a.call(this, b) || this;
        c.state = { loading: !0 };
        c.$3 = function () {
          c.setState({ loading: !1 });
        };
        return c;
      }
      var d = b.prototype;
      d.UNSAFE_componentWillReceiveProps = function (a) {
        a.src !== this.props.src && this.setState({ loading: !0 });
      };
      d.render = function () {
        return i.jsxs("div", {
          className: "_4-od",
          children: [this.$1(), this.$2()],
        });
      };
      d.$1 = function () {
        return !this.state.loading
          ? null
          : i.jsx(c("XUISpinner.react"), { className: "_enh", size: "large" });
      };
      d.$2 = function () {
        return i.jsx("div", {
          className: this.state.loading ? "_eni" : "",
          children: i.jsx(c("Image.react"), {
            onLoad: this.$3,
            src: this.props.src,
            style: {
              width: this.props.dimensions.x || "",
              height: this.props.dimensions.y || "",
            },
          }),
        });
      };
      return b;
    })(i.Component);
    g["default"] = a;
  },
  98
);
__d(
  "SpotlightViewerCoreMixin",
  [
    "PhotoLogger",
    "PhotoStore",
    "PhotoUtils",
    "PhotoViewState",
    "SpotlightViewerImage",
    "react",
  ],
  function (a, b, c, d, e, f) {
    var g,
      h = g || b("react");
    a = {
      _displayFirstPhoto: function () {
        b("PhotoStore").executePostCreate(
          this.props.setid,
          this.viewState.displayFirst.bind(this.viewState)
        );
      },
      _getInitialPosition: function () {
        var a;
        this.props.clearcache ||
          (a = b("PhotoStore").getIndexForID(
            this.props.setid,
            this.props.photoid
          ));
        a === void 0 &&
          (b("PhotoStore").clearSetCache(this.props.setid), (a = 0));
        return a;
      },
      __displayPhoto: function () {
        var a = this._getInitialPosition();
        this.viewState = new (b("PhotoViewState"))(this, this.props.setid, {
          position: a,
          preventPreload: this.__shouldPreventPhotoPreload,
          reverse: this.props.reverse,
          updateCallback: this._updatePhoto,
        });
        this.inform("open");
        this._displayFirstPhoto();
      },
      UNSAFE_componentWillMount: function () {
        (this._logger = new (b("PhotoLogger"))(this.getViewerID())),
          this.log("open_begin"),
          this.__displayPhoto();
      },
      componentDidMount: function () {
        this._enableSubscriptions && this._enableSubscriptions(),
          this.log("open_complete");
      },
      isOpen: function () {
        return this.state.open;
      },
      close: function () {
        if (!this.isOpen()) return;
        this.log("close_begin");
        this.setState({ open: !1 }, function () {
          this.inform("close"), this.log("close_complete");
        });
      },
      componentWillUnmount: function () {
        this.viewState = null;
      },
      _onClickViewport: function (a) {
        a ? this.viewState.forward() : this.viewState.backward();
      },
      _getMedia: function (a, c) {
        return h.jsx(b("SpotlightViewerImage"), {
          ref: "image",
          src: a.uri,
          dimensions: c.imageDimensions,
        });
      },
      _getCurrentFBID: function () {
        return b("PhotoUtils").getFBIDFromData(this.state.photoData);
      },
      _updatePhoto: function (a) {
        this.log("photo_change_begin"),
          this.setState({ photoData: a }, function () {
            this.inform("photo_change", this.state.photoData),
              this.log("photo_change_complete");
          });
      },
      getLogger: function () {
        return this._logger;
      },
      log: function (a) {
        this._logger && this._logger.logEvent(a);
      },
    };
    e.exports = a;
  },
  null
);
__d(
  "PhotoViewerDimensions",
  ["Event", "PhotoUtils", "Vector"],
  function (a, b, c, d, e, f) {
    var g = {
      verticalPadding: "number",
      horizontalPadding: "number",
      normalResDim: "object",
    };
    a = (function () {
      "use strict";
      function a(a) {
        this._verticalPadding = 40;
        this._horizontalPadding = 60;
        this._normalResDim = { x: 960, y: 960 };
        this._photoStripHeight = 88;
        for (var c in a) {
          if (!g[c])
            throw new Error(
              "Unsupported extraData value '" + c + "' should not be used"
            );
          typeof a[c] === g[c] && (this["_" + c] = a[c]);
        }
        this._listener = b("Event").listen(
          window,
          "resize",
          this._resetMaxStageDimensions.bind(this)
        );
      }
      var c = a.prototype;
      c.destroy = function () {
        this._listener.remove();
      };
      c.getStageDimensions = function (a) {
        var c = this.getMaxStageDimensions();
        c = new (b("Vector"))(Math.min(a.x, c.x), Math.min(a.y, c.y));
        var d = c.x / c.y;
        a = a.x / a.y;
        d < a ? (c.y = Math.round(c.x / a)) : (c.x = Math.round(c.y * a));
        return c;
      };
      c.getImageDimensionsForStage = function (a, c) {
        var d = a.x;
        a = a.y;
        var e = c.x;
        c = c.y;
        if (d >= e || a >= c) {
          var f = d / a,
            g = e / c;
          g < f
            ? ((d = e), (a = Math.round(e / f)))
            : g > f
            ? ((d = Math.round(c * f)), (a = c))
            : ((d = e), (a = c));
        }
        return new (b("Vector"))(d, a);
      };
      c.getImageDimensionsForMaxStage = function (a, c) {
        var d = a.x;
        a = a.y;
        var e = c.x;
        c = c.y - this._photoStripHeight;
        var f = d / a,
          g = e / c;
        d >= e || a >= c
          ? g < f
            ? ((d = e), (a = Math.round(e / f)))
            : g > f
            ? ((d = Math.round(c * f)), (a = c))
            : ((d = e), (a = c))
          : f < g
          ? (d = Math.round(a * f))
          : (a = Math.round(d / f));
        return new (b("Vector"))(d, a);
      };
      c.getMaxStageDimensions = function () {
        this._maxStageDimensions ||
          (this._maxStageDimensions = new (b("Vector"))(
            b("Vector").getViewportDimensions().x - this._horizontalPadding,
            b("Vector").getViewportDimensions().y - this._verticalPadding
          ));
        return this._maxStageDimensions;
      };
      c.getMaxStageDimensionsWithoutPadding = function () {
        this._maxStageDimensions ||
          (this._maxStageDimensions = new (b("Vector"))(
            b("Vector").getViewportDimensions().x,
            b("Vector").getViewportDimensions().y
          ));
        return this._maxStageDimensions;
      };
      c._resetMaxStageDimensions = function () {
        this._maxStageDimensions = null;
      };
      c.getBestFitImageFromPhoto = function (a, c) {
        var d = null;
        a = b("PhotoUtils").getImagesFromData(a);
        a = a.sort(function (a, b) {
          return b.width - a.width;
        });
        window.devicePixelRatio &&
          window.devicePixelRatio > 1 &&
          (c = new (b("Vector"))(
            c.x * window.devicePixelRatio,
            c.y * window.devicePixelRatio
          ));
        for (var e = 0; e < a.length; e++)
          (!d || a[e].width >= c.x || a[e].height >= c.y) && (d = a[e]);
        return d;
      };
      c.getOriginalDimensionsFromPhoto = function (a) {
        a = b("PhotoUtils").getOriginalImageFromData(a);
        return new (b("Vector"))(a.width, a.height);
      };
      c.getBestFitDimensionsFromPhoto = function (a, c) {
        a = this.getBestFitImageFromPhoto(a, c);
        return new (b("Vector"))(a.width, a.height);
      };
      c.getVerticalPadding = function () {
        return this._verticalPadding;
      };
      c.getHorizontalPadding = function () {
        return this._horizontalPadding;
      };
      return a;
    })();
    e.exports = a;
  },
  null
);
__d(
  "SpotlightViewerStageResizer",
  ["Event", "MessengerEnvironment", "SubscriptionsHandler", "Vector"],
  function (a, b, c, d, e, f) {
    var g = 520;
    a = (function () {
      "use strict";
      function a(a, c) {
        (this._subscriptionsHandler = new (b("SubscriptionsHandler"))()),
          this._subscriptionsHandler.addSubscriptions(
            b("Event").listen(
              window,
              "resize",
              this._resetStageDimensions.bind(this)
            )
          ),
          (this._dimensions = a),
          (this._minHeight = c.minHeight || g),
          (this._minWidth = c.minWidth || g),
          this._resetStageDimensions();
      }
      var c = a.prototype;
      c.destroy = function () {
        (this._dimensions = null), this._subscriptionsHandler.release();
      };
      c._resetStageDimensions = function () {
        this._currentStageDimensions = new (b("Vector"))(
          this._minWidth,
          this._minHeight
        );
      };
      c.getImageAndStageDimensions = function (a) {
        a = this._dimensions.getBestFitDimensionsFromPhoto(
          a,
          this._dimensions.getMaxStageDimensions()
        );
        var c = b("MessengerEnvironment").messengerui
          ? this._dimensions.getMaxStageDimensionsWithoutPadding(a)
          : this._dimensions.getStageDimensions(a);
        this._currentStageDimensions = new (b("Vector"))(
          Math.max(c.x, this._minWidth, this._currentStageDimensions.x),
          Math.max(c.y, this._minHeight, this._currentStageDimensions.y)
        );
        c = b("MessengerEnvironment").messengerui
          ? this._dimensions.getImageDimensionsForMaxStage(
              a,
              this._currentStageDimensions
            )
          : this._dimensions.getImageDimensionsForStage(
              a,
              this._currentStageDimensions
            );
        return {
          stageDimensions: this._currentStageDimensions,
          imageDimensions: c,
        };
      };
      c.getCurrentStageDimensions = function () {
        return this._currentStageDimensions;
      };
      return a;
    })();
    e.exports = a;
  },
  null
);
__d(
  "SpotlightViewerDimensionMixin",
  [
    "MessengerEnvironment",
    "PhotoViewerDimensions",
    "SpotlightViewerStageResizer",
  ],
  function (a, b, c, d, e, f, g) {
    a = {
      getInitialState: function () {
        this._dimensions = new (c("PhotoViewerDimensions"))({
          verticalPadding: this.props.verticalPadding,
          horizontalPadding: this.props.horizontalPadding,
        });
        this._resizer = new (c("SpotlightViewerStageResizer"))(
          this._dimensions,
          { minHeight: this.props.minHeight, minWidth: this.props.minWidth }
        );
        return {
          maxStageDimensions: c("MessengerEnvironment").messengerui
            ? this._dimensions.getMaxStageDimensionsWithoutPadding()
            : this._dimensions.getMaxStageDimensions(),
        };
      },
      componentWillUnmount: function () {
        this._resizer && this._resizer.destroy(),
          (this._resizer = null),
          this._dimensions && this._dimensions.destroy(),
          (this._dimensions = null);
      },
      getMedia: function () {
        if (this.state.photoData) {
          if (
            this.state.photoData.__typename &&
            this.state.photoData.__typename === "MessageVideo"
          )
            return this._getVideo();
          var a = this._resizer.getImageAndStageDimensions(
              this.state.photoData
            ),
            b = this._dimensions.getBestFitImageFromPhoto(
              this.state.photoData,
              this.state.maxStageDimensions
            );
          return this._getMedia(b, a);
        } else return null;
      },
      getDimensions: function () {
        return this._dimensions;
      },
      getStageDimensions: function () {
        if (this.state.photoData)
          return this._resizer.getImageAndStageDimensions(this.state.photoData)
            .stageDimensions;
        else
          return c("MessengerEnvironment").messengerui
            ? this._dimensions.getMaxStageDimensionsWithoutPadding()
            : this._dimensions.getMaxStageDimensions();
      },
      getImageDimensions: function () {
        return !this.state.photoData
          ? null
          : this._resizer.getImageAndStageDimensions(this.state.photoData)
              .imageDimensions;
      },
      onResize: function () {
        if (c("MessengerEnvironment").messengerui) {
          var a = this._dimensions.getMaxStageDimensionsWithoutPadding();
          this.setState({ maxStageDimensions: a, width: a.x });
        } else
          this.setState({
            maxStageDimensions: this._dimensions.getMaxStageDimensions(),
          });
      },
    };
    g["default"] = a;
  },
  98
);
__d(
  "SpotlightViewerInit",
  ["DOM", "ReactDOM"],
  function (a, b, c, d, e, f) {
    a = {
      render: function (a, c) {
        var d = b("DOM").create("div");
        a = b("ReactDOM").render(a, d, "SpotlightViewerInit.js");
        b("DOM").appendContent(document.body, d);
        a.subscribeOnce("close", function () {
          b("ReactDOM").unmountComponentAtNode(d), b("DOM").remove(d), c && c();
        });
        return a;
      },
    };
    e.exports = a;
  },
  null
);
__d(
  "SpotlightViewerThumbnailMixin",
  ["PhotoStore", "Vector"],
  function (a, b, c, d, e, f, g) {
    a = {
      _getInitialPhotoData: function () {
        var a = c("PhotoStore").getIndexForID(
          this.props.setid,
          this.props.photoid
        );
        a = c("PhotoStore").getByIndexImmediate(this.props.setid, a);
        return a ? a : this._getThumbnailPhotoData();
      },
      _getThumbnailPhotoData: function () {
        if (!this.props.dimensions || !this.props.thumbsrc) return null;
        var a = { id: this.props.photoid };
        for (var b = 0; b < this.props.dimensions.length; ++b) {
          var d = c("Vector").deserialize(this.props.dimensions[b]);
          a["image" + b] = {
            width: d.x,
            height: d.y,
            uri: this.props.thumbsrc,
          };
        }
        return a;
      },
    };
    g["default"] = a;
  },
  98
);
__d(
  "SpotlightViewport",
  [
    "csx",
    "cx",
    "Locale",
    "Parent",
    "ReactDOM",
    "Vector",
    "clearTimeout",
    "joinClasses",
    "react",
    "setTimeout",
  ],
  function (a, b, c, d, e, f, g, h, i) {
    var j = d("react"),
      k = 0.2,
      l = { NONE: null, FORWARD: 1, BACKWARD: 2 };
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, e;
        for (var f = arguments.length, g = new Array(f), h = 0; h < f; h++)
          g[h] = arguments[h];
        return (
          ((b = e = a.call.apply(a, [this].concat(g)) || this),
          (e.state = { currentActiveSection: l.NONE, active: !0 }),
          (e.$2 = function (a) {
            var b = d("ReactDOM").findDOMNode(
              babelHelpers.assertThisInitialized(e)
            );
            a = c("Vector").getEventPosition(a.nativeEvent);
            e.props.fadeInNOut === !0 &&
              (e.$3(a) ? c("clearTimeout")(e.timer) : e.$1());
            var f = null;
            if (b instanceof HTMLElement) {
              var g = c("Vector").getElementPosition(b);
              b =
                e.props.useWidth === !0
                  ? e.props.stageDimensions.x
                  : c("Vector").getElementDimensions(b).x;
              a = a.x - g.x;
              g = a / b;
              d("Locale").isRTL() ? (f = g > 1 - k) : (f = g < k);
            }
            f === !0
              ? e.setState({ currentActiveSection: l.BACKWARD })
              : e.setState({ currentActiveSection: l.FORWARD });
          }),
          (e.$4 = function (a) {
            var b = e.state.currentActiveSection == l.FORWARD;
            a = a.target;
            d("Parent").bySelector(a, "._51an") ||
              (e.props.onClick && e.props.onClick(b));
          }),
          (e.$1 = function () {
            e.setState({ active: !0 }),
              e.props.fadeInNOut === !0 &&
                (c("clearTimeout")(e.timer),
                (e.timer = c("setTimeout")(e.$5, 1e3)));
          }),
          (e.$5 = function () {
            e.setState({ active: !1 });
          }),
          b) || babelHelpers.assertThisInitialized(e)
        );
      }
      var e = b.prototype;
      e.componentDidMount = function () {
        this.$1();
      };
      e.componentWillUnmount = function () {
        this.props.fadeInNOut === !0 && c("clearTimeout")(this.timer);
      };
      e.$3 = function (a) {
        return a.y < 70 || a.y > this.props.stageDimensions.y - 70;
      };
      e.makeActive = function () {
        this.$1();
      };
      e.render = function () {
        var a =
          "_4-of" +
          (!this.state.active && !this.props.active ? " _50-l" : "") +
          (this.state.currentActiveSection === l.BACKWARD ? " _516a" : "") +
          (this.state.currentActiveSection === l.FORWARD ? " _516b" : "") +
          (this.props.showLoadingIndicator ? " _51jp" : "");
        this.props.className != null &&
          this.props.className !== "" &&
          (a = c("joinClasses")(a, this.props.className));
        var b = {};
        this.props.stageDimensions &&
          ((b.height = this.props.stageDimensions.y),
          this.props.useWidth === !0 &&
            (b.width = this.props.stageDimensions.x));
        return j.jsxs("div", {
          className: a,
          onClick: this.$4,
          onMouseEnter: this.$1,
          onMouseLeave: this.$5,
          onMouseMove: this.$2,
          role: "presentation",
          style: b,
          children: [
            this.props.children,
            j.jsxs("div", {
              className: "_4-og",
              children: [
                j.jsx("span", { className: "_4-oh" }),
                this.props.media,
                j.jsx("div", { className: "_4-oi" }),
              ],
            }),
          ],
        });
      };
      return b;
    })(j.Component);
    g["default"] = a;
  },
  98
);
__d(
  "GroupsPollDeleteOptionMutation",
  ["GroupsPollDeleteOptionMutation.graphql", "RelayModern", "RelayRuntime"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = h !== void 0 ? h : (h = b("GroupsPollDeleteOptionMutation.graphql"));
    function a(a, b) {
      var e = {
          input: {
            actor_id: b.viewer.actor.id,
            question_option_id: b.optionID,
          },
        },
        f = function (a) {
          var d = a.get(b.questionID);
          if (!d) return;
          d =
            d &&
            c("RelayRuntime").ConnectionHandler.getConnection(
              d,
              "PollAttachmentComponent_options"
            );
          if (!d) return;
          c("RelayRuntime").ConnectionHandler.deleteNode(d, b.optionID);
          var e = parseInt(d.getValue("count"), 10);
          d.setValue(e - 1, "count");
          a["delete"](b.optionID);
        },
        g = function () {
          b.callbacks && b.callbacks.onSuccess();
        },
        h = function (a) {
          b.callbacks && b.callbacks.onFailure(a);
        };
      return d("RelayModern").commitMutation(a, {
        mutation: i,
        updater: f,
        optimisticUpdater: f,
        variables: e,
        onCompleted: g,
        onError: h,
      });
    }
    g.commit = a;
  },
  98
);
__d(
  "PollAddOptionMutation",
  ["PollAddOptionMutation.graphql", "RelayModern"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = 0,
      j = h !== void 0 ? h : (h = b("PollAddOptionMutation.graphql"));
    function a(a, b) {
      var c = b.imageUpload && b.imageUpload.fbid;
      c = {
        input: {
          actor_id: b.viewer.actor.id,
          question_id: b.question.id,
          option_text: b.optionText,
          option_page_id: b.optionPageID,
          image_id: c,
        },
        first: b.numOptionsToShow,
      };
      var e = function () {
          var a = b.question.author.id === b.viewer.actor.id,
            c = "client:newOption:" + i++,
            d = b.imageUpload && {
              image: {
                height: b.imageUpload.thumbnail_height,
                width: b.imageUpload.thumbnail_width,
                uri: b.imageUpload.thumbnail_uri,
              },
            };
          c = {
            node: {
              id: c,
              text_with_entities: { text: b.optionText },
              associated_image: d,
              viewer_has_voted: !a,
              profile_voters: {
                count: a ? 0 : 1,
                edges: a
                  ? []
                  : [{ node: babelHelpers["extends"]({}, b.viewer.actor) }],
              },
            },
          };
          d = b.question.options.edges.map(function (c) {
            var d = babelHelpers["extends"]({}, c.node);
            b.question.response_method === "CHOOSE_ONE" &&
              c.node.viewer_has_voted &&
              !a &&
              ((d.viewer_has_voted = !1),
              (d.profile_voters = { count: c.node.profile_voters.count - 1 }));
            return { node: d };
          });
          d.push(c);
          return {
            question_add_option: {
              question: {
                id: b.question.id,
                options: { count: b.question.options.count + 1, edges: d },
              },
              question_options_edge: c,
            },
          };
        },
        f = function (a) {
          b.callbacks && b.callbacks.onSuccess();
        },
        g = function (a) {
          b.callbacks && b.callbacks.onFailure(a);
        };
      return d("RelayModern").commitMutation(a, {
        mutation: j,
        variables: c,
        optimisticResponse: e(),
        onCompleted: f,
        onError: g,
      });
    }
    g.commit = a;
  },
  98
);
__d(
  "PollAttachmentUtils",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = function (a) {
      return a === "CHOOSE_ONE" || a === "IMAGE_CHOOSE_ONE";
    };
    b = function (a) {
      return a === "CHOOSE_MULTIPLE" || a === "IMAGE_CHOOSE_MULTIPLE";
    };
    f.isOpinionPoll = a;
    f.isEigenpoll = b;
  },
  66
);
__d(
  "PollAddVoteMutation",
  [
    "PollAddVoteMutation.graphql",
    "PollAttachmentUtils",
    "RelayModern",
    "RelayRuntime",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = h !== void 0 ? h : (h = b("PollAddVoteMutation.graphql"));
    function a(a, b) {
      var e = {
          input: {
            actor_id: b.viewer.actor.id,
            question_id: b.question.id,
            option_id: b.option.id,
            rank: b.rank,
          },
          first: b.numOptionsToShow,
        },
        f = function (a) {
          a = a.get(b.question.id);
          if (!a) return;
          a =
            a &&
            c("RelayRuntime").ConnectionHandler.getConnection(
              a,
              "PollAttachmentComponent_options"
            );
          if (!a) return;
          a = a && a.getLinkedRecords("edges");
          if (!a) return;
          a = a.map(function (a) {
            return a && a.getLinkedRecord("node");
          });
          a.forEach(function (a) {
            if (!a) return;
            var d =
              a &&
              c("RelayRuntime").ConnectionHandler.getConnection(
                a,
                "PollAttachmentComponent_options_profile_voters"
              );
            if (!d) return;
            a.getValue("id") === b.option.id
              ? (a.setValue(!0, "viewer_has_voted"),
                d.setValue(b.option.profile_voters.count + 1, "count"))
              : a.getValue("viewer_has_voted") &&
                (a.setValue(!1, "viewer_has_voted"),
                d.setValue(parseInt(d.getValue("count"), 10) - 1, "count"));
          });
        },
        g = function (a) {
          if (
            d("PollAttachmentUtils").isOpinionPoll(b.question.response_method)
          )
            f(a);
          else {
            a = a.get(b.option.id);
            if (!a) return;
            var e =
              a &&
              c("RelayRuntime").ConnectionHandler.getConnection(
                a,
                "PollAttachmentComponent_options_profile_voters"
              );
            if (!e) return;
            a.setValue(!0, "viewer_has_voted");
            e.setValue(b.option.profile_voters.count + 1, "count");
          }
        },
        h = function () {
          b.callbacks && b.callbacks.onSuccess();
        },
        j = function (a) {
          b.callbacks && b.callbacks.onFailure(a);
        };
      return d("RelayModern").commitMutation(a, {
        mutation: i,
        optimisticUpdater: g,
        variables: e,
        onCompleted: h,
        onError: j,
      });
    }
    g.commit = a;
  },
  98
);
__d(
  "PollRemoveVoteMutation",
  ["PollRemoveVoteMutation.graphql", "RelayModern", "RelayRuntime"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = h !== void 0 ? h : (h = b("PollRemoveVoteMutation.graphql"));
    function a(a, b) {
      var e = {
          input: {
            actor_id: b.viewer.actor.id,
            question_id: b.question.id,
            option_id: b.option.id,
          },
          first: b.numOptionsToShow,
        },
        f = function (a) {
          a = a.get(b.option.id);
          if (!a) return;
          var d =
            a &&
            c("RelayRuntime").ConnectionHandler.getConnection(
              a,
              "PollAttachmentComponent_options_profile_voters"
            );
          if (!d) return;
          a && a.setValue(!1, "viewer_has_voted");
          d && d.setValue(b.option.profile_voters.count - 1, "count");
        },
        g = function () {
          b.callbacks && b.callbacks.onSuccess();
        },
        h = function (a) {
          b.callbacks && b.callbacks.onFailure(a);
        };
      return d("RelayModern").commitMutation(a, {
        mutation: i,
        optimisticUpdater: f,
        variables: e,
        onCompleted: g,
        onError: h,
      });
    }
    g.commit = a;
  },
  98
);
__d(
  "ReportGroupsPollOptionMutation",
  ["RelayModern", "ReportGroupsPollOptionMutation.graphql"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = h !== void 0 ? h : (h = b("ReportGroupsPollOptionMutation.graphql"));
    function a(a, b) {
      var c = {
          input: { actor_id: b.viewer.actor.id, poll_option_id: b.optionID },
        },
        e = function () {
          b.callbacks && b.callbacks.onSuccess();
        },
        f = function (a) {
          b.callbacks && b.callbacks.onFailure(a);
        };
      return d("RelayModern").commitMutation(a, {
        mutation: i,
        variables: c,
        onCompleted: e,
        onError: f,
      });
    }
    g.commit = a;
  },
  98
);
__d(
  "SpotlightPollOptionImageViewer",
  [
    "cx",
    "ArbiterMixin",
    "Facepile.react",
    "SpotlightViewer",
    "SpotlightViewerClose",
    "SpotlightViewerCoreMixin",
    "SpotlightViewerDimensionMixin",
    "SpotlightViewerThumbnailMixin",
    "SpotlightViewport",
    "TextWithEntities.react",
    "XUIText.react",
    "createReactClass_DEPRECATED",
    "react",
  ],
  function (a, b, c, d, e, f, g, h) {
    var i = d("react"),
      j = 20,
      k = 28,
      l = 10;
    a = c("createReactClass_DEPRECATED")({
      displayName: "SpotlightPollOptionImageViewer",
      mixins: [
        c("ArbiterMixin"),
        d("SpotlightViewerCoreMixin"),
        c("SpotlightViewerThumbnailMixin"),
        c("SpotlightViewerDimensionMixin"),
      ],
      getViewerID: function () {
        return this.props.setid;
      },
      getInitialState: function () {
        return { photoData: this._getThumbnailPhotoData(), open: !0 };
      },
      render: function () {
        var a = this.getMedia(),
          b = this.getStageDimensions(),
          d = this.props.useloadingindicator && !this.state.photoData;
        return i.jsx(c("SpotlightViewer"), {
          onHide: this.close,
          open: this.state.open,
          rootClassName: this.props.rootClassName,
          children: i.jsxs(c("SpotlightViewport"), {
            className: "_wma",
            media: a,
            onClick: this._onClickViewport,
            showLoadingIndicator: d,
            snapToPhoto: this.props.snapToPhoto,
            stageDimensions: b,
            useWidth: !0,
            children: [
              i.jsx(c("SpotlightViewerClose"), { onClick: this.close }),
              this._renderOptionData(),
            ],
          }),
        });
      },
      _renderOptionData: function () {
        return i.jsxs("div", {
          className: "_50-m _wmb",
          children: [
            this._renderOptionText(),
            this._renderFacepile(),
            this._renderMore(),
          ],
        });
      },
      _renderOptionText: function () {
        var a = this.props.optionText.split(/\r?\n/)[0].slice(0, j);
        a.length < this.props.optionText.length && (a += "...");
        return i.jsx(c("TextWithEntities.react"), {
          className: "_wmc",
          renderEmoticons: !1,
          renderEmoji: !0,
          text: a,
        });
      },
      _renderFacepile: function () {
        return i.jsx("div", {
          className: "_wmd",
          children: i.jsx(c("Facepile.react"), {
            onFaceClick: this._onFaceClick,
            numFaces: l,
            profiles: this.props.profiles,
            showHovercard: !1,
            size: k,
          }),
        });
      },
      _renderMore: function () {
        var a = this.props.voterCount - l;
        if (a <= 0) return null;
        a = "+" + a + " voters";
        return i.jsx("div", {
          className: "_wme",
          children: i.jsx(c("XUIText.react"), { children: a }),
        });
      },
      _onFaceClick: function () {
        this.close();
      },
    });
    b = a;
    g["default"] = b;
  },
  98
);
__d(
  "GroupsPollOptionActions",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = "remove";
    b = "reportToGroupAdmins";
    c = "reportToFacebook";
    f.REMOVE = a;
    f.REPORT_TO_GROUP_ADMINS = b;
    f.REPORT_TO_FACEBOOK = c;
  },
  66
);
__d(
  "GroupsPollOptionStrings",
  ["fbt", "invariant", "GroupsPollOptionActions"],
  function (a, b, c, d, e, f, g, h, i) {
    "use strict";
    function a(a) {
      switch (a) {
        case d("GroupsPollOptionActions").REMOVE:
          return h._("Remove option");
        case d("GroupsPollOptionActions").REPORT_TO_GROUP_ADMINS:
          return h._("Report to group admins");
        case d("GroupsPollOptionActions").REPORT_TO_FACEBOOK:
          return h._("Report to Facebook");
        default:
          return i(!1, "All menu options must have a UI string");
      }
    }
    function b() {
      return h._("Delete option");
    }
    function c() {
      return h._(
        "Are you sure that you want to delete this option from the poll?"
      );
    }
    function e() {
      return h._("Delete");
    }
    function f() {
      return h._("Report to group admins");
    }
    function j() {
      return h._(
        "Are you sure that you want to report this poll option to the group admins?"
      );
    }
    function k() {
      return h._("Report");
    }
    function l() {
      return h._("Your report has been submitted to the group admins.");
    }
    g.getLabel = a;
    g.getConfirmRemoveDialogTitle = b;
    g.getConfirmRemoveDialogBody = c;
    g.getConfirmRemoveDialogButtonText = e;
    g.getConfirmReportDialogTitle = f;
    g.getConfirmReportDialogBody = j;
    g.getConfirmReportDialogButtonText = k;
    g.getReportSuccessfulDialogBody = l;
  },
  98
);
__d(
  "GroupsPollAttachmentDeleteOption.react",
  [
    "cx",
    "fbt",
    "ix",
    "BUIButton.react",
    "GroupsPollOptionStrings",
    "Image.react",
    "SimpleXUIDialog",
    "react",
  ],
  function (a, b, c, d, e, f, g, h, i, j) {
    "use strict";
    var k = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, c;
        for (var e = arguments.length, f = new Array(e), g = 0; g < e; g++)
          f[g] = arguments[g];
        return (
          ((b = c = a.call.apply(a, [this].concat(f)) || this),
          (c.$1 = function () {
            d("SimpleXUIDialog").showConfirm(
              d("GroupsPollOptionStrings").getConfirmRemoveDialogBody(),
              d("GroupsPollOptionStrings").getConfirmRemoveDialogTitle(),
              c.$2,
              {
                confirmBtnTxt: d(
                  "GroupsPollOptionStrings"
                ).getConfirmRemoveDialogButtonText(),
              }
            );
          }),
          (c.$2 = function (a) {
            var b = c.props.optionID || "";
            a && c.props.onDelete(b);
          }),
          b) || babelHelpers.assertThisInitialized(c)
        );
      }
      var e = b.prototype;
      e.render = function () {
        return k.jsx("div", {
          className: "_1mh_",
          children: k.jsx(c("BUIButton.react"), {
            icon: k.jsx(c("Image.react"), { src: j("363585") }),
            label: i._("Delete poll option"),
            labelIsHidden: !0,
            use: "flatWhite",
            onClick: this.$1,
          }),
        });
      };
      return b;
    })(k.Component);
    g["default"] = a;
  },
  98
);
__d(
  "NFXContextFactory",
  ["FBLogger", "uuidv4"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function h(a) {
      var b = function (a, b) {
        if (b !== null) return b;
      };
      return JSON.stringify(
        {
          reportable_ent_token: a.reportable_ent_token,
          story_location: a.story_location,
          entry_point: a.entry_point,
          type: a.type,
          session_id: c("uuidv4")(),
          initial_action_name: a.initial_action_name,
          reportable_id: a.reportable_id,
          page_id: a.page_id,
          responsible_id: a.responsible_id,
        },
        b
      );
    }
    function a(a) {
      var b = a.reportable_ent_token,
        c = a.story_location,
        d = a.entry_point;
      d = d === void 0 ? "unknown" : d;
      a = a.responsible_id;
      return h({
        type: 1,
        story_location: c,
        entry_point: d,
        reportable_ent_token: b,
        responsible_id: a,
      });
    }
    function b(a) {
      var b = a.reportable_id,
        c = a.page_id;
      a = a.storyLocation;
      return h({
        type: 6,
        story_location: a,
        entry_point: "unknown",
        initial_action_name: "POLITICAL_ARCHIVE_REPORT_AD",
        reportable_id: b,
        page_id: c,
      });
    }
    function d(a) {
      var b = a.reportable_ent_token,
        c = a.story_location,
        d = a.entry_point;
      d = d === void 0 ? "unknown" : d;
      var e = a.initial_action_name;
      a = a.page_id;
      return h({
        type: 11,
        story_location: c,
        entry_point: d,
        reportable_ent_token: b,
        initial_action_name: e,
        page_id: a,
      });
    }
    function e(a) {
      var b = a.reportable_ent_token,
        d = a.story_location,
        e = a.entry_point;
      e = e === void 0 ? "unknown" : e;
      a = a.initial_action_name;
      b === null &&
        c("FBLogger")("frx").warn(
          "null or undefined reportable_ent_token in forEntReportable, location=%s entry_point=%s",
          d,
          e
        );
      return h({
        type: 2,
        story_location: d,
        entry_point: e,
        reportable_ent_token: b,
        initial_action_name: a,
      });
    }
    g.withEntMessageThread = a;
    g.withPoliticalArchiveAds = b;
    g.withEntReportableOnPage = d;
    g.withEntReportable = e;
  },
  98
);
__d(
  "XRapidReportingDialogController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/rapid_report/", {
      __asyncDialog: { type: "Int" },
      context: { type: "String", required: !0 },
      preselectedtagid: { type: "Enum", enumType: 1 },
    });
  },
  null
);
__d(
  "FRXURI",
  ["ActorURI", "NFXContextFactory", "XRapidReportingDialogController"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function a(a) {
      var b = a.reportable_ent_token,
        e = a.story_location,
        f = a.entry_point;
      f = f === void 0 ? "unknown" : f;
      var g = a.responsible_id;
      a = a.actor_id;
      b = d("NFXContextFactory").withEntMessageThread({
        reportable_ent_token: b,
        story_location: e,
        entry_point: f,
        responsible_id: g,
      });
      e = c("XRapidReportingDialogController")
        .getURIBuilder()
        .setString("context", b)
        .getURI();
      a != null && (e = d("ActorURI").create(e, a));
      return e;
    }
    function b(a) {
      var b = a.reportable_ent_token,
        e = a.story_location,
        f = a.entry_point;
      f = f === void 0 ? "unknown" : f;
      var g = a.initial_action_name,
        h = a.actor_id;
      a = a.page_id;
      b = d("NFXContextFactory").withEntReportableOnPage({
        reportable_ent_token: b,
        story_location: e,
        entry_point: f,
        initial_action_name: g,
        page_id: a,
      });
      e = c("XRapidReportingDialogController")
        .getURIBuilder()
        .setString("context", b)
        .getURI();
      h != null && (e = d("ActorURI").create(e, h));
      return e;
    }
    function e(a) {
      var b = a.reportable_ent_token,
        e = a.story_location,
        f = a.entry_point;
      f = f === void 0 ? "unknown" : f;
      var g = a.initial_action_name;
      a = a.actor_id;
      b = d("NFXContextFactory").withEntReportable({
        reportable_ent_token: b,
        story_location: e,
        entry_point: f,
        initial_action_name: g,
      });
      e = c("XRapidReportingDialogController")
        .getURIBuilder()
        .setString("context", b)
        .getURI();
      a != null && (e = d("ActorURI").create(e, a));
      return e;
    }
    function f(a, b) {
      return btoa(a + ":" + b);
    }
    g.withEntMessageThread = a;
    g.withEntReportableOnPage = b;
    g.withEntReportable = e;
    g.getReportableToken = f;
  },
  98
);
__d(
  "GroupsPollOptionActionMenu.react",
  [
    "cx",
    "AsyncRequest",
    "ContextualDialogArrow",
    "FRXURI",
    "GroupsPollOptionActions",
    "GroupsPollOptionStrings",
    "PopoverMenu.react",
    "ReactXUIMenu",
    "SimpleXUIDialog",
    "XUIDotsButton.react",
    "react",
  ],
  function (a, b, c, d, e, f, g, h) {
    "use strict";
    var i = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, e;
        for (var f = arguments.length, g = new Array(f), h = 0; h < f; h++)
          g[h] = arguments[h];
        return (
          ((b = e = a.call.apply(a, [this].concat(g)) || this),
          (e.state = { popoverMenuIsShown: !1 }),
          (e.$4 = function () {
            e.setState(function (a) {
              return { popoverMenuIsShown: !a.popoverMenuIsShown };
            });
          }),
          (e.$6 = function () {
            d("SimpleXUIDialog").showConfirm(
              d("GroupsPollOptionStrings").getConfirmRemoveDialogBody(),
              d("GroupsPollOptionStrings").getConfirmRemoveDialogTitle(),
              e.$9,
              {
                confirmBtnTxt: d(
                  "GroupsPollOptionStrings"
                ).getConfirmRemoveDialogButtonText(),
              }
            );
          }),
          (e.$9 = function (a) {
            a && e.props.onDelete(e.props.optionID);
          }),
          (e.$8 = function () {
            var a = d("FRXURI").withEntReportable({
              reportable_ent_token: e.props.optionID,
              story_location: "group",
              entry_point: "groups_poll",
            });
            a = new (c("AsyncRequest"))().setURI(a);
            a.send();
          }),
          (e.$7 = function () {
            d("SimpleXUIDialog").showConfirm(
              d("GroupsPollOptionStrings").getConfirmReportDialogBody(),
              d("GroupsPollOptionStrings").getConfirmReportDialogTitle(),
              e.$10,
              {
                confirmBtnTxt: d(
                  "GroupsPollOptionStrings"
                ).getConfirmReportDialogButtonText(),
              }
            );
          }),
          (e.$10 = function (a) {
            a && e.props.onReportToAdmin(e.props.optionID);
          }),
          b) || babelHelpers.assertThisInitialized(e)
        );
      }
      var e = b.prototype;
      e.render = function () {
        return i.jsx("div", {
          className: this.$1(),
          children: i.jsx(c("PopoverMenu.react"), {
            alignh: "right",
            layerBehaviors: [c("ContextualDialogArrow")],
            menu: i.jsx(c("ReactXUIMenu"), { children: this.$2(this.$3()) }),
            onShow: this.$4,
            onHide: this.$4,
            children: i.jsx(c("XUIDotsButton.react"), {}),
          }),
        });
      };
      e.$2 = function (a) {
        var b = this;
        return a.map(function (a) {
          return i.jsx(
            c("ReactXUIMenu").Item,
            {
              className: "_6sye",
              icon: b.$5(a[0]),
              value: a[0],
              onClick: a[1],
              children: d("GroupsPollOptionStrings").getLabel(a[0]),
            },
            a[0]
          );
        });
      };
      e.$5 = function (a) {
        switch (a) {
          case d("GroupsPollOptionActions").REMOVE:
            return i.jsx("div", { className: "_6syc _6syd" });
          case d("GroupsPollOptionActions").REPORT_TO_GROUP_ADMINS:
            return i.jsx("div", { className: "_6syc _6sub" });
          case d("GroupsPollOptionActions").REPORT_TO_FACEBOOK:
            return i.jsx("div", { className: "_6syc _6suc" });
          default:
            return null;
        }
      };
      e.$1 = function () {
        return this.state.popoverMenuIsShown ? "_6kx9" : "_69c3";
      };
      e.$3 = function () {
        var a = [];
        this.props.showDelete &&
          a.push([d("GroupsPollOptionActions").REMOVE, this.$6]);
        this.props.showReportToAdmin &&
          a.push([
            d("GroupsPollOptionActions").REPORT_TO_GROUP_ADMINS,
            this.$7,
          ]);
        a.push([d("GroupsPollOptionActions").REPORT_TO_FACEBOOK, this.$8]);
        return a;
      };
      return b;
    })(i.Component);
    g["default"] = a;
  },
  98
);
__d(
  "ComposerEntryPointRef",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      ADD_PHOTO_IN_TIMELINE_TAB: "add_photo_in_timeline_tab",
      ADD_PHOTO_IN_ALBUM: "add_photo_in_album",
      ADD_PHOTO_IN_PHOTOS_SECTION: "add_photo_in_photos_section",
      ADD_TO_STORY: "add_to_story",
      ADS_CREATE: "ads_create",
      ADS_POWER_EDITOR: "ads_power_editor",
      AGGREGATED_GROUP_STORY: "aggregated_group_story",
      AGGREGATED_LINK_STORY: "aggregated_link_story",
      AGGREGATED_STORY: "aggregated_story",
      ALBUM_PERMALINK_INLINE_COMPOSER: "album_permalink_inline_composer",
      ANNIVERSARY_VIDEO: "anniversary_video",
      AMA_PAGES_GOAL_CARD: "ama_pages_goal_card",
      AYMT: "aymt",
      AYMT_HOMEPAGE_PANEL: "aymt_homepage_panel",
      AYMT_NOTIFICATIONS_TIP: "aymt_notifications_tip",
      BILLING_WIZARD: "billing_wizard",
      BCMP_DEAL: "branded_content_creator_deal_view",
      BCMP_PROFILE_PITCHDECK: "branded_content_creator_profile_pithcdeck",
      BIZ_WEB_HOME: "biz_web_home",
      BIZ_WEB_HOME_CREATE_POST: "biz_web_home_create_post",
      BIZ_WEB_HOME_CREATE_REEL: "biz_web_home_create_reel",
      BIZ_WEB_HOME_GO_LIVE: "biz_web_home_go_live",
      BIZ_WEB_HOME_RECENT_POSTS_CREATE_POST:
        "biz_web_home_recent_posts_create_post",
      BIZ_WEB_HOME_MULTI_ASSETS_CREATE_POST:
        "biz_web_home_multi_assets_create_post",
      BIZ_WEB_ACTIVITY_AYMT_POSTS: "biz_web_activity_aymt_posts",
      BIZ_WEB_BM_ONBOARDING: "biz_web_bm_onboarding",
      BIZ_WEB_SCHEDULE_POST_REMINDER: "biz_web_schedule_post_reminder",
      BIZ_WEB_DUPLICATE_POSTS_AYMT: "biz_web_duplicate_posts_aymt",
      BIZ_WEB_HOME_AB_TESTING_NULL_STATE_CREATION:
        "biz_ab_testing_null_state_button",
      BIZ_WEB_HOME_CREATE_PHOTO_VIDEO: "biz_web_home_create_photo_video",
      BIZ_WEB_HOME_POSTS_AYMT: "biz_web_posts_home_posts_aymt",
      BIZ_WEB_HOME_MOMENTS_CARD: "biz_web_home_moments_card",
      BIZ_WEB_HOME_CALENDAR_CARD: "biz_web_home_calendar_card",
      BIZ_WEB_HOME_CALENDAR_CARD_WEEK_NULL_STATE_POST_CREATION:
        "biz_web_home_calendar_card_week_null_state_post_creation",
      BIZ_WEB_HOME_NEWS_FEED_SHARE_USING_BUSINESS_SUITE:
        "biz_web_home_news_feed_share_using_business_suite",
      BIZ_WEB_HOME_POST_ACTIVITY_CARD_DUPLICATE_BUTTON:
        "biz_web_home_post_activity_card_duplicate_button",
      BIZ_WEB_HOME_POST_ACTIVITY_CARD_PUBLISHED_POSTS:
        "biz_web_home_post_activity_card_published_posts",
      BIZ_WEB_HOME_POST_ACTIVITY_CARD_SCHEDULED_POSTS:
        "biz_web_home_post_activity_card_scheduled_posts",
      BIZ_WEB_HOME_POST_ACTIVITY_CARD_DRAFT_POSTS:
        "biz_web_home_post_activity_card_draft_posts",
      BIZ_WEB_HOME_TYSD: "biz_web_home_tysd",
      BIZ_WEB_HOME_TYSD_STORIES: "biz_web_home_tysd_stories",
      BIZ_WEB_HOME_STORIES_CARD: "biz_web_home_stories_card",
      BIZ_WEB_HOME_UPDATES_CARD_DRAFT_POSTS_EDIT:
        "biz_web_home_updates_card_draft_posts_edit",
      BIZ_WEB_HOME_UPDATES_CARD_DRAFT_POSTS_NULL_STATE:
        "biz_web_home_updates_card_draft_posts_null_state",
      BIZ_WEB_HOME_POST_TO_MULTIPLE_PAGES:
        "biz_web_home_post_to_multiple_pages",
      BIZ_WEB_PUBLISHED_POSTS: "biz_web_published_posts",
      BIZ_WEB_SCHEDULED_POSTS: "biz_web_scheduled_posts",
      BIZ_WEB_CONTENT_MANAGER_POSTS: "biz_web_content_manager_posts",
      BIZ_WEB_CONTENT_MANAGER_DUPLICATE_POSTS:
        "biz_web_content_manager_duplicate_posts",
      BIZ_WEB_CONTENT_MANAGER_PUBLISHED_POSTS:
        "biz_web_content_manager_published_posts",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_POSTS:
        "biz_web_content_manager_scheduled_posts",
      BIZ_WEB_CONTENT_MANAGER_DRAFT_POSTS:
        "biz_web_content_manager_draft_posts",
      BIZ_WEB_CONTENT_MANAGER_FEED_AND_GRID:
        "biz_web_content_manager_feed_and_grid",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR: "biz_web_content_manager_calendar",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_POST_TO_MULTIPLE_PAGES:
        "biz_web_content_manager_calendar_post_to_multiple_pages",
      BIZ_WEB_CONTENT_MANAGER_POST_TO_MULTIPLE_PAGES:
        "biz_web_content_manager_post_to_multiple_pages",
      BIZ_WEB_CONTENT_MANAGER_DRAFT_EDIT: "biz_web_content_manager_draft_edit",
      BIZ_WEB_CONTENT_MANAGER_DRAFT_EDIT_FROM_URL:
        "biz_web_content_manager_draft_edit_from_url",
      BIZ_WEB_CONTENT_MANAGER_FB_FEED_VIEW:
        "biz_web_content_manager_fb_feed_view",
      BIZ_WEB_CONTENT_MANAGER_FB_FEED_VIEW_EDIT_COMPOSER:
        "biz_web_content_manager_fb_feed_view_edit_composer",
      BIZ_WEB_CONTENT_MANAGER_IG_FEED_VIEW:
        "biz_web_content_manager_ig_feed_view",
      BIZ_WEB_CONTENT_MANAGER_IG_GRID_VIEW:
        "biz_web_content_manager_ig_grid_view",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_VIEW:
        "biz_web_content_manager_calendar_view",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_MOMENTS:
        "biz_web_content_manager_calendar_moments",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_CUSTOM_MOMENTS:
        "biz_web_content_manager_calendar_custom_moments",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_RIGHT_PANEL_GOALS_CARD:
        "biz_web_content_manager_calendar_right_panel_goals_card",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_RIGHT_PANEL_GOALS_CARD_CREATE_STORY:
        "biz_web_content_manager_calendar_right_panel_goals_card_create_story",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_RIGHT_PANEL_GOALS_CARD_CREATE_REEL:
        "biz_web_content_manager_calendar_right_panel_goals_card_create_reel",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_RIGHT_PANEL_GOALS_CARD_SCHEDULE_POST:
        "biz_web_content_manager_calendar_right_panel_goals_card_schedule_post",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_RIGHT_PANEL_GOALS_CARD_SCHEDULE_STORY:
        "biz_web_content_manager_calendar_right_panel_goals_card_schedule_story",
      BIZ_WEB_CONTENT_MANAGER_ACTIVE_STORIES_TAB_POSTS:
        "biz_web_content_manager_active_stories_tab_posts",
      BIZ_WEB_CONTENT_MANAGER_ARCHIVE_STORIES_TAB_POSTS:
        "biz_web_content_manager_archive_stories_tab_posts",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_STORIES_TAB_POSTS:
        "biz_web_content_manager_scheduled_stories_tab_posts",
      BIZ_WEB_CONTENT_MANAGER_PHOTOS_TAB: "biz_web_content_manager_photos_tab",
      BIZ_WEB_CONTENT_MANAGER_MENTIONS_AND_TAGS_TAB:
        "biz_web_content_manager_mentions_and_tags_tab",
      BIZ_WEB_CONTENT_MANAGER_SERIES_UPLOAD_TRAILER:
        "biz_web_content_manager_series_upload_trailer",
      BIZ_WEB_UNIVERSAL_CREATION: "biz_web_universal_creation",
      BIZ_WEB_UNIVERSAL_CREATION_MENU: "biz_web_universal_creation_menu",
      BIZ_WEB_GLOBAL_CREATE_BUTTON: "biz_web_global_create_button",
      BIZ_WEB_GLOBAL_CREATE_MENU: "biz_web_global_create_menu",
      BIZ_WEB_BUSINESS_PROFILE_COMPLETION_METER:
        "biz_web_business_profile_completion_meter",
      BIZ_WEB_BUSINESS_PROFILE_COMPLETION_METER_STORIES_ITEM:
        "biz_web_business_profile_completion_meter_stories_item",
      BIZ_WEB_BUSINESS_CREATIVE_ASSET_DETAIL_VIEW_POSTS_CREATION:
        "biz_web_business_creative_asset_detail_view_posts_creation",
      BIZ_WEB_BUSINESS_CREATIVE_ASSET_LIST_VIEW_POSTS_CREATION:
        "biz_web_business_creative_asset_list_view_posts_creation",
      BIZ_WEB_SCHEDULE_POST_AYMT: "biz_web_schedule_post_aymt",
      BIZ_WEB_SCHEDULE_POST_JEWEL_NOTIF: "biz_web_schedule_post_jewel_notif",
      BIZ_WEB_HOME_GOAL_CARD: "biz_web_home_goal_card",
      BIZ_WEB_INSIGHTS_GOAL_CARD: "biz_web_insights_goal_card",
      BIZ_WEB_INSIGHTS_AUDIENCE: "biz_web_insights_audience",
      BIZ_WEB_SIMPLIFIED_COMPOSER_UPDATE_CARD:
        "biz_web_simplified_composer_update_card",
      BIZ_WEB_UPCOMING_MOMENTS_POST_REMINDER_AYMT:
        "biz_web_upcoming_moments_post_reminder_aymt",
      BIZ_WEB_COMPOSER_AFTER_PARTY_SCHEDULE:
        "biz_web_composer_after_party_schedule",
      BIZ_WEB_COMPOSER_MESSENGER_MARKETING_CREATE_POST:
        "biz_web_composer_messenger_marketing_create_post",
      BIZ_WEB_HOME_GLOBAL_REEL_CREATION: "biz_web_home_global_reel_creation",
      BIZ_WEB_VIDEO_COMPOSER_DEFAULT_SFV_TO_REEL:
        "biz_web_video_composer_default_sfv_to_reel",
      BIZ_WEB_VIDEO_COMPOSER_CREATE_REEL_POST_PUBLISH:
        "biz_web_video_composer_create_reel_post_publish",
      BIZ_WEB_STORY_COMPOSER_PUBLISH_AS_REEL:
        "biz_web_story_composer_publish_as_reel",
      BIZ_WEB_ADS_CREATION_POST_PICKER_CREATE_REEL:
        "biz_web_ads_creation_post_picker_create_reel",
      BIZ_WEB_RESHARE_POSTS_MODAL_CTA: "biz_web_reshare_posts_modal_cta",
      BIZ_WEB_AB_TESTING_VIDEO_UPLOAD: "biz_web_testing_video_upload",
      BIZ_WEB_ACTIVITY_AYMT_STORIES: "biz_web_activity_aymt_stories",
      BIZ_WEB_CONTENT_MANAGER_ACTIVE_STORIES:
        "biz_web_content_manager_active_stories",
      BIZ_WEB_CONTENT_MANAGER_ARCHIVE_STORIES:
        "biz_web_content_manager_archive_stories",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_STORIES:
        "biz_web_content_manager_scheduled_stories",
      BIZ_WEB_CONTENT_MANAGER_ACTIVE_STORIES_NULL_TABLE:
        "biz_web_content_manager_active_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_ARCHIVE_STORIES_NULL_TABLE:
        "biz_web_content_manager_archive_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_STORIES_NULL_TABLE:
        "biz_web_content_manager_scheduled_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_ACTIVE_FB_STORIES_NULL_TABLE:
        "biz_web_content_manager_active_fb_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_ACTIVE_IG_STORIES_NULL_TABLE:
        "biz_web_content_manager_active_ig_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_FB_STORIES_NULL_TABLE:
        "biz_web_content_manager_scheduled_fb_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_IG_STORIES_NULL_TABLE:
        "biz_web_content_manager_scheduled_ig_stories_null_table",
      BIZ_WEB_CONTENT_MANAGER_COREX_INSPO:
        "biz_web_content_manager_corex_inspo",
      BIZ_WEB_CONTENT_MANAGER_POSTS_FROM_SIMILAR_BUSINESSES_HSCROLL_MODAL:
        "biz_web_content_manager_posts_from_similar_businesses_hscroll_modal",
      BIZ_WEB_HOME_CALENDAR_CARD_STORIES_CREATION:
        "biz_web_home_calendar_card_stories_creation",
      BIZ_WEB_HOME_CALENDAR_CARD_WEEK_NULL_STATE_STORIES_CREATION:
        "biz_web_home_calendar_card_week_null_state_stories_creation",
      BIZ_WEB_HOME_STORIES: "biz_web_home_stories",
      BIZ_WEB_HOME_STORIES_AYMT: "biz_web_home_stories_aymt",
      BIZ_WEB_CONTENT_MANAGER_PUBLISHED_POSTS_TAB_STORIES:
        "biz_web_content_manager_published_posts_tab_stories",
      BIZ_WEB_CONTENT_MANAGER_SCHEDULED_POSTS_TAB_STORIES:
        "biz_web_content_manager_scheduled_posts_tab_stories",
      BIZ_WEB_CONTENT_MANAGER_DRAFT_POSTS_TAB_STORIES:
        "biz_web_content_manager_draft_posts_tab_stories",
      BIZ_WEB_CONTENT_MANAGER_FEED_AND_GRID_TAB_STORIES:
        "biz_web_content_manager_feed_and_grid_tab_stories",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_TAB_STORIES:
        "biz_web_content_manager_calendar_tab_stories",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_MOMENTS_STORIES:
        "biz_web_content_manager_calendar_moments_stories",
      BIZ_WEB_CONTENT_MANAGER_CALENDAR_CUSTOM_MOMENTS_STORIES:
        "biz_web_content_manager_calendar_custom_moments_stories",
      BIZ_WEB_UNIVERSAL_CREATION_STORIES: "biz_web_universal_creation_stories",
      BIZ_WEB_GLOBAL_CREATE_STORIES: "biz_web_global_create_stories",
      BIZ_WEB_BUSINESS_CREATIVE_ASSET_DETAIL_VIEW_STORIES_CREATION:
        "biz_web_business_creative_asset_detail_view_stories_creation",
      BIZ_WEB_BUSINESS_CREATIVE_ASSET_LIST_VIEW_STORIES_CREATION:
        "biz_web_business_creative_asset_list_view_stories_creation",
      BIZ_WEB_AUDIENCE_GROWTH_CARD: "biz_web_audience_growth_card",
      BIZ_WEB_AUDIENCE_GROWTH_FB_POST_IG_LINK:
        "biz_web_audience_growth_fb_post_ig_link",
      BIZ_WEB_FRIEND_INVITER: "biz_web_friend_inviter",
      BIZ_WEB_REACTION_INVITER: "biz_web_reaction_inviter",
      BIZ_WEB_MORE_TOOLS_CREATE_POST: "biz_web_more_tools_create_post",
      BIZ_WEB_MORE_TOOLS_CREATE_STORY: "biz_web_more_tools_create_story",
      BIZ_WEB_MORE_TOOLS_CREATE_LIVE: "biz_web_more_tools_create_live",
      BIZ_WEB_MORE_TOOLS_CREATE_CREATOR_CAMPAIGN:
        "biz_web_more_tools_create_creator_campaign",
      BIZ_WEB_SELF_VIEW: "biz_web_self_view",
      BIZ_WEB_TAGGED_PRODUCT_AUTO_SCHEDULED_POST:
        "biz_web_tagged_product_auto_scheduled_post",
      BIZ_WEB_CLIPS_LIBRARY_ALL_CLIPS_EDIT_CLIP:
        "biz_web_clips_library_all_clips_edit_clip",
      BIZ_WEB_CLIPS_LIBRARY_CLIPS_BY_STREAM_EDIT_CLIP:
        "biz_web_clips_library_clips_by_stream_edit_clip",
      BIZ_WEB_CONTENT_MANAGER_VIDEOS_YOU_CAN_CROSSPOST:
        "biz_web_content_manager_videos_you_can_crosspost",
      BIZ_WEB_FTUX_COMMENTS_CREATE_POST_BUTTON:
        "biz_web_ftux_comments_create_post_button",
      BIZ_WEB_FTUX_CREATE_POST_ACTION: "biz_web_ftux_create_post_action",
      BIZ_WEB_FTUX_SCHEDULE_POST_ACTION: "biz_web_ftux_schedule_post_action",
      BIZ_WEB_PO_CREATE_POST_ACTION: "biz_web_po_create_post_action",
      BIZ_WEB_PO_SCHEDULE_POST_ACTION: "biz_web_po_schedule_post_action",
      BIZ_WEB_JEWEL_TAB_SUGGESTIONS: "biz_web_jewel_tab_suggestions",
      BIZ_WEB_PO_GET_STARTED_CREATE_POST_ACTION:
        "biz_web_po_get_started_create_post_action",
      BIZ_WEB_PO_GET_STARTED_SCHEDULE_POST_ACTION:
        "biz_web_po_get_started_schedule_post_action",
      BIZ_WEB_GYB_GET_STARTED_CREATE_POST_ACTION:
        "biz_web_gyb_get_started_create_post_action",
      BIZ_WEB_GYB_GET_STARTED_SCHEDULE_POST_ACTION:
        "biz_web_gyb_get_started_schedule_post_action",
      PPT_PUBLISHED_POSTS: "ppt_published_posts",
      PPT_SCHEDULED_POSTS: "ppt_scheduled_posts",
      PPT_DRAFTS: "ppt_drafts",
      BIZ_TOOLS_PUBLISHED_POSTS_TAB_EDIT_COMPOSER:
        "biz_tools_published_posts_tab_edit_composer",
      BIZ_TOOLS_PUBLISHED_FB_POSTS_TAB_EDIT_COMPOSER:
        "biz_tools_published_fb_posts_tab_edit_composer",
      BIZ_TOOLS_PUBLISHED_IG_POSTS_TAB_EDIT_COMPOSER:
        "biz_tools_published_ig_posts_tab_edit_composer",
      BIZ_TOOLS_SCHEDULED_FB_POSTS_TAB_EDIT_COMPOSER:
        "biz_tools_scheduled_fb_posts_tab_edit_composer",
      BIZ_TOOLS_SCHEDULED_IG_POSTS_TAB_EDIT_COMPOSER:
        "biz_tools_scheduled_ig_posts_tab_edit_composer",
      BIZ_TOOLS_SCHEDULED_FB_STORIES_TAB_EDIT_COMPOSER:
        "biz_tools_scheduled_fb_stories_tab_edit_composer",
      BIZ_TOOLS_SCHEDULED_IG_STORIES_TAB_EDIT_COMPOSER:
        "biz_tools_scheduled_ig_stories_tab_edit_composer",
      BIZ_WEB_MARKET_PLANNER_NOTE: "biz_web_market_planner_note",
      BRANDS_COLLAB_MANAGER_COMPOSER: "brands_collab_manager_composer",
      BIZ_SUITE_SETTINGS_INSTAGRAM_BC_PARTNER_SEARCH:
        "biz_suite_settings_instagram_bc_partner_search",
      CREATOR_STUDIO_COMPOSER: "creator_studio_composer",
      CREATOR_STUDIO_GAMING_VIDEO_EDIT_CLIP:
        "creator_studio_gaming_video_edit_clip",
      CREATOR_STUDIO_COMPOSER_POST_TAGGER:
        "creator_studio_composer_post_tagger",
      CREATOR_STUDIO_COMPOSER_XY_TAGGER: "creator_studio_composer_xy_tagger",
      CREATOR_STUDIO_COMPOSER_BRAND_TAGGER:
        "creator_studio_composer_brand_tagger",
      CREATOR_STUDIO_GAMING_VIDEO_CREATOR_SHARE_STREAM_STATS:
        "creator_studio_gaming_video_creator_share_stream_stats",
      CREATOR_STUDIO_INSPIRATION_HUB: "creator_studio_inspiration_hub",
      CREATOR_STUDIO_STREAMER_DASHBOARD_COMMUNITY_ENGAGEMENT:
        "creator_studio_streamer_dashboard_community_engagement",
      CREATOR_STUDIO_TEXT_BASED_VIDEO_EDITOR:
        "creator_studio_text_based_video_editor",
      CS_IG_CROSSPOST_REEL: "cs_ig_crosspost_reel",
      COMMERCE_MANAGER_CREATOR_MANAGEMENT:
        "commerce_manager_creator_management",
      COMMERCE_MANAGER_IG_CHANNEL_SETTINGS:
        "commerce_manager_ig_channel_settings",
      COMMERCE_MANAGER_SHOP_BUILDER_EDIT_SECTION_VIDEO_UPLOAD:
        "commerce_manager_shop_builder_edit_section_video_upload",
      COMMERCE_MANAGER_COMMUNITY_CONTENT_STORIES:
        "commerce_manager_community_content_stories",
      COMMERCE_MANAGER_COMMUNITY_CONTENT_POST_CREATION:
        "commerce_manager_community_content_post_creation",
      COMMERCE_MANAGER_COMMUNITY_CONTENT_STORY_CREATION:
        "commerce_manager_community_content_story_creation",
      COMMERCE_MANAGER_DROPS_PUBLISHED_POST_EDIT:
        "commerce_manager_drops_published_post_edit",
      COMMERCE_MANAGER_DROPS_SCHEDULED_POST_EDIT:
        "commerce_manager_drops_scheduled_post_edit",
      COMMERCE_MANAGER_DROPS_DRAFT_POST_EDIT:
        "commerce_manager_drops_draft_post_edit",
      COMMERCE_MANAGER_DROPS_POST_CREATION:
        "commerce_manager_drops_post_creation",
      COMMERCE_MANAGER_DROPS_STORY_CREATION:
        "commerce_manager_drops_story_creation",
      COMMERCE_MANAGER_DROPS_SHOPPING_EVENT_PAGE_CREATION:
        "commerce_manager_drops_shopping_event_page_creation",
      COMMERCE_MANAGER_OFFERS_POST_CREATION:
        "commerce_manager_offers_post_creation",
      BIZ_SHARING_PLAYGROUND: "biz_sharing_playground",
      BIZ_SHARING_PLAYGROUND_STORIES: "biz_sharing_playground_stories",
      BIZ_TAGGED_COMMUNITY_CONTENT_STORIES:
        "biz_tagged_community_content_stories",
      FB_COMPOSER_SCHEDULE_POST_AT_HOT_TIME:
        "fb_composer_schedule_post_at_hot_time",
      FB_COMPOSER_CROSSPOST_ON_FB_AND_IG: "fb_composer_crosspost_on_fb_and_ig",
      FB_COMPOSER_SHARE_TO_GROUPS: "fb_composer_share_to_groups",
      XPOST_ON_FB_AND_IG_TIP: "xpost_on_fb_and_ig_tip",
      BIRTHDAY_REMINDER_LIST: "birthday_reminder_list",
      BLOOD_DONATIONS: "blood_donations",
      BULK_UPLOAD: "bulk_upload",
      CANDIDATE_VIDEOS: "candidate_videos",
      CELEBRATE_FRIENDS: "celebrate_friends",
      CHECKIN_STORY: "checkin_story",
      CLIMATE_PLEDGE: "climate_pledge",
      COMPOSER_PREFILL: "composer_prefill",
      CONSTITUENT_INSIGHTS_CAROUSEL: "constituent_insights_carousel",
      CORONAVIRUS_HUB: "coronavirus_hub",
      COVER_PHOTO: "cover_photo",
      CREATE_COUPON_DIALOG: "create_coupon_dialog",
      CREATIVE_ASSISTANT: "creative_assistant",
      CREATOR_STUDIO_TRAY: "creator_studio_tray",
      CRISIS: "crisis",
      COMMUNITY_HELP_DRIVE: "community_help_drive",
      CS_BULK_UPLOAD_PANEL: "cs_bulk_upload_panel",
      CS_CONTENT_LIBRARY: "cs_content_library",
      CS_CONTENT_LIBRARY_UPLOAD_VIDEOS: "cs_content_library_upload_videos",
      CS_CONTENT_LIBRARY_BULK_UPLOAD: "cs_content_library_bulk_upload",
      CS_CONTENT_LIBRARY_BULK_EDIT: "cs_content_library_bulk_edit",
      CS_CPX_COMPOSER_DEFAULT_SFV_TO_REEL:
        "cs_cpx_composer_default_sfv_to_reel",
      CS_REELS_PERCEPTION_NOTICE: "cs_reels_perception_notice",
      CS_GLOBAL_BASIC_POST: "cs_global_basic_post",
      CS_GLOBAL_BULK_UPLOAD: "cs_global_bulk_upload",
      CS_GLOBAL_GO_LIVE: "cs_global_go_live",
      CS_GLOBAL_MULTIPOST: "cs_global_multipost",
      CS_GLOBAL_UPLOAD_VIDEO: "cs_global_upload_video",
      CS_GLOBAL_UPLOAD_REEL: "cs_global_upload_reel",
      CS_HOME_BASIC_POST: "cs_home_basic_post",
      CS_HOME_BULK_UPLOAD: "cs_home_bulk_video",
      CS_HOME_GO_LIVE: "cs_home_go_live",
      CS_HOME_ALERTS_CARD: "cs_home_alerts_card",
      CS_HOME_RECOMMENDATIONS_CARD: "cs_home_recommendations_card",
      CS_HOME_MULTIPOST: "cs_home_multipost",
      CS_HOME_UPLOAD_VIDEO: "cs_home_upload_video",
      CS_HOME_UPLOAD_REEL: "cs_home_upload_reel",
      CS_UNIFIED_COMPOSER_OPTOUT: "cs_unified_composer_optout",
      CS_INSTAGRAM_CONTENT_LIBRARY: "cs_instagram_content_library",
      CS_MONETIZATION_BONUSES_STARS_REELS_SEEDING_BONUS:
        "cs_monetization_bonuses_stars_reels_seeding_bonus",
      CS_MULTIPOST_ANNOUNCEMENT_CARD: "cs_multipost_annoucement_card",
      CS_BULK_UPLOAD_ANNOUNCEMENT_CARD: "cs_bulk_upload_annoucement_card",
      CS_CONTENT_SHOW_EPISODE_UPLOAD: "cs_content_show_episode_upload",
      CS_CONTENT_SHOW_TRAILER_UPLOAD: "cs_content_show_trailer_upload",
      CS_REFERENCE_LIBRARY_UPLOAD: "cs_reference_library_upload",
      CS_AB_ADVANCED_CREATION_IMAGE: "cs_ab_advanced_creation_image",
      CS_AB_ADVANCED_CREATION_LINK: "cs_ab_advanced_creation_link",
      CS_AB_ADVANCED_CREATION_TEXT: "cs_ab_advanced_creation_text",
      CS_AB_TESTING_VIDEO_UPLOAD: "cs_ab_testing_video_upload",
      CS_DEFAULT_ENTRYPOINT: "cs_default_entrypoint",
      CS_CONTENT_LIBRARY_SCHEDULED_POST: "cs_content_library_scheduled_post",
      CS_CONTENT_LIBRARY_DRAFT_POST: "cs_content_library_draft_post",
      CS_CONTENT_LIBRARY_PUBLISHED_POST: "cs_content_library_published_post",
      CS_VOICES_PODCAST: "cs_voics_podcast",
      CS_BULLETIN_SHARE_PUBLICATION_LINK: "cs_bulletin_share_publication_link",
      CS_INSTAGRAM_LEFT_NAV_STORIES_BUTTON:
        "cs_instagram_left_nav_stories_button",
      CS_FB_STORIES: "cs_fb_stories",
      CS_BULLETIN_ARTICLE_STORIES_BUILDER:
        "cs_bulletin_article_stories_builder",
      CULTURAL_MOMENT_CARD: "cultural_moment_card",
      DEVELOPER_SITE: "developer_site",
      DIGEST_EMAIL_CONSTITUENT_INSIGHTS_CAROUSEL:
        "digest_email_constituent_insights_carousel",
      DIGEST_EMAIL_TRENDING_POLITICAL_ISSUE:
        "digest_email_trending_political_issue",
      DIM_SUM: "dim_sum",
      EDIT_COMPOSER: "edit_composer",
      EDIT_DIALOG: "edit_dialog",
      EDIT_DIALOG_GROUP: "edit_dialog_group",
      EDIT_SEND_MESSAGE_CTA: "edit_send_message_cta",
      ELECTION_PAGE_MEGAPHONE: "election_page_megaphone",
      ENDORSEMENT_MODULE: "endorsement_module",
      EXAMPLE: "example",
      EVENT: "event",
      EVENT_ABOUT: "event_about",
      EVENT_ALL_MEDIA: "event_all_media",
      EVENT_INSIGHTS_SHARE_TIP: "event_insights_share_tip",
      EVENT_SHARE_POST: "event_share_post",
      EVENT_PHOTOS: "event_photos",
      EVENT_TOUR: "event_tour",
      EVENT_VIDEOS: "event_videos",
      EVENT_WALL: "event_wall",
      EVENT_LIVE_CTA: "event_live_cta",
      EVENT_LIVE_CTA_FEED_UNIT: "events_live_cta_feed_unit",
      FEED: "feed",
      FEED_INLINE: "feed_inline",
      FEED_INSPIRATIONS: "feed_inspirations",
      FEED_SPROUTS: "feed_sprouts",
      FEED_SPROUTS_DIALOG: "feed_sprout_dialog",
      FEED_STICKY_COMPOSER: "feed_sticky_composer",
      FEED_STORY: "feed_story",
      FEED_TO_STORY_RESHARE: "feed_to_story_reshare",
      FEED_TO_STORY_RESHARE_NOW: "feed_to_story_reshare_now",
      FEED_VOICE_SWITCHER: "feed_voice_switcher",
      FEEDX: "feedx",
      FEEDX_SPROUTS: "feedx_sprouts",
      COMET_SPROUTS: "comet_sprouts",
      FINCH_PAGE_CHECKIN: "finch_page_checkin",
      FLASHBACK: "flashback",
      FRIENDS_DAY: "friends_day_2016",
      FRIENDVERSARY: "FRIENDVERSARY",
      FUN_FACTS_COLLECTION: "fun_facts_collection",
      FUN_FACTS_CTA: "fun_facts_cta",
      FUN_FACTS_HSCROLL: "fun_facts_hscroll",
      FUN_FACTS_SELF_CTA: "fun_facts_self_cta",
      FUN_FACTS_SELF_PROTILE: "fun_facts_self_protile",
      FUN_FACTS_SELF_PROTILE_NULL: "fun_facts_self_protile_null",
      FUNDRAISER_PAGE: "fundraiser_page",
      FUNDRAISER_PAGE_FEED: "fundraiser_page_feed",
      FUNDRAISER_QUICK_PROMOTION: "fundraiser_quick_promotion",
      GAMEFACE: "gameface",
      GAMES_VIDEO_DESTINATION: "games_video_destination",
      GAMES_VIDEO_RERUN_MANAGER: "games_video_rerun_manager",
      GAMES_VIDEO_STREAMER_DASHBOARD: "games_video_streamer_dashboard",
      GAMES_VIDEO_STREAMER_DASHBOARD_MBS: "games_video_streamer_dashboard_mbs",
      GAMING_VIDEO_STREAMER_DASHBOARD_CURRENT_BROADCAST:
        "gaming_video_streamer_dashboard_current_broadcast",
      GOODWILL_CELEBRATION: "goodwill_celebration",
      GOODWILL_THROWBACK_PERMALINK: "goodwill_throwback_permalink",
      GOODWILL_THROWBACK_PROMOTION: "goodwill_throwback_promotion",
      GOV_DIGEST: "gov_digest",
      GROUP: "group",
      GROUP_CHALLENGE: "group_challenge",
      GROUP_FANDOM_RADAR: "group_fandom_radar",
      GROUP_PUBLISH_BAR_ANONYMOUS_AUTHOR: "publisher_bar_anonymous_author",
      GROUP_LIVING_ROOM_TAB: "group_living_room_tab",
      GROUP_RECOMMENDATIONS_TAB: "group_recommendations_tab",
      HOVERCARD_CONICS: "hovercard_conics",
      INSIGHTS_POST_DIRECT_BOOST: "insights_post_direct_boost",
      INSIGHTS_POST_SPONSORED_TABLE: "insights_post_sponsored_table",
      INSPIRATIONS: "inspirations",
      INSTANT_GAMES_DVR: "instant_games_dvr",
      INTRO_POST_FEATURE_ENTRY_POINT: "intro_post",
      ISSUE_MODULE: "issue_module",
      LEGACY_FEED: "legacy_feed",
      LIBERTY_VIDEO_COMPOSER: "liberty_video_composer",
      LIBERTY_PAGES_COMPOSER: "liberty_pages_composer",
      LIBERTY_MULTIPOST_UPSELL_BANNER: "liberty_multipost_upsell_banner",
      LIVE: "live",
      LIVE_BROADCAST: "live_broadcast",
      LIVE_CONTROL_PANEL: "live_control_panel",
      LIVE_MAP: "live_map",
      LIVE_VIDEO_PLATFORM_DIALOG: "live_video_platform_dialog",
      LIVE_VIDEO_PRODUCER: "live_video_producer",
      LIVING_ROOM: "living_room",
      MEDIA_MANAGER: "media_manager",
      MEGAPHONE: "megaphone",
      MK_DRAW_AND_GUESS_REQUEST_CTA: "mk_draw_and_guess_request_cta",
      MOMENTS: "moments",
      MOVIES: "movies",
      MTOUCH_LOCAL_SERP: "mtouch_local_serp",
      MTOUCH_PRIVACY_CHECKUP: "mtouch_privacy_checkup",
      NATIVE_GROUP: "native_group",
      NATIVE_PAGE: "native_page",
      NATIVE_PERMALINK: "native_permalink",
      OFFERS_COMPOSER: "offers_composer",
      ORIGIN_STORY: "origin_story",
      OTHER: "other",
      PAGE_ADMIN_GUIDANCE: "page_admin_gudiance",
      PAGE_ADMIN_JOURNEY: "page_admin_journey",
      PAGE_ADMIN_LIVING_ROOM_FEED_QP: "page_admin_living_room_feed_qp",
      PAGE_BUSINESS_ACADEMY: "page_business_academy",
      PAGE_BUSINESS_MEMORIES_FEED: "page_business_memories_feed",
      PAGE_COMPLETION_METER: "page_completion_meter",
      PAGE_ONBOARDING: "page_onboarding",
      PAGES_COMPOSER_BULK_UPLOAD_UPSELL: "pages_composer_bulk_upload_upsell",
      PAGE_COMPOSER_EPISODE_CARD: "page_composer_episode_card",
      PAGE_COMPOSER_UPLOAD_VIDEO_CARD: "page_composer_upload_video_card",
      PAGE_CONTENT_TAB_ADS_POSTS: "page_content_tab_ads_posts",
      PAGE_CONTENT_TAB_ADS_POSTS_DEPRECATION:
        "page_content_tab_ads_posts_deprecation",
      PAGE_CONTENT_ADS_ASSET_VIDEO_LIBRARY:
        "page_content_ads_asset_video_library",
      PAGE_CONTENT_TAB_CANVAS: "page_content_tab_canvas",
      PAGE_CONTENT_TAB_DRAFTS: "page_content_tab_drafts",
      PAGE_CONTENT_TAB_DRAFT_EDIT: "page_content_tab_draft_edit",
      PAGE_CONTENT_TAB_LIVING_ROOM_MEGAPHONE:
        "page_content_tab_living_room_megaphone",
      PAGE_CONTENT_TAB_PLAYLIST_DETAILS: "page_content_tab_playlist_details",
      PAGE_CONTENT_TAB_PUBLISHED_POSTS: "page_content_tab_published_posts",
      PAGE_CONTENT_TAB_REFERENCE_LIBRARY: "page_content_tab_reference_library",
      PAGE_CONTENT_TAB_SCHEDULED_POSTS: "page_content_tab_scheduled_posts",
      PAGE_CONTENT_TAB_SEASON_DETAILS: "page_content_tab_season_details",
      PAGE_CONTENT_TAB_VIDEO_LIBRARY: "page_content_tab_video_library",
      PAGE_CONTENT_TAB_VIDEO_LIBRARY_LIVING_ROOM_CTA:
        "page_content_tab_video_library_living_room_cta",
      PAGE_CONTENT_TAB_VIDEO_LIBRARY_PREMIERE:
        "page_content_tab_video_library_premiere",
      PAGE_CONTENT_TAB_PUBLISHED_POSTS_OPTED_OUT:
        "page_content_tab_published_posts_opted_out",
      PAGE_CONTENT_TAB_SCHEDULED_POSTS_OPTED_OUT:
        "page_content_tab_scheduled_posts_opted_out",
      PROFESSIONAL_DASHBOARD_AB_TESTING_TOOL:
        "professional_dashboard_ab_testing_tool",
      AYMT_REMINDER_CREATE_PAGE_POST_WITH_WA_CTA:
        "aymt_reminder_create_page_post_with_wa_cta",
      AYMT_NBS_ADD_WA_BUTTON: "aymt_nbs_add_wa_button",
      AYMT_CREATE_PAGE_POST_WITH_CTWA_CTA:
        "aymt_create_page_post_with_ctwa_cta",
      PAGE_HOME_RECOMMENDATION_REACTION_CARD:
        "page_home_recommendation_reaction_card",
      PAGE_LAUNCH_POINT: "page_launch_point",
      PAGE_LEFT_NAV_CREATE_POST_BUTTON: "page_left_nav_create_post_button",
      PAGE_MENU: "page_menu",
      PAGE_PLUGIN: "page",
      PAGE_POSTS_TO_PAGE: "page_posts_to_page",
      PAGE_PUBLISHING_TOOL_VCK: "page_publishing_tool_vck",
      PAGE_RECOMMENDATION_ACTION_BAR: "page_recommendation_action_bar",
      PAGE_RECOMMENDATION_TAB: "page_recommendation_tab",
      PAGE_SUGGESTED_ACTION: "page_suggested_action",
      PAGE_TIPS: "page_tips",
      PAGE_TRAILER: "page_trailer",
      PAGE_WHATSAPP_INTERSTITIAL_MODAL: "page_whatsapp_interstitial_modal",
      PAGE_WHATSAPP_POSTING_UPSELL: "page_whatsapp_posting_upsell",
      PAGE_MESSENGER_AFTER_PARTY: "page_messenger_after_party",
      PAGE_MESSENGER_TOOLS_HUB: "page_messenger_tools_hub",
      PAGES_ARCHIVED_STORY_CARD_VIEWER: "pages_archived_story_card_viewer",
      PAGES_COVER_VIDEO: "pages_cover_video",
      PAGES_DRAFT_POST_REMINDERS: "pages_draft_post_reminders",
      PAGES_EVENTS_TAB: "pages_events_tab",
      PAGES_FEED: "pages_feed",
      PAGES_FEED_VIDEO_COMPOSER: "pages_feed_video_composer",
      PAGES_FEED_CONSOLIDATED_ENTRY_CARD: "pages_feed_consolidated_entry_card",
      PAGES_FUNDRAISER_TAB: "pages_fundraiser_tab",
      PAGES_INSIGHT_TAB_PUBLISHED_POSTS: "pages_insight_tab_published_posts",
      PAGES_MANAGER: "pages_manager",
      PAGES_NEWS_FEED: "pages_news_feed",
      PAGES_NULL_STATE_CTA: "pages_null_state_cta",
      PAGES_AUTO_BOOST_CTA: "pages_auto_boost_cta",
      PAGES_PHOTO_TAB: "pages_photo_tab",
      PAGES_POSTS: "pages_posts",
      PAGES_PREMADE_POST_CARD: "pages_premade_post_card",
      PAGES_PROFILE_PIC_ADD_STORY: "pages_profile_pic_add_story",
      PAGES_PROMOTIONS_HUB_COUPON_TAB: "pages_promotions_hub_coupon_tab",
      PAGES_SOCIAL_LEARNING: "pages_social_learning",
      PAGES_VIDEO_TAB: "pages_video_tab",
      PAGES_VIDEO_TAB_HUB: "pages_video_tab_hub",
      PAGES_VOICE_SWITCHER: "pages_voice_switcher",
      PAGES_INSIGHT_TAB_STORIES: "PAGES_INSIGHT_TAB_STORIES",
      PAGES_SHOP_TAB: "pages_shop_tab",
      PAGES_TYSD_YEAR_IN_REVIEW_PHOTOS_CARD:
        "pages_tysd_year_in_review_photos_card",
      VIDEO_HOME_EDIT_MENU: "video_home_edit_menu",
      PERMALINK: "permalink",
      PHOTOS_ALBUM: "photos_album",
      PHOTOS_ALBUM_LISTING: "photos_album_listing",
      PHOTOS_DASHBOARD: "photos_dashboard",
      PHOTOS_TAB_TIMELINE: "photos_tab_timeline",
      PIXEL_CLOUD: "pixel_cloud",
      PLACES_NEARBY_FRIENDS: "places_nearby_friends",
      PLACES_SEARCH_FAILURE: "places_search_failure",
      PLATFORM_DIALOG: "platform_dialog",
      PLAYGROUND: "playground",
      POLITICAL_ENDORSEMENT: "political_endorsement",
      POLITICAL_ISSUE: "political_issue",
      PRIVACY_CHECKUP: "privacy_checkup",
      PRODUCT_TAGGING_FILE_UPLOAD: "product_tagging_file_upload",
      PROFILE_PIC: "profile_pic",
      PROFILE_PIC_CHANGE_DIALOG: "profile_pic_change_dialog",
      PROFILE_REVIEWS: "profile_reviews",
      PROFILE_VIDEO: "profile_video",
      PROFILE_REELS: "profile_reels",
      PUBLISH_FRAME_DIALOG: "publish_frame_dialog",
      QUICK_CLIP: "quick_clip",
      QUICK_EXPERIMENT_TOOL: "quick_experiment_tool",
      REACTION: "reaction",
      RECENT_POSTS: "timeline/recent_posts",
      RECRUITING_HIRING_GROUP_WORKPLACE: "recruiting_hiring_group_workplace",
      RECOMMENDATIONS_DASHBOARD: "recommendations_dashboard",
      RECOMMENDATIONS_LEARN_PAGE: "recommendations_learn_page",
      RECOMMENDATIONS_POST: "recommendations_post",
      REFERENCE_VIDEO_BULK_UPLOAD: "reference_video_bulk_upload",
      RESHARE_DIALOG: "reshare_dialog",
      REVIEW_UNIT: "review_unit",
      REVIEWS_LIST: "reviews_list",
      SAHELI: "saheli",
      SCHEDULE_POST_AT_HOT_TIME_NOTIF: "schedule_post_at_hot_time_notif",
      SCHEDULED_POSTS_ASYNC: "scheduled_posts_async",
      SCHEDULED_POSTS_FAILED_NOTIFICATION:
        "scheduled_posts_failed_notification",
      SEND_GIFT_POST: "send_gift_post",
      SHARE_BUTTON_PLUGIN: "share_button",
      SHOWS_HOME_EPISODES_CARD: "shows_home_episodes_card",
      SHOWS_HOME_EXTRA_CLIPS_CARD: "shows_home_extra_clips_card",
      SI_LEARNING_CLASS: "si_learning_class",
      SOCIAL_CANVAS: "social_canvas",
      SOCIAL_PLUGIN: "social_plugin",
      SPROUTS: "sprouts",
      STAGES: "stages",
      TALENT_SHOW: "talent_show",
      TALENT_SHOW_AUDITION: "talent_show_audition",
      TIMELINE: "timeline",
      TOPIC_HASHTAG_FEED: "topic_hashtag_feed",
      TOPIC_STORY_ACTION_LINK: "topic_story_action_link",
      TRENDING_POLITICAL_ISSUE: "trending_political_issue",
      TRENDING_TOPIC: "trending_topic",
      UC_TOOLBAR: "uc_toolbar",
      UNIFIED_VIDEO_COMPOSER_CREATE_REEL_CTA:
        "unified_video_composer_create_reel_cta",
      VIDEO_COMPOSER_DIALOG: "video_composer_dialog",
      VIDEO_CROSSPOST_DIALOG: "video_crosspost_dialog",
      VIDEO_DETAILS_EXPLORER: "video_details_explorer",
      VIDEO_PAGE_SPOTLIGHT_SELECTOR: "video_page_spotlight_selector",
      VIDEO_PAGE_VIDEO_LIST: "video_page_video_list",
      VEHICLE_ENTITY_PAGE: "vehicle_entity_page",
      VOLUNTEERING_EVENT: "volunteering_event",
      VOTER_REGISTRATION: "voter_registration",
      WATCH_CMS: "watch_cms",
      WEATHER_SHARE: "weather_share",
      WIFI_CHECKIN: "wifi_checkin",
      WORK_FEED: "work_feed",
      WORK_GROUP_LEARNING: "work_group_learning",
      WORK_WHATS_NEW: "work_whats_new",
      WWW_PAGE_SUPPORTER_TAB: "www_page_supporter_tab",
      YEAR_IN_REVIEW: "year_in_review",
      MULTI_DIRECT: "multi_direct",
      TPG: "tpg",
      BUSINESS_POST_TEMPLATES: "business_post_templates",
      PAGES_REEL_WEB_COMPOSER_DEFAULT: "pages_reel_web_composer_default",
      PAGES_TEXT_BASED_VIDEO_EDITOR_DEFAULT:
        "pages_text_based_video_editor_default",
      COMET_PAGES_REEL_COMPOSER_TIMELINE_SPROUT:
        "comet_pages_reel_composer_timeline_sprout",
      COMET_AP_PLUS_REEL_COMPOSER_TIMELINE_SPROUT:
        "comet_ap_plus_reel_composer_timeline_sprout",
      COMET_AP_PLUS_REEL_COMPOSER_FEED_SPROUT:
        "comet_ap_plus_reel_composer_feed_sprout",
      COMET_PP_PLUS_REEL_COMPOSER_FEED_SPROUT:
        "comet_pp_plus_reel_composer_feed_sprout",
      REEL_COMPOSER_UPSELL_BANNER: "reel_composer_upsell_banner",
      REEL_COMPOSER_ANNOUNCEMENT_TIP: "reel_composer_announcement_tip",
      REEL_COMPOSER_DEFAULT_SFV_BANNER: "reel_composer_default_sfv_banner",
      REEL_COMPOSER_DEFAULT_SFV_EXIT_MODAL:
        "reel_composer_default_sfv_exit_modal",
      REEL_COMPOSER_FOR_REELS_CREATION_AYMT_IN_CS:
        "reel_composer_for_reels_creation_aymt_in_cs",
      REEL_COMPOSER_FOR_REELS_CREATION_AYMT_IN_MBS:
        "reel_composer_for_reels_creation_in_mbs",
      REEL_COMPOSER_RETURN_TO_POST_COMPOSER_BANNER:
        "reel_composer_return_to_post_composer_banner",
      REELS_CREATION_BUTTON_IN_FEED_UNIT:
        "tap_creation_button_in_short_form_video_feed_unit",
      REELS_CREATION_BUTTON_IN_TOFU:
        "tap_unified_tofu_short_form_video_creation_card",
      REELS_CREATION_BUTTON_IN_REELS_VIEWER:
        "tap_creation_button_in_short_form_video_feed",
      REELS_CREATION_BUTTON_IN_CREATE_MENU:
        "tap_creation_top_right_button_in_short_form_video",
      REELS_CREATION_FROM_EXISTING_VIDEOS_MODAL_AYMT_IN_CS:
        "reels_creation_from_existing_videos_modal_aymt_in_cs",
      REELS_CREATION_FROM_EXISTING_VIDEOS_MODAL_AYMT_IN_MBS:
        "reels_creation_from_existing_videos_modal_aymt_in_mbs",
      REELS_VIEWER: "reels_viewer",
      WEB_HOME_CREATE_MENU: "www_home_create_menu",
      QUEST_MEDIA_STUDIO_COMPOSER: "quest_media_studio_composer",
      WWW_NLVE_COMPOSER: "www_nlve_composer",
      TOWNSQUARE_COMPOSER: "town_squrare_composer",
    });
    f["default"] = a;
  },
  66
);
__d(
  "ReactComposerContextTypes",
  ["ComposerEntryPointRef", "getObjectValues", "prop-types"],
  function (a, b, c, d, e, f, g) {
    a = c("prop-types").oneOf(
      c("getObjectValues")(c("ComposerEntryPointRef"))
    ).isRequired;
    g.accessToken = c("prop-types").string;
    g.actorID = c("prop-types").string.isRequired;
    g.appID = c("prop-types").string;
    g.composerID = c("prop-types").string.isRequired;
    g.composerType = a;
    g.extraConfig = c("prop-types").object;
    g.gks = c("prop-types").object.isRequired;
    g.targetID = c("prop-types").string.isRequired;
    g.jsModules = c("prop-types").object;
    g.jsResources = c("prop-types").object;
  },
  98
);
__d(
  "ReactComposerFailedMediaUpload.react",
  [
    "cx",
    "fbt",
    "ServerHTML.react",
    "XUIButton.react",
    "XUICloseButton.react",
    "XUIContextualDialog.react",
    "XUIContextualDialogBody.react",
    "XUIContextualDialogTitle.react",
    "react",
  ],
  function (a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return a.apply(this, arguments) || this;
      }
      var d = b.prototype;
      d.render = function () {
        var a = this,
          b = this.props.error["transient"]
            ? j.jsx(c("XUIButton.react"), {
                className: "_4_e",
                label: i._("Retry"),
                onClick: this.props.onRetryClick,
                size: "small",
                use: "special",
              })
            : j.jsx(c("XUIButton.react"), {
                className: "_4_f",
                label: i._("OK"),
                onClick: this.props.onDismissClick,
                size: "small",
              });
        return j.jsxs("span", {
          children: [
            j.jsxs("div", {
              ref: function (b) {
                return (a.$1 = b);
              },
              className: "_4_g",
              children: [
                j.jsx(c("XUICloseButton.react"), {
                  className: "_2n25",
                  onClick: this.props.onRemoveClick,
                  size: "medium",
                  shade: "light",
                }),
                j.jsx("p", { className: "_4_h", children: i._("Error") }),
                j.jsx("div", {
                  className: "_4_i",
                  children: j.jsx("p", {
                    className: "_4_j",
                    children: this.props.filename,
                  }),
                }),
                b,
              ],
            }),
            j.jsxs(c("XUIContextualDialog.react"), {
              contextRef: function () {
                return a.$1;
              },
              hoverContextRef: function () {
                return a.$1;
              },
              width: c("XUIContextualDialog.react").WIDTH.NORMAL,
              position: "right",
              children: [
                j.jsx(c("XUIContextualDialogTitle.react"), {
                  children: this.props.error.summary,
                }),
                j.jsx(c("XUIContextualDialogBody.react"), {
                  children: j.jsx(c("ServerHTML.react"), {
                    blob: this.props.error.description,
                  }),
                }),
              ],
            }),
          ],
        });
      };
      return b;
    })(j.PureComponent);
    g["default"] = a;
  },
  98
);
__d(
  "PhotosUploadWaterfallErrorCodes",
  [],
  function (a, b, c, d, e, f) {
    a = Object.freeze({
      SECURITY: 1,
      FILE_IO: 2,
      IMAGE_IO: 3,
      UPLOAD_IO: 4,
      INVALID_SERVER_RESULT: 5,
      RESIZE_FAILURE: 6,
      ENCODE_FAILURE: 7,
      INVALID_DOMAIN: 8,
      BAD_JPEG_MARKERS: 9,
      BAD_SERVER_RESPONSE: 10,
      EXTERNAL_INTERFACE_UNAVAILABLE: 11,
      JS_CALL_FAILED: 12,
      UNCAUGHT_ERROR: 13,
      UPLOAD_SWF_FAILED_LOAD: 14,
      FILE_IO_TIMEOUT: 15,
      IMAGE_SECURITY: 16,
      BAD_IMAGE_FILE: 17,
      IMAGE_IO_TIMEOUT: 18,
      BLACK_PHOTO: 19,
      EMPTY_FILE_LOADED: 20,
      FILE_READ_DISABLED: 21,
      BAD_NETWORK: 22,
      FLASH_LOAD_TIMEOUT: 23,
      FLASH_LOAD_FAILURE: 24,
      FLASH_UPGRADE_REQUIRED: 25,
      SPHERICAL_CHECK_FAILED: 26,
      SPHERICAL_CHECK_TIMEOUT: 27,
    });
    f["default"] = a;
  },
  66
);
__d(
  "ImageExif",
  ["exif-js"],
  function (a, b, c, d, e, f) {
    b("exif-js").enableXmp();
    function g(a) {
      var b = function (b) {
        return a.charCodeAt(b) & 255;
      };
      this.getByteAt = b;
      this.getShortAt = function (a, b) {
        a = this.getSShortAt(a, b);
        return a > 0 ? a : a + 65536;
      };
      this.getSShortAt = function (a, c) {
        var d = b(a);
        a = b(a + 1);
        return c ? (d << 8) + a : (a << 8) + d;
      };
      this.getLongAt = function (a, b) {
        a = this.getSLongAt(a, b);
        return a > 0 ? a : a + 4294967296;
      };
      this.getSLongAt = function (a, c) {
        var d = b(a),
          e = b(a + 1),
          f = b(a + 2);
        a = b(a + 3);
        return c
          ? (((((d << 8) + e) << 8) + f) << 8) + a
          : (((((a << 8) + f) << 8) + e) << 8) + d;
      };
      this.getStringAt = function (b, c) {
        return a.substr(b, c);
      };
      this.getLength = function () {
        return a.length;
      };
    }
    a = {
      readFromFile: function (a, b) {
        var c = this,
          d = new FileReader();
        d.addEventListener(
          "load",
          function (a) {
            a = a.target.result;
            a =
              a instanceof ArrayBuffer
                ? c.readFromArrayBuffer(a)
                : c.readFromBinaryString(a);
            b(a);
          },
          !1
        );
        window.DataView ? d.readAsArrayBuffer(a) : d.readAsBinaryString(a);
      },
      readFromBinaryString: function (a) {
        return b("exif-js").readFromBinaryFile(new g(a));
      },
      readFromArrayBuffer: function (a) {
        return b("exif-js").readFromBinaryFile(a);
      },
    };
    e.exports = a;
  },
  null
);
__d(
  "StringEncoding",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    function a(a, b) {
      a = new Uint8Array(a);
      var c = 0,
        d = [];
      while (c < a.length) {
        var e = a[c],
          f = void 0;
        if (e >> 7 === 0) f = 1;
        else if (e >> 5 === 6) (e &= 31), (f = 2);
        else if (e >> 4 === 14) (e &= 15), (f = 3);
        else if (e >> 3 === 30) (e &= 7), (f = 4);
        else if (e >> 2 === 62) (e &= 3), (f = 5);
        else if (e >> 1 === 126) (e &= 1), (f = 6);
        else
          throw new Error(
            "Cannot decode as UTF-8 - unrecognised codepoint header"
          );
        if (c + f > a.length)
          throw new Error("Cannot decode as UTF-8 - incomplete codepoint");
        for (var g = 1; g < f; g++) {
          var h = a[c + g];
          if (h >> 6 !== 2)
            throw new Error(
              "Cannot decode as UTF-8 - unrecognised codepoint subsequent byte"
            );
          h &= 63;
          e <<= 6;
          e |= h;
        }
        if (e > 1114111)
          throw new Error(
            "Cannot decode as UTF-8 - JavaScript doesn't support codepoints over 0x10FFFF"
          );
        if (!e)
          switch (b) {
            case "error":
              throw new Error(
                "Cannot decode as UTF-8 - contains a null and we're not allowing them"
              );
            case "ignore":
              continue;
            case "truncate":
              return String.fromCodePoint.apply(String, d);
            case "include":
              break;
          }
        d.push(e);
        c += f;
      }
      return String.fromCodePoint.apply(String, d);
    }
    function g(a) {
      return ((a & 255) << 8) | (a >> 8);
    }
    function b(a, b) {
      if (a.byteLength % 2 !== 0)
        throw new Error("Cannot decode as UTF-16 - data length mod 2 != 0");
      a = new Uint16Array(a);
      var c = 0,
        d = [],
        e = !1;
      a[0] === 65279 ? ++c : a[0] == 65534 && (++c, (e = !0));
      while (c < a.length) {
        var f = a[c];
        e && (f = g(f));
        var h = f;
        if (f > 55295 && f < 57344) {
          if ((f & 64512) !== 55296)
            throw new Error(
              "Cannot decode as UTF-16 - incorrect signature for high surrogate"
            );
          if (c + 1 >= a.length)
            throw new Error("Cannot decode as UTF-16 - incomplete codepoint");
          ++c;
          var i = a[c];
          e && (i = g(i));
          if ((i & 64512) !== 56320)
            throw new Error(
              "Cannot decode as UTF-16 - incorrect signature for low surrogate"
            );
          h = (((f & 1023) << 10) | (i & 1023)) + 65536;
        }
        if (!h)
          switch (b) {
            case "error":
              throw new Error(
                "Cannot decode as UTF-16 - contains a null and we're not allowing them"
              );
            case "ignore":
              continue;
            case "truncate":
              return String.fromCodePoint.apply(String, d);
            case "include":
              break;
          }
        d.push(h);
        ++c;
      }
      return String.fromCodePoint.apply(String, d);
    }
    function h(a) {
      return (
        ((a & 255) << 24) |
        ((a & (255 << 8)) << 8) |
        ((a & (255 << 16)) >> 8) |
        (a >>> 24)
      );
    }
    function c(a, b) {
      if (a.byteLength % 4 !== 0)
        throw new Error("Cannot decode as UTF-32 - data length mod 4 != 0");
      a = new Uint32Array(a);
      var c = 0,
        d = [],
        e = !1;
      a[0] === 65279 ? ++c : a[0] == 4294836224 && (++c, (e = !0));
      while (c < a.length) {
        var f = a[c];
        e && (f = h(f));
        if (f & 2147483648)
          throw new Error("Cannot decode as UTF-32 - invalid codepoint");
        if (f > 1114111)
          throw new Error(
            "Cannot decode as UTF-32 - JavaScript doesn't support codepoints over 0x10FFFF"
          );
        if (!f)
          switch (b) {
            case "error":
              throw new Error(
                "Cannot decode as UTF-32 - contains a null and we're not allowing them"
              );
            case "ignore":
              continue;
            case "truncate":
              return String.fromCodePoint.apply(String, d);
            case "include":
              break;
          }
        d.push(f);
        ++c;
      }
      return String.fromCodePoint.apply(String, d);
    }
    var i = { "utf-8": a, "utf-16": b, "utf-32": c };
    d = (function () {
      function a(a, b) {
        a ? (this.$1 = a) : (this.$1 = ["utf-8", "utf-16", "utf-32"]);
        b || (b = "error");
        this.$2 = b;
        for (
          var a = this.$1,
            b = Array.isArray(a),
            c = 0,
            a = b
              ? a
              : a[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var d;
          if (b) {
            if (c >= a.length) break;
            d = a[c++];
          } else {
            c = a.next();
            if (c.done) break;
            d = c.value;
          }
          d = d;
          this.$3(d);
        }
      }
      var b = a.prototype;
      b.getPrecedence = function () {
        return this.$1;
      };
      b.decode = function (a) {
        var b = [];
        for (
          var c = this.$1,
            d = Array.isArray(c),
            e = 0,
            c = d
              ? c
              : c[
                  typeof Symbol === "function" ? Symbol.iterator : "@@iterator"
                ]();
          ;

        ) {
          var f;
          if (d) {
            if (e >= c.length) break;
            f = c[e++];
          } else {
            e = c.next();
            if (e.done) break;
            f = e.value;
          }
          f = f;
          f = this.$3(f);
          try {
            return f(a, this.$2);
          } catch (a) {
            b.push(a);
          }
        }
        throw new Error(b.join(", "));
      };
      b.$3 = function (a) {
        var b = i[a];
        if (!b) throw new Error("Unknown encoding " + a);
        return b;
      };
      return a;
    })();
    f.Decoder = d;
  },
  66
);
__d(
  "ImageMetadata",
  [
    "ImageExif",
    "Promise",
    "StringEncoding",
    "emptyFunction",
    "regeneratorRuntime",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h;
    e = (function () {
      function e(a) {
        (this.$4 = ""), (this.$6 = a), (this.$7 = new Uint8Array(a)), this.$8();
      }
      var f = e.prototype;
      f.$8 = function () {
        var a = 0;
        while (a < this.$7.length) {
          a = this.$9(a);
          if (a === -1) return;
          var b = this.$7[a + 1];
          b = i[b];
          if (!b) return;
          var c = b.length;
          c === void 0 && (c = this.$7[a + 2] * 256 + this.$7[a + 3]);
          this.$10(a, c, b);
          if (b.name === "SOS") return;
          a += 2 + c;
        }
      };
      f.$10 = function (a, b, c) {
        switch (c.name) {
          case "APP1":
            this.$11(a + 4, j)
              ? (this.$1 || ((this.$1 = a), (this.$2 = b)),
                this.$12(a + 4 + j.length, b - 2 - j.length))
              : this.$11(a + 4, k)
              ? ((this.$1 = a),
                (this.$2 = b),
                this.$13(a + 4 + k.length, b - 2 - k.length))
              : this.$11(a + 4, l) &&
                this.$14(a + 4 + l.length, b - 2 - l.length);
            break;
          case "SOF0":
          case "SOF1":
          case "SOF2":
          case "SOF3":
          case "SOF5":
          case "SOF6":
          case "SOF7":
          case "JPG":
          case "SOF9":
          case "SOF10":
          case "SOF11":
          case "SOF13":
          case "SOF14":
          case "SOF15":
            this.$15(a + 4, b - 2);
            break;
        }
      };
      f.$15 = function (a, b) {
        b = this.$7[a + 3] * 256 + this.$7[a + 4];
        a = this.$7[a + 1] * 256 + this.$7[a + 2];
        b > 0 && a > 0 && (this.$5 = { x: b, y: a });
      };
      f.$12 = function (a, b) {
        a = emptyFunction;
        try {
          emptyFunction = c("emptyFunction");
          var e = d("ImageExif").readFromArrayBuffer(this.$6) || {};
        } finally {
          emptyFunction = a;
        }
        b = {};
        for (a in e) {
          var f = e[a];
          typeof f === "string" && (f = f.trim());
          b[a.trim()] = f;
        }
        this.$3 = b;
      };
      f.$13 = function (a, b) {
        var c = new (d("StringEncoding").Decoder)(null, "truncate");
        try {
          c = c.decode(this.$6.slice(a, a + b));
          this.$4 = c;
        } catch (a) {
          return;
        }
      };
      f.$14 = function (a) {};
      f.$11 = function (a, b) {
        var c = this;
        return b.split("").every(function (b) {
          return c.$7[a++] === b.charCodeAt(0);
        });
      };
      f.$9 = function (a) {
        for (a = a; a + 1 < this.$7.length; ++a)
          if (
            this.$7[a] === 255 &&
            this.$7[a + 1] !== 0 &&
            this.$7[a + 1] !== 255
          )
            return a;
        return -1;
      };
      f.hasAPP1 = function () {
        return Boolean(this.$1);
      };
      f.hasExif = function () {
        return Boolean(this.$3);
      };
      f.hasXMP = function () {
        return Boolean(this.$4);
      };
      f.hasSize = function () {
        return Boolean(this.$5);
      };
      f.getAPP1Location = function () {
        return !this.hasAPP1() ? null : this.$1;
      };
      f.getAPP1Length = function () {
        return !this.hasAPP1() ? null : this.$2;
      };
      f.getExif = function () {
        if (!this.$3) throw new Error("Image has no Exif data");
        return this.$3;
      };
      f.getXMPString = function () {
        return this.$4;
      };
      f.getSize = function () {
        if (!this.$5) throw new Error("Could not find size data?!");
        return this.$5;
      };
      f.getBufferLength = function () {
        if (!this.$6) throw new Error("Do not find buffer data!");
        return this.$6.byteLength;
      };
      e.genMetadataFromBlob = function (a) {
        return b("regeneratorRuntime").async(
          function (c) {
            while (1)
              switch ((c.prev = c.next)) {
                case 0:
                  c.t0 = e;
                  c.next = 3;
                  return b("regeneratorRuntime").awrap(e.$16(a));
                case 3:
                  c.t1 = c.sent;
                  return c.abrupt("return", new c.t0(c.t1));
                case 5:
                case "end":
                  return c.stop();
              }
          },
          null,
          this
        );
      };
      e.$16 = function (c) {
        return new (h || (h = b("Promise")))(function (b, d) {
          var e = new a.FileReader();
          e.onabort = d;
          e.onerror = d;
          e.onload = b;
          e.readAsArrayBuffer(c);
        });
      };
      return e;
    })();
    var i = [];
    i[216] = { name: "SOI", length: 0 };
    i[192] = { name: "SOF0" };
    i[193] = { name: "SOF1" };
    i[194] = { name: "SOF2" };
    i[195] = { name: "SOF3" };
    i[197] = { name: "SOF5" };
    i[198] = { name: "SOF6" };
    i[199] = { name: "SOF7" };
    i[200] = { name: "JPG" };
    i[201] = { name: "SOF9" };
    i[202] = { name: "SOF10" };
    i[203] = { name: "SOF11" };
    i[205] = { name: "SOF13" };
    i[206] = { name: "SOF14" };
    i[207] = { name: "SOF15" };
    i[196] = { name: "DHT" };
    i[219] = { name: "DQT" };
    i[221] = { name: "DRI", length: 2 };
    i[218] = { name: "SOS" };
    i[208] = { name: "RST0", length: 0 };
    i[209] = { name: "RST1", length: 0 };
    i[210] = { name: "RST2", length: 0 };
    i[211] = { name: "RST3", length: 0 };
    i[212] = { name: "RST4", length: 0 };
    i[213] = { name: "RST5", length: 0 };
    i[214] = { name: "RST6", length: 0 };
    i[215] = { name: "RST7", length: 0 };
    i[224] = { name: "APP0" };
    i[225] = { name: "APP1" };
    i[226] = { name: "APP2" };
    i[227] = { name: "APP3" };
    i[228] = { name: "APP4" };
    i[229] = { name: "APP5" };
    i[230] = { name: "APP6" };
    i[231] = { name: "APP7" };
    i[232] = { name: "APP8" };
    i[233] = { name: "APP9" };
    i[234] = { name: "APP10" };
    i[235] = { name: "APP11" };
    i[236] = { name: "APP12" };
    i[237] = { name: "APP13" };
    i[238] = { name: "APP14" };
    i[239] = { name: "APP15" };
    i[254] = { name: "COM" };
    i[217] = { name: "EOI", length: 0 };
    var j = "Exif\0\0",
      k = "http://ns.adobe.com/xap/1.0/\0",
      l = "http://ns.adobe.com/xmp/extension/\0";
    g["default"] = e;
  },
  98
);
__d(
  "XSphericalPhotoSphereMetadataAsyncController",
  ["XController"],
  function (a, b, c, d, e, f) {
    e.exports = b("XController").create("/spherical_media/photo/metadata/", {});
  },
  null
);
__d(
  "SphericalImageUtils",
  [
    "ImageMetadata",
    "Promise",
    "XAsyncRequest",
    "XSphericalPhotoSphereMetadataAsyncController",
    "promiseDone",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = 2048;
    d = (function () {
      function d() {}
      d.genArrayBufferFromBlob = function (c) {
        return new (h || (h = b("Promise")))(function (b, d) {
          if (a.FileReader) {
            var e = new a.FileReader();
            e.onabort = d;
            e.onerror = d;
            e.onload = function (a) {
              b(a.target.result);
            };
            e.readAsArrayBuffer(c);
          } else d(new Error("global.FileReader doesn't exit"));
        });
      };
      d.shouldCheckInServer = function (a) {
        if ((!a.hasExif() && !a.hasXMP()) || !a.hasSize()) return !1;
        var b = a.getXMPString();
        if (this.getMayContainSphericalMetadata(b)) return !0;
        var c = a.getSize(),
          d = c.x;
        c = c.y;
        if (Math.max(d, c) < i || (d / c < 2 && c / d < 2)) return !1;
        c = a.hasExif() ? a.getExif() : {};
        return b === "" && (!c.Make || !c.Model) ? !1 : !0;
      };
      d.genPhotosphereMetadata = function (a) {
        var d = this;
        return new (h || (h = b("Promise")))(function (b, e) {
          c("promiseDone")(
            d.genArrayBufferFromBlob(a),
            function (a) {
              try {
                var f = new (c("ImageMetadata"))(a);
                d.shouldCheckInServer(f)
                  ? c("promiseDone")(
                      d.genPhotosphereMetadataFromServer(
                        f.hasSize() ? f.getSize() : { x: 0, y: 0 },
                        f.getXMPString(),
                        f.hasExif() ? f.getExif() : {}
                      ),
                      function (a) {
                        a = a.payload;
                        b({ photoSphereMetadata: a, imageMetadata: f });
                      },
                      e
                    )
                  : b({});
              } catch (a) {
                (a.__manual = !0), e(a);
              }
            },
            e
          );
        });
      };
      d.genPhotosphereMetadataFromServer = function (a, d, e) {
        var f = this;
        return new (h || (h = b("Promise")))(function (b, g) {
          new (c("XAsyncRequest"))(
            c("XSphericalPhotoSphereMetadataAsyncController")
              .getURIBuilder()
              .getURI()
          )
            .setMethod("POST")
            .setData({
              exif_string: f.getExifString(e),
              height: a.y,
              width: a.x,
              xmp: d,
            })
            .setHandler(b)
            .setErrorHandler(g)
            .send();
        });
      };
      d.getExifString = function (a) {
        return JSON.stringify(a, function (a, b) {
          return a === "FocalLength" && b.numerator && b.denominator
            ? b.numerator + "/" + b.denominator
            : b;
        });
      };
      d.getMayContainSphericalMetadata = function (a) {
        return a !== "" && a.indexOf("GPano:") > -1;
      };
      return d;
    })();
    g["default"] = d;
  },
  98
);
__d(
  "SphericalImage",
  ["SphericalImageUtils", "regeneratorRuntime"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = "ProjectionType";
    a = (function () {
      function a(a) {
        this.props = a;
      }
      a.createFromBlob = function (a) {
        var d;
        return b("regeneratorRuntime").async(
          function (e) {
            while (1)
              switch ((e.prev = e.next)) {
                case 0:
                  e.next = 2;
                  return b("regeneratorRuntime").awrap(
                    c("SphericalImageUtils").genPhotosphereMetadata(a)
                  );
                case 2:
                  d = e.sent;
                  return e.abrupt("return", new this(d));
                case 4:
                case "end":
                  return e.stop();
              }
          },
          null,
          this
        );
      };
      var d = a.prototype;
      d.isSpherical = function () {
        return Boolean(this.props.photoSphereMetadata);
      };
      d.getImageMetadata = function () {
        return this.props.imageMetadata;
      };
      d.getPhotoSphereMetadata = function () {
        return this.props.photoSphereMetadata;
      };
      d.getSize = function () {
        return this.props.imageMetadata
          ? this.props.imageMetadata.getSize()
          : null;
      };
      d.getBufferLength = function () {
        return this.props.imageMetadata
          ? this.props.imageMetadata.getBufferLength()
          : null;
      };
      d.getProjectionType = function () {
        var a = "";
        this.props.photoSphereMetadata &&
          this.props.photoSphereMetadata[h] &&
          (a = this.props.photoSphereMetadata[h]);
        return a;
      };
      return a;
    })();
    g["default"] = a;
  },
  98
);
__d(
  "SphericalPhotoUploadHelper",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    function a(a, b, c) {
      return (b && Math.max(b.x, b.y) <= c) || a === "cubestrip" ? !1 : !0;
    }
    function b(a, b, c) {
      return b == null || b <= c || a === "cubestrip" ? !1 : !0;
    }
    f.shouldResize360 = a;
    f.shouldRecompress360 = b;
  },
  66
);
__d(
  "loadImageFromBlob",
  ["Promise"],
  function (a, b, c, d, e, f) {
    var g;
    function a(a) {
      return new (g || (g = b("Promise")))(function (b, c) {
        var d = new Image();
        d.onload = function () {
          URL.revokeObjectURL(d.src), b(d);
        };
        d.onerror = function (a) {
          URL.revokeObjectURL(d.src), c(a);
        };
        d.src = URL.createObjectURL(a);
      });
    }
    f["default"] = a;
  },
  66
);
__d(
  "XComposerPhotoUploader",
  [
    "AsyncUploadRequest",
    "FileInputUploader",
    "PhotosMimeType",
    "PhotosUploadID",
    "Promise",
    "ReactComposerMediaFilterUtils",
    "SphericalImage",
    "SphericalPhotoTypedConfig",
    "SphericalPhotoUploadHelper",
    "asyncToGeneratorRuntime",
    "curry",
    "emptyFunction",
    "loadImageFromBlob",
    "performanceNow",
    "promiseDone",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = a.URL || a.webkitURL || {};
    e = (function () {
      function a(a) {
        (this.$20 = {}),
          (this.$2 = a.uploadData || {}),
          (this.$1 = a.uploadEndpoint),
          (this.$3 = a.retryLimit),
          (this.$4 = a.concurrentLimit),
          (this.$5 = a.resizer),
          (this.$6 = a.onUploadEnqueued || c("emptyFunction")),
          (this.$7 = a.onUploadsEnqueued || c("emptyFunction")),
          (this.$8 = a.onResizeStart || c("emptyFunction")),
          (this.$11 = a.onResizeProgress || c("emptyFunction")),
          (this.$9 = a.onResizeSuccess || c("emptyFunction")),
          (this.$10 = a.onResizeFailure || c("emptyFunction")),
          (this.$12 = a.onSphericalCheckFailure || c("emptyFunction")),
          (this.$13 = a.onSphericalCheckSuccess || c("emptyFunction")),
          (this.$14 = a.onUploadIsSpherical || c("emptyFunction")),
          (this.$15 = a.onUploadSent || c("emptyFunction")),
          (this.$16 = a.onUploadStart || c("emptyFunction")),
          (this.$17 = a.onUploadProgress || c("emptyFunction")),
          (this.$18 = a.onUploadSuccess || c("emptyFunction")),
          (this.$19 = a.onUploadFailure || c("emptyFunction"));
      }
      var e = a.prototype;
      e.setUploadEndpoint = function (a) {
        this.$1 = a;
      };
      e.setOption = function (a, b) {
        this.$20[a] = b;
        return this;
      };
      e.getUploadData = function () {
        return this.$2;
      };
      e.setUploadData = function (a) {
        this.$2 = a;
      };
      e.upload = function (a, b) {
        var e = this;
        b || 0;
        b = babelHelpers["extends"]({}, this.$2);
        var f = null;
        if (!this.$21(a)) {
          var g = d("PhotosUploadID").getNewID();
          a.uploadID = g;
          b.upload_id = g;
          this.$6({
            uploadID: g,
            fileName: a.value.split("/").pop().split("\\").pop(),
            fileURL: i.createObjectURL ? i.createObjectURL(a) : null,
          });
        } else {
          f = Array.from(a.files);
          f = f.filter(function (a) {
            return !d("ReactComposerMediaFilterUtils").hasVideos([a.name]);
          });
          if (f.length === 0) return;
          f.forEach(function (a) {
            a.uploadID || (a.uploadID = d("PhotosUploadID").getNewID()),
              e.$6({
                uploadID: a.uploadID,
                fileName: a.name,
                isSpherical: !1,
                fileURL: i.createObjectURL ? i.createObjectURL(a) : null,
              });
          });
        }
        this.$7();
        g = new (c("FileInputUploader"))(a)
          .setURI(this.$1)
          .setData(b)
          .setAllowCrossOrigin(!0)
          .setNetworkErrorRetryLimit(this.$3)
          .setUploadInParallel(!0);
        f &&
          f.length > 0 &&
          (g.setFiles({ farr: f }),
          this.$5
            ? g.setPreprocessHandler(this.$22.bind(this))
            : g.setPreprocessHandler(this.$23.bind(this)),
          this.$4 && g.setConcurrentLimit(this.$4));
        g.subscribe("progress", function (b, c) {
          return e.$17(e.$24(c, a), c);
        });
        g.subscribe("failure", function (b, c) {
          return e.$19(e.$24(c, a), c, f);
        });
        g.subscribe("start", function (b, c) {
          return e.$16(e.$24(c, a), c);
        });
        g.subscribe("success", function (b, c) {
          return e.$18(e.$24(c, a), c);
        });
        try {
          g.send(), this.$15(a);
        } catch (a) {
          throw a;
        }
      };
      e.uploadFiles = function (a) {
        var b = this;
        a = Array.from(a);
        var c = [];
        a.forEach(function (a) {
          var e = d("PhotosUploadID").getNewID();
          a.uploadID || (a.uploadID = e);
          b.$6({
            fileName: a.name,
            fileURL: i.createObjectURL ? i.createObjectURL(a) : null,
            isSpherical: !1,
            uploadID: e,
          });
          c.push(e);
        });
        a = this.getAsyncFileUploadRequest(a, c);
        a.send();
      };
      e.getAsyncFileUploadRequest = function (a, b, c) {
        var d = this;
        c = this.$25(a, c);
        c.subscribe("start", function (c, e) {
          c = (c = d.$24({ upload: e }, {})) != null ? c : d.$26(a, b, e);
          d.$16(c, { upload: e });
        });
        c.subscribe("progress", function (c, e) {
          c = (c = d.$24({ upload: e }, {})) != null ? c : d.$26(a, b, e);
          d.$17(c, { upload: e, event: e.getProgressEvent() });
        });
        c.subscribe("success", function (c, e) {
          c = (c = d.$24({ upload: e }, {})) != null ? c : d.$26(a, b, e);
          d.$18(c, { upload: e, response: e.getResponse() });
        });
        c.subscribe("failure", function (c, e) {
          c = (c = d.$24({ upload: e }, {})) != null ? c : d.$26(a, b, e);
          return d.$19(c, { upload: e, response: e.getResponse() }, a);
        });
        return c;
      };
      e.getAsyncUploadRequest = function (a, b) {
        var c = this;
        b = this.$25(a, b);
        b.subscribe("start", function (a, b) {
          return c.$16(b.getFile().uploadID, { upload: b });
        });
        b.subscribe("progress", function (a, b) {
          return c.$17(b.getFile().uploadID, {
            upload: b,
            event: b.getProgressEvent(),
          });
        });
        b.subscribe("success", function (a, b) {
          return c.$18(b.getFile().uploadID, {
            upload: b,
            response: b.getResponse(),
          });
        });
        b.subscribe("failure", function (b, d) {
          return c.$19(
            d.getFile().uploadID,
            { upload: d, response: d.getResponse() },
            a
          );
        });
        return b;
      };
      e.$25 = function (a, b) {
        a = new (c("AsyncUploadRequest"))()
          .setData(babelHelpers["extends"]({}, b && b.data, this.$2))
          .setFiles({ farr: a })
          .setAllowCrossOrigin(!0)
          .setURI(this.$1);
        (b == null ? void 0 : b.preventDefaultErrorHandler) &&
          a.setPreventDefaultErrorHandler(!0);
        this.$4 && a.setLimit(this.$4);
        this.$5
          ? a.setPreprocessHandler(this.$22.bind(this))
          : a.setPreprocessHandler(this.$23.bind(this));
        for (b in this.$20) a.setOption(b, this.$20[b]);
        return a;
      };
      e.$26 = function (a, b, c) {
        c = c.getFile();
        a = a.indexOf(c);
        return b[a];
      };
      e.$24 = function (a, b) {
        if (a.upload) return a.upload.getFile().uploadID;
        else return b.uploadID;
      };
      e.$23 = function (a, d) {
        var e = this;
        c("promiseDone")(
          b("asyncToGeneratorRuntime").asyncToGenerator(function* () {
            return yield e.$27(a, d);
          })()
        );
      };
      e.$27 = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* (a, b) {
          var c = a.getFile();
          c = yield this.$28(c);
          var d = a.getFile().uploadID;
          c && c.isSpherical()
            ? this.$14(c.isSpherical(), c, d)
            : this.$14(!1, null, "");
          b(a);
        });
        function c(b, c) {
          return a.apply(this, arguments);
        }
        return c;
      })();
      e.$22 = function (a, d) {
        var e = this;
        c("promiseDone")(
          b("asyncToGeneratorRuntime").asyncToGenerator(function* () {
            return yield e.$29(a, d);
          })()
        );
      };
      e.$28 = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* (a) {
          var b = c("performanceNow")();
          try {
            var d = yield c("SphericalImage").createFromBlob(a);
            this.$13(a, c("performanceNow")() - b, d);
            return d;
          } catch (d) {
            this.$12(a, c("performanceNow")() - b);
            return null;
          }
        });
        function d(b) {
          return a.apply(this, arguments);
        }
        return d;
      })();
      e.$30 = function (a) {
        return this.$31(this.$5.resizeBlob.bind(this.$5), a);
      };
      e.$32 = function (a, b) {
        b === void 0 && (b = c("SphericalPhotoTypedConfig").upload_size_limit);
        return this.$31(this.$5.resize360Blob.bind(this.$5), a, b);
      };
      e.$33 = function (a) {
        return c("loadImageFromBlob")(a).then(function (a) {
          return { width: a.width, height: a.height };
        });
      };
      e.$31 = function (a, d, e) {
        var f = this,
          g = c("curry")(this.$11, d.uploadID),
          i = c("curry")(this.$8, d),
          j = function () {
            return f.$33(d).then(i);
          };
        return new (h || (h = b("Promise")))(function (b, c) {
          j(),
            a(
              d,
              function (a, d, e, f, g, h, i) {
                a
                  ? c(a)
                  : e
                  ? b({ originalWidth: f, originalHeight: g })
                  : b({
                      blob: d,
                      originalWidth: f,
                      originalHeight: g,
                      outputWidth: h,
                      outputHeight: i,
                    });
              },
              g,
              e
            );
        });
      };
      e.$29 = (function () {
        var a = b("asyncToGeneratorRuntime").asyncToGenerator(function* (a, b) {
          var e = a.getFile(),
            f = this.$5.isEligible(
              e == null ? void 0 : e.size,
              e == null ? void 0 : e.type
            );
          if (!e || !d("PhotosMimeType").isJpeg(e.type) || !f) {
            this.$14(!1, null, "");
            e &&
              c("promiseDone")(
                this.$33(e).then(function (b) {
                  a.getAdditionalData()
                    .set("js_resized", !1)
                    .set("original_file_size", e.size)
                    .set("original_width", b == null ? void 0 : b.width)
                    .set("original_height", b == null ? void 0 : b.height)
                    .set("upload_width", b == null ? void 0 : b.width)
                    .set("upload_height", b == null ? void 0 : b.height);
                }, c("emptyFunction"))
              );
            b(a);
            return;
          }
          f = c("performanceNow")();
          var g, h;
          try {
            var i = null;
            i = yield this.$28(e);
            if (i && i.isSpherical()) {
              this.$14(!0, i, e.uploadID);
              var j = i.getSize(),
                k = c("SphericalPhotoTypedConfig").upload_size_limit,
                l = i.getProjectionType(),
                m = !1;
              m = d("SphericalPhotoUploadHelper").shouldRecompress360(
                l,
                i.getBufferLength(),
                c("SphericalPhotoTypedConfig").upload_bytes_limit
              );
              i = d("SphericalPhotoUploadHelper").shouldResize360(l, j, k);
              j &&
                (i || m) &&
                (!i
                  ? (g = yield this.$32(e, Math.max(j.x, j.y) - 1))
                  : (g = yield this.$32(e)));
            } else this.$14(!1, null, ""), (g = yield this.$30(e));
            g &&
              (g.blob != null &&
                ((h = g.blob),
                (h.uploadID = e.uploadID),
                (h.name = e.name),
                a.setFile(h)),
              a
                .getAdditionalData()
                .set("js_resized", !0)
                .set("original_file_size", e.size)
                .set("original_width", g.originalWidth)
                .set("original_height", g.originalHeight)
                .set("upload_width", g.outputWidth)
                .set("upload_height", g.outputHeight));
            l = h === null;
            a.getFile().filename = e.name;
            this.$9(
              e,
              h || e,
              l,
              c("performanceNow")() - f,
              a.getAdditionalData().get("original_width"),
              a.getAdditionalData().get("original_height"),
              a.getAdditionalData().get("upload_width"),
              a.getAdditionalData().get("upload_height")
            );
          } catch (a) {
            k = c("performanceNow")() - f;
            this.$10(e, h || e, a, k);
          }
          b(a);
        });
        function e(b, c) {
          return a.apply(this, arguments);
        }
        return e;
      })();
      e.$21 = function (a) {
        return !!a.files && c("AsyncUploadRequest").isSupported();
      };
      return a;
    })();
    g["default"] = e;
  },
  98
);
__d(
  "ReactComposerPhotoUploader",
  [
    "ActorURI",
    "AsyncUploadRequest",
    "PhotosUploadID",
    "PhotosUploadWaterfallErrorCodes",
    "ReactComposerLoggingStore",
    "ReactComposerMediaConfig",
    "ReactComposerMediaUploadActionType",
    "ReactComposerMediaUploadActions",
    "ReactComposerMediaUploadStore",
    "ReactComposerMediaUploadType",
    "ReactComposerMediaUtils",
    "XComposerPhotoUploader",
    "performanceNow",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = a.URL || a.webkitURL || {};
    b = (function () {
      function a(a, b, e) {
        this.$1 = a.composerID;
        this.$4 = b;
        b = c("ReactComposerMediaConfig").photo;
        this.$5 = b.uploadEndpoint;
        var f = d("ActorURI").create(b.uploadEndpoint, a.actorID);
        this.$2 = new (c("XComposerPhotoUploader"))({
          uploadEndpoint: f,
          uploadData: babelHelpers["extends"](
            {
              qn: c("ReactComposerLoggingStore").getSessionID(this.$1),
              target_id: a.targetID,
              work_shared_draft_mode: this.$4.workSharedDraftMode,
            },
            b.uploadData
          ),
          retryLimit: b.retryLimit,
          concurrentLimit: b.concurrentLimit,
          resizer: e,
          onUploadEnqueued: this.$6.bind(this),
          onResizeStart: this.$7.bind(this),
          onResizeSuccess: this.$8.bind(this),
          onResizeFailure: this.$9.bind(this),
          onResizeProgress: this.$10.bind(this),
          onSphericalCheckSuccess: this.$11.bind(this),
          onSphericalCheckFailure: this.$12.bind(this),
          onUploadIsSpherical: this.$13.bind(this),
          onUploadStart: this.$14.bind(this),
          onUploadProgress: this.$15.bind(this),
          onUploadSuccess: this.$16.bind(this),
          onUploadFailure: this.$17.bind(this),
          gks: a.gks,
        });
        this.$3 = new Map();
      }
      var b = a.prototype;
      b.upload = function (a, b) {
        Boolean(b) &&
          b &&
          this.$2.setUploadEndpoint(d("ActorURI").create(this.$5, b));
        b = c("ReactComposerMediaUploadStore").getUploads(this.$1).size;
        this.$2.upload(a, b);
      };
      b.retry = function (a) {
        a = this.$2.getAsyncUploadRequest([a]);
        a.send();
      };
      b.getAsyncUploadRequest = function (a, b) {
        return this.$2.getAsyncUploadRequest(a, b);
      };
      b.enqueueAsyncUploadRequest = function (a, b, e, f, g, i) {
        Boolean(i) &&
          i &&
          this.$2.setUploadEndpoint(d("ActorURI").create(this.$5, i)),
          b.forEach(function (b) {
            var i = e.indexMap
              ? e.indexMap.get(b.uploadID)
              : c("ReactComposerMediaUploadStore").getUploads(a).size;
            d("ReactComposerMediaUploadActions").enqueue(
              a,
              b.uploadID,
              b.name,
              i,
              c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_ENQUEUED,
              d("ReactComposerMediaUploadType").PHOTO,
              h.createObjectURL ? h.createObjectURL(b) : null,
              f.xyTags,
              g
            );
          }),
          this.getAsyncUploadRequest(b, e).send();
      };
      b.isUploadLimitExceeded = function (a, b) {
        a = this.getMaxSelectableFilesCount(a);
        b = !b || !c("AsyncUploadRequest").isSupported() ? 1 : b.length;
        return b > a;
      };
      b.getMaxSelectableFilesCount = function (a) {
        return a ? c("ReactComposerMediaConfig").photo.limit : 1;
      };
      b.$6 = function (a) {
        d("ReactComposerMediaUploadActions").enqueue(
          this.$1,
          a.uploadID,
          a.fileName,
          c("ReactComposerMediaUploadStore").getUploads(this.$1).size,
          c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_ENQUEUED,
          d("ReactComposerMediaUploadType").PHOTO,
          a.fileURL,
          null,
          a.isSpherical
        );
      };
      b.$13 = function (a, b, c) {
        a &&
          d("ReactComposerMediaUploadActions").isSpherical(
            this.$1,
            a.uploadID,
            b,
            c
          );
      };
      b.$7 = function (a, b) {
        d("ReactComposerMediaUploadActions").startResizing(
          this.$1,
          a.uploadID,
          { width: b.width, height: b.height, bytes: a.size }
        );
      };
      b.$10 = function (a, b) {
        var c = this;
        window.setTimeout(function () {
          return d("ReactComposerMediaUploadActions").progressResizing(
            c.$1,
            a,
            (100 * b.written) / b.total
          );
        }, 0);
      };
      b.$8 = function (a, b, c, e, f, g, h, i) {
        d("ReactComposerMediaUploadActions").doneResizing(this.$1, a.uploadID, {
          dt: e,
          media_data_size: a.size,
          width: f,
          height: g,
          bytes: b.size,
          upload_width: h,
          upload_height: i,
          custom_tags: { skipped_resizing: c },
        });
      };
      b.$9 = function (a, b, c, e) {
        d("ReactComposerMediaUploadActions").failResizing(this.$1, a.uploadID, {
          dt: e,
          bytes: a.size,
          error_code: c.code,
          error_info: c.message,
        });
      };
      b.$11 = function (a, b, c) {
        d("ReactComposerMediaUploadActions").doneSphericalCheck(
          this.$1,
          a.uploadID,
          { dt: b, projection_type: c.getProjectionType() },
          c,
          !1
        );
      };
      b.$12 = function (a, b, e) {
        e === void 0 && (e = !1);
        e = e
          ? c("PhotosUploadWaterfallErrorCodes").SPHERICAL_CHECK_TIMEOUT
          : c("PhotosUploadWaterfallErrorCodes").SPHERICAL_CHECK_FAILED;
        d("ReactComposerMediaUploadActions").failSphericalCheck(
          this.$1,
          a.uploadID,
          { error_code: e, dt: b }
        );
      };
      b.$14 = function (a, b) {
        d("ReactComposerMediaUploadActions").startUploading(
          this.$1,
          a,
          b.upload,
          c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_UPLOADING
        ),
          this.$3.set(a, c("performanceNow")());
      };
      b.$15 = function (a, b) {
        var c = this;
        window.setTimeout(function () {
          return d("ReactComposerMediaUploadActions").progressUploading(
            c.$1,
            a,
            (100 * b.event.loaded) / b.event.total,
            !1,
            null,
            null
          );
        }, 0);
      };
      b.$16 = function (a, b) {
        var e = this;
        if (
          c("ReactComposerMediaUploadStore").getHasUploadBeenRemoved(this.$1, a)
        )
          return;
        if (!b.response.payload) return;
        var f = Array.isArray(b.response.payload)
            ? b.response.payload
            : [b.response.payload],
          g = this.$3.get(a) || 0;
        g = g ? c("performanceNow")() - g : 0;
        var h = f[0];
        f = f.slice(1);
        var i = c("ReactComposerMediaUploadStore").getUploadIndex(this.$1, a);
        d("ReactComposerMediaUploadActions").doneUploading({
          composerID: this.$1,
          uploadID: a,
          uploadIndex: i,
          type: c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_DONE,
          fileUpload: b.upload,
          timeToUpload: g,
          photoID: h.photoID,
          sphericalPhotoID: h.sphericalPhotoID,
          thumbSrc: h.thumbSrc,
          originalPhotoID: h.originalPhotoID,
          mediaLocation: h.mediaLocation,
          isSpherical: !!h.isSpherical,
          imageSrc: h.imageSrc,
          width: h.width,
          height: h.height,
          mediaTakenTime: h.mediaTakenTime,
        });
        d("ReactComposerMediaUtils").changeToPeopleTaggerAfterUpload(this.$1);
        this.$18(a, h, b.upload);
        f.forEach(function (a) {
          var c = d("PhotosUploadID").getNewID();
          d("ReactComposerMediaUploadActions").doneUploadingExtra(
            e.$1,
            c,
            a.photoID,
            a.thumbSrc,
            a.isSpherical,
            a.imageSrc,
            a.width,
            a.height
          );
          e.$18(c, a, b.upload);
        });
      };
      b.$18 = function (a, b, e) {
        b = c("ReactComposerMediaUploadStore").getMediaUpload(this.$1, a);
        b.xyTags &&
          d("ReactComposerMediaUtils").handleXYTagsOnly(
            this.$1,
            b.photoID,
            b.xyTags
          );
      };
      b.$17 = function (a, b, e) {
        if (
          c("ReactComposerMediaUploadStore").getHasUploadBeenRemoved(this.$1, a)
        )
          return;
        e = b.response;
        e = {
          code: e.getError(),
          description: e.getErrorDescription(),
          summary: e.getErrorSummary(),
          transient:
            e.isTransient() || e.getError() == 1004 || e.getError() == 1006,
        };
        d("ReactComposerMediaUploadActions").failUploading(
          this.$1,
          a,
          b.upload,
          c("performanceNow")() - this.$3.get(a),
          e,
          c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_FAILED
        );
      };
      return a;
    })();
    g["default"] = b;
  },
  98
);
__d(
  "getReactComposerPhotoUploaderWithClientSideImageResizer",
  [
    "JpegResizerConfig",
    "ReactComposerMediaConfig",
    "ReactComposerMediaUploadActions",
    "ReactComposerPhotoUploader",
    "cr:1094063",
    "emptyFunction",
    "qex",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    function h(a, e, f) {
      var g = c("qex")._("2036"),
        h = c("qex")._("2038");
      if (b("cr:1094063") != null && b("cr:1094063").isSupported()) {
        e = b("cr:1094063").getSingleton(
          e > 1 ? b("cr:1094063").DEFAULT_POOL_SIZE : 1
        );
        e.setUndershoot(c("JpegResizerConfig").undershoot).setEncodeQuality(
          c("JpegResizerConfig").quality
        );
        h === !0 && g != null
          ? (e.setMaxHeight(g), e.setMaxWidth(g))
          : e.setHighQuality(f.highQuality);
        return [e, c("emptyFunction")];
      }
      d("ReactComposerMediaUploadActions").resizerUnavailable(a);
      return [void 0, c("emptyFunction")];
    }
    function a(a, b, d) {
      b = h(a.composerID, b, c("ReactComposerMediaConfig").photo);
      var e = b[0];
      b = b[1];
      a = new (c("ReactComposerPhotoUploader"))(a, d, e);
      return [a, b];
    }
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerFailedPhotoUploadContainer.react",
  [
    "ReactComponentWithPureRenderMixin",
    "ReactComposerContextTypes",
    "ReactComposerFailedMediaUpload.react",
    "ReactComposerMediaUploadActionType",
    "ReactComposerMediaUploadActions",
    "ReactComposerMediaUploadStore",
    "createReactClass_DEPRECATED",
    "getReactComposerPhotoUploaderWithClientSideImageResizer",
    "react",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");
    a = c("createReactClass_DEPRECATED")({
      displayName: "ReactComposerPhotoUploadPlaceholderContainer",
      _uploader: void 0,
      contextTypes: d("ReactComposerContextTypes"),
      mixins: [c("ReactComponentWithPureRenderMixin")],
      render: function () {
        return h.jsx(
          c("ReactComposerFailedMediaUpload.react"),
          babelHelpers["extends"]({}, this.props, {
            onDismissClick: this._onDismissClick,
            onRemoveClick: this._onDismissClick,
            onRetryClick: this._onRetryClick,
          })
        );
      },
      _onDismissClick: function () {
        d("ReactComposerMediaUploadActions").removeMediaUpload(
          this.context.composerID,
          this.props.uploadID
        );
      },
      _onRetryClick: function () {
        var a = c("ReactComposerMediaUploadStore")
          .getMediaUpload(this.context.composerID, this.props.uploadID)
          .fileUpload.getFile();
        a.manuallyRetried = !0;
        d("ReactComposerMediaUploadActions").retryMediaUpload(
          this.context.composerID,
          c("ReactComposerMediaUploadActionType").PHOTO_UPLOAD_RETRY
        );
        if (!this._uploader) {
          var b = c("getReactComposerPhotoUploaderWithClientSideImageResizer")(
              this.context,
              this.props.mediaConfig.photoLimit,
              {
                disableFaceRecognition:
                  this.props.mediaConfig.disableFaceboxTagger,
              }
            ),
            e = b[0];
          b[1];
          this._uploader = e;
        }
        this._uploader && this._uploader.retry(a);
      },
    });
    b = a;
    g["default"] = b;
  },
  98
);
__d(
  "ReactComposerPhotoThumbnail.react",
  ["Image.react", "react"],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h = d("react");
    function a(a) {
      if (a.bgURL) {
        var b = { backgroundImage: "url(" + a.bgURL + ")" };
        return h.jsx("div", { className: a.bgClassName, style: b });
      } else if (a.imgSrc)
        return h.jsx(c("Image.react"), {
          alt: a.alt,
          className: a.imgClassName,
          src: a.imgSrc,
          style: a.style,
          width: a.width,
          height: a.height,
        });
      return null;
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerQuestionAttachmentOptionImage.react",
  [
    "cx",
    "fbt",
    "FileInput.react",
    "Link.react",
    "ReactComposerFailedPhotoUploadContainer.react",
    "ReactComposerMediaUploadType",
    "ReactComposerPhotoThumbnail.react",
    "ReactComposerPhotoUploadState",
    "XUISpinner.react",
    "react",
  ],
  function (a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react"),
      k = 40;
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        return a.apply(this, arguments) || this;
      }
      var e = b.prototype;
      e.render = function () {
        return this.$1();
      };
      e.$1 = function () {
        return this.props.upload.mediaType ==
          d("ReactComposerMediaUploadType").VIDEO
          ? null
          : this.$2();
      };
      e.$2 = function () {
        var a = this.props.upload;
        if (a.state === d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_FAILED)
          return j.jsx(
            c("ReactComposerFailedPhotoUploadContainer.react"),
            {
              error: a.error,
              filename: a.filename,
              mediaConfig: this.props.mediaConfig,
              uploadID: a.id,
            },
            a.id
          );
        else if (
          a.state === d("ReactComposerPhotoUploadState").PHOTO_UPLOAD_DONE
        )
          return j.jsx(c("FileInput.react"), {
            containerClassName: "_348v",
            accept: this.props.mediaAcceptParam,
            multiple: this.props.canUploadMultiplePhotos,
            name: "composer_photo",
            onChange: this.props.onFileSelected,
            ref: this.props.setFileInput,
            title: i._("Choose a file to upload"),
            "data-testid": void 0,
            children: j.jsx(c("Link.react"), {
              className: "_348w",
              children: j.jsx(c("ReactComposerPhotoThumbnail.react"), {
                bgClassName: "_348x",
                bgURL: a.fileURL,
                height: k,
                width: k,
              }),
            }),
          });
        return j.jsx("div", {
          className: "_348y",
          children: j.jsx(c("XUISpinner.react"), { size: "large" }),
        });
      };
      return b;
    })(j.PureComponent);
    g["default"] = a;
  },
  98
);
__d(
  "ReactComposerQuestionAttachmentOptionImageContainer.react",
  [
    "cx",
    "fbt",
    "FileInput.react",
    "Link.react",
    "ReactComposerMediaUtils",
    "ReactComposerQuestionAttachmentOptionImage.react",
    "react",
  ],
  function (a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j = d("react");
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, c;
        for (var e = arguments.length, f = new Array(e), g = 0; g < e; g++)
          f[g] = arguments[g];
        return (
          ((b = c = a.call.apply(a, [this].concat(f)) || this),
          (c.$3 = function (a) {
            if (c.props.onFileSelected) {
              var b = c.props.onFileSelected;
              b(a, c.fileInput.getFileInput());
            }
            d("ReactComposerMediaUtils").clearInput(
              c.fileInput.getFileInput(),
              !0
            );
          }),
          (c.$4 = function (a) {
            c.fileInput = a;
          }),
          b) || babelHelpers.assertThisInitialized(c)
        );
      }
      var e = b.prototype;
      e.render = function () {
        return this.props.upload ? this.$1() : this.$2();
      };
      e.$2 = function () {
        var a;
        return j.jsx("div", {
          className: "_61kz",
          children: j.jsx(c("FileInput.react"), {
            containerClassName: "_348v",
            accept: this.props.mediaAcceptParam,
            multiple: (a = this.props.canUploadMultiplePhotos) != null ? a : !1,
            name: "composer_photo",
            onChange: this.$3,
            ref: this.$4,
            title: i._("Choose a file to upload"),
            "data-testid": void 0,
            children: this.$5(),
          }),
        });
      };
      e.$1 = function () {
        var a,
          b = this.props.upload;
        return j.jsx(
          "div",
          {
            className: "_61k_",
            children: j.jsx(
              c("ReactComposerQuestionAttachmentOptionImage.react"),
              {
                upload: this.props.upload,
                mediaConfig: this.props.mediaConfig,
                onFileSelected: this.$3,
                mediaAcceptParam: this.props.mediaAcceptParam,
                canUploadMultiplePhotos:
                  (a = this.props.canUploadMultiplePhotos) != null ? a : !1,
                setFileInput: this.$4,
              }
            ),
          },
          b.photoID
        );
      };
      e.$5 = function () {
        return j.jsx(c("Link.react"), {
          "aria-label": i._("Photo upload link"),
          className: "_348w",
        });
      };
      return b;
    })(j.PureComponent);
    g["default"] = a;
  },
  98
);
__d(
  "PollAttachmentAddOption.react",
  [
    "cx",
    "fbt",
    "ix",
    "AbstractTextArea.react",
    "Bootloader",
    "Image.react",
    "Link.react",
    "ReactComposerPhotoUploadState",
    "ReactComposerQuestionAttachmentOptionImageContainer.react",
    "TextAreaControl",
    "XUISpinner.react",
    "react",
  ],
  function (a, b, c, d, e, f, g, h, i, j) {
    "use strict";
    var k = d("react"),
      l = 5,
      m = {
        addImageOptionTextInput: "_4l_h",
        addImageOptionTextInputRightBorder: "_4l_h _gz4",
        addOption: "_31qf _31qg",
        addImageOption: "_31qf _31qg _gz5",
        addOptionLabel: "_31qi",
        centerPlus: "_65lo",
        charCount: "_31qk",
        addOptionInput: "_4sjs",
        addOptionImageInput: "_gzh",
      };
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, e;
        for (var f = arguments.length, g = new Array(f), h = 0; h < f; h++)
          g[h] = arguments[h];
        return (
          ((b = e = a.call.apply(a, [this].concat(g)) || this),
          (e.state = {
            text: "",
            isFocused: !1,
            isUploading: !1,
            upload: null,
          }),
          (e.$7 = function () {
            e.setState({
              text: "",
              isFocused: !1,
              isUploading: !1,
              upload: null,
            }),
              e.$2.release();
          }),
          (e.$8 = function (a) {
            a = a.getPayload();
            a && a.fbid
              ? e.setState({
                  upload: babelHelpers["extends"](
                    {
                      state: d("ReactComposerPhotoUploadState")
                        .PHOTO_UPLOAD_DONE,
                      fileURL: a.thumbnail_uri,
                    },
                    a
                  ),
                })
              : e.refs.imageContainer.fileInput &&
                e.refs.imageContainer.fileInput.getFileInput().clear();
          }),
          (e.$9 = function () {
            e.setState({ isUploading: !0 });
          }),
          (e.$10 = function () {
            e.setState({ isUploading: !1 });
          }),
          (e.$11 = function () {
            e.setState({ isUploading: !1 });
          }),
          (e.$4 = function (a) {
            if (e.state.isUploading) return;
            c("Bootloader").loadModules(
              ["PollImageUploader"],
              function (a) {
                e.$2 && e.$2.release(),
                  (e.$2 = new a(
                    e.refs.imageContainer.fileInput.getFileInput(),
                    e.$8,
                    e.$9,
                    e.$10,
                    e.$11
                  ));
              },
              "PollAttachmentAddOption.react"
            );
          }),
          (e.$6 = function (a) {
            if (e.state.isUploading) return;
            e.props.onAdd(e.state.text, e.state.upload);
            e.setState({ text: "", upload: null });
          }),
          b) || babelHelpers.assertThisInitialized(e)
        );
      }
      var e = b.prototype;
      e.componentDidMount = function () {
        var a = this.refs.textArea.getTextFieldDOM();
        this.$1 = new (c("TextAreaControl"))(a);
        this.$1.setAutogrow(!0);
        this.$1.onupdate();
      };
      e.componentDidUpdate = function () {
        this.$1.onupdate();
      };
      e.componentWillUnmount = function () {
        this.$1 = null;
      };
      e.render = function () {
        var a = this,
          b,
          d,
          e,
          f = m.addOption,
          g = m.addOptionInput;
        this.props.hasImageOption &&
          ((f = m.addImageOption),
          (g = this.state.upload
            ? m.addImageOptionTextInput
            : m.addImageOptionTextInputRightBorder),
          (e = this.$3()),
          (b = k.jsx("div", {
            className: m.addOptionImageInput,
            onClick: this.$4,
            role: "presentation",
            children: k.jsx(
              c("ReactComposerQuestionAttachmentOptionImageContainer.react"),
              {
                canUploadMultiplePhotos: !1,
                mediaAcceptParam: "image/*",
                mediaConfig: { photoLimit: 1 },
                ref: "imageContainer",
                upload: this.state.upload,
              }
            ),
          })),
          this.state.isUploading &&
            (d = k.jsx("div", {
              className: "_gzi",
              children: k.jsx("div", {
                className: "_g-d",
                children: k.jsx(c("XUISpinner.react"), { size: "large" }),
              }),
            })));
        return k.jsxs("div", {
          children: [
            k.jsxs("div", {
              className: m.charCount,
              children: [
                e,
                k.jsxs("div", {
                  className: this.state.isFocused ? "" : "_14f8",
                  children: [
                    this.state.text.length,
                    "/",
                    this.props.maxOptionLength,
                  ],
                }),
              ],
            }),
            k.jsxs("div", {
              className: f,
              children: [
                k.jsx("div", {
                  className: m.addOptionLabel,
                  children: k.jsx(c("Image.react"), {
                    className: m.centerPlus,
                    src: j("126622"),
                  }),
                }),
                k.jsx("div", {
                  className: g,
                  children: k.jsx(c("AbstractTextArea.react"), {
                    onChange: function (b) {
                      return a.$5(b);
                    },
                    onEnter: this.$6,
                    maxLength: this.props.maxOptionLength,
                    disabled: this.props.disabled,
                    onFocus: function () {
                      return a.setState({ isFocused: !0 });
                    },
                    onBlur: function () {
                      return a.setState({ isFocused: !1 });
                    },
                    placeholder: i._("Add option"),
                    value: this.state.text,
                    ref: "textArea",
                  }),
                }),
                b,
                d,
              ],
            }),
          ],
        });
      };
      e.$3 = function () {
        return k.jsx("div", {
          "data-testid": void 0,
          className:
            this.state.text || this.state.upload || this.state.isUploading
              ? ""
              : "_14f8",
          children: k.jsx(c("Link.react"), {
            onClick: this.$7,
            children: k.jsx(c("Image.react"), { src: j("125920") }),
          }),
        });
      };
      e.$5 = function (a) {
        if (
          a.target.value.length > this.props.maxOptionLength ||
          a.target.value.split(/\r|\n|\r\n/).length > l
        )
          return;
        this.setState({ text: a.target.value });
      };
      return b;
    })(k.Component);
    g["default"] = a;
  },
  98
);
__d(
  "PollAttachmentComponent.react",
  [
    "cx",
    "fbt",
    "ClickableArea.react",
    "Facepile.react",
    "GroupsPollAttachmentDeleteOption.react",
    "GroupsPollDeleteOptionMutation",
    "GroupsPollOptionActionMenu.react",
    "GroupsPollOptionStrings",
    "Image.react",
    "LeftRight.react",
    "PollAddOptionMutation",
    "PollAddVoteMutation",
    "PollAttachmentAddOption.react",
    "PollAttachmentComponentRefetchQuery.graphql",
    "PollAttachmentComponent_question.graphql",
    "PollAttachmentComponent_viewer.graphql",
    "PollAttachmentUtils",
    "PollRemoveVoteMutation",
    "ProfileBrowserLink",
    "ProfileBrowserTypes",
    "RelayModern",
    "ReportGroupsPollOptionMutation",
    "ShimButton.react",
    "SimpleXUIDialog",
    "SpotlightPollOptionImageViewer",
    "SpotlightViewerInit",
    "TextWithEntities.react",
    "getURLRanges",
    "react",
    "useSortCometPollOptions",
  ],
  function (a, b, c, d, e, f, g, h, i) {
    "use strict";
    var j,
      k,
      l,
      m = d("react"),
      n = 520,
      o = 660,
      p = 5,
      q = {
        accessible: "accessible_elem",
        root: "_3cof",
        facepileCenter: "_3cog _man",
        optionContainer: "_61xb",
        row: "_mb4",
        optionRow: "_mb4 _1jwy",
        optionLabel: "_31qh",
        optionSelector: "_3cok",
        optionBar: "_3col",
        optionBarImage: "_eh7",
        optionBarNonMember: "_6khz",
        optionBarImageNonMember: "_6kh-",
        optionImage: "_eh8",
        optionVotes: "_3com",
        optionText: "_3con",
        optionAuthor: "_17ug",
        optionTextPadded: "_3con _eh9",
        optionTextImage: "_eha",
        optionTextSpanImage: "_ehb",
        optionExpanderLink: "_3coo",
        optionExpander: "_31qf _3cop",
        space: "_3coq",
      };
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b() {
        var b, c;
        for (var e = arguments.length, f = new Array(e), g = 0; g < e; g++)
          f[g] = arguments[g];
        return (
          ((b = c = a.call.apply(a, [this].concat(f)) || this),
          (c.state = { isLocked: !1, numOptionsToShow: 5 }),
          (c.$4 = function (a) {
            c.setState({ isLocked: !0 }),
              c.setState(function (a) {
                return { numOptionsToShow: a.numOptionsToShow - 1 };
              }),
              d("GroupsPollDeleteOptionMutation").commit(
                c.props.relay.environment,
                {
                  optionID: a,
                  questionID: c.props.question.id,
                  viewer: c.props.viewer,
                  callbacks: {
                    onSuccess: function () {
                      c.setState({ isLocked: !1 });
                    },
                    onFailure: function (a) {
                      c.setState({ isLocked: !1 }),
                        d("SimpleXUIDialog").show(
                          a && a.source && a.source.description,
                          a && a.source && a.source.summary
                        );
                    },
                  },
                }
              );
          }),
          (c.$5 = function (a) {
            d("ReportGroupsPollOptionMutation").commit(
              c.props.relay.environment,
              {
                optionID: a,
                viewer: c.props.viewer,
                callbacks: {
                  onSuccess: function () {
                    d("SimpleXUIDialog").show(
                      d(
                        "GroupsPollOptionStrings"
                      ).getReportSuccessfulDialogBody(),
                      d("GroupsPollOptionStrings").getConfirmReportDialogTitle()
                    );
                  },
                  onFailure: function (a) {
                    d("SimpleXUIDialog").show(
                      a && a.source && a.source.description,
                      a && a.source && a.source.summary
                    );
                  },
                },
              }
            );
          }),
          (c.$3 = function (a, b) {
            if (a.replace(/\s+/g, "") === "") {
              var e = i._(
                  "Add some text to your poll option so people know what it's about."
                ),
                f = i._("Poll Option Needs Text");
              d("SimpleXUIDialog").show(e, f);
            } else
              c.setState({
                isLocked: !0,
                numOptionsToShow: c.props.question.options.count + 1,
              }),
                d("PollAddOptionMutation").commit(c.props.relay.environment, {
                  question: c.props.question,
                  optionText: a,
                  viewer: c.props.viewer,
                  numOptionsToShow: c.props.question.options.count + 1,
                  imageUpload: b,
                  callbacks: {
                    onSuccess: function () {
                      c.setState({ isLocked: !1 });
                    },
                    onFailure: function (a) {
                      c.setState({
                        isLocked: !1,
                        numOptionsToShow: c.props.question.options.count,
                      }),
                        d("SimpleXUIDialog").show(
                          a && a.source && a.source.description,
                          (a && a.source && a.source.summary) || a.name
                        );
                    },
                  },
                });
          }),
          b) || babelHelpers.assertThisInitialized(c)
        );
      }
      var e = b.prototype;
      e.render = function () {
        var a = this,
          b = this.props.question;
        if (!b) return m.jsx("div", {});
        var e = this.state.isLocked,
          f = !this.props.disableVote && b.can_viewer_vote && b.can_viewer_post,
          g = this.state.numOptionsToShow,
          h = b.options.edges.reduce(function (a, b) {
            return Math.max(a, b.node.profile_voters.count);
          }, 1),
          j = b.options.count > g,
          k = [].concat(b.options.edges);
        ((b.fb_only_randomize_options && j) || b.fb_only_vote_counts_hidden) &&
          (k = this.props.shuffle(
            k,
            function (a) {
              return (a = a.node.id) != null ? a : "";
            },
            d("useSortCometPollOptions").SortType.Random
          ));
        var l = k.some(function (a) {
          return !!a.node.associated_image;
        });
        k = k.slice(0, g).map(function (g) {
          var j = g.node.profile_voters.edges;
          j = j.filter(function (b) {
            return b.node.id !== a.props.viewer.actor.id;
          });
          j = j.slice(0, 10).map(function (a) {
            return a.node;
          });
          g.node.viewer_has_voted && j.unshift(a.props.viewer.actor);
          var k = j.map(function (a) {
            return {
              URL: a.url,
              name: a.name,
              uniqueID: parseInt(a.id, 10),
              profilePicURI: a.profile_picture.uri,
            };
          });
          j = d("ProfileBrowserLink")
            .constructPageURI(c("ProfileBrowserTypes").OPTION_VOTERS, {
              option_id: g.node.id,
            })
            .toString();
          var r = d("ProfileBrowserLink")
              .constructDialogURI(c("ProfileBrowserTypes").OPTION_VOTERS, {
                option_id: g.node.id,
              })
              .toString(),
            s = function (c) {
              if (!(f && !e)) return;
              a.setState({ isLocked: !0 });
              c = g.node.viewer_has_voted
                ? d("PollRemoveVoteMutation")
                : d("PollAddVoteMutation");
              c.commit(a.props.relay.environment, {
                question: b,
                option: g.node,
                viewer: a.props.viewer,
                numOptionsToShow: b.options.edges.length,
                callbacks: {
                  onSuccess: function () {
                    a.setState({ isLocked: !1 });
                  },
                  onFailure: function (b) {
                    a.setState({ isLocked: !1 }),
                      d("SimpleXUIDialog").show(
                        b && b.source && b.source.description,
                        b && b.source && b.source.summary
                      );
                  },
                },
              });
            },
            t = function (a) {
              d("SpotlightViewerInit").render(
                m.jsx(c("SpotlightPollOptionImageViewer"), {
                  setid: "poll-option-message",
                  optionText: g.node.text_with_entities.text,
                  photoid: g.node.associated_image.id,
                  thumbsrc: g.node.associated_image.image.uri,
                  profiles: k,
                  voterCount: g.node.profile_voters.count,
                  clearcache: !0,
                  dimensions: [
                    [
                      g.node.associated_image.image.width,
                      g.node.associated_image.image.height,
                    ].join(","),
                  ],
                  minHeight: n,
                  minWidth: o,
                })
              );
            },
            u = f ? q.optionBar : q.optionBarNonMember,
            v = q.optionText,
            w = q.optionAuthor,
            x = null,
            y,
            z;
          l &&
            ((v = q.optionTextPadded),
            g.node.associated_image &&
              ((u = f ? q.optionBarImage : q.optionBarImageNonMember),
              (v = q.optionTextImage),
              (x = q.optionTextSpanImage),
              (y = m.jsx("div", {
                className: "_ehe",
                children: m.jsx("div", {
                  className: "_eh8",
                  children: m.jsx(c("ShimButton.react"), {
                    onClick: t,
                    children: m.jsx(c("Image.react"), {
                      "aria-label": "View image",
                      height: 40,
                      width: 40,
                      src: g.node.associated_image.image.uri,
                    }),
                  }),
                }),
              }))));
          k.length &&
            (z = m.jsx("div", {
              className: q.accessible,
              children: i._("Voters for this option"),
            }));
          t = g.node.can_viewer_delete_groups_poll_option;
          t = a.$1(
            t,
            g.node.can_viewer_report,
            g.node.can_viewer_report_to_group_admin,
            g.node.id
          );
          var A = null;
          t !== null && a.props.isShared
            ? (A = p - 2)
            : t !== null || a.props.isShared
            ? (A = p - 1)
            : (A = p);
          var B = g.node.groups_poll_option_author_description;
          return m.jsx(
            "div",
            {
              className: q.optionContainer,
              children: m.jsxs("div", {
                className: f ? q.optionRow : q.row,
                children: [
                  m.jsxs("div", {
                    className: "_mb5",
                    children: [
                      f
                        ? m.jsx("div", {
                            className: q.optionLabel,
                            children: m.jsx("input", {
                              "aria-label": g.node.text_with_entities.text,
                              type: d("PollAttachmentUtils").isEigenpoll(
                                b.response_method
                              )
                                ? "checkbox"
                                : "radio",
                              disabled: !(f && !e),
                              className: q.optionSelector,
                              checked: g.node.viewer_has_voted,
                              onChange: s,
                            }),
                          })
                        : null,
                      m.jsxs("div", {
                        className: u,
                        children: [
                          !b.fb_only_vote_counts_hidden &&
                            m.jsx("div", {
                              className: q.optionVotes,
                              style: {
                                width:
                                  (100 * g.node.profile_voters.count) / h + "%",
                              },
                            }),
                          m.jsx(c("ClickableArea.react"), {
                            onClick: s,
                            children: m.jsxs("div", {
                              className: v,
                              children: [
                                m.jsx(c("TextWithEntities.react"), {
                                  className: x,
                                  ranges: c("getURLRanges")(
                                    g.node.text_with_entities.text
                                  ),
                                  renderEmoticons: !1,
                                  renderEmoji: !0,
                                  text: g.node.text_with_entities.text,
                                }),
                                B != null && B.text.length > 0
                                  ? m.jsx("div", {
                                      className: w,
                                      children: m.jsx(
                                        c("TextWithEntities.react"),
                                        {
                                          className: x,
                                          ranges: B.ranges,
                                          text: B.text,
                                        }
                                      ),
                                    })
                                  : null,
                              ],
                            }),
                          }),
                          y,
                        ],
                      }),
                    ],
                  }),
                  z,
                  m.jsx("div", {
                    className: "_mb6",
                    children: m.jsx("div", {
                      className: q.facepileCenter,
                      children: m.jsxs(c("LeftRight.react"), {
                        direction: "right",
                        children: [
                          !b.fb_only_vote_counts_hidden &&
                            m.jsx(c("Facepile.react"), {
                              moreColor: "gray",
                              moreCount:
                                g.node.profile_voters.count -
                                Math.min(A, k.length),
                              moreDialogLink: r,
                              morePageLink: j,
                              numFaces: A,
                              profiles: k,
                              showHovercard: !0,
                              size: 28,
                            }),
                          t,
                        ],
                      }),
                    }),
                  }),
                ],
              }),
            },
            g.node.id
          );
        });
        var r = null,
          s = null;
        if (j) {
          j = b.options.count - g;
          g = i._({ "*": "{options} more options..." }, [
            i._param("options", j, [0]),
          ]);
          var t = i._("1 more option...");
          r = m.jsxs("div", {
            className: q.optionContainer,
            children: [
              m.jsx("div", { className: q.space }),
              m.jsx(c("ShimButton.react"), {
                className: q.optionExpanderLink,
                form: "link",
                onClick: function () {
                  return a.$2();
                },
                children: m.jsx("div", {
                  className: q.optionExpander,
                  children: j > 1 ? g : t,
                }),
              }),
            ],
          });
        } else
          b.can_viewer_add_poll_options &&
            f &&
            (s = m.jsx("div", {
              className: q.optionContainer,
              children: m.jsx(c("PollAttachmentAddOption.react"), {
                onAdd: this.$3,
                maxOptionLength: this.props.maxOptionLength,
                disabled: this.state.isLocked,
                hasImageOption: l,
              }),
            }));
        return m.jsxs("div", { className: q.root, children: [k, r, s] });
      };
      e.$1 = function (a, b, d, e) {
        return b
          ? m.jsx("div", {
              className: "_6nh8",
              children: m.jsx(c("GroupsPollOptionActionMenu.react"), {
                onDelete: this.$4,
                onReportToAdmin: this.$5,
                optionID: e,
                showDelete: a,
                showReportToAdmin: d,
              }),
            })
          : a
          ? m.jsx(c("GroupsPollAttachmentDeleteOption.react"), {
              onDelete: this.$4,
              optionID: e,
            })
          : null;
      };
      e.$2 = function () {
        this.setState({ numOptionsToShow: this.props.question.options.count }),
          this.props.relay.refetch({
            actorID: this.props.actorID,
            first: this.props.question.options.count,
            questionID: this.props.question.id,
          });
      };
      return b;
    })(m.Component);
    e = d("RelayModern").createRefetchContainer(
      a,
      {
        viewer:
          j !== void 0 ? j : (j = b("PollAttachmentComponent_viewer.graphql")),
        question:
          k !== void 0
            ? k
            : (k = b("PollAttachmentComponent_question.graphql")),
      },
      l !== void 0 ? l : (l = b("PollAttachmentComponentRefetchQuery.graphql"))
    );
    g["default"] = e;
  },
  98
);
__d(
  "PollAttachment.react",
  [
    "PollAttachmentComponent.react",
    "PollAttachmentQuery.graphql",
    "RelayFBEnvironment",
    "RelayModern",
    "react",
    "useSortCometPollOptions",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = d("react");
    function a(a) {
      var e = a.actorID,
        f = a.questionID,
        g = a.maxOptionLength,
        j = a.disableVote,
        k = a.isShared;
      a = a.shouldShuffle;
      a = a ? 200 : 5;
      var l = d("useSortCometPollOptions").useSortCometPollOptions();
      return i.jsx(d("RelayModern").QueryRenderer, {
        environment: c("RelayFBEnvironment"),
        variables: { actorID: e, first: a, questionID: f },
        query: h !== void 0 ? h : (h = b("PollAttachmentQuery.graphql")),
        render: function (a) {
          var b = a.error;
          a = a.props;
          if (b) return i.jsx("div", { children: b.message });
          else if (a)
            return i.jsx(
              c("PollAttachmentComponent.react"),
              babelHelpers["extends"]({}, a, {
                actorID: e,
                maxOptionLength: g,
                disableVote: j,
                isShared: k,
                shuffle: l,
              })
            );
          return i.jsx("div", { children: "Loading" });
        },
      });
    }
    a.displayName = a.name + " [from " + f.id + "]";
    g["default"] = a;
  },
  98
);
__d(
  "ResumableUploadServiceBlue",
  [
    "AsyncRequest",
    "ConstUriUtils",
    "EventEmitter",
    "Promise",
    "ResumableUploadServiceState.enum",
    "gkx",
    "uuidv4",
  ],
  function (a, b, c, d, e, f, g) {
    "use strict";
    var h,
      i = "rupload",
      j = "facebook.com";
    a = (function (a) {
      babelHelpers.inheritsLoose(e, a);
      function e(b, d, e, f, g, h, k, l, m, n, o, p) {
        var q;
        q = a.call(this) || this;
        q.consumer = b;
        q.accessToken = d;
        q.sessionKey = e || c("uuidv4")();
        q.contentKey = f || "";
        q.contentValue = g || "";
        q.serviceName = h && h != "" ? h : i;
        q.serviceDomain = k && k != "" ? k : j;
        q.receiveParameters = l;
        q.skipOffsetFetching = m;
        q.thriftParams = (b = n) != null ? b : new Map();
        q.tracingHeaderValue = o;
        q.customHttpHeaders = (d = p) != null ? d : new Map();
        return q;
      }
      e.create = function (a) {
        return new e(
          a.consumer,
          a.accessToken,
          a.sessionKey || "",
          a.contentKey,
          a.contentValue,
          a.serviceName,
          a.serviceDomain,
          a.receiveParameters,
          a.skipOffsetFetching,
          a.thriftParams,
          a.tracingHeaderValue,
          a.customHttpHeaders
        );
      };
      var f = e.prototype;
      f.$ResumableUploadServiceBlue2 = function (a) {
        if (c("gkx")("1765373")) {
          var b;
          if (
            ((b = this.receiveParameters) == null ? void 0 : b.target_id) !=
            null
          ) {
            a.setRequestHeader(
              "target_id",
              String(
                (b = this.receiveParameters) == null ? void 0 : b.target_id
              )
            );
          }
          if (
            ((b = this.receiveParameters) == null
              ? void 0
              : b.video_waterfall_id) != null
          ) {
            a.setRequestHeader(
              "x_fb_video_waterfall_id",
              String(
                (b = this.receiveParameters) == null
                  ? void 0
                  : b.video_waterfall_id
              )
            );
          }
        }
        if (
          ((b = this.receiveParameters) == null ? void 0 : b.xpv_asset_id) !=
          null
        ) {
          a.setRequestHeader(
            "xpv_asset_id",
            String(
              (b = this.receiveParameters) == null ? void 0 : b.xpv_asset_id
            )
          );
        }
        if (
          ((b = this.receiveParameters) == null
            ? void 0
            : b.is_xpv_single_prod) != null
        ) {
          a.setRequestHeader(
            "is_xpv_single_prod",
            String(
              (b = this.receiveParameters) == null
                ? void 0
                : b.is_xpv_single_prod
            )
          );
        }
      };
      f.resume = function (a) {
        var e = this,
          f = this.getServiceName();
        f = d("ConstUriUtils").getUri(
          "https://" + f + "/" + this.consumer + "/" + this.sessionKey
        );
        f != null &&
          this.contentKey &&
          this.contentValue &&
          (f = f.addQueryParam(this.contentKey, this.contentValue));
        if (f == null) {
          var g = new Error("ResumableUploadService: Invalid uploadURI");
          g.stack;
          throw g;
        }
        var i = f.toString();
        g = function () {
          return new (h || (h = b("Promise")))(function (a, b) {
            a = new (c("AsyncRequest"))()
              .setAllowCrossOrigin(!0)
              .setAllowCredentials(!0)
              .setMethod("GET")
              .setURI(i)
              .setReadOnly(!0)
              .setHandler(a)
              .setErrorHandler(b)
              .setOption("suppressEvaluation", !0)
              .setTransportErrorHandler(function (a) {
                e.emit(
                  c("ResumableUploadServiceState.enum").TRANSPORT_FAILURE,
                  a,
                  { method: "GET" }
                );
              });
            e.accessToken &&
              a.setRequestHeader("Authorization", "OAuth " + e.accessToken);
            e.$ResumableUploadServiceBlue2(a);
            self.$ResumableUploadServiceBlue1 = a;
            a.send();
          });
        };
        f = function (d) {
          return new (h || (h = b("Promise")))(function (b, f) {
            var g = 0;
            if (d !== void 0) {
              var h = JSON.parse(d.payload.response);
              g = h.offset;
            }
            e.emit(c("ResumableUploadServiceState.enum").START, { offset: g });
            self.$ResumableUploadServiceBlue1 = new (c("AsyncRequest"))()
              .setAllowCrossOrigin(!0)
              .setAllowCredentials(!0)
              .setURI(i)
              .setRawData(a.slice(g))
              .setHandler(b)
              .setErrorHandler(f)
              .setRequestHeader("X-Entity-Name", encodeURIComponent(a.name))
              .setRequestHeader("X-Entity-Type", a.type)
              .setRequestHeader("X-Entity-Length", String(a.size))
              .setRequestHeader("Offset", String(g))
              .setOption("suppressEvaluation", !0)
              .setUploadProgressHandler(function (b) {
                b = new ProgressEvent("upload-service", {
                  total: a.size,
                  loaded: b.loaded + Number(g),
                });
                e.emit(c("ResumableUploadServiceState.enum").PROGRESS, b);
              })
              .setTransportErrorHandler(function (a) {
                e.emit(
                  c("ResumableUploadServiceState.enum").TRANSPORT_FAILURE,
                  a,
                  { method: "POST", offset: g }
                );
              });
            e.accessToken &&
              self.$ResumableUploadServiceBlue1.setRequestHeader(
                "Authorization",
                "OAuth " + e.accessToken
              );
            e.$ResumableUploadServiceBlue2(self.$ResumableUploadServiceBlue1);
            if (e.receiveParameters) {
              h = e.receiveParameters;
              self.$ResumableUploadServiceBlue1.setRequestHeader(
                "start_offset",
                String(h.start_offset)
              );
              self.$ResumableUploadServiceBlue1.setRequestHeader(
                "end_offset",
                String(h.end_offset)
              );
              self.$ResumableUploadServiceBlue1.setRequestHeader(
                "composer_session_id",
                String(h.composer_session_id)
              );
              self.$ResumableUploadServiceBlue1.setRequestHeader(
                "id",
                String(h.upload_session_id)
              );
              self.$ResumableUploadServiceBlue1.setRequestHeader(
                "product_media_id",
                String(h.product_media_id)
              );
              h.fb_region &&
                self.$ResumableUploadServiceBlue1.setRequestHeader(
                  "X-FB-Region",
                  String(h.fb_region)
                );
              h.total_file_size &&
                self.$ResumableUploadServiceBlue1.setRequestHeader(
                  "X-Total-Asset-Size",
                  String(h.total_file_size)
                );
            }
            e.thriftParams.size > 0 &&
              self.$ResumableUploadServiceBlue1.setRequestHeader(
                "X-Thrift-Params",
                JSON.stringify(Object.fromEntries(e.thriftParams.entries()))
              );
            e.tracingHeaderValue &&
              self.$ResumableUploadServiceBlue1.setRequestHeader(
                "x-fb-product-log",
                e.tracingHeaderValue
              );
            if (e.customHttpHeaders.size > 0)
              for (
                b = e.customHttpHeaders,
                  f = Array.isArray(b),
                  h = 0,
                  b = f
                    ? b
                    : b[
                        typeof Symbol === "function"
                          ? Symbol.iterator
                          : "@@iterator"
                      ]();
                ;

              ) {
                var j;
                if (f) {
                  if (h >= b.length) break;
                  j = b[h++];
                } else {
                  h = b.next();
                  if (h.done) break;
                  j = h.value;
                }
                j = j;
                var k = j[0];
                j = j[1];
                self.$ResumableUploadServiceBlue1.setRequestHeader(k, j);
              }
            self.$ResumableUploadServiceBlue1.send();
          });
        };
        var j = function (a) {
            if (a != null) {
              a = JSON.parse(a.payload.response);
              a.h != null
                ? e.emit(c("ResumableUploadServiceState.enum").SUCCESS, a.h)
                : e.emit(c("ResumableUploadServiceState.enum").SUCCESS, a);
            } else
              e.emit(
                c("ResumableUploadServiceState.enum").FAIL,
                "uploading failed"
              );
          },
          k = function (a) {
            return e.emit(c("ResumableUploadServiceState.enum").FAIL, a);
          };
        g = this.skipOffsetFetching ? (h || (h = b("Promise"))).resolve() : g();
        return g.then(f, k).then(j, k);
      };
      f.getServiceName = function () {
        return this.serviceName + "." + this.serviceDomain;
      };
      f.cancel = function () {
        self.$ResumableUploadServiceBlue1 &&
          self.$ResumableUploadServiceBlue1.abort(),
          this.emit(c("ResumableUploadServiceState.enum").CANCEL);
      };
      f.emitFileSizeWarning = function (a) {
        this.emit(c("ResumableUploadServiceState.enum").FILE_TOO_LARGE, a);
      };
      return e;
    })(c("EventEmitter"));
    g["default"] = a;
  },
  98
);
__d(
  "Emscripten",
  [],
  function (a, b, c, d, e, f) {
    e.exports = {
      isSupported: function () {
        return (
          typeof Int32Array !== "undefined" &&
          typeof Float64Array !== "undefined" &&
          !!new Int32Array(1).subarray &&
          !!new Int32Array(1).set
        );
      },
    };
  },
  null
);
__d(
  "PUWError",
  [],
  function (a, b, c, d, e, f) {
    "use strict";
    a = (function (a) {
      babelHelpers.inheritsLoose(b, a);
      function b(b) {
        b = a.call(this, b) || this;
        b.name = "PUWError";
        return b;
      }
      return b;
    })(babelHelpers.wrapNativeSuper(Error));
    f["default"] = a;
  },
  66
);
__d(
  "PooledWebWorker",
  ["WebWorker"],
  function (a, b, c, d, e, f) {
    a = (function (a) {
      "use strict";
      babelHelpers.inheritsLoose(b, a);
      function b(b, c, d) {
        d = a.call(this, d) || this;
        d.$PooledWebWorker1 = c;
        d.$PooledWebWorker2 = b;
        return d;
      }
      var c = b.prototype;
      c.getIndex = function () {
        return this.$PooledWebWorker1;
      };
      c.getPool = function () {
        return this.$PooledWebWorker2;
      };
      return b;
    })(b("WebWorker"));
    e.exports = a;
  },
  null
);
__d(
  "WebWorkerPool",
  ["PooledWebWorker", "emptyFunction"],
  function (a, b, c, d, e, f) {
    a = (function () {
      "use strict";
      a.isSupported = function () {
        return b("PooledWebWorker").isSupported();
      };
      function a(a, c) {
        this.$1 = [];
        for (var d = 0; d < c; d++)
          this.$1.push(
            new (b("PooledWebWorker"))(this, d, a)
              .setErrorHandler(this.$2)
              .setMessageHandler(this.$3)
              .execute()
          );
        this.$4 = 0;
      }
      var c = a.prototype;
      c.setMessageHandler = function (a) {
        this.$5 = a || b("emptyFunction");
        return this;
      };
      c.setAllowCrossPageTransition = function (a) {
        this.$1.forEach(function (b) {
          return b.setAllowCrossPageTransition(a);
        });
        return this;
      };
      c.setErrorHandler = function (a) {
        this.$6 = a || b("emptyFunction");
        return this;
      };
      c.postMessage = function () {
        var a = this.getWorker();
        for (var b = arguments.length, c = new Array(b), d = 0; d < b; d++)
          c[d] = arguments[d];
        a.postMessage.apply(a, c);
        return a;
      };
      c.$3 = function () {
        for (var a = arguments.length, b = new Array(a), c = 0; c < a; c++)
          b[c] = arguments[c];
        b.unshift(this);
        this.getPool().$5.apply(this.getPool(), b);
      };
      c.$2 = function () {
        for (var a = arguments.length, b = new Array(a), c = 0; c < a; c++)
          b[c] = arguments[c];
        b.unshift(this);
        return this.getPool().$6.apply(this.getPool(), b);
      };
      c.getWorker = function () {
        var a = this.$1[this.$4];
        this.$4 = (this.$4 + 1) % this.$1.length;
        return a;
      };
      return a;
    })();
    e.exports = a;
  },
  null
);
__d(
  "JpegResizer",
  [
    "Emscripten",
    "JpegResizeWorkerResource",
    "JpegResizerConfig",
    "PUWError",
    "WebWorker",
    "WebWorkerPool",
  ],
  function (a, b, c, d, e, f, g) {
    var h;
    a = (function () {
      a.isSupported = function () {
        return (
          c("WebWorkerPool").isSupported() &&
          c("Emscripten").isSupported() &&
          !c("JpegResizerConfig").isGKBlacklisted
        );
      };
      a.getSingleton = function (b) {
        h || (h = new a(b).setAllowCrossPageTransition(!0));
        return h;
      };
      a.prepareResource = function (a) {
        c("WebWorker").prepareResource(c("JpegResizeWorkerResource"), a);
      };
      function a(b) {
        var d = this;
        b === void 0 && (b = a.DEFAULT_POOL_SIZE);
        this.$7 = function (a, b) {
          a.terminate();
          a = d.$10(a.getIndex());
          d.$11(b);
          a.forEach(function (a) {
            return a.done(b, null, !1, null, null, null, null);
          });
          a.length = 0;
        };
        this.$8 = function (a, b) {
          b.error && d.$11(b.error);
          if (b.done)
            d.$10(a.getIndex())
              .pop()
              .done(
                b.error,
                b.blob,
                b.skipped,
                b.originalWidth,
                b.originalHeight,
                b.outputWidth,
                b.outputHeight
              );
          else {
            a = d.$10(a.getIndex());
            a = a[a.length - 1].progress;
            a && a({ written: b.written, total: b.total });
          }
        };
        c("WebWorker").prepareResource(c("JpegResizeWorkerResource"));
        this.$1 = new (c("WebWorkerPool"))(c("JpegResizeWorkerResource"), b)
          .setErrorHandler(this.$7)
          .setMessageHandler(this.$8);
        this.$2 = {};
        this.$3 = a.DEFAULT_RESIZE_HEIGHT;
        this.$4 = a.DEFAULT_RESIZE_WIDTH;
        this.$5 = 0;
        this.$6 = 85;
      }
      var b = a.prototype;
      b.setHighQuality = function (b) {
        b
          ? ((this.$3 = a.DEFAULT_RESIZE_HEIGHT),
            (this.$4 = a.DEFAULT_RESIZE_WIDTH))
          : ((this.$3 = a.LOW_QUALITY_RESIZE_HEIGHT),
            (this.$4 = a.LOW_QUALITY_RESIZE_WIDTH));
        return this;
      };
      b.setMaxWidth = function (a) {
        this.$4 = a;
        return this;
      };
      b.setMaxHeight = function (a) {
        this.$3 = a;
        return this;
      };
      b.isEligible = function (a, b) {
        return !0;
      };
      b.setEncodeQuality = function (a) {
        this.$6 = a;
        return this;
      };
      b.setUndershoot = function (a) {
        this.$5 = a;
        return this;
      };
      b.setAllowCrossPageTransition = function (a) {
        this.$1.setAllowCrossPageTransition(a);
        return this;
      };
      b.resizeBlob = function (a, b, c) {
        this.$9(a, this.$4, this.$3, b, c);
      };
      b.resize360Blob = function (a, b, c, d) {
        var e = this.$4 * 3,
          f = this.$3 * 3;
        typeof d === "number" && ((e = d), (f = d));
        this.$9(a, e, f, b, c);
      };
      b.$9 = function (a, b, d, e, f) {
        var g = this.$1.getWorker();
        if (g.isCurrentState("terminated")) {
          var h = new (c("PUWError"))("Worker terminated");
          h.code = 9902;
          e(h, null, !1, null, null, null, null);
        }
        h = g
          .postMessage({
            blob: a,
            height: d,
            width: b,
            quality: this.$6,
            undershoot: this.$5,
          })
          .getIndex();
        this.$10(h).unshift({ done: e, progress: f });
      };
      b.$10 = function (a) {
        Object.prototype.hasOwnProperty.call(this.$2, a) || (this.$2[a] = []);
        return this.$2[a];
      };
      b.$11 = function (a) {
        var b = a.message;
        b && b.indexOf("Not a JPEG file") !== -1
          ? (a.code = 9901)
          : b && b.indexOf("abort()") !== -1
          ? (a.code = 9904)
          : (a.code = 9903);
      };
      return a;
    })();
    a.DEFAULT_POOL_SIZE = 3;
    a.DEFAULT_RESIZE_HEIGHT = 2048;
    a.DEFAULT_RESIZE_WIDTH = 2048;
    a.LOW_QUALITY_RESIZE_HEIGHT = 960;
    a.LOW_QUALITY_RESIZE_WIDTH = 960;
    g["default"] = a;
  },
  98
);
